  I1204 06:04:13.333910      23 e2e.go:109] Starting e2e run "1abf54d8-ca8b-401e-a800-2097092b657c" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1733292252 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1204 06:04:13.596548 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:04:13.598295 23 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1204 06:04:13.642157 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1204 06:04:13.646604 23 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I1204 06:04:13.646696 23 e2e.go:245] e2e test version: v1.31.2
  I1204 06:04:13.648559 23 e2e.go:254] kube-apiserver version: v1.31.2-ckp
  I1204 06:04:13.648709 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:04:13.653726 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.057 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/04/24 06:04:13.81
  I1204 06:04:13.810836 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 06:04:13.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:13.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:13.834
  STEP: Creating configMap with name configmap-test-volume-8798a1c3-13f5-4078-97b3-d17c8f89c09e @ 12/04/24 06:04:13.838
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:04:13.857
  STEP: Saw pod success @ 12/04/24 06:04:25.917
  I1204 06:04:25.921750 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-f1bbc132-2338-41e5-b563-478ab6657f98 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:04:25.943
  I1204 06:04:25.957082 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2778" for this suite. @ 12/04/24 06:04:25.962
• [12.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/04/24 06:04:25.969
  I1204 06:04:25.969381 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:04:25.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:25.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:25.996
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/04/24 06:04:26.001
  STEP: Saw pod success @ 12/04/24 06:04:31.835
  I1204 06:04:36.059354 23 output.go:196] Trying to get logs from node nodea17 pod pod-e9edeccc-a18e-4e36-97db-441f84a33b6b container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:04:36.081
  I1204 06:04:36.108476 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9347" for this suite. @ 12/04/24 06:04:36.113
• [10.155 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 12/04/24 06:04:36.124
  I1204 06:04:36.124866 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 06:04:36.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:36.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:36.147
  STEP: Creating Indexed job @ 12/04/24 06:04:36.151
  STEP: Ensuring job reaches completions @ 12/04/24 06:04:36.159
  STEP: Ensuring pods with index for job exist @ 12/04/24 06:04:48.171
  I1204 06:04:48.176331 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7096" for this suite. @ 12/04/24 06:04:48.179
• [12.061 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/04/24 06:04:48.185
  I1204 06:04:48.185858 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:04:48.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:48.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:48.205
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:04:48.209
  STEP: Saw pod success @ 12/04/24 06:04:52.233
  I1204 06:04:52.237202 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-12708841-e2d9-401b-81e9-fd047341ee98 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:04:52.244
  I1204 06:04:52.258701 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8573" for this suite. @ 12/04/24 06:04:52.263
• [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 12/04/24 06:04:52.278
  I1204 06:04:52.278511 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 06:04:52.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:52.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:52.302
  I1204 06:04:52.307019 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  W1204 06:04:54.877253      23 warnings.go:70] unknown field "alpha"
  W1204 06:04:54.877305      23 warnings.go:70] unknown field "beta"
  W1204 06:04:54.877320      23 warnings.go:70] unknown field "delta"
  W1204 06:04:54.877331      23 warnings.go:70] unknown field "epsilon"
  W1204 06:04:54.877342      23 warnings.go:70] unknown field "gamma"
  I1204 06:04:55.425819 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8775" for this suite. @ 12/04/24 06:04:55.431
• [3.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/04/24 06:04:55.439
  I1204 06:04:55.439400 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:04:55.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:55.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:55.462
  STEP: Creating configMap with name projected-configmap-test-volume-b24f4f23-b8e7-4974-91a6-71b2593f6dcf @ 12/04/24 06:04:55.466
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:04:55.471
  STEP: Saw pod success @ 12/04/24 06:04:59.495
  I1204 06:04:59.499395 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-1b354580-a72f-4896-bb1d-6dd314817371 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:04:59.506
  I1204 06:04:59.521690 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7693" for this suite. @ 12/04/24 06:04:59.525
• [4.091 seconds]
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/04/24 06:04:59.53
  I1204 06:04:59.530699 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 06:04:59.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:04:59.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:04:59.552
  STEP: creating the pod @ 12/04/24 06:04:59.556
  STEP: submitting the pod to kubernetes @ 12/04/24 06:04:59.556
  W1204 06:04:59.565968      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 12/04/24 06:05:03.584
  STEP: updating the pod @ 12/04/24 06:05:03.59
  I1204 06:05:04.108097 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-682721ea-3f1e-4f3f-89bc-34d095493e83"
  I1204 06:05:06.118219 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7128" for this suite. @ 12/04/24 06:05:06.123
• [6.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/04/24 06:05:06.13
  I1204 06:05:06.131019 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 06:05:06.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:05:06.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:05:06.149
  I1204 06:05:06.155389 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/04/24 06:05:07.678
  I1204 06:05:07.679122 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 create -f -'
  I1204 06:05:09.822630 23 builder.go:146] stderr: ""
  I1204 06:05:09.822717 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6491-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1204 06:05:09.822804 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 delete e2e-test-crd-publish-openapi-6491-crds test-foo'
  I1204 06:05:09.919390 23 builder.go:146] stderr: ""
  I1204 06:05:09.919500 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6491-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1204 06:05:09.919584 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 apply -f -'
  I1204 06:05:10.022735 23 builder.go:146] stderr: ""
  I1204 06:05:10.022809 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6491-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1204 06:05:10.022881 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 delete e2e-test-crd-publish-openapi-6491-crds test-foo'
  I1204 06:05:10.114428 23 builder.go:146] stderr: ""
  I1204 06:05:10.114500 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6491-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/04/24 06:05:10.114
  I1204 06:05:10.114616 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 create -f -'
  I1204 06:05:10.209875 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/04/24 06:05:10.209
  I1204 06:05:10.210061 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 create -f -'
  I1204 06:05:10.300843 23 builder.go:135] rc: 1
  I1204 06:05:10.300973 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 apply -f -'
  I1204 06:05:10.409809 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/04/24 06:05:10.409
  I1204 06:05:10.410005 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 create -f -'
  I1204 06:05:10.503444 23 builder.go:135] rc: 1
  I1204 06:05:10.503643 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 --namespace=crd-publish-openapi-5910 apply -f -'
  I1204 06:05:10.603960 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/04/24 06:05:10.604
  I1204 06:05:10.604140 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 explain e2e-test-crd-publish-openapi-6491-crds'
  I1204 06:05:10.698532 23 builder.go:146] stderr: ""
  I1204 06:05:10.698675 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6491-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/04/24 06:05:10.699
  I1204 06:05:10.700004 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 explain e2e-test-crd-publish-openapi-6491-crds.metadata'
  I1204 06:05:10.794010 23 builder.go:146] stderr: ""
  I1204 06:05:10.794316 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6491-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1204 06:05:10.794806 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 explain e2e-test-crd-publish-openapi-6491-crds.spec'
  I1204 06:05:10.886342 23 builder.go:146] stderr: ""
  I1204 06:05:10.886409 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6491-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1204 06:05:10.886567 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 explain e2e-test-crd-publish-openapi-6491-crds.spec.bars'
  I1204 06:05:10.976731 23 builder.go:146] stderr: ""
  I1204 06:05:10.976811 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6491-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/04/24 06:05:10.977
  I1204 06:05:10.977159 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5910 explain e2e-test-crd-publish-openapi-6491-crds.spec.bars2'
  I1204 06:05:11.068698 23 builder.go:135] rc: 1
  I1204 06:05:12.461600 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5910" for this suite. @ 12/04/24 06:05:12.524
• [6.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 12/04/24 06:05:12.532
  I1204 06:05:12.532991 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 06:05:12.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:05:12.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:05:12.551
  STEP: Creating a job @ 12/04/24 06:05:12.555
  STEP: Ensuring job reaches completions @ 12/04/24 06:05:12.563
  I1204 06:05:24.576311 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8272" for this suite. @ 12/04/24 06:05:24.581
• [12.055 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/04/24 06:05:24.587
  I1204 06:05:24.587690 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 06:05:24.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:05:24.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:05:24.607
  I1204 06:05:24.615350 23 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-9142"
  I1204 06:05:24.620992 23 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-9142"
  STEP: waiting for a new root ca configmap created @ 12/04/24 06:05:25.121
  I1204 06:05:25.126807 23 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-9142"
  I1204 06:05:25.133362 23 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-9142"
  STEP: waiting for the root ca configmap reconciled @ 12/04/24 06:05:25.634
  I1204 06:05:25.638372 23 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-9142"
  I1204 06:05:25.638537 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9142" for this suite. @ 12/04/24 06:05:25.643
• [1.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 12/04/24 06:05:25.65
  I1204 06:05:25.650675 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:05:25.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:05:25.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:05:25.67
  STEP: Setting up server cert @ 12/04/24 06:05:25.766
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:05:26.161
  STEP: Deploying the webhook pod @ 12/04/24 06:05:26.172
  STEP: Wait for the deployment to be ready @ 12/04/24 06:05:26.185
  I1204 06:05:26.192639 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/04/24 06:05:28.207
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:05:28.22
  I1204 06:05:29.221393 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/04/24 06:05:29.232
  STEP: create a pod @ 12/04/24 06:05:29.256
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/04/24 06:05:31.273
  I1204 06:05:31.273438 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=webhook-7715 attach --namespace=webhook-7715 to-be-attached-pod -i -c=container1'
  I1204 06:05:31.404345 23 builder.go:135] rc: 1
  I1204 06:05:31.447428 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7715" for this suite. @ 12/04/24 06:05:31.451
  STEP: Destroying namespace "webhook-markers-1813" for this suite. @ 12/04/24 06:05:31.456
• [5.812 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/04/24 06:05:31.463
  I1204 06:05:31.463513 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 06:05:31.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:05:31.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:05:31.482
  I1204 06:05:31.510404 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"05a7c2cf-a5ff-4793-a077-1dc8371c1b97", Controller:(*bool)(0xc004b5e406), BlockOwnerDeletion:(*bool)(0xc004b5e407)}}
  I1204 06:05:31.525542 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"8b145aba-bf67-41d8-846e-06fb730e3b58", Controller:(*bool)(0xc004b5e64e), BlockOwnerDeletion:(*bool)(0xc004b5e64f)}}
  I1204 06:05:31.532252 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"5273a043-f3c0-4dca-806a-4e5b926a6584", Controller:(*bool)(0xc004b5e8ae), BlockOwnerDeletion:(*bool)(0xc004b5e8af)}}
  I1204 06:05:36.609945 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6375" for this suite. @ 12/04/24 06:05:36.615
• [5.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/04/24 06:05:36.622
  I1204 06:05:36.622262 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-watch @ 12/04/24 06:05:36.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:05:36.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:05:36.647
  I1204 06:05:36.651389 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Creating first CR  @ 12/04/24 06:05:39.206
  I1204 06:05:39.214090 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-04T06:05:39Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-04T06:05:39Z]] name:name1 resourceVersion:1741 uid:4bc6023d-a03c-4298-808b-6f119527558d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/04/24 06:05:49.214
  I1204 06:05:49.223269 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-04T06:05:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-04T06:05:49Z]] name:name2 resourceVersion:1769 uid:20e6f683-7999-4498-92ae-724d3f1d6513] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/04/24 06:05:59.223
  I1204 06:05:59.233628 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-04T06:05:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-04T06:05:59Z]] name:name1 resourceVersion:1785 uid:4bc6023d-a03c-4298-808b-6f119527558d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/04/24 06:06:09.234
  I1204 06:06:09.244487 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-04T06:05:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-04T06:06:09Z]] name:name2 resourceVersion:1801 uid:20e6f683-7999-4498-92ae-724d3f1d6513] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/04/24 06:06:19.244
  I1204 06:06:19.254179 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-04T06:05:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-04T06:05:59Z]] name:name1 resourceVersion:1817 uid:4bc6023d-a03c-4298-808b-6f119527558d] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/04/24 06:06:29.254
  I1204 06:06:29.263449 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-04T06:05:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-04T06:06:09Z]] name:name2 resourceVersion:1833 uid:20e6f683-7999-4498-92ae-724d3f1d6513] num:map[num1:9223372036854775807 num2:1000000]]}
  I1204 06:06:39.779673 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1731" for this suite. @ 12/04/24 06:06:39.785
• [63.170 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 12/04/24 06:06:39.793
  I1204 06:06:39.793079 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:06:39.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:06:39.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:06:39.818
  STEP: Setting up server cert @ 12/04/24 06:06:39.917
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:06:40.282
  STEP: Deploying the webhook pod @ 12/04/24 06:06:40.292
  STEP: Wait for the deployment to be ready @ 12/04/24 06:06:40.303
  I1204 06:06:40.313991 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/04/24 06:06:42.327
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:06:42.37
  I1204 06:06:43.371432 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/04/24 06:06:43.379
  STEP: create a configmap that should be updated by the webhook @ 12/04/24 06:06:43.406
  I1204 06:06:43.466226 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4077" for this suite. @ 12/04/24 06:06:43.505
  STEP: Destroying namespace "webhook-markers-105" for this suite. @ 12/04/24 06:06:43.514
• [3.727 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/04/24 06:06:43.519
  I1204 06:06:43.519893 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 06:06:43.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:06:43.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:06:43.539
  STEP: set up a multi version CRD @ 12/04/24 06:06:43.543
  I1204 06:06:43.544215 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: mark a version not serverd @ 12/04/24 06:06:47.183
  STEP: check the unserved version gets removed @ 12/04/24 06:06:47.206
  STEP: check the other version is not changed @ 12/04/24 06:06:48.038
  I1204 06:06:50.896405 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9817" for this suite. @ 12/04/24 06:06:50.907
• [7.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/04/24 06:06:50.916
  I1204 06:06:50.916164 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/04/24 06:06:50.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:06:50.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:06:50.936
  I1204 06:06:50.941064 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:06:54.004949 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2704" for this suite. @ 12/04/24 06:06:54.01
• [3.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/04/24 06:06:54.016
  I1204 06:06:54.016782 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:06:54.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:06:54.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:06:54.034
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:06:54.037
  STEP: Saw pod success @ 12/04/24 06:06:58.06
  I1204 06:06:58.063770 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-27c2e85a-b271-498d-963b-2be0552a3549 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:06:58.082
  I1204 06:06:58.094300 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7445" for this suite. @ 12/04/24 06:06:58.098
• [4.087 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/04/24 06:06:58.104
  I1204 06:06:58.104369 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:06:58.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:06:58.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:06:58.121
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:06:58.125
  STEP: Saw pod success @ 12/04/24 06:07:02.149
  I1204 06:07:02.153448 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-1d6e096a-6a82-44bf-b872-ef1ada7e3815 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:07:02.161
  I1204 06:07:02.175898 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7314" for this suite. @ 12/04/24 06:07:02.18
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/04/24 06:07:02.186
  I1204 06:07:02.186549 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:07:02.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:02.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:02.204
  STEP: starting the proxy server @ 12/04/24 06:07:02.208
  I1204 06:07:02.208665 23 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-5200 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/04/24 06:07:02.278
  I1204 06:07:02.292215 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1204 06:07:02.296408 23 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:42621

  I1204 06:07:02.296463 23 kubectl.go:2229] kubectl proxy stderr: W1204 06:07:02.277920     281 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-5200" for this suite. @ 12/04/24 06:07:02.297
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/04/24 06:07:02.304
  I1204 06:07:02.304452 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename prestop @ 12/04/24 06:07:02.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:02.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:02.326
  STEP: Creating server pod server in namespace prestop-7856 @ 12/04/24 06:07:02.331
  STEP: Waiting for pods to come up. @ 12/04/24 06:07:02.341
  STEP: Creating tester pod tester in namespace prestop-7856 @ 12/04/24 06:07:04.354
  STEP: Deleting pre-stop pod @ 12/04/24 06:07:06.372
  I1204 06:07:11.389415 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/04/24 06:07:11.39
  I1204 06:07:11.399265 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7856" for this suite. @ 12/04/24 06:07:11.405
• [9.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 12/04/24 06:07:11.429
  I1204 06:07:11.429360 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:07:11.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:11.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:11.445
  STEP: Setting up server cert @ 12/04/24 06:07:11.543
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:07:11.832
  STEP: Deploying the webhook pod @ 12/04/24 06:07:11.842
  STEP: Wait for the deployment to be ready @ 12/04/24 06:07:11.854
  I1204 06:07:11.862380 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/04/24 06:07:13.875
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:07:13.89
  I1204 06:07:14.891445 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/04/24 06:07:14.902
  I1204 06:07:14.951013 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8569" for this suite. @ 12/04/24 06:07:14.957
  STEP: Destroying namespace "webhook-markers-336" for this suite. @ 12/04/24 06:07:14.962
• [3.539 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/04/24 06:07:14.971
  I1204 06:07:14.971439 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:07:14.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:14.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:14.989
  STEP: Creating configMap with name projected-configmap-test-volume-map-8b8a725c-4f45-40bd-8dac-3156b401b256 @ 12/04/24 06:07:14.994
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:07:14.998
  STEP: Saw pod success @ 12/04/24 06:07:19.042
  I1204 06:07:19.046340 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-86df0689-cc53-4d95-9481-88293655922c container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:07:19.054
  I1204 06:07:19.069418 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-47" for this suite. @ 12/04/24 06:07:19.075
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/04/24 06:07:19.085
  I1204 06:07:19.085610 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename controllerrevisions @ 12/04/24 06:07:19.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:19.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:19.104
  STEP: Creating DaemonSet "e2e-82zz8-daemon-set" @ 12/04/24 06:07:19.183
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/04/24 06:07:19.189
  I1204 06:07:19.276208 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:19.279357 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:19.279417 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:20.195878 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:20.200181 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:20.200216 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:21.196414 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:21.200695 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:21.200996 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:22.197966 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:22.202290 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:22.202358 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:23.195875 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:23.200549 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:23.200622 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:24.195379 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:24.198896 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:24.199128 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:25.196126 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:25.200853 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:25.200918 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:26.196694 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:26.200649 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:26.200715 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:27.195778 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:27.199044 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:27.199397 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:28.197756 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:28.202961 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 1
  I1204 06:07:28.203029 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:07:29.196875 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:07:29.201541 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 2
  I1204 06:07:29.201834 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-82zz8-daemon-set
  STEP: Confirm DaemonSet "e2e-82zz8-daemon-set" successfully created with "daemonset-name=e2e-82zz8-daemon-set" label @ 12/04/24 06:07:29.205
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-82zz8-daemon-set" @ 12/04/24 06:07:29.212
  I1204 06:07:29.216682 23 controller_revision.go:162] Located ControllerRevision: "e2e-82zz8-daemon-set-846f45f6d6"
  STEP: Patching ControllerRevision "e2e-82zz8-daemon-set-846f45f6d6" @ 12/04/24 06:07:29.22
  I1204 06:07:29.229652 23 controller_revision.go:173] e2e-82zz8-daemon-set-846f45f6d6 has been patched
  STEP: Create a new ControllerRevision @ 12/04/24 06:07:29.229
  I1204 06:07:29.234757 23 controller_revision.go:191] Created ControllerRevision: e2e-82zz8-daemon-set-6574b6548
  STEP: Confirm that there are two ControllerRevisions @ 12/04/24 06:07:29.234
  I1204 06:07:29.234873 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1204 06:07:29.238166 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-82zz8-daemon-set-846f45f6d6" @ 12/04/24 06:07:29.238
  STEP: Confirm that there is only one ControllerRevision @ 12/04/24 06:07:29.243
  I1204 06:07:29.243517 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1204 06:07:29.246413 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-82zz8-daemon-set-6574b6548" @ 12/04/24 06:07:29.249
  I1204 06:07:29.257589 23 controller_revision.go:220] e2e-82zz8-daemon-set-6574b6548 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/04/24 06:07:29.257
  W1204 06:07:29.272355      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/04/24 06:07:29.272
  I1204 06:07:29.272712 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1204 06:07:29.308627 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-82zz8-daemon-set-6574b6548=updated" @ 12/04/24 06:07:29.308
  STEP: Confirm that there is only one ControllerRevision @ 12/04/24 06:07:29.323
  I1204 06:07:29.323811 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1204 06:07:29.328734 23 controller_revision.go:265] Found 1 ControllerRevisions
  I1204 06:07:29.332206 23 controller_revision.go:246] ControllerRevision "e2e-82zz8-daemon-set-6f78d65dd5" has revision 3
  STEP: Deleting DaemonSet "e2e-82zz8-daemon-set" @ 12/04/24 06:07:29.335
  STEP: deleting DaemonSet.extensions e2e-82zz8-daemon-set in namespace controllerrevisions-2368, will wait for the garbage collector to delete the pods @ 12/04/24 06:07:29.335
  I1204 06:07:29.395236 23 resources.go:139] Deleting DaemonSet.extensions e2e-82zz8-daemon-set took: 6.566912ms
  I1204 06:07:29.496174 23 resources.go:163] Terminating DaemonSet.extensions e2e-82zz8-daemon-set pods took: 100.931149ms
  I1204 06:07:31.600468 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-82zz8-daemon-set: 0
  I1204 06:07:31.600564 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-82zz8-daemon-set
  I1204 06:07:31.608487 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2261"},"items":null}

  I1204 06:07:31.612482 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2261"},"items":null}

  I1204 06:07:31.624922 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2368" for this suite. @ 12/04/24 06:07:31.628
• [12.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/04/24 06:07:31.636
  I1204 06:07:31.636995 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:07:31.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:31.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:31.661
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/04/24 06:07:31.666
  STEP: Saw pod success @ 12/04/24 06:07:35.691
  I1204 06:07:35.695569 23 output.go:196] Trying to get logs from node nodea17 pod pod-a18d4863-6b0b-4e86-9b7b-509997e39db8 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:07:35.702
  I1204 06:07:35.714773 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7187" for this suite. @ 12/04/24 06:07:35.719
• [4.087 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/04/24 06:07:35.724
  I1204 06:07:35.724094 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/04/24 06:07:35.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:35.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:35.74
  STEP: create the container to handle the HTTPGet hook request. @ 12/04/24 06:07:35.819
  STEP: create the pod with lifecycle hook @ 12/04/24 06:07:37.838
  STEP: delete the pod with lifecycle hook @ 12/04/24 06:07:39.856
  STEP: check prestop hook @ 12/04/24 06:07:41.872
  I1204 06:07:41.879894 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7241" for this suite. @ 12/04/24 06:07:41.885
• [6.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/04/24 06:07:41.891
  I1204 06:07:41.891978 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename init-container @ 12/04/24 06:07:41.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:41.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:41.912
  STEP: creating the pod @ 12/04/24 06:07:41.916
  I1204 06:07:41.916650 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1204 06:07:45.353279 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1315" for this suite. @ 12/04/24 06:07:45.358
• [3.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/04/24 06:07:45.365
  I1204 06:07:45.365849 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sysctl @ 12/04/24 06:07:45.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:45.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:45.384
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/04/24 06:07:45.388
  I1204 06:07:45.395570 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9012" for this suite. @ 12/04/24 06:07:45.459
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/04/24 06:07:45.468
  I1204 06:07:45.468826 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 06:07:45.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:45.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:45.488
  STEP: Saw pod success @ 12/04/24 06:07:59.893
  I1204 06:07:59.897056 23 output.go:196] Trying to get logs from node nodea17 pod client-envvars-28184730-827b-48c2-a1c1-bb2bd10e0e41 container env3cont: <nil>
  STEP: delete the pod @ 12/04/24 06:07:59.91
  I1204 06:07:59.924733 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7431" for this suite. @ 12/04/24 06:07:59.929
• [14.465 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/04/24 06:07:59.933
  I1204 06:07:59.933552 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replicaset @ 12/04/24 06:07:59.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:07:59.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:07:59.951
  I1204 06:07:59.954788 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-1952e496-63fc-4880-b22d-94c4199f972d
  I1204 06:07:59.963350 23 resource.go:87] Pod name my-hostname-basic-1952e496-63fc-4880-b22d-94c4199f972d: Found 0 pods out of 1
  I1204 06:08:04.968578 23 resource.go:87] Pod name my-hostname-basic-1952e496-63fc-4880-b22d-94c4199f972d: Found 1 pods out of 1
  I1204 06:08:04.968646 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-1952e496-63fc-4880-b22d-94c4199f972d" is running
  I1204 06:08:04.972278 23 replica_set.go:220] Pod "my-hostname-basic-1952e496-63fc-4880-b22d-94c4199f972d-xh48l" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:08:01 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:07:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:08:01 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:08:01 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:07:59 +0000 UTC Reason: Message:}])
  I1204 06:08:04.972325 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/04/24 06:08:04.972
  I1204 06:08:05.077573 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7762" for this suite. @ 12/04/24 06:08:05.082
• [5.155 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/04/24 06:08:05.088
  I1204 06:08:05.088993 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/04/24 06:08:05.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:05.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:05.105
  STEP: fetching the /apis discovery document @ 12/04/24 06:08:05.108
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/04/24 06:08:05.11
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/04/24 06:08:05.11
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/04/24 06:08:05.11
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/04/24 06:08:05.111
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/04/24 06:08:05.111
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/04/24 06:08:05.113
  I1204 06:08:05.113824 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9161" for this suite. @ 12/04/24 06:08:05.183
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 12/04/24 06:08:05.19
  I1204 06:08:05.190057 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pv @ 12/04/24 06:08:05.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:05.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:05.205
  STEP: Creating initial PV and PVC @ 12/04/24 06:08:05.209
  I1204 06:08:05.209210 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4071" @ 12/04/24 06:08:05.223
  STEP: Listing PVCs in namespace "pv-4071" @ 12/04/24 06:08:05.226
  STEP: Reading "pvc-kjtrw" Status @ 12/04/24 06:08:05.229
  STEP: Reading "pv-4071-lzlsw" Status @ 12/04/24 06:08:05.238
  STEP: Patching "pvc-kjtrw" Status @ 12/04/24 06:08:05.245
  STEP: Patching "pv-4071-lzlsw" Status @ 12/04/24 06:08:05.251
  STEP: Updating "pvc-kjtrw" Status @ 12/04/24 06:08:05.269
  STEP: Updating "pv-4071-lzlsw" Status @ 12/04/24 06:08:05.278
  I1204 06:08:05.285411 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1204 06:08:05.285472 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-kjtrw"
  I1204 06:08:05.290649 23 pv.go:193] Deleting PersistentVolume "pv-4071-lzlsw"
  I1204 06:08:05.295889 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4071" for this suite. @ 12/04/24 06:08:05.3
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/04/24 06:08:05.308
  I1204 06:08:05.308118 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:08:05.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:05.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:05.339
  STEP: Creating Pod @ 12/04/24 06:08:05.345
  STEP: Reading file content from the nginx-container @ 12/04/24 06:08:09.379
  I1204 06:08:09.379873 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7302 PodName:pod-sharedvolume-b4952c11-8ba7-4389-99b3-59105f2a05a7 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:08:09.379907 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:08:09.380868 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:08:09.380982 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7302/pods/pod-sharedvolume-b4952c11-8ba7-4389-99b3-59105f2a05a7/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1204 06:08:09.458160 23 exec_util.go:111] Exec stderr: ""
  I1204 06:08:09.458412 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7302" for this suite. @ 12/04/24 06:08:09.463
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/04/24 06:08:09.469
  I1204 06:08:09.469605 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename podtemplate @ 12/04/24 06:08:09.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:09.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:09.487
  I1204 06:08:09.536648 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-437" for this suite. @ 12/04/24 06:08:09.564
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/04/24 06:08:09.571
  I1204 06:08:09.571257 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/04/24 06:08:09.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:09.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:09.589
  I1204 06:08:09.600172 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7783" for this suite. @ 12/04/24 06:08:09.665
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/04/24 06:08:09.673
  I1204 06:08:09.673221 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename podtemplate @ 12/04/24 06:08:09.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:09.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:09.693
  STEP: Create set of pod templates @ 12/04/24 06:08:09.697
  I1204 06:08:09.702629 23 podtemplates.go:143] created test-podtemplate-1
  I1204 06:08:09.707097 23 podtemplates.go:143] created test-podtemplate-2
  I1204 06:08:09.713195 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/04/24 06:08:09.713
  STEP: delete collection of pod templates @ 12/04/24 06:08:09.716
  I1204 06:08:09.716543 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/04/24 06:08:09.729
  I1204 06:08:09.729888 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1204 06:08:09.732787 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3489" for this suite. @ 12/04/24 06:08:09.765
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 12/04/24 06:08:09.772
  I1204 06:08:09.772119 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 06:08:09.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:09.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:09.795
  STEP: Creating simple DaemonSet "daemon-set" @ 12/04/24 06:08:09.875
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/04/24 06:08:09.882
  I1204 06:08:09.967302 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:08:09.970987 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:08:09.971050 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:08:10.889594 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:08:10.895093 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:08:10.895164 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:08:11.889854 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:08:11.894359 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 06:08:11.894777 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/04/24 06:08:11.899
  STEP: DeleteCollection of the DaemonSets @ 12/04/24 06:08:11.902
  STEP: Verify that ReplicaSets have been deleted @ 12/04/24 06:08:11.91
  I1204 06:08:11.924007 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2647"},"items":null}

  I1204 06:08:11.927583 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2647"},"items":[{"metadata":{"name":"daemon-set-c9wcb","generateName":"daemon-set-","namespace":"daemonsets-461","uid":"a7d9f0c0-89bd-4c0b-ad73-77e3451f3f4b","resourceVersion":"2647","creationTimestamp":"2024-12-04T06:08:09Z","deletionTimestamp":"2024-12-04T06:08:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e3a52317-9688-4f5b-a988-82fff91f03a4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-04T06:08:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e3a52317-9688-4f5b-a988-82fff91f03a4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-04T06:08:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.34\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2kxh2","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2kxh2","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodea17","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodea17"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:09Z"}],"hostIP":"192.168.100.37","hostIPs":[{"ip":"192.168.100.37"}],"podIP":"10.244.1.34","podIPs":[{"ip":"10.244.1.34"}],"startTime":"2024-12-04T06:08:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-04T06:08:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8de4fab98969b1d8fbb051eee9b87f5a9b942b723c0d4f3abec026e036d7dee0","started":true,"volumeMounts":[{"name":"kube-api-access-2kxh2","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cx9vj","generateName":"daemon-set-","namespace":"daemonsets-461","uid":"570803e4-570d-4a18-b646-1e6ab9ccb430","resourceVersion":"2646","creationTimestamp":"2024-12-04T06:08:09Z","deletionTimestamp":"2024-12-04T06:08:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e3a52317-9688-4f5b-a988-82fff91f03a4","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-04T06:08:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e3a52317-9688-4f5b-a988-82fff91f03a4\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-04T06:08:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.4\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cn9xn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cn9xn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodeb14","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodeb14"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-04T06:08:09Z"}],"hostIP":"192.168.100.114","hostIPs":[{"ip":"192.168.100.114"}],"podIP":"10.244.2.4","podIPs":[{"ip":"10.244.2.4"}],"startTime":"2024-12-04T06:08:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-04T06:08:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://84640cf0b6a8cbf17cf7528253e6c63c5e88b9eeca9206fa6ca2dc544ec9f7e8","started":true,"volumeMounts":[{"name":"kube-api-access-cn9xn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1204 06:08:11.999983 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-461" for this suite. @ 12/04/24 06:08:12.004
• [2.239 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/04/24 06:08:12.012
  I1204 06:08:12.012710 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 06:08:12.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:12.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:12.032
  STEP: Creating configMap with name configmap-test-volume-map-0fcd5537-437a-474d-9736-7baf5183e53a @ 12/04/24 06:08:12.036
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:08:12.04
  STEP: Saw pod success @ 12/04/24 06:08:16.064
  I1204 06:08:16.068243 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-d9c57560-953a-4b1d-ae7a-ff3780bf70fe container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:08:16.075
  I1204 06:08:16.091370 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5783" for this suite. @ 12/04/24 06:08:16.096
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/04/24 06:08:16.103
  I1204 06:08:16.103660 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename runtimeclass @ 12/04/24 06:08:16.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:16.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:16.12
  I1204 06:08:18.153180 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7798" for this suite. @ 12/04/24 06:08:18.157
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 12/04/24 06:08:18.162
  I1204 06:08:18.163016 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 06:08:18.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:18.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:18.229
  STEP: apply creating a deployment @ 12/04/24 06:08:18.233
  I1204 06:08:18.249446 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1306" for this suite. @ 12/04/24 06:08:18.258
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 12/04/24 06:08:18.265
  I1204 06:08:18.265221 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubelet-test @ 12/04/24 06:08:18.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:18.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:18.283
  I1204 06:08:20.339510 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3714" for this suite. @ 12/04/24 06:08:20.344
• [2.086 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 12/04/24 06:08:20.35
  I1204 06:08:20.350963 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 06:08:20.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:20.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:20.372
  STEP: Creating a job @ 12/04/24 06:08:20.377
  STEP: Ensuring active pods == parallelism @ 12/04/24 06:08:20.382
  STEP: delete a job @ 12/04/24 06:08:24.388
  STEP: deleting Job.batch foo in namespace job-6664, will wait for the garbage collector to delete the pods @ 12/04/24 06:08:24.388
  I1204 06:08:24.449184 23 resources.go:139] Deleting Job.batch foo took: 6.309282ms
  I1204 06:08:24.549533 23 resources.go:163] Terminating Job.batch foo pods took: 100.340777ms
  STEP: Ensuring job was deleted @ 12/04/24 06:08:25.85
  I1204 06:08:25.855739 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6664" for this suite. @ 12/04/24 06:08:25.861
• [5.517 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/04/24 06:08:25.87
  I1204 06:08:25.870286 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 06:08:25.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:25.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:25.889
  STEP: Creating pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481 @ 12/04/24 06:08:25.893
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 06:08:27.917
  I1204 06:08:27.920177 23 container_probe.go:1749] Initial restart count of pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 is 0
  I1204 06:08:27.924307 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:29.930717 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:31.936755 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:33.942151 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:35.948611 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:37.954963 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:39.960412 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:41.966360 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:43.971185 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:45.977687 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:47.984133 23 container_probe.go:1759] Get pod liveness-87638f33-b242-4648-b1f6-fba95c9125f1 in namespace container-probe-2481
  I1204 06:08:47.984186 23 container_probe.go:1763] Restart count of pod container-probe-2481/liveness-87638f33-b242-4648-b1f6-fba95c9125f1 is now 1 (20.063947826s elapsed)
  STEP: deleting the pod @ 12/04/24 06:08:47.984
  I1204 06:08:47.994504 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2481" for this suite. @ 12/04/24 06:08:47.998
• [22.134 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/04/24 06:08:48.004
  I1204 06:08:48.004725 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 06:08:48.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:48.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:48.023
  STEP: Creating configMap with name configmap-test-upd-57ec7f0a-3388-437a-9e41-6d3796009354 @ 12/04/24 06:08:48.1
  STEP: Creating the pod @ 12/04/24 06:08:48.107
  STEP: Waiting for pod with text data @ 12/04/24 06:08:50.126
  STEP: Waiting for pod with binary data @ 12/04/24 06:08:50.135
  I1204 06:08:50.142724 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7137" for this suite. @ 12/04/24 06:08:50.147
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/04/24 06:08:50.155
  I1204 06:08:50.155103 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename namespaces @ 12/04/24 06:08:50.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:50.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:50.174
  STEP: creating a Namespace @ 12/04/24 06:08:50.178
  STEP: patching the Namespace @ 12/04/24 06:08:50.274
  STEP: get the Namespace and ensuring it has the label @ 12/04/24 06:08:50.279
  I1204 06:08:50.282424 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3917" for this suite. @ 12/04/24 06:08:50.286
  STEP: Destroying namespace "nspatchtest-4fd927e8-d38d-40c0-a94e-73c5779f9836-8472" for this suite. @ 12/04/24 06:08:50.293
• [0.143 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/04/24 06:08:50.298
  I1204 06:08:50.298099 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename namespaces @ 12/04/24 06:08:50.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:50.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:08:50.377
  STEP: Creating a test namespace @ 12/04/24 06:08:50.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:08:50.474
  STEP: Creating a pod in the namespace @ 12/04/24 06:08:50.479
  STEP: Waiting for the pod to have running status @ 12/04/24 06:08:50.488
  STEP: Deleting the namespace @ 12/04/24 06:08:54.501
  STEP: Waiting for the namespace to be removed. @ 12/04/24 06:08:54.508
  STEP: Recreating the namespace @ 12/04/24 06:09:05.513
  STEP: Verifying there are no pods in the namespace @ 12/04/24 06:09:05.528
  I1204 06:09:05.531369 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6312" for this suite. @ 12/04/24 06:09:05.536
  STEP: Destroying namespace "nsdeletetest-9176" for this suite. @ 12/04/24 06:09:05.544
  I1204 06:09:05.546928 23 framework.go:370] Namespace nsdeletetest-9176 was already deleted
  STEP: Destroying namespace "nsdeletetest-1101" for this suite. @ 12/04/24 06:09:05.547
• [15.255 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/04/24 06:09:05.552
  I1204 06:09:05.552792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 06:09:05.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:09:05.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:09:05.635
  STEP: Creating pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135 @ 12/04/24 06:09:05.64
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 06:09:07.658
  I1204 06:09:07.661549 23 container_probe.go:1749] Initial restart count of pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 is 0
  I1204 06:09:07.665559 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:09.672278 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:11.678478 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:13.684119 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:15.690140 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:17.696127 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:19.702410 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:21.708370 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:23.713851 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:25.719862 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:27.724788 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:29.731493 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:31.736954 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:33.742472 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:35.748554 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:37.753417 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:39.759631 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:41.765211 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:43.769758 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:45.775801 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:47.780962 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:49.787335 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:51.793307 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:53.798846 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:55.803012 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:57.808328 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:09:59.813803 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:01.820580 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:03.826149 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:05.831647 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:07.838091 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:09.844455 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:11.850839 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:13.856544 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:15.862463 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:17.868029 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:19.873115 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:21.879037 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:23.885285 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:25.891067 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:27.896511 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:29.902246 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:31.908182 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:33.913338 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:35.919798 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:37.925595 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:39.930508 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:41.936792 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:43.941300 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:45.946962 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:47.952928 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:49.959931 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:51.966356 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:53.973011 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:55.979919 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:57.985866 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:10:59.992763 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:01.999648 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:04.006143 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:06.012676 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:08.018445 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:10.026223 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:12.032866 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:14.038822 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:16.044721 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:18.051390 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:20.056827 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:22.064068 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:24.070050 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:26.076224 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:28.080647 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:30.086340 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:32.092620 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:34.099109 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:36.105167 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:38.110964 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:40.117338 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:42.124256 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:44.130233 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:46.135943 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:48.142338 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:50.164305 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:52.170693 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:54.175925 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:56.180802 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:11:58.186099 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:00.192796 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:02.199531 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:04.204559 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:06.210961 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:08.216361 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:10.223059 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:12.228819 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:14.234605 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:16.240509 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:18.246467 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:20.252920 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:22.259114 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:24.265234 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:26.271250 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:28.278703 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:30.285739 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:32.291056 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:34.296230 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:36.300223 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:38.304763 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:40.311939 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:42.317831 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:44.323439 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:46.329317 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:48.335698 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:50.340710 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:52.347320 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:54.354433 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:56.360288 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:12:58.365596 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:13:00.372704 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:13:02.378871 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:13:04.384982 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  I1204 06:13:06.390048 23 container_probe.go:1759] Get pod busybox-208f45b5-804a-4dd8-a95a-ad22213b52b6 in namespace container-probe-2135
  STEP: deleting the pod @ 12/04/24 06:13:08.391
  I1204 06:13:08.406509 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2135" for this suite. @ 12/04/24 06:13:08.412
• [242.865 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/04/24 06:13:08.418
  I1204 06:13:08.418186 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replication-controller @ 12/04/24 06:13:08.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:13:08.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:13:08.438
  STEP: Creating replication controller my-hostname-basic-1293d161-1caf-4e32-ae26-457303af2168 @ 12/04/24 06:13:08.442
  I1204 06:13:08.454451 23 resource.go:87] Pod name my-hostname-basic-1293d161-1caf-4e32-ae26-457303af2168: Found 0 pods out of 1
  I1204 06:13:13.459850 23 resource.go:87] Pod name my-hostname-basic-1293d161-1caf-4e32-ae26-457303af2168: Found 1 pods out of 1
  I1204 06:13:13.459969 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-1293d161-1caf-4e32-ae26-457303af2168" are running
  I1204 06:13:13.463279 23 rc.go:523] Pod "my-hostname-basic-1293d161-1caf-4e32-ae26-457303af2168-bsqgw" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:13:09 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:13:08 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:13:09 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:13:09 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-04 06:13:08 +0000 UTC Reason: Message:}])
  I1204 06:13:13.463354 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/04/24 06:13:13.463
  I1204 06:13:13.473447 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6151" for this suite. @ 12/04/24 06:13:13.476
• [5.065 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 12/04/24 06:13:13.482
  I1204 06:13:13.482916 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:13:13.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:13:13.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:13:13.499
  STEP: Setting up server cert @ 12/04/24 06:13:13.597
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:13:14.223
  STEP: Deploying the webhook pod @ 12/04/24 06:13:14.232
  STEP: Wait for the deployment to be ready @ 12/04/24 06:13:14.245
  I1204 06:13:14.251530 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/04/24 06:13:16.263
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:13:16.287
  I1204 06:13:17.287723 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/04/24 06:13:17.296
  I1204 06:13:17.338833 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9208" for this suite. @ 12/04/24 06:13:17.345
  STEP: Destroying namespace "webhook-markers-2933" for this suite. @ 12/04/24 06:13:17.353
• [3.877 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/04/24 06:13:17.359
  I1204 06:13:17.359842 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename watch @ 12/04/24 06:13:17.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:13:17.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:13:17.377
  STEP: creating a watch on configmaps @ 12/04/24 06:13:17.381
  STEP: creating a new configmap @ 12/04/24 06:13:17.382
  STEP: modifying the configmap once @ 12/04/24 06:13:17.386
  STEP: closing the watch once it receives two notifications @ 12/04/24 06:13:17.394
  I1204 06:13:17.394394 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4365  396eaaad-25b5-46d3-9494-88ea89b13a4f 3501 0 2024-12-04 06:13:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-04 06:13:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:13:17.394587 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4365  396eaaad-25b5-46d3-9494-88ea89b13a4f 3502 0 2024-12-04 06:13:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-04 06:13:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/04/24 06:13:17.394
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/04/24 06:13:17.401
  STEP: deleting the configmap @ 12/04/24 06:13:17.403
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/04/24 06:13:17.407
  I1204 06:13:17.408018 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4365  396eaaad-25b5-46d3-9494-88ea89b13a4f 3503 0 2024-12-04 06:13:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-04 06:13:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:13:17.408166 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4365  396eaaad-25b5-46d3-9494-88ea89b13a4f 3504 0 2024-12-04 06:13:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-04 06:13:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:13:17.408294 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4365" for this suite. @ 12/04/24 06:13:17.445
• [0.091 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/04/24 06:13:17.451
  I1204 06:13:17.451035 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/04/24 06:13:17.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:13:17.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:13:17.479
  STEP: Creating two CSIDrivers @ 12/04/24 06:13:17.484
  STEP: Getting "inline-driver-52b58113-d051-4c48-80c1-40c95965d0b3" & "inline-driver-5f86ed5a-8af4-428a-a541-d30bab637384" @ 12/04/24 06:13:17.497
  STEP: Patching the CSIDriver "inline-driver-5f86ed5a-8af4-428a-a541-d30bab637384" @ 12/04/24 06:13:17.504
  STEP: Updating the CSIDriver "inline-driver-5f86ed5a-8af4-428a-a541-d30bab637384" @ 12/04/24 06:13:17.513
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7295" @ 12/04/24 06:13:17.521
  STEP: Deleting CSIDriver "inline-driver-52b58113-d051-4c48-80c1-40c95965d0b3" @ 12/04/24 06:13:17.525
  STEP: Confirm deletion of CSIDriver "inline-driver-52b58113-d051-4c48-80c1-40c95965d0b3" @ 12/04/24 06:13:17.53
  STEP: Deleting CSIDriver "inline-driver-5f86ed5a-8af4-428a-a541-d30bab637384" via DeleteCollection @ 12/04/24 06:13:17.533
  STEP: Confirm deletion of CSIDriver "inline-driver-5f86ed5a-8af4-428a-a541-d30bab637384" @ 12/04/24 06:13:17.54
  I1204 06:13:17.543281 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7295" for this suite. @ 12/04/24 06:13:17.547
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/04/24 06:13:17.553
  I1204 06:13:17.553325 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename cronjob @ 12/04/24 06:13:17.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:13:17.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:13:17.579
  STEP: Creating a cronjob @ 12/04/24 06:13:17.582
  STEP: Ensuring more than one job is running at a time @ 12/04/24 06:13:17.587
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/04/24 06:15:01.593
  STEP: Removing cronjob @ 12/04/24 06:15:01.598
  I1204 06:15:01.604629 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2878" for this suite. @ 12/04/24 06:15:01.609
• [104.061 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/04/24 06:15:01.614
  I1204 06:15:01.614879 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 06:15:01.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:15:01.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:15:01.644
  I1204 06:15:01.648464 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: creating the pod @ 12/04/24 06:15:01.649
  STEP: submitting the pod to kubernetes @ 12/04/24 06:15:01.649
  I1204 06:15:03.702958 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1975" for this suite. @ 12/04/24 06:15:03.707
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/04/24 06:15:03.713
  I1204 06:15:03.713980 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename endpointslice @ 12/04/24 06:15:03.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:15:03.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:15:03.733
  I1204 06:15:05.872201 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8296" for this suite. @ 12/04/24 06:15:05.877
• [2.169 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/04/24 06:15:05.882
  I1204 06:15:05.882690 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 06:15:05.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:15:05.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:15:05.903
  STEP: Creating pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358 @ 12/04/24 06:15:05.91
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 06:15:07.928
  I1204 06:15:07.932090 23 container_probe.go:1749] Initial restart count of pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d is 0
  I1204 06:15:07.935704 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:09.942054 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:11.946655 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:13.951565 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:15.957331 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:17.963320 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:19.970004 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:21.976206 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:23.982586 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:25.989240 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:27.994920 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:30.001462 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:32.006713 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:34.013355 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:36.019580 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:38.025007 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:40.032018 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:42.037960 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:44.044976 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:46.051692 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:48.058685 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:50.064491 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:52.070664 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:54.077069 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:56.083306 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:58.088547 23 container_probe.go:1759] Get pod busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d in namespace container-probe-6358
  I1204 06:15:58.088638 23 container_probe.go:1763] Restart count of pod container-probe-6358/busybox-42b5d05c-c517-4333-826c-3d8a5c5efe0d is now 1 (50.156466566s elapsed)
  STEP: deleting the pod @ 12/04/24 06:15:58.088
  I1204 06:15:58.099013 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6358" for this suite. @ 12/04/24 06:15:58.103
• [52.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/04/24 06:15:58.108
  I1204 06:15:58.108823 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:15:58.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:15:58.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:15:58.13
  STEP: Creating configMap with name projected-configmap-test-volume-map-06087f62-3f22-42a2-9d66-805cf702edf7 @ 12/04/24 06:15:58.135
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:15:58.139
  STEP: Saw pod success @ 12/04/24 06:16:02.167
  I1204 06:16:02.171720 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-64327643-ba0f-4d00-bf67-a2e2308b0c8d container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:16:02.178
  I1204 06:16:02.195273 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-83" for this suite. @ 12/04/24 06:16:02.2
• [4.097 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/04/24 06:16:02.206
  I1204 06:16:02.206106 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 06:16:02.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:16:02.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:16:02.225
  I1204 06:16:02.239950 23 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1204 06:16:07.249075 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/04/24 06:16:07.249
  I1204 06:16:07.249226 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/04/24 06:16:07.258
  I1204 06:16:07.280345 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be1cb2c1-4e98-41fd-a5d5-33213576dc46",
      ResourceVersion: (string) (len=4) "3982",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=262) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 50 72 6f 67  72 65 73 73 69 6e 67 5c  |":\"Progressing\|
              00000090  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              000000a0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000b0  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 55 70 64  |e":{},"f:lastUpd|
              000000c0  61 74 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6d  |ateTime":{},"f:m|
              000000d0  65 73 73 61 67 65 22 3a  7b 7d 2c 22 66 3a 72 65  |essage":{},"f:re|
              000000e0  61 73 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |ason":{},"f:stat|
              000000f0  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000100  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=20) "NewReplicaSetCreated",
          Message: (string) (len=59) "Created new replica set \"test-cleanup-deployment-898f8f847\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 06:16:07.291643 23 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb34a6db-32f1-42d8-96bf-81f73aef4132",
      ResourceVersion: (string) (len=4) "3988",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "be1cb2c1-4e98-41fd-a5d5-33213576dc46",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 65 31 63 62 32  63 31 2d 34 65 39 38 2d  |\"be1cb2c1-4e98-|
              00000120  34 31 66 64 2d 61 35 64  35 2d 33 33 32 31 33 35  |41fd-a5d5-332135|
              00000130  37 36 64 63 34 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |76dc46\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:16:07.293187 23 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1204 06:16:07.293514 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00133b56-6aa3-4796-83a8-130b87fc13b9",
      ResourceVersion: (string) (len=4) "3978",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "be1cb2c1-4e98-41fd-a5d5-33213576dc46",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 65 31 63 62 32 63  |"uid\":\"be1cb2c|
              00000040  31 2d 34 65 39 38 2d 34  31 66 64 2d 61 35 64 35  |1-4e98-41fd-a5d5|
              00000050  2d 33 33 32 31 33 35 37  36 64 63 34 36 5c 22 7d  |-33213576dc46\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:16:07.299427 23 deployment.go:67] Pod "test-cleanup-controller-dqtqk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-dqtqk",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ff63062-84c1-49f3-beae-0c70596ad55d",
      ResourceVersion: (string) (len=4) "3954",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "00133b56-6aa3-4796-83a8-130b87fc13b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 30 31 33 33 62 35 36  |uid\":\"00133b56|
              00000080  2d 36 61 61 33 2d 34 37  39 36 2d 38 33 61 38 2d  |-6aa3-4796-83a8-|
              00000090  31 33 30 62 38 37 66 63  31 33 62 39 5c 22 7d 22  |130b87fc13b9\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  39 5c 22 7d 22 3a 7b 22  |.244.1.49\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d6lwg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d6lwg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889762,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889762,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868889762,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://11c2823addec9c66a5bcac88141b48ffee38ace6b1d9a86193a2857a06a156d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d6lwg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:16:07.304493 23 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-w8kmq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-w8kmq",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-6598",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e0ac98b-2d82-461b-adee-78e7666f6d28",
      ResourceVersion: (string) (len=4) "3990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "fb34a6db-32f1-42d8-96bf-81f73aef4132",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  33 34 61 36 64 62 2d 33  |d\":\"fb34a6db-3|
              00000090  32 66 31 2d 34 32 64 38  2d 39 36 62 66 2d 38 31  |2f1-42d8-96bf-81|
              000000a0  66 37 33 61 65 66 34 31  33 32 5c 22 7d 22 3a 7b  |f73aef4132\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6l67z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6l67z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868889767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868889767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6l67z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:16:07.307625 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6598" for this suite. @ 12/04/24 06:16:07.311
• [5.111 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/04/24 06:16:07.317
  I1204 06:16:07.317805 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename aggregator @ 12/04/24 06:16:07.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:16:07.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:16:07.335
  I1204 06:16:07.340159 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Registering the sample API server. @ 12/04/24 06:16:07.341
  I1204 06:16:07.600385 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1204 06:16:07.630402 23 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1204 06:16:09.676299 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:11.682053 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:13.682971 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:15.681737 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:17.681224 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:19.681292 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:21.681486 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:23.681206 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:25.683121 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:27.683145 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:29.681921 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:31.682433 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:33.682885 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:16:35.809692 23 aggregator.go:755] Waited 118.289619ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/04/24 06:16:35.876
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/04/24 06:16:35.88
  STEP: List APIServices @ 12/04/24 06:16:35.887
  I1204 06:16:35.892612 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/04/24 06:16:35.893
  I1204 06:16:35.908332 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/04/24 06:16:35.908
  I1204 06:16:35.919149 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 4, 6, 16, 35, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/04/24 06:16:35.919
  I1204 06:16:35.922554 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-04 06:16:35 +0000 UTC Passed all checks passed}
  I1204 06:16:35.922985 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 06:16:35.923276 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/04/24 06:16:35.923
  I1204 06:16:35.936095 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-579460161" @ 12/04/24 06:16:35.936
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/04/24 06:16:35.955
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/04/24 06:16:35.97
  STEP: Patch APIService Status @ 12/04/24 06:16:35.975
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/04/24 06:16:35.985
  I1204 06:16:35.988967 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-04 06:16:35 +0000 UTC Passed all checks passed}
  I1204 06:16:35.989049 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 06:16:35.989087 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1204 06:16:35.989119 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/04/24 06:16:35.989
  STEP: Confirm that the generated APIService has been deleted @ 12/04/24 06:16:35.995
  I1204 06:16:35.996033 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1204 06:16:35.999130 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1204 06:16:35.999208 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1204 06:16:36.105399 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-825" for this suite. @ 12/04/24 06:16:36.109
• [28.796 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 12/04/24 06:16:36.115
  I1204 06:16:36.115079 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-pred @ 12/04/24 06:16:36.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:16:36.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:16:36.134
  I1204 06:16:36.139574 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1204 06:16:36.216747 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I1204 06:16:36.221296 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1204 06:16:36.227108 23 predicates.go:957] kube-flannel-ds-s9d8k from kube-flannel started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:16:36.227194 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:16:36.227219 23 predicates.go:957] kube-proxy-cn5pv from kube-system started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:16:36.227236 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:16:36.227270 23 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-04 06:03:38 +0000 UTC (1 container statuses recorded)
  I1204 06:16:36.227287 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1204 06:16:36.227306 23 predicates.go:957] sonobuoy-e2e-job-d101e3450e66430f from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:16:36.227329 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1204 06:16:36.227346 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:16:36.227370 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-hxfzx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:16:36.227385 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:16:36.227409 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1204 06:16:36.227432 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1204 06:16:36.231047 23 predicates.go:957] kube-flannel-ds-n648s from kube-flannel started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:16:36.231138 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:16:36.231179 23 predicates.go:957] kube-proxy-lv6k4 from kube-system started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:16:36.231222 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:16:36.231255 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-jv5wx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:16:36.231299 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:16:36.231326 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/04/24 06:16:36.231
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.180de4cbf4597c1e], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 12/04/24 06:16:36.26
  I1204 06:16:37.259815 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-796" for this suite. @ 12/04/24 06:16:37.264
• [1.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/04/24 06:16:37.272
  I1204 06:16:37.272430 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename cronjob @ 12/04/24 06:16:37.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:16:37.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:16:37.293
  STEP: Creating a suspended cronjob @ 12/04/24 06:16:37.297
  STEP: Ensuring no jobs are scheduled @ 12/04/24 06:16:37.304
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/04/24 06:21:37.305
  STEP: Removing cronjob @ 12/04/24 06:21:37.311
  I1204 06:21:37.321467 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5699" for this suite. @ 12/04/24 06:21:37.327
• [300.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/04/24 06:21:37.335
  I1204 06:21:37.335799 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 06:21:37.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:21:37.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:21:37.357
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/04/24 06:21:37.362
  I1204 06:21:37.363716 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:21:38.752202 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:21:44.357221 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9616" for this suite. @ 12/04/24 06:21:44.371
• [7.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 12/04/24 06:21:44.383
  I1204 06:21:44.383690 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubelet-test @ 12/04/24 06:21:44.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:21:44.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:21:44.408
  I1204 06:21:48.432618 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2455" for this suite. @ 12/04/24 06:21:48.437
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/04/24 06:21:48.504
  I1204 06:21:48.504411 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 06:21:48.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:21:48.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:21:48.526
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/04/24 06:21:48.53
  I1204 06:21:48.531302 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:21:49.904857 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:21:55.481071 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5476" for this suite. @ 12/04/24 06:21:55.494
• [6.999 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 12/04/24 06:21:55.503
  I1204 06:21:55.503851 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:21:55.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:21:55.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:21:55.523
  STEP: creating a Service @ 12/04/24 06:21:55.532
  STEP: watching for the Service to be added @ 12/04/24 06:21:55.548
  I1204 06:21:55.550494 23 service.go:3445] Found Service test-service-2jjzs in namespace services-5892 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30099}]
  I1204 06:21:55.550555 23 service.go:3452] Service test-service-2jjzs created
  STEP: Getting /status @ 12/04/24 06:21:55.55
  I1204 06:21:55.555584 23 service.go:3463] Service test-service-2jjzs has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/04/24 06:21:55.555
  STEP: watching for the Service to be patched @ 12/04/24 06:21:55.562
  I1204 06:21:55.564528 23 service.go:3486] observed Service test-service-2jjzs in namespace services-5892 with annotations: map[] & LoadBalancer: {[]}
  I1204 06:21:55.564610 23 service.go:3489] Found Service test-service-2jjzs in namespace services-5892 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000c76860 []}]}
  I1204 06:21:55.564636 23 service.go:3496] Service test-service-2jjzs has service status patched
  STEP: updating the ServiceStatus @ 12/04/24 06:21:55.564
  I1204 06:21:55.574578 23 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/04/24 06:21:55.574
  I1204 06:21:55.576944 23 service.go:3527] Observed Service test-service-2jjzs in namespace services-5892 with annotations: map[] & Conditions: []
  I1204 06:21:55.577013 23 service.go:3538] Observed Service test-service-2jjzs in namespace services-5892 with annotations: map[patchedstatus:true] & Conditions: []
  I1204 06:21:55.577077 23 service.go:3534] Found Service test-service-2jjzs in namespace services-5892 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1204 06:21:55.577102 23 service.go:3545] Service test-service-2jjzs has service status updated
  STEP: patching the service @ 12/04/24 06:21:55.577
  STEP: watching for the Service to be patched @ 12/04/24 06:21:55.589
  I1204 06:21:55.591614 23 service.go:3568] observed Service test-service-2jjzs in namespace services-5892 with labels: map[test-service-static:true]
  I1204 06:21:55.591683 23 service.go:3568] observed Service test-service-2jjzs in namespace services-5892 with labels: map[test-service-static:true]
  I1204 06:21:55.591736 23 service.go:3568] observed Service test-service-2jjzs in namespace services-5892 with labels: map[test-service-static:true]
  I1204 06:21:55.592039 23 service.go:3571] Found Service test-service-2jjzs in namespace services-5892 with labels: map[test-service:patched test-service-static:true]
  I1204 06:21:55.592173 23 service.go:3578] Service test-service-2jjzs patched
  STEP: deleting the service @ 12/04/24 06:21:55.592
  STEP: watching for the Service to be deleted @ 12/04/24 06:21:55.608
  I1204 06:21:55.610382 23 service.go:3602] Observed event: ADDED
  I1204 06:21:55.610441 23 service.go:3602] Observed event: MODIFIED
  I1204 06:21:55.610467 23 service.go:3602] Observed event: MODIFIED
  I1204 06:21:55.610583 23 service.go:3602] Observed event: MODIFIED
  I1204 06:21:55.610648 23 service.go:3598] Found Service test-service-2jjzs in namespace services-5892 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1204 06:21:55.610724 23 service.go:3607] Service test-service-2jjzs deleted
  I1204 06:21:55.610937 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5892" for this suite. @ 12/04/24 06:21:55.614
• [0.116 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/04/24 06:21:55.62
  I1204 06:21:55.620602 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 06:21:55.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:21:55.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:21:55.638
  STEP: Creating a pod to test substitution in container's command @ 12/04/24 06:21:55.643
  STEP: Saw pod success @ 12/04/24 06:21:59.665
  I1204 06:21:59.669236 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-5b918d96-02c2-4fba-a1cd-b1993fc29e98 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 06:21:59.692
  I1204 06:21:59.708241 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6303" for this suite. @ 12/04/24 06:21:59.713
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/04/24 06:21:59.721
  I1204 06:21:59.721548 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/04/24 06:21:59.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:21:59.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:21:59.741
  I1204 06:21:59.746286 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:22:00.293223 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2279" for this suite. @ 12/04/24 06:22:00.297
• [0.583 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/04/24 06:22:00.304
  I1204 06:22:00.304685 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 06:22:00.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:22:00.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:22:00.32
  I1204 06:22:00.405316 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/04/24 06:22:00.411
  I1204 06:22:00.499427 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:00.503447 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:22:00.503535 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:22:01.418969 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:01.423244 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:22:01.423293 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1204 06:22:02.418317 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:02.422675 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 06:22:02.423297 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/04/24 06:22:02.439
  STEP: Check that daemon pods images are updated. @ 12/04/24 06:22:02.518
  I1204 06:22:02.525938 23 daemon_set.go:1193] Wrong image for pod: daemon-set-hlrsh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1204 06:22:02.530865 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:03.524434 23 daemon_set.go:1198] Pod daemon-set-8rpmc is not available
  I1204 06:22:03.524500 23 daemon_set.go:1193] Wrong image for pod: daemon-set-hlrsh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1204 06:22:03.529046 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:04.524709 23 daemon_set.go:1198] Pod daemon-set-lg9dt is not available
  I1204 06:22:04.531532 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/04/24 06:22:04.531
  I1204 06:22:04.535049 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:04.538003 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 06:22:04.538173 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1204 06:22:05.538094 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:22:05.543116 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 06:22:05.543338 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/04/24 06:22:05.562
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7683, will wait for the garbage collector to delete the pods @ 12/04/24 06:22:05.563
  I1204 06:22:05.623910 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.994394ms
  I1204 06:22:05.724181 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.265854ms
  I1204 06:22:07.028226 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:22:07.028297 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1204 06:22:07.032212 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4859"},"items":null}

  I1204 06:22:07.035133 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4859"},"items":null}

  I1204 06:22:07.045947 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7683" for this suite. @ 12/04/24 06:22:07.049
• [6.750 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 12/04/24 06:22:07.055
  I1204 06:22:07.055421 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename disruption @ 12/04/24 06:22:07.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:22:07.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:22:07.073
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/04/24 06:22:07.076
  STEP: Waiting for the pdb to be processed @ 12/04/24 06:22:07.081
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/04/24 06:22:09.094
  STEP: Waiting for all pods to be running @ 12/04/24 06:22:09.094
  I1204 06:22:09.099224 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 12/04/24 06:22:11.101
  STEP: Updating the pdb to allow a pod to be evicted @ 12/04/24 06:22:11.113
  STEP: Waiting for the pdb to be processed @ 12/04/24 06:22:11.126
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/04/24 06:22:13.132
  STEP: Waiting for all pods to be running @ 12/04/24 06:22:13.132
  STEP: Waiting for the pdb to observed all healthy pods @ 12/04/24 06:22:13.137
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/04/24 06:22:13.163
  STEP: Waiting for the pdb to be processed @ 12/04/24 06:22:13.202
  STEP: Waiting for all pods to be running @ 12/04/24 06:22:15.207
  STEP: locating a running pod @ 12/04/24 06:22:15.213
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/04/24 06:22:15.225
  STEP: Waiting for the pdb to be deleted @ 12/04/24 06:22:15.231
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/04/24 06:22:15.234
  STEP: Waiting for all pods to be running @ 12/04/24 06:22:15.234
  I1204 06:22:15.331723 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5835" for this suite. @ 12/04/24 06:22:15.339
• [8.295 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 12/04/24 06:22:15.351
  I1204 06:22:15.351173 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:22:15.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:22:15.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:22:15.368
  STEP: creating Agnhost RC @ 12/04/24 06:22:15.373
  I1204 06:22:15.373490 23 kubectl.go:1537] namespace kubectl-9826
  I1204 06:22:15.373611 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-9826 create -f -'
  I1204 06:22:15.577017 23 builder.go:146] stderr: ""
  I1204 06:22:15.577113 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/04/24 06:22:15.577
  I1204 06:22:16.583601 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:22:16.583672 23 framework.go:733] Found 0 / 1
  I1204 06:22:17.583230 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:22:17.583280 23 framework.go:733] Found 1 / 1
  I1204 06:22:17.583299 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1204 06:22:17.586351 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:22:17.586400 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1204 06:22:17.586429 23 kubectl.go:1544] wait on agnhost-primary startup in kubectl-9826 
  I1204 06:22:17.586479 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-9826 logs agnhost-primary-hlt62 agnhost-primary'
  I1204 06:22:17.685572 23 builder.go:146] stderr: ""
  I1204 06:22:17.685646 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/04/24 06:22:17.685
  I1204 06:22:17.685775 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-9826 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1204 06:22:17.819734 23 builder.go:146] stderr: ""
  I1204 06:22:17.819818 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I1204 06:22:17.826783 23 utils.go:1203] Service rm2 in namespace kubectl-9826 found.
  STEP: exposing service @ 12/04/24 06:22:19.835
  I1204 06:22:19.835902 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-9826 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1204 06:22:19.941877 23 builder.go:146] stderr: ""
  I1204 06:22:19.941950 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I1204 06:22:19.945182 23 utils.go:1203] Service rm3 in namespace kubectl-9826 found.
  I1204 06:22:21.954027 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9826" for this suite. @ 12/04/24 06:22:21.959
• [6.615 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/04/24 06:22:21.966
  I1204 06:22:21.966048 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 06:22:21.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:22:21.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:22:21.986
  STEP: Creating pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416 @ 12/04/24 06:22:21.99
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 06:22:24.01
  I1204 06:22:24.014964 23 container_probe.go:1749] Initial restart count of pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b is 0
  I1204 06:22:24.018739 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:26.024815 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:28.030945 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:30.036687 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:32.043524 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:34.048459 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:36.058300 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:38.064810 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:40.072129 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:42.078152 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:44.084236 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:46.091283 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:48.096812 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:50.103038 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:52.109250 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:54.115343 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:56.123161 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:22:58.129148 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:00.135010 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:02.141032 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:04.146977 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:06.153710 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:08.159702 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:10.166467 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:12.173646 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:14.178469 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:16.185072 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:18.190401 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:20.196687 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:22.202696 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:24.208884 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:26.218674 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:28.225259 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:30.232247 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:32.238455 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:34.243622 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:36.250222 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:38.255940 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:40.261927 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:42.268099 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:44.274633 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:46.281332 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:48.287825 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:50.294462 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:52.300235 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:54.307212 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:56.314637 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:23:58.321312 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:00.328440 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:02.335136 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:04.340977 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:06.346810 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:08.351439 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:10.358796 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:12.364565 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:14.370795 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:16.378194 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:18.388356 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:20.394375 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:22.400536 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:24.406879 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:26.413677 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:28.418661 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:30.424409 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:32.430394 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:34.435943 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:36.672058 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:38.678323 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:40.684737 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:42.690654 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:44.696810 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:46.704384 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:48.709196 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:50.715376 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:52.721778 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:54.727739 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:56.735627 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:24:58.741894 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:00.748387 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:02.753847 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:04.761189 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:06.770107 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:08.774494 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:10.780940 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:12.787061 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:14.792862 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:16.799365 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:18.804856 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:20.812551 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:22.818240 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:24.824495 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:26.830789 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:28.835919 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:30.842241 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:32.847897 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:34.854050 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:36.860483 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:38.865135 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:40.871317 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:42.877507 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:44.883955 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:46.890666 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:48.896273 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:50.902557 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:52.909899 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:54.916368 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:56.923915 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:25:58.930438 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:00.937300 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:02.943645 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:04.948607 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:06.954666 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:08.959647 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:10.964407 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:12.969456 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:14.974373 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:16.981917 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:18.987602 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:20.993264 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  I1204 06:26:22.999174 23 container_probe.go:1759] Get pod liveness-ee6a1516-dc15-4843-8cbe-da98a3c9070b in namespace container-probe-5416
  STEP: deleting the pod @ 12/04/24 06:26:25
  I1204 06:26:25.013061 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5416" for this suite. @ 12/04/24 06:26:25.017
• [243.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/04/24 06:26:25.024
  I1204 06:26:25.024914 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/04/24 06:26:25.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:26:25.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:26:25.042
  I1204 06:26:25.051549 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2335" for this suite. @ 12/04/24 06:26:25.118
• [0.101 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/04/24 06:26:25.125
  I1204 06:26:25.125842 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 06:26:25.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:26:25.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:26:25.144
  STEP: Creating secret with name secret-test-map-f8395d2c-ca05-4eb1-907a-8b3474c696ad @ 12/04/24 06:26:25.147
  STEP: Creating a pod to test consume secrets @ 12/04/24 06:26:25.153
  STEP: Saw pod success @ 12/04/24 06:26:29.177
  I1204 06:26:29.181662 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-a6fb91a8-9a9e-4e69-bf26-04675db97100 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:26:29.201
  I1204 06:26:29.218320 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5534" for this suite. @ 12/04/24 06:26:29.222
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 12/04/24 06:26:29.228
  I1204 06:26:29.228848 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 06:26:29.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:26:29.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:26:29.246
  STEP: Discovering how many secrets are in namespace by default @ 12/04/24 06:26:29.251
  STEP: Counting existing ResourceQuota @ 12/04/24 06:26:34.255
  STEP: Creating a ResourceQuota @ 12/04/24 06:26:39.261
  STEP: Ensuring resource quota status is calculated @ 12/04/24 06:26:39.269
  STEP: Creating a Secret @ 12/04/24 06:26:41.276
  STEP: Ensuring resource quota status captures secret creation @ 12/04/24 06:26:41.289
  STEP: Deleting a secret @ 12/04/24 06:26:43.295
  STEP: Ensuring resource quota status released usage @ 12/04/24 06:26:43.301
  I1204 06:26:45.307686 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3842" for this suite. @ 12/04/24 06:26:45.313
• [16.092 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 12/04/24 06:26:45.321
  I1204 06:26:45.321294 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption @ 12/04/24 06:26:45.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:26:45.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:26:45.339
  I1204 06:26:45.359324 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1204 06:27:45.367720 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/04/24 06:27:45.372
  I1204 06:27:45.396435 23 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1204 06:27:45.401266 23 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1204 06:27:45.423350 23 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1204 06:27:45.429467 23 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/04/24 06:27:45.429
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/04/24 06:27:47.451
  I1204 06:27:51.521402 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3269" for this suite. @ 12/04/24 06:27:51.525
• [66.210 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/04/24 06:27:51.532
  I1204 06:27:51.532734 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename runtimeclass @ 12/04/24 06:27:51.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:27:51.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:27:51.551
  I1204 06:27:51.563488 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5158" for this suite. @ 12/04/24 06:27:51.626
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/04/24 06:27:51.633
  I1204 06:27:51.633757 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename init-container @ 12/04/24 06:27:51.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:27:51.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:27:51.654
  STEP: creating the pod @ 12/04/24 06:27:51.659
  I1204 06:27:51.659259 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1204 06:27:54.931419 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1685" for this suite. @ 12/04/24 06:27:54.937
• [3.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/04/24 06:27:54.945
  I1204 06:27:54.945394 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:27:54.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:27:54.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:27:54.964
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/04/24 06:27:54.969
  STEP: Saw pod success @ 12/04/24 06:27:56.988
  I1204 06:27:56.991375 23 output.go:196] Trying to get logs from node nodea17 pod pod-035269f8-1d81-41de-96b3-9aef14c44056 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:27:56.998
  I1204 06:27:57.012751 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2565" for this suite. @ 12/04/24 06:27:57.017
• [2.077 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/04/24 06:27:57.022
  I1204 06:27:57.022862 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 06:27:57.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:27:57.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:27:57.089
  I1204 06:27:57.102706 23 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1204 06:28:02.139072 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/04/24 06:28:02.139
  I1204 06:28:02.139226 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1204 06:28:04.144304 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1204 06:28:04.155091 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1204 06:28:06.164115 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1204 06:28:06.172149 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1204 06:28:06.178922 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1204 06:28:06.190359 23 deployment.go:313] Updating deployment test-rollover-deployment
  I1204 06:28:06.190425 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1204 06:28:08.199421 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1204 06:28:08.207170 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1204 06:28:08.213566 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1204 06:28:08.213643 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:28:10.223951 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1204 06:28:10.224070 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:28:12.226196 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1204 06:28:12.226321 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:28:14.231774 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1204 06:28:14.231893 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:28:16.223319 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1204 06:28:16.223441 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 6, 28, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 6, 28, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1204 06:28:18.223811 23 deployment.go:94] 
  I1204 06:28:18.223909 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I1204 06:28:18.236303 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56dc135b-6f30-42d3-9b4b-ab5d879a88b6",
      ResourceVersion: (string) (len=4) "5945",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890484,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890484,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890484,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890484,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 06:28:18.244605 23 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b2fa94d-9ff1-4349-92c9-2a8e36253dfd",
      ResourceVersion: (string) (len=4) "5935",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "56dc135b-6f30-42d3-9b4b-ab5d879a88b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 64 63 31 33  35 62 2d 36 66 33 30 2d  |\"56dc135b-6f30-|
              00000120  34 32 64 33 2d 39 62 34  62 2d 61 62 35 64 38 37  |42d3-9b4b-ab5d87|
              00000130  39 61 38 38 62 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9a88b6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:28:18.246706 23 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1204 06:28:18.247169 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "807a049c-0497-4078-b4e0-d5ba0bbc66b0",
      ResourceVersion: (string) (len=4) "5944",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "56dc135b-6f30-42d3-9b4b-ab5d879a88b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 36 64 63 31 33 35 62  2d 36 66 33 30 2d 34 32  |56dc135b-6f30-42|
              000000c0  64 33 2d 39 62 34 62 2d  61 62 35 64 38 37 39 61  |d3-9b4b-ab5d879a|
              000000d0  38 38 62 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |88b6\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:28:18.249717 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e268100b-7933-4fd0-97ee-7e8f6c3c16b8",
      ResourceVersion: (string) (len=4) "5903",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890484,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "56dc135b-6f30-42d3-9b4b-ab5d879a88b6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 64 63 31 33  35 62 2d 36 66 33 30 2d  |\"56dc135b-6f30-|
              00000120  34 32 64 33 2d 39 62 34  62 2d 61 62 35 64 38 37  |42d3-9b4b-ab5d87|
              00000130  39 61 38 38 62 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9a88b6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:28:18.261529 23 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-jbjsr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-jbjsr",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-4516",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2398743-7f55-40bd-bcdb-b17ec5a4867e",
      ResourceVersion: (string) (len=4) "5917",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "5b2fa94d-9ff1-4349-92c9-2a8e36253dfd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 62  32 66 61 39 34 64 2d 39  |d\":\"5b2fa94d-9|
              00000090  66 66 31 2d 34 33 34 39  2d 39 32 63 39 2d 32 61  |ff1-4349-92c9-2a|
              000000a0  38 65 33 36 32 35 33 64  66 64 5c 22 7d 22 3a 7b  |8e36253dfd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 36  38 5c 22 7d 22 3a 7b 22  |.244.1.68\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m7962",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m7962",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890487,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890486,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://2af07d65920a7c3dec68bfbbbba91fe0395404ec5a1db085b5dc5a8021a5d608",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m7962",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:18.264409 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4516" for this suite. @ 12/04/24 06:28:18.269
• [21.252 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/04/24 06:28:18.274
  I1204 06:28:18.274955 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:28:18.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:18.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:18.296
  STEP: Creating the pod @ 12/04/24 06:28:18.3
  I1204 06:28:20.846742 23 pod_client.go:173] Successfully updated pod "annotationupdate914a2f98-b8e4-45b9-97c2-afd7d87ae61a"
  I1204 06:28:24.874672 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1825" for this suite. @ 12/04/24 06:28:24.88
• [6.613 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/04/24 06:28:24.888
  I1204 06:28:24.888486 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 06:28:24.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:24.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:24.909
  I1204 06:28:24.913310 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I1204 06:28:24.917766 23 deployment.go:1200] Waiting for observed generation 1
  I1204 06:28:26.925519 23 deployment.go:1205] Waiting for all required pods to come up
  I1204 06:28:26.931268 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/04/24 06:28:26.931
  I1204 06:28:26.931442 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1204 06:28:26.939337 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1204 06:28:26.951610 23 deployment.go:313] Updating deployment webserver-deployment
  I1204 06:28:26.951680 23 deployment.go:1224] Waiting for observed generation 2
  I1204 06:28:28.960189 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1204 06:28:28.964584 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1204 06:28:28.968181 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1204 06:28:28.978136 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1204 06:28:28.978215 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1204 06:28:28.981798 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1204 06:28:28.988111 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1204 06:28:28.988176 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1204 06:28:29.018324 23 deployment.go:313] Updating deployment webserver-deployment
  I1204 06:28:29.018395 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1204 06:28:29.025036 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1204 06:28:29.027569 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1204 06:28:29.042895 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ccfaf2d-1679-4783-a3ea-09ed7d0301c5",
      ResourceVersion: (string) (len=4) "6213",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 06:28:29.074284 23 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
      ResourceVersion: (string) (len=4) "6206",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "4ccfaf2d-1679-4783-a3ea-09ed7d0301c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 63 63 66 61 66  32 64 2d 31 36 37 39 2d  |\"4ccfaf2d-1679-|
              00000120  34 37 38 33 2d 61 33 65  61 2d 30 39 65 64 37 64  |4783-a3ea-09ed7d|
              00000130  30 33 30 31 63 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0301c5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:28:29.076432 23 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1204 06:28:29.076888 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
      ResourceVersion: (string) (len=4) "6244",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "4ccfaf2d-1679-4783-a3ea-09ed7d0301c5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 63 63 66 61 66  32 64 2d 31 36 37 39 2d  |\"4ccfaf2d-1679-|
              00000120  34 37 38 33 2d 61 33 65  61 2d 30 39 65 64 37 64  |4783-a3ea-09ed7d|
              00000130  30 33 30 31 63 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0301c5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 06:28:29.094144 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-2g4nv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2g4nv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90902155-bd00-4006-9945-9f07aadc99c6",
      ResourceVersion: (string) (len=4) "6214",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jhrt5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jhrt5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.097230 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7lljj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7lljj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41374ef3-3f46-46b2-9712-9b58e5d9ee2a",
      ResourceVersion: (string) (len=4) "6218",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d5wfk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d5wfk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.100396 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-92chk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-92chk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd9c71b8-73c2-42da-a118-33279284054b",
      ResourceVersion: (string) (len=4) "6110",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 37  32 5c 22 7d 22 3a 7b 22  |.244.1.72\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s65v6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s65v6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b3cee193630053d656882e607483ffb535b46da788ff1414ca61c68f1c45c323",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s65v6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.103978 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9v5qv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9v5qv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd0f9491-5ebb-4813-9176-b4c3a373f41f",
      ResourceVersion: (string) (len=4) "6107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 37  34 5c 22 7d 22 3a 7b 22  |.244.1.74\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-67dpp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-67dpp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://391d2fde61a89d612f0c7050516a9eff6d6cca5585b553c4759bc034c2a8bb81",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-67dpp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.106956 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-c7zj8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-c7zj8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "554ae5e3-366c-413f-bc5e-7d3a079fbcf7",
      ResourceVersion: (string) (len=4) "6099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 37  31 5c 22 7d 22 3a 7b 22  |.244.1.71\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjkrf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjkrf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8a8db98bc45004a15b36a47f15c6a00769c819e8d0fbcbb22ced4bc949492f51",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jjkrf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.109793 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-cllcj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cllcj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cf3c4ad-b1ae-4370-93f2-b05ebc01946a",
      ResourceVersion: (string) (len=4) "6248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tzdpl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tzdpl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.111927 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dhkf4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dhkf4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c813f3e-9171-45fc-b06a-cb13b7f4db8e",
      ResourceVersion: (string) (len=4) "6247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2lmrq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2lmrq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.114114 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dstpn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dstpn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e1e5be9-db37-40a1-b7d6-65ac940861c7",
      ResourceVersion: (string) (len=4) "6120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  32 5c 22 7d 22 3a 7b 22  |.244.2.12\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdxj9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdxj9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b76bc2e4ebdd3e06c2bd15f67d28fc2f446f6863b44d37ec6f991db545aab53b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vdxj9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.117670 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j2dr6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j2dr6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f22cd8c0-a2e7-474a-a204-d0046a529ff1",
      ResourceVersion: (string) (len=4) "6122",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  35 5c 22 7d 22 3a 7b 22  |.244.2.15\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f7v7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f7v7q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7860106d1cdfd7841b849e033fed46d2aab78e8e8fd7f79216e2be36ae15daa0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f7v7q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.121287 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lpzxb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lpzxb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c92de68-d170-4b10-91e4-9f64daf352b7",
      ResourceVersion: (string) (len=4) "6116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  31 5c 22 7d 22 3a 7b 22  |.244.2.11\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfh2z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfh2z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d82147970a6441ce5228e31b07dd608bf1d518472dbcb638538e36be7295df26",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hfh2z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.123946 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-mvfwp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-mvfwp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43b4519a-ef16-42e2-b3ff-a59cb153fd34",
      ResourceVersion: (string) (len=4) "6253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6fpz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6fpz2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.125782 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-n6htt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-n6htt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed2f0c71-e896-4078-a83b-6e6b78eacd70",
      ResourceVersion: (string) (len=4) "6114",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  33 5c 22 7d 22 3a 7b 22  |.244.2.13\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-twdh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-twdh7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7118d8b4153d518915f7846015f4c84d5b15a179aad1b2aadbb8a5f0311eaaed",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-twdh7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.128326 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-n8qrz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-n8qrz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33267042-3414-481f-9c77-3541e30939f1",
      ResourceVersion: (string) (len=4) "6228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vpbjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vpbjp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.129968 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ph2pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ph2pr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "290b1591-33ce-402b-9df0-5b760559b9ad",
      ResourceVersion: (string) (len=4) "6223",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pkxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pkxh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.131719 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ph6sf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ph6sf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ec35a3b-369a-47da-abc2-552853b1b94a",
      ResourceVersion: (string) (len=4) "6125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  34 5c 22 7d 22 3a 7b 22  |.244.2.14\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wsjnr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wsjnr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890504,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890504,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868890505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://32b9382abf1fbe570fe03919b243f64a9be41722cb084951b2d7f053996acd52",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wsjnr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.134286 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qscvt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qscvt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96d359bb-4b7f-492e-bc9a-4621686140a6",
      ResourceVersion: (string) (len=4) "6243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jxgl2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jxgl2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jxgl2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.136804 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rj6xk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rj6xk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fc9e8ca-edc5-49c4-9fc6-feae33653af2",
      ResourceVersion: (string) (len=4) "6246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzflq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzflq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.138414 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-vdk8p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-vdk8p",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4c309d2-e192-43db-a3f5-71cbd250b48b",
      ResourceVersion: (string) (len=4) "6249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2sr2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2sr2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.140096 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-w7xcl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w7xcl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95fc8ad5-4c8f-470e-8080-c0b755995372",
      ResourceVersion: (string) (len=4) "6227",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6scfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6scfm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.141702 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-z8ss5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-z8ss5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0e61301-04bf-42cf-a326-24e1a644302c",
      ResourceVersion: (string) (len=4) "6229",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "b9ee09f8-138e-45fa-aac3-5531a571001e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  65 65 30 39 66 38 2d 31  |d\":\"b9ee09f8-1|
              00000090  33 38 65 2d 34 35 66 61  2d 61 61 63 33 2d 35 35  |38e-45fa-aac3-55|
              000000a0  33 31 61 35 37 31 30 30  31 65 5c 22 7d 22 3a 7b  |31a571001e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p4sjt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p4sjt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.143408 23 deployment.go:67] Pod "webserver-deployment-786f49d774-8tjhk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-8tjhk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be92607e-7fb4-468d-9fe1-fb7ccbb06625",
      ResourceVersion: (string) (len=4) "6245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-67xc4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-67xc4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.145180 23 deployment.go:67] Pod "webserver-deployment-786f49d774-9qlrf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-9qlrf",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9af2eb0f-9481-44d5-8841-10c859097912",
      ResourceVersion: (string) (len=4) "6201",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 37 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.75\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tvndj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tvndj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tvndj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.148552 23 deployment.go:67] Pod "webserver-deployment-786f49d774-ddnj5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ddnj5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa242dfb-685d-4d32-9f2f-035d64c61f59",
      ResourceVersion: (string) (len=4) "6224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbzsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbzsp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.150171 23 deployment.go:67] Pod "webserver-deployment-786f49d774-fgjjn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-fgjjn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf3643d8-b7c0-4035-a5c7-16efc1b4888d",
      ResourceVersion: (string) (len=4) "6257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rcqhz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rcqhz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.151930 23 deployment.go:67] Pod "webserver-deployment-786f49d774-g55lc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-g55lc",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9da91f9e-eb8a-4043-8d3f-586040a2af3c",
      ResourceVersion: (string) (len=4) "6260",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4766",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4766",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.153503 23 deployment.go:67] Pod "webserver-deployment-786f49d774-h2fdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-h2fdn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65efa68e-f36e-4974-82a9-0fdf5726f50c",
      ResourceVersion: (string) (len=4) "6262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vgbt2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vgbt2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.155183 23 deployment.go:67] Pod "webserver-deployment-786f49d774-hk7kq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hk7kq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ae48e24-aa2c-45df-8f3b-3b41566a7677",
      ResourceVersion: (string) (len=4) "6198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 37 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.76\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnhkv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnhkv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890508,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wnhkv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.157698 23 deployment.go:67] Pod "webserver-deployment-786f49d774-j27fn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-j27fn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0d32619-4c78-4698-ba1e-03267df71623",
      ResourceVersion: (string) (len=4) "6259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vnplq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vnplq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.159337 23 deployment.go:67] Pod "webserver-deployment-786f49d774-kjwzv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-kjwzv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8de0676-1f4a-4cdc-8f83-80cada694eee",
      ResourceVersion: (string) (len=4) "6258",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kkw4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kkw4g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.161057 23 deployment.go:67] Pod "webserver-deployment-786f49d774-rj9z6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-rj9z6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df4a295e-c150-4a9f-87da-ae977920bd27",
      ResourceVersion: (string) (len=4) "6178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2hhws",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2hhws",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890507,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2hhws",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.163528 23 deployment.go:67] Pod "webserver-deployment-786f49d774-v8m95" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-v8m95",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c205bede-947d-4827-964b-47c4b802faee",
      ResourceVersion: (string) (len=4) "6238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890509,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bw577",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bw577",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.165235 23 deployment.go:67] Pod "webserver-deployment-786f49d774-vtg2v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vtg2v",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd850de2-e2e1-4dd0-81dc-a65a73d77530",
      ResourceVersion: (string) (len=4) "6252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 32 2e 31 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.2.16\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4lcgk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4lcgk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890509,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4lcgk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.167937 23 deployment.go:67] Pod "webserver-deployment-786f49d774-xwqmd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xwqmd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-1916",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8109d27-41fb-420a-bdb6-7e2b3a3a8ba3",
      ResourceVersion: (string) (len=4) "6177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890506,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "d6b9aae4-f308-45f7-af57-bbba02d35951",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  62 39 61 61 65 34 2d 66  |d\":\"d6b9aae4-f|
              00000090  33 30 38 2d 34 35 66 37  2d 61 66 35 37 2d 62 62  |308-45f7-af57-bb|
              000000a0  62 61 30 32 64 33 35 39  35 31 5c 22 7d 22 3a 7b  |ba02d35951\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-grsnl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-grsnl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868890507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868890507,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-grsnl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 06:28:29.170267 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1916" for this suite. @ 12/04/24 06:28:29.192
• [4.312 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 12/04/24 06:28:29.202
  I1204 06:28:29.202164 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 06:28:29.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:29.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:29.217
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/04/24 06:28:29.221
  I1204 06:28:29.229017 23 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6411  88a25831-8b92-4a56-9aab-de590203482e 6312 0 2024-12-04 06:28:29 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-04 06:28:29 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6xnt2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6xnt2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/04/24 06:28:31.237
  I1204 06:28:31.238025 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6411 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:28:31.238060 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:28:31.239147 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:28:31.239251 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6411/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/04/24 06:28:31.342
  I1204 06:28:31.342872 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6411 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:28:31.342898 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:28:31.343673 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:28:31.343754 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6411/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1204 06:28:31.441700 23 dns.go:423] Deleting pod test-dns-nameservers...
  I1204 06:28:31.455709 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6411" for this suite. @ 12/04/24 06:28:31.46
• [2.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/04/24 06:28:31.466
  I1204 06:28:31.466426 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replication-controller @ 12/04/24 06:28:31.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:31.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:31.485
  STEP: creating a ReplicationController @ 12/04/24 06:28:31.494
  STEP: waiting for RC to be added @ 12/04/24 06:28:31.499
  STEP: waiting for available Replicas @ 12/04/24 06:28:31.5
  STEP: patching ReplicationController @ 12/04/24 06:28:33.952
  STEP: waiting for RC to be modified @ 12/04/24 06:28:33.961
  STEP: patching ReplicationController status @ 12/04/24 06:28:33.962
  STEP: waiting for RC to be modified @ 12/04/24 06:28:33.97
  STEP: waiting for available Replicas @ 12/04/24 06:28:33.97
  STEP: fetching ReplicationController status @ 12/04/24 06:28:33.975
  STEP: patching ReplicationController scale @ 12/04/24 06:28:33.978
  STEP: waiting for RC to be modified @ 12/04/24 06:28:33.986
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/04/24 06:28:33.986
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/04/24 06:28:37.149
  STEP: updating ReplicationController status @ 12/04/24 06:28:37.151
  STEP: waiting for RC to be modified @ 12/04/24 06:28:37.157
  STEP: listing all ReplicationControllers @ 12/04/24 06:28:37.158
  STEP: checking that ReplicationController has expected values @ 12/04/24 06:28:37.16
  STEP: deleting ReplicationControllers by collection @ 12/04/24 06:28:37.16
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/04/24 06:28:37.172
  I1204 06:28:37.214835 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1204 06:28:37.215296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2047" for this suite. @ 12/04/24 06:28:37.219
• [5.760 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/04/24 06:28:37.227
  I1204 06:28:37.227085 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:28:37.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:37.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:37.244
  STEP: Creating projection with secret that has name projected-secret-test-d4f59a97-6878-447e-b95a-676f23b7f9bf @ 12/04/24 06:28:37.248
  STEP: Creating a pod to test consume secrets @ 12/04/24 06:28:37.254
  E1204 06:28:38.215990      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:39.216726      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:28:39.269
  I1204 06:28:39.273113 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-7384771d-2b48-4338-9ca8-90b9138874e3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:28:39.28
  I1204 06:28:39.294242 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1721" for this suite. @ 12/04/24 06:28:39.298
• [2.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/04/24 06:28:39.302
  I1204 06:28:39.302748 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename security-context-test @ 12/04/24 06:28:39.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:39.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:39.321
  E1204 06:28:40.217071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:41.217738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:42.218262      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:43.218675      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:28:43.353961 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8072" for this suite. @ 12/04/24 06:28:43.359
• [4.063 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/04/24 06:28:43.366
  I1204 06:28:43.366062 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename limitrange @ 12/04/24 06:28:43.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:43.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:43.39
  STEP: Creating a LimitRange @ 12/04/24 06:28:43.394
  STEP: Setting up watch @ 12/04/24 06:28:43.394
  STEP: Submitting a LimitRange @ 12/04/24 06:28:43.497
  STEP: Verifying LimitRange creation was observed @ 12/04/24 06:28:43.505
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/04/24 06:28:43.505
  I1204 06:28:43.509200 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1204 06:28:43.509277 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/04/24 06:28:43.509
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/04/24 06:28:43.514
  I1204 06:28:43.518132 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1204 06:28:43.518203 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/04/24 06:28:43.518
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/04/24 06:28:43.523
  I1204 06:28:43.526591 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1204 06:28:43.526661 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/04/24 06:28:43.526
  STEP: Failing to create a Pod with more than max resources @ 12/04/24 06:28:43.529
  STEP: Updating a LimitRange @ 12/04/24 06:28:43.532
  STEP: Verifying LimitRange updating is effective @ 12/04/24 06:28:43.536
  E1204 06:28:44.219199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:45.219683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 12/04/24 06:28:45.541
  STEP: Failing to create a Pod with more than max resources @ 12/04/24 06:28:45.55
  STEP: Deleting a LimitRange @ 12/04/24 06:28:45.553
  STEP: Verifying the LimitRange was deleted @ 12/04/24 06:28:45.56
  E1204 06:28:46.219738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:47.220263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:48.220720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:49.221435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:50.221921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:28:50.566834 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/04/24 06:28:50.566
  I1204 06:28:50.578407 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-441" for this suite. @ 12/04/24 06:28:50.583
• [7.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/04/24 06:28:50.591
  I1204 06:28:50.591335 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:28:50.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:50.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:50.61
  STEP: Creating configMap with name projected-configmap-test-volume-5f0fe846-8c06-4135-bc29-71a10a5df8da @ 12/04/24 06:28:50.615
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:28:50.619
  E1204 06:28:51.222283      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:52.222998      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:53.223264      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:54.224211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:28:54.686
  I1204 06:28:54.690243 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-5a39436f-7330-49b5-860c-4b07e80a0a92 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:28:54.697
  I1204 06:28:54.712751 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2561" for this suite. @ 12/04/24 06:28:54.717
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 12/04/24 06:28:54.723
  I1204 06:28:54.723280 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:28:54.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:54.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:54.741
  I1204 06:28:54.745418 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 create -f -'
  I1204 06:28:54.919894 23 builder.go:146] stderr: ""
  I1204 06:28:54.919973 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1204 06:28:54.920059 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 create -f -'
  I1204 06:28:55.099177 23 builder.go:146] stderr: ""
  I1204 06:28:55.099268 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/04/24 06:28:55.099
  E1204 06:28:55.224589      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:28:56.104189 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:28:56.104272 23 framework.go:733] Found 1 / 1
  I1204 06:28:56.104327 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1204 06:28:56.108550 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:28:56.108621 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1204 06:28:56.108698 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 describe pod agnhost-primary-wtrg7'
  I1204 06:28:56.218795 23 builder.go:146] stderr: ""
  I1204 06:28:56.218972 23 builder.go:147] stdout: "Name:             agnhost-primary-wtrg7\nNamespace:        kubectl-6413\nPriority:         0\nService Account:  default\nNode:             nodea17/192.168.100.37\nStart Time:       Wed, 04 Dec 2024 06:28:54 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.84\nIPs:\n  IP:           10.244.1.84\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://8c43030532922f6e59e8a0854fafb73999d4f2057fc3e8d04e306208ac4d82e3\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 04 Dec 2024 06:28:55 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-h9jwb (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-h9jwb:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6413/agnhost-primary-wtrg7 to nodea17\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1204 06:28:56.219103 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 describe rc agnhost-primary'
  E1204 06:28:56.225769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:28:56.322053 23 builder.go:146] stderr: ""
  I1204 06:28:56.322181 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6413\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-wtrg7\n"
  I1204 06:28:56.322286 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 describe service agnhost-primary'
  I1204 06:28:56.420971 23 builder.go:146] stderr: ""
  I1204 06:28:56.421089 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-6413\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.109.5.213\nIPs:                      10.109.5.213\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.1.84:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1204 06:28:56.426236 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 describe node nodea17'
  I1204 06:28:56.567459 23 builder.go:146] stderr: ""
  I1204 06:28:56.567823 23 builder.go:147] stdout: "Name:               nodea17\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=nodea17\n                    kubernetes.io/os=linux\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"c6:36:06:39:dc:e6\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.100.37\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 04 Dec 2024 06:01:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  nodea17\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 04 Dec 2024 06:28:51 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 04 Dec 2024 06:02:15 +0000   Wed, 04 Dec 2024 06:02:15 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Wed, 04 Dec 2024 06:28:55 +0000   Wed, 04 Dec 2024 06:01:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 04 Dec 2024 06:28:55 +0000   Wed, 04 Dec 2024 06:01:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 04 Dec 2024 06:28:55 +0000   Wed, 04 Dec 2024 06:01:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 04 Dec 2024 06:28:55 +0000   Wed, 04 Dec 2024 06:02:13 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.100.37\n  Hostname:    nodea17\nCapacity:\n  cpu:                    16\n  ephemeral-storage:      162406320Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 65841688Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    16\n  ephemeral-storage:      149673664265\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 65739288Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 a2a5172d10c443b5ae3c39348a5e8f25\n  System UUID:                a2a5172d-10c4-43b5-ae3c-39348a5e8f25\n  Boot ID:                    d80e478a-f462-4f2c-a17c-f98e20811fa2\n  Kernel Version:             5.15.0-101-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.36\n  Kubelet Version:            v1.31.2-ckp\n  Kube-Proxy Version:         v1.31.2-ckp\nPodCIDR:                      10.244.1.0/24\nPodCIDRs:                     10.244.1.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-s9d8k                                      100m (0%)     0 (0%)      50Mi (0%)        0 (0%)         27m\n  kube-system                 kube-proxy-cn5pv                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         27m\n  kubectl-6413                agnhost-primary-wtrg7                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m\n  sonobuoy                    sonobuoy-e2e-job-d101e3450e66430f                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-hxfzx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests   Limits\n  --------               --------   ------\n  cpu                    100m (0%)  0 (0%)\n  memory                 50Mi (0%)  0 (0%)\n  ephemeral-storage      0 (0%)     0 (0%)\n  hugepages-1Gi          0 (0%)     0 (0%)\n  hugepages-2Mi          0 (0%)     0 (0%)\n  scheduling.k8s.io/foo  0          0\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 26m                kube-proxy       \n  Normal   Starting                 27m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      27m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  27m (x2 over 27m)  kubelet          Node nodea17 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    27m (x2 over 27m)  kubelet          Node nodea17 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     27m (x2 over 27m)  kubelet          Node nodea17 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  27m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           27m                node-controller  Node nodea17 event: Registered Node nodea17 in Controller\n  Normal   NodeReady                26m                kubelet          Node nodea17 status is now: NodeReady\n"
  I1204 06:28:56.568013 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6413 describe namespace kubectl-6413'
  I1204 06:28:56.671673 23 builder.go:146] stderr: ""
  I1204 06:28:56.671797 23 builder.go:147] stdout: "Name:         kubectl-6413\nLabels:       e2e-framework=kubectl\n              e2e-run=1abf54d8-ca8b-401e-a800-2097092b657c\n              kubernetes.io/metadata.name=kubectl-6413\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1204 06:28:56.672097 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6413" for this suite. @ 12/04/24 06:28:56.677
• [1.962 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/04/24 06:28:56.685
  I1204 06:28:56.685450 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename namespaces @ 12/04/24 06:28:56.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:56.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:56.776
  STEP: Creating namespace "e2e-ns-wnwdg" @ 12/04/24 06:28:56.781
  I1204 06:28:56.873512 23 namespace.go:411] Namespace "e2e-ns-wnwdg-2180" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wnwdg-2180" @ 12/04/24 06:28:56.873
  I1204 06:28:56.881764 23 namespace.go:434] Namespace "e2e-ns-wnwdg-2180" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wnwdg-2180" @ 12/04/24 06:28:56.881
  I1204 06:28:56.889978 23 namespace.go:463] Namespace "e2e-ns-wnwdg-2180" has []v1.FinalizerName{"kubernetes"}
  I1204 06:28:56.890213 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2160" for this suite. @ 12/04/24 06:28:56.894
  STEP: Destroying namespace "e2e-ns-wnwdg-2180" for this suite. @ 12/04/24 06:28:56.899
• [0.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/04/24 06:28:56.905
  I1204 06:28:56.905090 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename subpath @ 12/04/24 06:28:56.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:28:56.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:28:56.976
  STEP: Setting up data @ 12/04/24 06:28:56.98
  STEP: Creating pod pod-subpath-test-configmap-62jk @ 12/04/24 06:28:56.992
  STEP: Creating a pod to test atomic-volume-subpath @ 12/04/24 06:28:56.992
  E1204 06:28:57.229582      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:58.230144      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:28:59.231300      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:00.232016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:01.233102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:02.233324      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:03.234076      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:04.234971      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:05.235147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:06.235662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:07.235818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:08.236188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:09.236277      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:10.236742      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:11.236804      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:12.237191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:13.238275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:14.239218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:15.240085      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:16.240584      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:17.241245      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:18.241710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:19.241890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:20.242553      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:29:21.079
  I1204 06:29:21.084125 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-configmap-62jk container test-container-subpath-configmap-62jk: <nil>
  STEP: delete the pod @ 12/04/24 06:29:21.093
  STEP: Deleting pod pod-subpath-test-configmap-62jk @ 12/04/24 06:29:21.113
  I1204 06:29:21.113991 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-62jk" in namespace "subpath-3826"
  I1204 06:29:21.118009 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3826" for this suite. @ 12/04/24 06:29:21.123
• [24.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/04/24 06:29:21.13
  I1204 06:29:21.130076 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 06:29:21.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:29:21.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:29:21.149
  STEP: creating the pod @ 12/04/24 06:29:21.154
  STEP: submitting the pod to kubernetes @ 12/04/24 06:29:21.154
  STEP: verifying QOS class is set on the pod @ 12/04/24 06:29:21.162
  I1204 06:29:21.166132 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-808" for this suite. @ 12/04/24 06:29:21.224
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/04/24 06:29:21.237
  I1204 06:29:21.237593 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename containers @ 12/04/24 06:29:21.239
  E1204 06:29:21.242607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:29:21.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:29:21.256
  STEP: Creating a pod to test override all @ 12/04/24 06:29:21.261
  E1204 06:29:22.243174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:23.243604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:24.244307      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:25.244501      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:29:25.285
  I1204 06:29:25.289583 23 output.go:196] Trying to get logs from node nodea17 pod client-containers-044194ed-6700-43c3-b005-f9adbbb18e93 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:29:25.296
  I1204 06:29:25.311767 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2300" for this suite. @ 12/04/24 06:29:25.316
• [4.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 12/04/24 06:29:25.322
  I1204 06:29:25.322120 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:29:25.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:29:25.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:29:25.338
  STEP: creating service in namespace services-2539 @ 12/04/24 06:29:25.342
  STEP: creating service affinity-nodeport in namespace services-2539 @ 12/04/24 06:29:25.342
  STEP: creating replication controller affinity-nodeport in namespace services-2539 @ 12/04/24 06:29:25.358
  I1204 06:29:25.364937      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-2539, replica count: 3
  E1204 06:29:26.244889      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:27.245539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:28.246119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:29:28.415922      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 06:29:28.429663 23 resource.go:361] Creating new exec pod
  E1204 06:29:29.246974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:30.247625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:31.248269      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:29:31.448096 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2539 exec execpod-affinity669q2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1204 06:29:31.615301 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1204 06:29:31.615410 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:29:31.615585 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2539 exec execpod-affinity669q2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.229.60 80'
  I1204 06:29:31.774715 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.229.60 80\nConnection to 10.107.229.60 80 port [tcp/http] succeeded!\n"
  I1204 06:29:31.774798 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:29:31.774932 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2539 exec execpod-affinity669q2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 32535'
  I1204 06:29:31.927006 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 32535\nConnection to 192.168.100.37 32535 port [tcp/*] succeeded!\n"
  I1204 06:29:31.927093 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:29:31.927224 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2539 exec execpod-affinity669q2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 32535'
  I1204 06:29:32.076263 23 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 192.168.100.114 32535\nConnection to 192.168.100.114 32535 port [tcp/*] succeeded!\n"
  I1204 06:29:32.076353 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:29:32.076511 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2539 exec execpod-affinity669q2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.37:32535/ ; done'
  E1204 06:29:32.248862      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:29:32.348724 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32535/\n"
  I1204 06:29:32.348802 23 builder.go:147] stdout: "\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt\naffinity-nodeport-gtfgt"
  I1204 06:29:32.348843 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348860 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348874 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348888 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348902 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348915 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348930 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348946 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348960 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348973 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348986 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.348999 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.349012 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.349025 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.349041 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.349055 23 service.go:242] Received response from host: affinity-nodeport-gtfgt
  I1204 06:29:32.349160 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2539, will wait for the garbage collector to delete the pods @ 12/04/24 06:29:32.364
  I1204 06:29:32.425912 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 6.051583ms
  I1204 06:29:32.526106 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.185947ms
  E1204 06:29:33.249673      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:34.249782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:35.250112      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:29:35.350380 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2539" for this suite. @ 12/04/24 06:29:35.355
• [10.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 12/04/24 06:29:35.361
  I1204 06:29:35.361249 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 06:29:35.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:29:35.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:29:35.377
  STEP: Counting existing ResourceQuota @ 12/04/24 06:29:35.381
  E1204 06:29:36.250620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:37.250651      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:38.250804      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:39.251191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:40.251448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/04/24 06:29:40.385
  STEP: Ensuring resource quota status is calculated @ 12/04/24 06:29:40.392
  E1204 06:29:41.252045      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:42.252252      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 12/04/24 06:29:42.397
  STEP: Creating a NodePort Service @ 12/04/24 06:29:42.425
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/04/24 06:29:42.451
  STEP: Ensuring resource quota status captures service creation @ 12/04/24 06:29:42.495
  E1204 06:29:43.252698      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:44.253371      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 12/04/24 06:29:44.501
  STEP: Ensuring resource quota status released usage @ 12/04/24 06:29:44.546
  E1204 06:29:45.253612      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:46.253900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:29:46.553958 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3782" for this suite. @ 12/04/24 06:29:46.559
• [11.205 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/04/24 06:29:46.567
  I1204 06:29:46.567433 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename runtimeclass @ 12/04/24 06:29:46.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:29:46.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:29:46.588
  E1204 06:29:47.254509      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:48.254923      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:29:48.621461 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4724" for this suite. @ 12/04/24 06:29:48.627
• [2.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 12/04/24 06:29:48.635
  I1204 06:29:48.635171 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 06:29:48.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:29:48.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:29:48.654
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/04/24 06:29:48.659
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/04/24 06:29:48.659
  STEP: creating a pod to probe DNS @ 12/04/24 06:29:48.659
  STEP: submitting the pod to kubernetes @ 12/04/24 06:29:48.659
  E1204 06:29:49.255843      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:50.256289      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:51.256865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:52.257199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:53.257688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:54.258325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:55.259479      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:56.259956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:57.260294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:58.260759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:29:59.261241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:00.261692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:01.262325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:02.262638      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:03.263037      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:04.263726      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:05.264412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:06.264809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 06:30:06.726
  STEP: looking for the results for each expected name from probers @ 12/04/24 06:30:06.731
  I1204 06:30:06.748012 23 dns_common.go:527] DNS probes using dns-6461/dns-test-4fa47fe6-884f-4cf6-9632-8eaf143cde00 succeeded

  STEP: deleting the pod @ 12/04/24 06:30:06.748
  I1204 06:30:06.759634 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6461" for this suite. @ 12/04/24 06:30:06.764
• [18.133 seconds]
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/04/24 06:30:06.768
  I1204 06:30:06.768520 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 06:30:06.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:30:06.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:30:06.786
  STEP: create the rc @ 12/04/24 06:30:06.865
  W1204 06:30:06.872327      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1204 06:30:07.264838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:08.265160      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:09.265414      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:10.265664      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:11.265829      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:12.266341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/04/24 06:30:12.878
  STEP: wait for the rc to be deleted @ 12/04/24 06:30:12.886
  E1204 06:30:13.266437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:13.903976 23 garbage_collector.go:670] 80 pods remaining
  I1204 06:30:13.904026 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1204 06:30:13.904039 23 garbage_collector.go:678] 
  E1204 06:30:14.267517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:14.901092 23 garbage_collector.go:670] 72 pods remaining
  I1204 06:30:14.901162 23 garbage_collector.go:677] 72 pods has nil DeletionTimestamp
  I1204 06:30:14.901182 23 garbage_collector.go:678] 
  E1204 06:30:15.268583      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:15.901374 23 garbage_collector.go:670] 59 pods remaining
  I1204 06:30:15.901455 23 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I1204 06:30:15.901473 23 garbage_collector.go:678] 
  E1204 06:30:16.269410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:16.899185 23 garbage_collector.go:670] 40 pods remaining
  I1204 06:30:16.899236 23 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1204 06:30:16.899250 23 garbage_collector.go:678] 
  E1204 06:30:17.269589      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:17.896122 23 garbage_collector.go:670] 32 pods remaining
  I1204 06:30:17.896191 23 garbage_collector.go:677] 32 pods has nil DeletionTimestamp
  I1204 06:30:17.896211 23 garbage_collector.go:678] 
  E1204 06:30:18.270221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:18.897094 23 garbage_collector.go:670] 19 pods remaining
  I1204 06:30:18.897152 23 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I1204 06:30:18.897163 23 garbage_collector.go:678] 
  E1204 06:30:19.270882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/04/24 06:30:19.896
  I1204 06:30:20.022863 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1204 06:30:20.023100 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3864" for this suite. @ 12/04/24 06:30:20.027
• [13.264 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/04/24 06:30:20.033
  I1204 06:30:20.033156 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:30:20.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:30:20.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:30:20.054
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/04/24 06:30:20.058
  E1204 06:30:20.271536      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:21.271983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:22.272785      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:23.273257      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:30:24.083
  I1204 06:30:24.086814 23 output.go:196] Trying to get logs from node nodea17 pod pod-f60e0609-cfa5-4bb7-a37a-04312b1a131c container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:30:24.094
  I1204 06:30:24.117953 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1176" for this suite. @ 12/04/24 06:30:24.123
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/04/24 06:30:24.13
  I1204 06:30:24.130792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/04/24 06:30:24.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:30:24.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:30:24.149
  STEP: getting /apis @ 12/04/24 06:30:24.163
  STEP: getting /apis/admissionregistration.k8s.io @ 12/04/24 06:30:24.17
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/04/24 06:30:24.171
  STEP: creating @ 12/04/24 06:30:24.173
  STEP: getting @ 12/04/24 06:30:24.189
  STEP: listing @ 12/04/24 06:30:24.192
  STEP: watching @ 12/04/24 06:30:24.196
  I1204 06:30:24.196899 23 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/04/24 06:30:24.198
  STEP: updating @ 12/04/24 06:30:24.204
  I1204 06:30:24.213113 23 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/04/24 06:30:24.213
  STEP: deleting a collection @ 12/04/24 06:30:24.225
  I1204 06:30:24.241981 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1673" for this suite. @ 12/04/24 06:30:24.246
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 12/04/24 06:30:24.253
  I1204 06:30:24.254022 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption @ 12/04/24 06:30:24.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:30:24.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:30:24.273
  E1204 06:30:24.273503      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:30:24.293037 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1204 06:30:25.273912      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:26.274400      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:27.275185      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:28.275633      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:29.276025      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:30.277162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:31.277474      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:32.278054      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:33.278283      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:34.278437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:35.278582      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:36.279052      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:37.279815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:38.280494      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:39.281123      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:40.282009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:41.282546      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:42.283037      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:43.283712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:44.284811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:45.285073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:46.285526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:47.286636      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:48.287570      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:49.287960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:50.289141      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:51.289890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:52.290330      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:53.291309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:54.291863      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:55.292744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:56.293195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:57.293368      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:58.293886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:30:59.294114      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:00.294394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:01.294710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:02.295380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:03.295686      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:04.296897      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:05.297644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:06.297733      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:07.298261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:08.298333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:09.298662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:10.299413      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:11.300421      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:12.300569      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:13.301745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:14.301780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:15.302074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:16.302060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:17.302624      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:18.302610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:19.302859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:20.302823      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:21.303254      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:22.303318      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:23.303881      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:31:24.300218 23 util.go:393] Waiting for terminating namespaces to be deleted...
  E1204 06:31:24.303862      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 12/04/24 06:31:24.304
  I1204 06:31:24.304860 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/04/24 06:31:24.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:31:24.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:31:24.327
  STEP: Finding an available node @ 12/04/24 06:31:24.331
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/04/24 06:31:24.331
  E1204 06:31:25.304482      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:26.304991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/04/24 06:31:26.351
  I1204 06:31:26.362033 23 preemption.go:585] found a healthy node: nodea17
  E1204 06:31:27.305830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:28.306297      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:29.306718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:30.307525      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:31.307593      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:32.308071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:31:32.431354 23 preemption.go:708] pods created so far: [1 1 1]
  I1204 06:31:32.431417 23 preemption.go:709] length of pods created so far: 3
  E1204 06:31:33.308449      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:34.309341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:31:34.443845 23 preemption.go:726] pods created so far: [2 2 1]
  E1204 06:31:35.309900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:36.310388      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:37.311342      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:38.311798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:39.312646      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:40.313279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:41.313886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:31:41.519253 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-778" for this suite. @ 12/04/24 06:31:41.523
  I1204 06:31:41.529737 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1292" for this suite. @ 12/04/24 06:31:41.534
• [77.288 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 12/04/24 06:31:41.542
  I1204 06:31:41.542560 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 06:31:41.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:31:41.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:31:41.562
  STEP: Looking for a node to schedule job pod @ 12/04/24 06:31:41.566
  STEP: Creating a job @ 12/04/24 06:31:41.634
  STEP: Ensuring job fails @ 12/04/24 06:31:41.645
  E1204 06:31:42.313947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:43.314489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:44.315079      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:45.316039      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:31:45.654247 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9924" for this suite. @ 12/04/24 06:31:45.66
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/04/24 06:31:45.672
  I1204 06:31:45.672057 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:31:45.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:31:45.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:31:45.689
  STEP: Creating configMap with name projected-configmap-test-volume-c93c5b28-79a8-43a6-9900-d95249e218d0 @ 12/04/24 06:31:45.694
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:31:45.699
  E1204 06:31:46.316793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:47.316977      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:48.317356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:49.317553      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:31:49.725
  I1204 06:31:49.728517 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-2cab1265-9ca5-46cf-8ead-c6a657230619 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 06:31:49.736
  I1204 06:31:49.750170 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8097" for this suite. @ 12/04/24 06:31:49.755
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 12/04/24 06:31:49.763
  I1204 06:31:49.763158 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 06:31:49.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:31:49.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:31:49.783
  E1204 06:31:50.318322      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:51.319322      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:52.320362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:53.320664      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:54.320827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:55.321796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:56.322148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:57.322319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:58.322838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:31:59.323764      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:00.324158      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:01.324261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:02.324358      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:03.325407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:04.325848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:05.326120      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:06.326439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/04/24 06:32:06.792
  E1204 06:32:07.326599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:08.326670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:09.327688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:10.327695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:11.327908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/04/24 06:32:11.799
  STEP: Ensuring resource quota status is calculated @ 12/04/24 06:32:11.806
  E1204 06:32:12.327995      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:13.328393      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/04/24 06:32:13.811
  STEP: Ensuring resource quota status captures configMap creation @ 12/04/24 06:32:13.824
  E1204 06:32:14.328576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:15.328828      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/04/24 06:32:15.83
  STEP: Ensuring resource quota status released usage @ 12/04/24 06:32:15.837
  E1204 06:32:16.329826      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:17.330304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:32:17.842967 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9217" for this suite. @ 12/04/24 06:32:17.849
• [28.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/04/24 06:32:17.865
  I1204 06:32:17.865774 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename podtemplate @ 12/04/24 06:32:17.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:32:17.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:32:17.886
  STEP: Create a pod template @ 12/04/24 06:32:17.89
  STEP: Replace a pod template @ 12/04/24 06:32:17.898
  I1204 06:32:17.907720 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1204 06:32:17.907847 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7909" for this suite. @ 12/04/24 06:32:17.949
• [0.090 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 12/04/24 06:32:17.956
  I1204 06:32:17.956253 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:32:17.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:32:17.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:32:17.986
  STEP: validating api versions @ 12/04/24 06:32:17.99
  I1204 06:32:17.990498 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-5533 api-versions'
  I1204 06:32:18.079981 23 builder.go:146] stderr: ""
  I1204 06:32:18.080091 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1204 06:32:18.080463 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5533" for this suite. @ 12/04/24 06:32:18.085
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 12/04/24 06:32:18.09
  I1204 06:32:18.090927 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:32:18.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:32:18.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:32:18.109
  STEP: Setting up server cert @ 12/04/24 06:32:18.226
  E1204 06:32:18.330341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:32:18.794
  STEP: Deploying the webhook pod @ 12/04/24 06:32:18.804
  STEP: Wait for the deployment to be ready @ 12/04/24 06:32:18.817
  I1204 06:32:18.826495 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 06:32:19.331414      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:20.331717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:32:20.84
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:32:20.856
  E1204 06:32:21.332021      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:32:21.857148 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/04/24 06:32:21.866
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/04/24 06:32:21.896
  STEP: Creating a configMap that should not be mutated @ 12/04/24 06:32:21.905
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/04/24 06:32:21.915
  STEP: Creating a configMap that should be mutated @ 12/04/24 06:32:21.923
  I1204 06:32:21.994928 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8622" for this suite. @ 12/04/24 06:32:21.999
  STEP: Destroying namespace "webhook-markers-3398" for this suite. @ 12/04/24 06:32:22.006
• [3.920 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/04/24 06:32:22.011
  I1204 06:32:22.011166 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:32:22.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:32:22.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:32:22.027
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/04/24 06:32:22.031
  E1204 06:32:22.332980      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:23.333904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:24.333943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:25.334560      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:32:26.055
  I1204 06:32:26.058791 23 output.go:196] Trying to get logs from node nodea17 pod pod-721b9153-4c1b-495a-8fdf-75c0060d5c48 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:32:26.066
  I1204 06:32:26.079032 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9606" for this suite. @ 12/04/24 06:32:26.084
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 12/04/24 06:32:26.09
  I1204 06:32:26.090439 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:32:26.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:32:26.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:32:26.108
  I1204 06:32:26.112305 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7405 version'
  I1204 06:32:26.191599 23 builder.go:146] stderr: ""
  I1204 06:32:26.191681 23 builder.go:147] stdout: "Client Version: v1.31.2\nKustomize Version: v5.4.2\nServer Version: v1.31.2-ckp\n"
  I1204 06:32:26.192091 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7405" for this suite. @ 12/04/24 06:32:26.197
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/04/24 06:32:26.203
  I1204 06:32:26.203804 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename init-container @ 12/04/24 06:32:26.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:32:26.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:32:26.228
  STEP: creating the pod @ 12/04/24 06:32:26.232
  I1204 06:32:26.232753 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1204 06:32:26.335591      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:27.336382      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:28.336574      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:29.337566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:30.337982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:31.338378      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:32.338845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:33.339836      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:34.340301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:35.340804      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:36.341242      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:37.341663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:38.342343      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:39.342688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:40.343118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:41.343584      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:42.344174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:43.344809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:44.345253      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:45.345710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:46.346352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:47.346811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:48.347772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:49.348205      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:50.348679      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:51.349163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:52.349608      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:53.350518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:54.351694      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:55.352487      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:56.352985      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:57.353447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:58.354360      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:32:59.354832      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:00.355282      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:01.355735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:02.356156      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:03.357074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:04.357506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:05.357947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:06.358426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:07.358899      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:08.359731      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:08.586639 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-3a875530-48d1-43d3-93db-1d6669916b6d", GenerateName:"", Namespace:"init-container-6022", SelfLink:"", UID:"bc601670-7b68-4af4-a546-6b89f1d881e3", ResourceVersion:"9698", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"232741285"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043e5c68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 33, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043e5cb0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-psm7w", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0014b23a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-psm7w", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-psm7w", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-psm7w", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004b9c6a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"nodea17", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00475f500), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004b9c730)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004b9c750)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004b9c758), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004b9c75c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00166bc10), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 4, 6, 32, 27, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.100.37", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.100.37"}}, PodIP:"10.244.1.155", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.155"}}, StartTime:time.Date(2024, time.December, 4, 6, 32, 26, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004ec620)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004ec690)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://d749f8105f3d30002163db0924567148e9b2ff71e5559ae9d2aa2b04b4c5c452", Started:(*bool)(0xc004b9c80a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-psm7w", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00166bca0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0014b2400), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004b9c81d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-psm7w", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00166bcb0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0014b23e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004b9c7df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-psm7w", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc00166bc70)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1204 06:33:08.586845 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6022" for this suite. @ 12/04/24 06:33:08.591
• [42.392 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 12/04/24 06:33:08.596
  I1204 06:33:08.596263 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 06:33:08.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:33:08.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:33:08.615
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-466.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-466.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/04/24 06:33:08.619
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-466.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-466.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/04/24 06:33:08.619
  STEP: creating a pod to probe /etc/hosts @ 12/04/24 06:33:08.619
  STEP: submitting the pod to kubernetes @ 12/04/24 06:33:08.619
  E1204 06:33:09.360832      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:10.361553      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 06:33:10.639
  STEP: looking for the results for each expected name from probers @ 12/04/24 06:33:10.643
  I1204 06:33:10.663266 23 dns_common.go:527] DNS probes using dns-466/dns-test-61e61021-5b44-4449-93d1-9188e98db6a9 succeeded

  STEP: deleting the pod @ 12/04/24 06:33:10.663
  I1204 06:33:10.675849 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-466" for this suite. @ 12/04/24 06:33:10.681
• [2.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/04/24 06:33:10.687
  I1204 06:33:10.687653 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:33:10.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:33:10.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:33:10.704
  STEP: Creating secret with name s-test-opt-del-c7f9fc5e-2027-4870-b9c3-141350f810eb @ 12/04/24 06:33:10.782
  STEP: Creating secret with name s-test-opt-upd-6c0796dc-58af-4be5-bccd-37d33c409c78 @ 12/04/24 06:33:10.788
  STEP: Creating the pod @ 12/04/24 06:33:10.793
  E1204 06:33:11.362812      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:12.363539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-c7f9fc5e-2027-4870-b9c3-141350f810eb @ 12/04/24 06:33:12.841
  STEP: Updating secret s-test-opt-upd-6c0796dc-58af-4be5-bccd-37d33c409c78 @ 12/04/24 06:33:12.849
  STEP: Creating secret with name s-test-opt-create-a3670a9b-4b06-4d76-9b0b-2aa423615aa0 @ 12/04/24 06:33:12.854
  STEP: waiting to observe update in volume @ 12/04/24 06:33:12.861
  E1204 06:33:13.364543      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:14.365186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:15.365567      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:16.365937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:16.906540 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6355" for this suite. @ 12/04/24 06:33:16.911
• [6.229 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 12/04/24 06:33:16.917
  I1204 06:33:16.917202 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:33:16.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:33:16.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:33:16.937
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8326 @ 12/04/24 06:33:16.942
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/04/24 06:33:16.965
  STEP: creating service externalsvc in namespace services-8326 @ 12/04/24 06:33:16.965
  STEP: creating replication controller externalsvc in namespace services-8326 @ 12/04/24 06:33:16.988
  I1204 06:33:16.996244      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8326, replica count: 2
  E1204 06:33:17.367144      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:18.368252      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:19.368560      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:20.047687      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/04/24 06:33:20.051
  I1204 06:33:20.072107 23 resource.go:361] Creating new exec pod
  E1204 06:33:20.368935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:21.369448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:22.089131 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8326 exec execpodxkl9h -- /bin/sh -x -c nslookup clusterip-service.services-8326.svc.cluster.local'
  I1204 06:33:22.280885 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-8326.svc.cluster.local\n"
  I1204 06:33:22.280969 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-8326.svc.cluster.local\tcanonical name = externalsvc.services-8326.svc.cluster.local.\nName:\texternalsvc.services-8326.svc.cluster.local\nAddress: 10.106.38.177\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8326, will wait for the garbage collector to delete the pods @ 12/04/24 06:33:22.281
  I1204 06:33:22.343874 23 resources.go:139] Deleting ReplicationController externalsvc took: 7.278527ms
  E1204 06:33:22.369652      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:22.444398 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.513995ms
  E1204 06:33:23.370111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:24.371047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:25.371924      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:25.766047 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1204 06:33:25.773588 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8326" for this suite. @ 12/04/24 06:33:25.778
• [8.866 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/04/24 06:33:25.783
  I1204 06:33:25.783821 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 06:33:25.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:33:25.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:33:25.804
  STEP: Creating secret with name secret-test-a3f30905-830e-4da4-9c79-dfab0c942899 @ 12/04/24 06:33:25.809
  STEP: Creating a pod to test consume secrets @ 12/04/24 06:33:25.814
  E1204 06:33:26.372065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:27.372175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:28.373366      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:29.374311      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:33:29.838
  I1204 06:33:29.842483 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-a6bc20a6-0543-4f8a-9b60-bce989e420a1 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:33:29.849
  I1204 06:33:29.863331 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9469" for this suite. @ 12/04/24 06:33:29.868
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 12/04/24 06:33:29.873
  I1204 06:33:29.873955 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 06:33:29.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:33:29.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:33:29.893
  STEP: Creating a test headless service @ 12/04/24 06:33:29.898
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local;sleep 1; done
   @ 12/04/24 06:33:29.903
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5588.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local;sleep 1; done
   @ 12/04/24 06:33:29.903
  STEP: creating a pod to probe DNS @ 12/04/24 06:33:29.903
  STEP: submitting the pod to kubernetes @ 12/04/24 06:33:29.903
  E1204 06:33:30.375067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:31.375544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 06:33:31.922
  STEP: looking for the results for each expected name from probers @ 12/04/24 06:33:31.926
  I1204 06:33:31.931945 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.936010 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.940507 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.944849 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.949551 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.954516 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.958797 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.962732 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:31.962800 23 dns_common.go:489] Lookups using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local]

  I1204 06:33:31.969533 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 06:33:31.975952 23 dns_common.go:495] Pod client logs for querier: 
  I1204 06:33:31.982390 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 06:33:32.376240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:33.377036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:34.377529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:35.378039      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:36.378518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:36.932396 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.937051 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.941150 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.945658 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.950025 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.954165 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.958533 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.962815 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:36.962873 23 dns_common.go:489] Lookups using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local]

  I1204 06:33:36.970817 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 06:33:36.977920 23 dns_common.go:495] Pod client logs for querier: 
  I1204 06:33:36.985101 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 06:33:37.379258      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:38.380043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:39.380820      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:40.381399      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:41.381782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:41.932645 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.937222 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.941346 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.945593 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.949417 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.953723 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.958125 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.961974 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:41.962026 23 dns_common.go:489] Lookups using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local]

  I1204 06:33:41.968982 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 06:33:41.975451 23 dns_common.go:495] Pod client logs for querier: 
  I1204 06:33:41.981447 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 06:33:42.382190      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:43.383170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:44.383736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:45.384157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:46.384649      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:46.933795 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.939025 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.944507 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.949610 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.954153 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.959019 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.963668 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.968316 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:46.968428 23 dns_common.go:489] Lookups using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local]

  I1204 06:33:46.976992 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 06:33:46.983834 23 dns_common.go:495] Pod client logs for querier: 
  I1204 06:33:46.990804 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 06:33:47.385626      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:48.386576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:49.387220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:50.387727      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:51.388490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:51.933753 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.938858 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.943744 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.949020 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.954157 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.958831 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.963626 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.968003 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:51.968116 23 dns_common.go:489] Lookups using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local]

  I1204 06:33:51.975873 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 06:33:51.983072 23 dns_common.go:495] Pod client logs for querier: 
  I1204 06:33:51.993841 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 06:33:52.389692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:53.390731      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:54.391157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:55.391640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:56.391778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:33:56.933080 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.937846 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.947407 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.951767 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.955821 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.959672 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.963676 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.967569 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local from pod dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c: the server could not find the requested resource (get pods dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c)
  I1204 06:33:56.967637 23 dns_common.go:489] Lookups using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5588.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5588.svc.cluster.local jessie_udp@dns-test-service-2.dns-5588.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5588.svc.cluster.local]

  I1204 06:33:56.974201 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 06:33:56.981266 23 dns_common.go:495] Pod client logs for querier: 
  I1204 06:33:56.987515 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 06:33:57.392806      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:58.393547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:33:59.393839      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:00.394317      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:01.394793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:34:01.963337 23 dns_common.go:527] DNS probes using dns-5588/dns-test-5003712c-e976-4945-a91e-2e7d01f6d61c succeeded

  STEP: deleting the pod @ 12/04/24 06:34:01.963
  STEP: deleting the test headless service @ 12/04/24 06:34:01.977
  I1204 06:34:01.987544 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5588" for this suite. @ 12/04/24 06:34:01.992
• [32.122 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/04/24 06:34:01.996
  I1204 06:34:01.996261 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 06:34:01.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:34:02.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:34:02.012
  STEP: creating a ServiceAccount @ 12/04/24 06:34:02.016
  STEP: watching for the ServiceAccount to be added @ 12/04/24 06:34:02.023
  STEP: patching the ServiceAccount @ 12/04/24 06:34:02.025
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/04/24 06:34:02.031
  STEP: deleting the ServiceAccount @ 12/04/24 06:34:02.034
  I1204 06:34:02.043548 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8074" for this suite. @ 12/04/24 06:34:02.093
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/04/24 06:34:02.103
  I1204 06:34:02.103421 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename discovery @ 12/04/24 06:34:02.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:34:02.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:34:02.121
  STEP: Setting up server cert @ 12/04/24 06:34:02.126
  E1204 06:34:02.395140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:34:02.508705 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1204 06:34:02.510474 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1204 06:34:02.510542 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1204 06:34:02.510570 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1204 06:34:02.510588 23 discovery.go:139] Checking APIGroup: apps
  I1204 06:34:02.512563 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1204 06:34:02.512599 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I1204 06:34:02.512609 23 discovery.go:154] apps/v1 matches apps/v1
  I1204 06:34:02.512616 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I1204 06:34:02.513934 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1204 06:34:02.513989 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1204 06:34:02.514007 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1204 06:34:02.514025 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1204 06:34:02.515940 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1204 06:34:02.515970 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1204 06:34:02.515979 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1204 06:34:02.515987 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1204 06:34:02.517617 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1204 06:34:02.517701 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1204 06:34:02.517720 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1204 06:34:02.517738 23 discovery.go:139] Checking APIGroup: autoscaling
  I1204 06:34:02.519941 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1204 06:34:02.519987 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1204 06:34:02.519999 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1204 06:34:02.520011 23 discovery.go:139] Checking APIGroup: batch
  I1204 06:34:02.522225 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1204 06:34:02.522289 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I1204 06:34:02.522308 23 discovery.go:154] batch/v1 matches batch/v1
  I1204 06:34:02.522327 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1204 06:34:02.523905 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1204 06:34:02.523948 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1204 06:34:02.523962 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1204 06:34:02.523974 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1204 06:34:02.525753 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1204 06:34:02.525805 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1204 06:34:02.525822 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1204 06:34:02.525838 23 discovery.go:139] Checking APIGroup: policy
  I1204 06:34:02.527754 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1204 06:34:02.527805 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I1204 06:34:02.527825 23 discovery.go:154] policy/v1 matches policy/v1
  I1204 06:34:02.527839 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1204 06:34:02.529720 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1204 06:34:02.529773 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1204 06:34:02.529790 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1204 06:34:02.529807 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1204 06:34:02.531637 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1204 06:34:02.531683 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1204 06:34:02.531700 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1204 06:34:02.531713 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1204 06:34:02.533598 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1204 06:34:02.533659 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1204 06:34:02.533676 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1204 06:34:02.533691 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1204 06:34:02.535544 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1204 06:34:02.535589 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1204 06:34:02.535603 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1204 06:34:02.535616 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1204 06:34:02.537758 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1204 06:34:02.537814 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1204 06:34:02.537832 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1204 06:34:02.537849 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1204 06:34:02.539979 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1204 06:34:02.540032 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1204 06:34:02.540049 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1204 06:34:02.540064 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I1204 06:34:02.542108 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1204 06:34:02.542165 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1204 06:34:02.542183 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1204 06:34:02.542200 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1204 06:34:02.544273 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1204 06:34:02.544328 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1204 06:34:02.544345 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1204 06:34:02.544365 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1204 06:34:02.546342 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1204 06:34:02.546400 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1204 06:34:02.546445 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1204 06:34:02.546871 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-284" for this suite. @ 12/04/24 06:34:02.551
• [0.456 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 12/04/24 06:34:02.56
  I1204 06:34:02.560254 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-pred @ 12/04/24 06:34:02.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:34:02.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:34:02.578
  I1204 06:34:02.582823 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1204 06:34:02.590047 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I1204 06:34:02.593586 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1204 06:34:02.598163 23 predicates.go:957] kube-flannel-ds-s9d8k from kube-flannel started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:34:02.598247 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:34:02.598287 23 predicates.go:957] kube-proxy-cn5pv from kube-system started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:34:02.598306 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:34:02.598395 23 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-04 06:03:38 +0000 UTC (1 container statuses recorded)
  I1204 06:34:02.598469 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1204 06:34:02.598493 23 predicates.go:957] sonobuoy-e2e-job-d101e3450e66430f from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:34:02.598510 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1204 06:34:02.598571 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:34:02.598592 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-hxfzx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:34:02.598641 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:34:02.598659 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1204 06:34:02.598675 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1204 06:34:02.602591 23 predicates.go:957] kube-flannel-ds-n648s from kube-flannel started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:34:02.602646 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:34:02.602668 23 predicates.go:957] kube-proxy-lv6k4 from kube-system started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:34:02.602683 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:34:02.602701 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-jv5wx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:34:02.602716 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:34:02.602779 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/04/24 06:34:02.602
  E1204 06:34:03.395739      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:04.396880      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/04/24 06:34:04.625
  STEP: Trying to apply a random label on the found node. @ 12/04/24 06:34:04.642
  STEP: verifying the node has the label kubernetes.io/e2e-1708ec60-a456-4231-99bb-b338dd7b450a 95 @ 12/04/24 06:34:04.654
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/04/24 06:34:04.657
  E1204 06:34:05.397266      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:06.397713      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.100.37 on the node which pod4 resides and expect not scheduled @ 12/04/24 06:34:06.675
  E1204 06:34:07.398503      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:08.399220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:09.399564      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:10.399726      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:11.400767      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:12.401218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:13.401982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:14.402407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:15.402952      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:16.403407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:17.404271      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:18.404499      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:19.404509      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:20.404914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:21.405863      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:22.406235      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:23.406710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:24.407380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:25.407427      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:26.408050      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:27.409043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:28.410044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:29.410562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:30.411022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:31.411548      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:32.412011      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:33.412865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:34.413279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:35.414009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:36.414407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:37.414634      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:38.415545      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:39.415809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:40.416023      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:41.416344      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:42.416789      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:43.416965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:44.417425      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:45.417902      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:46.418159      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:47.419236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:48.420173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:49.420388      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:50.421478      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:51.422514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:52.422758      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:53.423274      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:54.423557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:55.423829      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:56.424304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:57.424409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:58.425189      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:34:59.425443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:00.425697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:01.425909      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:02.426335      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:03.427555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:04.427986      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:05.429160      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:06.429555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:07.430612      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:08.431511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:09.431792      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:10.432195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:11.432775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:12.433224      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:13.433326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:14.433771      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:15.434668      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:16.435128      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:17.436107      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:18.436874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:19.436993      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:20.437169      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:21.438167      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:22.438488      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:23.438694      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:24.439126      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:25.439665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:26.440569      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:27.441746      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:28.442489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:29.443063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:30.443515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:31.444161      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:32.444462      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:33.445369      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:34.445819      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:35.446060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:36.446429      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:37.446728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:38.447817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:39.448798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:40.449248      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:41.449958      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:42.450412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:43.451217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:44.451528      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:45.452645      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:46.453053      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:47.453372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:48.453742      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:49.454234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:50.454648      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:51.454892      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:52.455314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:53.455607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:54.455844      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:55.456105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:56.456544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:57.456667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:58.457528      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:35:59.457840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:00.458083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:01.458940      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:02.459317      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:03.460124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:04.460477      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:05.461047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:06.461307      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:07.462406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:08.463304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:09.463679      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:10.463960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:11.465132      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:12.465514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:13.466333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:14.466755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:15.466885      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:16.467186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:17.467327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:18.467621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:19.468083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:20.468578      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:21.468651      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:22.468860      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:23.469297      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:24.469721      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:25.470642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:26.471042      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:27.472125      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:28.473062      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:29.473892      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:30.474058      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:31.474818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:32.475243      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:33.475724      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:34.476063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:35.476968      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:36.477286      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:37.477458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:38.478109      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:39.479245      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:40.479541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:41.479726      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:42.480084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:43.480175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:44.480515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:45.481248      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:46.481929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:47.482899      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:48.483848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:49.484577      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:50.484990      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:51.485185      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:52.485592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:53.485665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:54.486085      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:55.486871      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:56.487283      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:57.488412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:58.489279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:36:59.489558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:00.489914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:01.490126      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:02.490429      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:03.490683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:04.491116      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:05.491339      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:06.491795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:07.492012      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:08.492861      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:09.493002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:10.493458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:11.494269      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:12.494655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:13.495837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:14.496263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:15.497073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:16.497455      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:17.497665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:18.498644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:19.499695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:20.500098      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:21.500296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:22.500882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:23.501876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:24.502376      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:25.503003      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:26.503414      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:27.504237      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:28.505238      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:29.505626      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:30.505955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:31.507189      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:32.507627      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:33.507800      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:34.508188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:35.508363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:36.508797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:37.509821      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:38.510749      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:39.511951      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:40.512402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:41.513290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:42.513721      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:43.514823      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:44.515267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:45.515261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:46.515680      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:47.515909      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:48.516735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:49.516895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:50.517335      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:51.518451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:52.518885      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:53.519730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:54.520027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:55.521099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:56.521455      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:57.521655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:58.522433      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:37:59.523006      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:00.523337      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:01.523523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:02.523984      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:03.524929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:04.525347      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:05.526259      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:06.526682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:07.527188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:08.528110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:09.528859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:10.529216      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:11.529684      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:12.530038      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:13.530134      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:14.530547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:15.531545      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:16.531956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:17.532788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:18.533093      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:19.533181      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:20.533754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:21.534432      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:22.534796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:23.535827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:24.536220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:25.537089      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:26.537806      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:27.538249      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:28.539128      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:29.539852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:30.540350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:31.541292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:32.541652      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:33.542475      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:34.542798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:35.543510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:36.543928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:37.544479      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:38.545361      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:39.545396      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:40.545817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:41.546409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:42.546796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:43.546849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:44.547257      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:45.547791      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:46.548205      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:47.548916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:48.549684      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:49.550464      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:50.550959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:51.551799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:52.552212      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:53.553178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:54.553612      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:55.554334      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:56.554697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:57.555151      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:58.556060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:38:59.557060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:00.557459      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:01.558485      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:02.558754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:03.559245      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:04.559683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:05.560031      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:06.560467      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-1708ec60-a456-4231-99bb-b338dd7b450a off the node nodea17 @ 12/04/24 06:39:06.685
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1708ec60-a456-4231-99bb-b338dd7b450a @ 12/04/24 06:39:06.7
  I1204 06:39:06.704641 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-954" for this suite. @ 12/04/24 06:39:06.708
• [304.154 seconds]
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/04/24 06:39:06.714
  I1204 06:39:06.714408 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:39:06.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:39:06.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:39:06.734
  STEP: Creating configMap with name configmap-projected-all-test-volume-a3594532-9841-4322-a2a7-8e1caa189bd1 @ 12/04/24 06:39:06.739
  STEP: Creating secret with name secret-projected-all-test-volume-8a9c1dfa-fdb3-4048-b908-cf32dda22f2f @ 12/04/24 06:39:06.743
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/04/24 06:39:06.747
  E1204 06:39:07.561081      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:08.562150      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:09.563215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:10.563768      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:39:10.772
  I1204 06:39:10.775602 23 output.go:196] Trying to get logs from node nodea17 pod projected-volume-24600366-18c4-43f1-b7f4-ee19d131a55f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:39:10.798
  I1204 06:39:10.818280 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7726" for this suite. @ 12/04/24 06:39:10.824
• [4.116 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/04/24 06:39:10.83
  I1204 06:39:10.830624 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-runtime @ 12/04/24 06:39:10.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:39:10.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:39:10.85
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/04/24 06:39:10.862
  E1204 06:39:11.564470      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:12.565141      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:13.565578      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:14.566342      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:15.566477      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:16.566819      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:17.567313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:18.567741      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:19.568130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:20.568914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:21.569204      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:22.569887      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:23.570812      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:24.571036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:25.572191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:26.572315      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/04/24 06:39:26.957
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/04/24 06:39:26.961
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/04/24 06:39:26.967
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/04/24 06:39:26.967
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/04/24 06:39:26.986
  E1204 06:39:27.573008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:28.573127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:29.573527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/04/24 06:39:30.006
  E1204 06:39:30.574533      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/04/24 06:39:31.015
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/04/24 06:39:31.023
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/04/24 06:39:31.023
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/04/24 06:39:31.051
  E1204 06:39:31.575639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/04/24 06:39:32.06
  E1204 06:39:32.576829      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:33.576879      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/04/24 06:39:34.076
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/04/24 06:39:34.084
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/04/24 06:39:34.084
  I1204 06:39:34.111092 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6344" for this suite. @ 12/04/24 06:39:34.116
• [23.291 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/04/24 06:39:34.122
  I1204 06:39:34.122194 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename watch @ 12/04/24 06:39:34.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:39:34.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:39:34.142
  STEP: creating a watch on configmaps with label A @ 12/04/24 06:39:34.146
  STEP: creating a watch on configmaps with label B @ 12/04/24 06:39:34.148
  STEP: creating a watch on configmaps with label A or B @ 12/04/24 06:39:34.15
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/04/24 06:39:34.152
  I1204 06:39:34.157565 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10702 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:39:34.157903 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10702 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/04/24 06:39:34.158
  I1204 06:39:34.171306 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10703 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:39:34.171734 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10703 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/04/24 06:39:34.172
  I1204 06:39:34.181914 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10704 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:39:34.182416 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10704 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/04/24 06:39:34.182
  I1204 06:39:34.189461 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10705 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:39:34.189572 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7475  66374ffd-b3b2-4d3f-ac74-4d8a0f5f9d6d 10705 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/04/24 06:39:34.189
  I1204 06:39:34.195847 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7475  39426298-13e9-43a2-b4f5-01e2f81a23d8 10706 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:39:34.196216 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7475  39426298-13e9-43a2-b4f5-01e2f81a23d8 10706 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1204 06:39:34.577099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:35.577619      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:36.578191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:37.578885      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:38.579978      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:39.580388      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:40.580788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:41.581211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:42.581611      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:43.582458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/04/24 06:39:44.197
  I1204 06:39:44.206123 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7475  39426298-13e9-43a2-b4f5-01e2f81a23d8 10740 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 06:39:44.206186 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7475  39426298-13e9-43a2-b4f5-01e2f81a23d8 10740 0 2024-12-04 06:39:34 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-04 06:39:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1204 06:39:44.582663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:45.583149      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:46.583573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:47.583795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:48.584883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:49.585324      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:50.585765      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:51.586215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:52.586441      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:53.587281      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:39:54.207570 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7475" for this suite. @ 12/04/24 06:39:54.214
• [20.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/04/24 06:39:54.223
  I1204 06:39:54.223392 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-runtime @ 12/04/24 06:39:54.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:39:54.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:39:54.242
  STEP: create the container @ 12/04/24 06:39:54.246
  W1204 06:39:54.256440      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/04/24 06:39:54.256
  E1204 06:39:54.588363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:55.588898      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:56.589099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/04/24 06:39:57.277
  STEP: the container should be terminated @ 12/04/24 06:39:57.281
  STEP: the termination message should be set @ 12/04/24 06:39:57.281
  I1204 06:39:57.281445 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/04/24 06:39:57.281
  I1204 06:39:57.296222 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2189" for this suite. @ 12/04/24 06:39:57.301
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/04/24 06:39:57.313
  I1204 06:39:57.313344 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:39:57.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:39:57.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:39:57.33
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:39:57.335
  E1204 06:39:57.589923      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:58.590718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:39:59.591686      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:00.592853      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:40:01.357
  I1204 06:40:01.361000 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-3fc9a719-fe11-45f4-837c-72959be4644b container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:40:01.368
  I1204 06:40:01.383678 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3069" for this suite. @ 12/04/24 06:40:01.388
• [4.081 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 12/04/24 06:40:01.394
  I1204 06:40:01.394520 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/04/24 06:40:01.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:40:01.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:40:01.414
  I1204 06:40:01.419135 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1204 06:40:01.593055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:02.593749      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:03.594723      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:04.595228      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:05.595422      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:06.595882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:07.596542      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:08.597398      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:09.598453      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:10.598956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:11.600078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:12.600483      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:13.600816      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:14.601242      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:15.601902      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:16.602327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:17.603298      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:18.604012      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:19.603760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:20.604202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:21.604994      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:22.605432      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:23.606416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:24.606840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:25.607492      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:26.607921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:27.608458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:28.609350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:29.609503      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:30.609918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:31.610961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:32.611377      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:33.612034      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:34.612421      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:35.613046      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:36.613491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:37.613799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:38.614809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:39.615006      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:40.615426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:41.615499      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:42.615975      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:43.616213      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:44.616585      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:45.617188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:46.617604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:47.618593      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:48.619375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:49.620341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:50.620770      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:51.621353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:52.621815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:53.622558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:54.622992      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:55.623670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:56.624088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:57.625105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:58.626046      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:40:59.626292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:00.626732      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:01.419966 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I1204 06:41:01.424502 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 12/04/24 06:41:01.424
  E1204 06:41:01.627283      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:01.649273 23 taints.go:463] Pod1 is running on nodea17. Tainting Node
  E1204 06:41:02.627537      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:03.628579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:03.874779 23 taints.go:471] Pod2 is running on nodea17. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/04/24 06:41:03.874
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/04/24 06:41:03.892
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/04/24 06:41:03.898
  E1204 06:41:04.629010      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:05.629428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:06.629822      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:07.630313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:08.630765      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:09.630954      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:09.994700 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1204 06:41:10.631499      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:11.631921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:12.632380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:13.633257      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:14.633721      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:15.634211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:16.634611      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:17.635110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:18.636026      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:19.636491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:20.636934      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:21.637331      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:22.637755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:23.638570      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:24.638974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:25.639349      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:26.639843      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:27.640320      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:28.641289      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:29.641579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:30.050895 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/04/24 06:41:30.065
  I1204 06:41:30.069671 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2173" for this suite. @ 12/04/24 06:41:30.074
• [88.685 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/04/24 06:41:30.079
  I1204 06:41:30.079902 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:41:30.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:30.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:30.097
  STEP: Creating the pod @ 12/04/24 06:41:30.102
  E1204 06:41:30.641757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:31.642798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:32.643032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:32.676336 23 pod_client.go:173] Successfully updated pod "labelsupdate4e75dc85-aa27-47e8-b27d-97cbe2afe67b"
  E1204 06:41:33.643209      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:34.643687      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:35.643871      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:36.644258      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:36.703373 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3062" for this suite. @ 12/04/24 06:41:36.708
• [6.634 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/04/24 06:41:36.714
  I1204 06:41:36.714280 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 06:41:36.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:36.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:36.734
  STEP: creating a Pod with a static label @ 12/04/24 06:41:36.742
  STEP: watching for Pod to be ready @ 12/04/24 06:41:36.75
  I1204 06:41:36.753764 23 pods.go:945] observed Pod pod-test in namespace pods-985 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1204 06:41:36.755630 23 pods.go:945] observed Pod pod-test in namespace pods-985 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC  }]
  I1204 06:41:36.768461 23 pods.go:945] observed Pod pod-test in namespace pods-985 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC  }]
  E1204 06:41:37.644559      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:38.065290 23 pods.go:948] Found Pod pod-test in namespace pods-985 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:38 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:38 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 06:41:36 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/04/24 06:41:38.068
  STEP: getting the Pod and ensuring that it's patched @ 12/04/24 06:41:38.079
  STEP: replacing the Pod's status Ready condition to False @ 12/04/24 06:41:38.082
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/04/24 06:41:38.094
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/04/24 06:41:38.094
  STEP: watching for the Pod to be deleted @ 12/04/24 06:41:38.103
  I1204 06:41:38.105636 23 pods.go:1058] observed event type MODIFIED
  E1204 06:41:38.644769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:39.645482      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:40.077998 23 pods.go:1058] observed event type MODIFIED
  I1204 06:41:40.304952 23 pods.go:1058] observed event type MODIFIED
  E1204 06:41:40.645539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:41.089309 23 pods.go:1058] observed event type MODIFIED
  I1204 06:41:41.097669 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-985" for this suite. @ 12/04/24 06:41:41.102
• [4.393 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/04/24 06:41:41.107
  I1204 06:41:41.107834 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:41:41.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:41.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:41.126
  STEP: Creating projection with secret that has name projected-secret-test-map-b5e2851a-ec37-4d6b-b7b1-500d093f16b8 @ 12/04/24 06:41:41.131
  STEP: Creating a pod to test consume secrets @ 12/04/24 06:41:41.135
  E1204 06:41:41.646309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:42.647092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:43.647432      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:44.647954      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:41:45.162
  I1204 06:41:45.166630 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-5a7dc536-a751-4c65-b83c-67e4e37878ab container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:41:45.174
  I1204 06:41:45.193289 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-613" for this suite. @ 12/04/24 06:41:45.198
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/04/24 06:41:45.207
  I1204 06:41:45.207517 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename limitrange @ 12/04/24 06:41:45.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:45.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:45.227
  STEP: Creating LimitRange "e2e-limitrange-khbg6" in namespace "limitrange-7241" @ 12/04/24 06:41:45.232
  STEP: Creating another limitRange in another namespace @ 12/04/24 06:41:45.238
  I1204 06:41:45.324653 23 limit_range.go:299] Namespace "e2e-limitrange-khbg6-3608" created
  I1204 06:41:45.324715 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-khbg6" in namespace "e2e-limitrange-khbg6-3608"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-khbg6" @ 12/04/24 06:41:45.332
  I1204 06:41:45.335554 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-khbg6" in "limitrange-7241" namespace @ 12/04/24 06:41:45.335
  I1204 06:41:45.344346 23 limit_range.go:335] LimitRange "e2e-limitrange-khbg6" has been patched
  STEP: Delete LimitRange "e2e-limitrange-khbg6" by Collection with labelSelector: "e2e-limitrange-khbg6=patched" @ 12/04/24 06:41:45.344
  STEP: Confirm that the limitRange "e2e-limitrange-khbg6" has been deleted @ 12/04/24 06:41:45.35
  I1204 06:41:45.351012 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1204 06:41:45.354666 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-khbg6=patched"
  I1204 06:41:45.354733 23 limit_range.go:344] LimitRange "e2e-limitrange-khbg6" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-khbg6" @ 12/04/24 06:41:45.354
  I1204 06:41:45.358353 23 limit_range.go:350] Found 1 limitRange
  I1204 06:41:45.358547 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7241" for this suite. @ 12/04/24 06:41:45.363
  STEP: Destroying namespace "e2e-limitrange-khbg6-3608" for this suite. @ 12/04/24 06:41:45.368
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 12/04/24 06:41:45.378
  I1204 06:41:45.378510 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:41:45.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:45.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:45.429
  I1204 06:41:45.437347 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9646" for this suite. @ 12/04/24 06:41:45.464
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 12/04/24 06:41:45.471
  I1204 06:41:45.471214 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-pred @ 12/04/24 06:41:45.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:45.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:45.53
  I1204 06:41:45.534767 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1204 06:41:45.568744 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I1204 06:41:45.573680 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1204 06:41:45.580630 23 predicates.go:957] kube-flannel-ds-s9d8k from kube-flannel started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:41:45.580714 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:41:45.580752 23 predicates.go:957] kube-proxy-cn5pv from kube-system started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:41:45.580781 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:41:45.580814 23 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-04 06:03:38 +0000 UTC (1 container statuses recorded)
  I1204 06:41:45.580840 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1204 06:41:45.580873 23 predicates.go:957] sonobuoy-e2e-job-d101e3450e66430f from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:41:45.580900 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1204 06:41:45.580926 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:41:45.580959 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-hxfzx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:41:45.580985 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:41:45.581012 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1204 06:41:45.581039 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1204 06:41:45.585315 23 predicates.go:957] kube-flannel-ds-n648s from kube-flannel started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:41:45.585389 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:41:45.585425 23 predicates.go:957] kube-proxy-lv6k4 from kube-system started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:41:45.585451 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:41:45.585482 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-jv5wx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:41:45.585508 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:41:45.585533 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/04/24 06:41:45.585
  E1204 06:41:45.648166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:46.648842      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/04/24 06:41:47.607
  STEP: Trying to apply a random label on the found node. @ 12/04/24 06:41:47.619
  STEP: verifying the node has the label kubernetes.io/e2e-5cdab13c-ed06-4970-afdb-3b716c0128f0 42 @ 12/04/24 06:41:47.631
  STEP: Trying to relaunch the pod, now with labels. @ 12/04/24 06:41:47.634
  E1204 06:41:47.648893      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:48.649972      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:49.651022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5cdab13c-ed06-4970-afdb-3b716c0128f0 off the node nodea17 @ 12/04/24 06:41:49.654
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5cdab13c-ed06-4970-afdb-3b716c0128f0 @ 12/04/24 06:41:49.669
  I1204 06:41:49.673125 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7400" for this suite. @ 12/04/24 06:41:49.676
• [4.212 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/04/24 06:41:49.684
  I1204 06:41:49.684155 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 06:41:49.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:41:49.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:41:49.702
  STEP: Creating service test in namespace statefulset-281 @ 12/04/24 06:41:49.707
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/04/24 06:41:49.711
  STEP: Creating stateful set ss in namespace statefulset-281 @ 12/04/24 06:41:49.717
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-281 @ 12/04/24 06:41:49.723
  I1204 06:41:49.744074 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E1204 06:41:50.651380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:51.651646      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:52.652394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:53.652260      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:54.652811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:55.653352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:56.653712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:57.654116      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:58.655018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:41:59.655518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:41:59.729113 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/04/24 06:41:59.729
  I1204 06:41:59.733421 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 06:41:59.913479 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 06:41:59.913552 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 06:41:59.913600 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 06:41:59.917967 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1204 06:42:00.655790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:01.656873      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:02.657279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:03.658075      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:04.658699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:05.659016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:06.659323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:07.659548      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:08.659751      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:09.660074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:09.920350 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1204 06:42:09.920438 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1204 06:42:09.940426 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999494s
  E1204 06:42:10.660481      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:10.948894 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.994169154s
  E1204 06:42:11.660754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:11.956435 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.986448446s
  E1204 06:42:12.661123      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:12.962437 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.979108128s
  E1204 06:42:13.661598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:13.968589 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.972401922s
  E1204 06:42:14.662331      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:14.974143 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.966856021s
  E1204 06:42:15.663247      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:15.981329 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.960720448s
  E1204 06:42:16.663875      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:16.987383 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.954248712s
  E1204 06:42:17.664105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:17.993346 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.948063487s
  E1204 06:42:18.664890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:18.999245 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 942.157941ms
  E1204 06:42:19.665043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-281 @ 12/04/24 06:42:19.999
  I1204 06:42:20.009254 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 06:42:20.180259 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 06:42:20.180329 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 06:42:20.180352 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 06:42:20.186452 23 wait.go:40] Found 1 stateful pods, waiting for 3
  E1204 06:42:20.666219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:21.666587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:22.667119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:23.667944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:24.668444      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:25.668906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:26.669335      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:27.669715      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:28.669888      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:29.670373      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:30.187734 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1204 06:42:30.187829 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1204 06:42:30.187854 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/04/24 06:42:30.187
  STEP: Scale down will halt with unhealthy stateful pod @ 12/04/24 06:42:30.187
  I1204 06:42:30.196696 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 06:42:30.358209 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 06:42:30.358292 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 06:42:30.358320 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 06:42:30.358405 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 06:42:30.545552 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 06:42:30.545635 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 06:42:30.545664 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 06:42:30.545748 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1204 06:42:30.671412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:30.712677 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 06:42:30.712756 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 06:42:30.712793 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 06:42:30.712829 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1204 06:42:30.716984 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1204 06:42:31.672082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:32.672562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:33.673565      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:34.674082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:35.674605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:36.675090      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:37.675504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:38.676306      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:39.676753      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:40.677199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:40.722335 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1204 06:42:40.722413 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1204 06:42:40.722438 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1204 06:42:40.740047 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.99999952s
  E1204 06:42:41.677508      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:41.746449 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.994059964s
  E1204 06:42:42.678415      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:42.751192 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988117649s
  E1204 06:42:43.678675      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:43.757735 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.982737423s
  E1204 06:42:44.679728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:44.764310 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.976641366s
  E1204 06:42:45.680163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:45.769958 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.970398935s
  E1204 06:42:46.680616      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:46.776598 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.963810943s
  E1204 06:42:47.681678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:47.782296 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.957688481s
  E1204 06:42:48.682793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:48.788701 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.951641863s
  E1204 06:42:49.683679      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:42:49.795241 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 945.63875ms
  E1204 06:42:50.684066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-281 @ 12/04/24 06:42:50.795
  I1204 06:42:50.801921 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 06:42:50.979318 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 06:42:50.979392 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 06:42:50.979417 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 06:42:50.979522 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 06:42:51.159609 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 06:42:51.159696 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 06:42:51.159724 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 06:42:51.159817 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-281 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 06:42:51.324175 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 06:42:51.324271 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 06:42:51.324295 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 06:42:51.324316 23 rest.go:150] Scaling statefulset ss to 0
  E1204 06:42:51.684882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:52.685036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:53.685118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:54.685849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:55.686394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:56.686886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:57.687350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:58.688439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:42:59.688988      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:00.689511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/04/24 06:43:01.334
  I1204 06:43:01.334272 23 statefulset.go:138] Deleting all statefulset in ns statefulset-281
  I1204 06:43:01.338733 23 rest.go:150] Scaling statefulset ss to 0
  I1204 06:43:01.345071 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 06:43:01.348244 23 rest.go:88] Deleting statefulset ss
  I1204 06:43:01.364597 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-281" for this suite. @ 12/04/24 06:43:01.369
• [71.691 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 12/04/24 06:43:01.374
  I1204 06:43:01.374946 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubelet-test @ 12/04/24 06:43:01.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:01.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:01.391
  E1204 06:43:01.690609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:02.691358      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:03.421990 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2661" for this suite. @ 12/04/24 06:43:03.426
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 12/04/24 06:43:03.432
  I1204 06:43:03.432684 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:43:03.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:03.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:03.451
  STEP: creating service endpoint-test2 in namespace services-4992 @ 12/04/24 06:43:03.455
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4992 to expose endpoints map[] @ 12/04/24 06:43:03.468
  I1204 06:43:03.477693 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4992 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4992 @ 12/04/24 06:43:03.477
  E1204 06:43:03.692080      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:04.692973      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4992 to expose endpoints map[pod1:[80]] @ 12/04/24 06:43:05.498
  I1204 06:43:05.511029 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4992 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/04/24 06:43:05.511
  I1204 06:43:05.511143 23 resource.go:361] Creating new exec pod
  E1204 06:43:05.693789      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:06.694235      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:07.695036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:08.525709 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4992 exec execpodl2wsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1204 06:43:08.695781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:08.738660 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1204 06:43:08.738780 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:43:08.738987 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4992 exec execpodl2wsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.217.249 80'
  I1204 06:43:08.937040 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.217.249 80\nConnection to 10.105.217.249 80 port [tcp/http] succeeded!\n"
  I1204 06:43:08.937158 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4992 @ 12/04/24 06:43:08.937
  E1204 06:43:09.696932      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:10.697666      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4992 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/04/24 06:43:10.956
  I1204 06:43:10.972443 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4992 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/04/24 06:43:10.972
  E1204 06:43:11.697936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:11.973782 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4992 exec execpodl2wsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1204 06:43:12.192299 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1204 06:43:12.192397 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:43:12.192737 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4992 exec execpodl2wsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.217.249 80'
  I1204 06:43:12.389211 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.217.249 80\nConnection to 10.105.217.249 80 port [tcp/http] succeeded!\n"
  I1204 06:43:12.389290 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4992 @ 12/04/24 06:43:12.389
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4992 to expose endpoints map[pod2:[80]] @ 12/04/24 06:43:12.411
  E1204 06:43:12.698754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:13.431190 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4992 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/04/24 06:43:13.431
  E1204 06:43:13.699288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:14.431757 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4992 exec execpodl2wsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1204 06:43:14.637615 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1204 06:43:14.637710 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:43:14.637829 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4992 exec execpodl2wsb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.217.249 80'
  E1204 06:43:14.700380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:14.832957 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.217.249 80\nConnection to 10.105.217.249 80 port [tcp/http] succeeded!\n"
  I1204 06:43:14.833068 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4992 @ 12/04/24 06:43:14.833
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4992 to expose endpoints map[] @ 12/04/24 06:43:14.846
  E1204 06:43:15.701439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:15.865164 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-4992 exposes endpoints map[]
  I1204 06:43:15.883850 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4992" for this suite. @ 12/04/24 06:43:15.887
• [12.463 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/04/24 06:43:15.895
  I1204 06:43:15.895870 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svc-latency @ 12/04/24 06:43:15.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:15.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:15.912
  I1204 06:43:15.916391 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9067 @ 12/04/24 06:43:15.917
  I1204 06:43:15.925155      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9067, replica count: 1
  E1204 06:43:16.702672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:16.976300      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1204 06:43:17.703027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:17.976633      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 06:43:18.096123 23 service_latency.go:356] Created: latency-svc-dglnx
  I1204 06:43:18.105067 23 service_latency.go:363] Got endpoints: latency-svc-dglnx [28.011059ms]
  I1204 06:43:18.124345 23 service_latency.go:356] Created: latency-svc-kmpk6
  I1204 06:43:18.137590 23 service_latency.go:363] Got endpoints: latency-svc-kmpk6 [32.345086ms]
  I1204 06:43:18.137930 23 service_latency.go:356] Created: latency-svc-92txf
  I1204 06:43:18.145716 23 service_latency.go:363] Got endpoints: latency-svc-92txf [40.173309ms]
  I1204 06:43:18.148249 23 service_latency.go:356] Created: latency-svc-mqntc
  I1204 06:43:18.160659 23 service_latency.go:363] Got endpoints: latency-svc-mqntc [55.045493ms]
  I1204 06:43:18.163555 23 service_latency.go:356] Created: latency-svc-5ssjx
  I1204 06:43:18.174308 23 service_latency.go:363] Got endpoints: latency-svc-5ssjx [68.944254ms]
  I1204 06:43:18.182682 23 service_latency.go:356] Created: latency-svc-2hbgf
  I1204 06:43:18.188350 23 service_latency.go:363] Got endpoints: latency-svc-2hbgf [82.887573ms]
  I1204 06:43:18.199926 23 service_latency.go:356] Created: latency-svc-bj46j
  I1204 06:43:18.229322 23 service_latency.go:363] Got endpoints: latency-svc-bj46j [123.616671ms]
  I1204 06:43:18.230488 23 service_latency.go:356] Created: latency-svc-6tpkt
  I1204 06:43:18.237266 23 service_latency.go:363] Got endpoints: latency-svc-6tpkt [131.539628ms]
  I1204 06:43:18.240455 23 service_latency.go:356] Created: latency-svc-l45mn
  I1204 06:43:18.243935 23 service_latency.go:363] Got endpoints: latency-svc-l45mn [138.375988ms]
  I1204 06:43:18.287199 23 service_latency.go:356] Created: latency-svc-9rj69
  I1204 06:43:18.296726 23 service_latency.go:363] Got endpoints: latency-svc-9rj69 [191.066042ms]
  I1204 06:43:18.316117 23 service_latency.go:356] Created: latency-svc-hzm8q
  I1204 06:43:18.324265 23 service_latency.go:363] Got endpoints: latency-svc-hzm8q [218.635944ms]
  I1204 06:43:18.346616 23 service_latency.go:356] Created: latency-svc-xflr7
  I1204 06:43:18.351257 23 service_latency.go:363] Got endpoints: latency-svc-xflr7 [245.596549ms]
  I1204 06:43:18.359610 23 service_latency.go:356] Created: latency-svc-96t5f
  I1204 06:43:18.369987 23 service_latency.go:363] Got endpoints: latency-svc-96t5f [264.316618ms]
  I1204 06:43:18.376558 23 service_latency.go:356] Created: latency-svc-7pxhv
  I1204 06:43:18.387177 23 service_latency.go:363] Got endpoints: latency-svc-7pxhv [281.430103ms]
  I1204 06:43:18.393756 23 service_latency.go:356] Created: latency-svc-jxwfr
  I1204 06:43:18.402802 23 service_latency.go:363] Got endpoints: latency-svc-jxwfr [297.025394ms]
  I1204 06:43:18.408348 23 service_latency.go:356] Created: latency-svc-5tfgr
  I1204 06:43:18.415491 23 service_latency.go:363] Got endpoints: latency-svc-5tfgr [309.683715ms]
  I1204 06:43:18.419021 23 service_latency.go:356] Created: latency-svc-h9x5v
  I1204 06:43:18.435756 23 service_latency.go:363] Got endpoints: latency-svc-h9x5v [298.070006ms]
  I1204 06:43:18.436299 23 service_latency.go:356] Created: latency-svc-dbgz2
  I1204 06:43:18.439632 23 service_latency.go:363] Got endpoints: latency-svc-dbgz2 [293.826762ms]
  I1204 06:43:18.460751 23 service_latency.go:356] Created: latency-svc-g5b6d
  I1204 06:43:18.473594 23 service_latency.go:363] Got endpoints: latency-svc-g5b6d [312.836533ms]
  I1204 06:43:18.477198 23 service_latency.go:356] Created: latency-svc-6zsd8
  I1204 06:43:18.480449 23 service_latency.go:363] Got endpoints: latency-svc-6zsd8 [306.033507ms]
  I1204 06:43:18.495270 23 service_latency.go:356] Created: latency-svc-mtl6z
  I1204 06:43:18.503029 23 service_latency.go:363] Got endpoints: latency-svc-mtl6z [314.607399ms]
  I1204 06:43:18.506553 23 service_latency.go:356] Created: latency-svc-7bzfc
  I1204 06:43:18.512744 23 service_latency.go:363] Got endpoints: latency-svc-7bzfc [283.319386ms]
  I1204 06:43:18.515711 23 service_latency.go:356] Created: latency-svc-4mkjd
  I1204 06:43:18.525625 23 service_latency.go:363] Got endpoints: latency-svc-4mkjd [288.293155ms]
  I1204 06:43:18.530802 23 service_latency.go:356] Created: latency-svc-vgt6x
  I1204 06:43:18.536048 23 service_latency.go:363] Got endpoints: latency-svc-vgt6x [292.005838ms]
  I1204 06:43:18.545397 23 service_latency.go:356] Created: latency-svc-zbgfm
  I1204 06:43:18.549511 23 service_latency.go:363] Got endpoints: latency-svc-zbgfm [252.689351ms]
  I1204 06:43:18.558128 23 service_latency.go:356] Created: latency-svc-v9hs2
  I1204 06:43:18.583000 23 service_latency.go:363] Got endpoints: latency-svc-v9hs2 [258.6224ms]
  I1204 06:43:18.597340 23 service_latency.go:356] Created: latency-svc-ns29v
  I1204 06:43:18.604100 23 service_latency.go:363] Got endpoints: latency-svc-ns29v [252.762381ms]
  I1204 06:43:18.605821 23 service_latency.go:356] Created: latency-svc-g7b49
  I1204 06:43:18.609401 23 service_latency.go:363] Got endpoints: latency-svc-g7b49 [239.312615ms]
  I1204 06:43:18.617254 23 service_latency.go:356] Created: latency-svc-jz8wd
  I1204 06:43:18.626714 23 service_latency.go:363] Got endpoints: latency-svc-jz8wd [239.433181ms]
  I1204 06:43:18.629216 23 service_latency.go:356] Created: latency-svc-pdx5z
  I1204 06:43:18.636905 23 service_latency.go:363] Got endpoints: latency-svc-pdx5z [233.998543ms]
  I1204 06:43:18.639631 23 service_latency.go:356] Created: latency-svc-qtlsx
  I1204 06:43:18.643275 23 service_latency.go:363] Got endpoints: latency-svc-qtlsx [227.69258ms]
  I1204 06:43:18.658374 23 service_latency.go:356] Created: latency-svc-xhqhp
  I1204 06:43:18.663145 23 service_latency.go:363] Got endpoints: latency-svc-xhqhp [227.299398ms]
  I1204 06:43:18.664684 23 service_latency.go:356] Created: latency-svc-bzjgj
  I1204 06:43:18.668938 23 service_latency.go:363] Got endpoints: latency-svc-bzjgj [229.25824ms]
  I1204 06:43:18.675064 23 service_latency.go:356] Created: latency-svc-6wk66
  E1204 06:43:18.703547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:18.713268 23 service_latency.go:363] Got endpoints: latency-svc-6wk66 [239.58096ms]
  I1204 06:43:18.716562 23 service_latency.go:356] Created: latency-svc-7qc6b
  I1204 06:43:18.721883 23 service_latency.go:363] Got endpoints: latency-svc-7qc6b [241.367183ms]
  I1204 06:43:18.728384 23 service_latency.go:356] Created: latency-svc-lfpk4
  I1204 06:43:18.731596 23 service_latency.go:363] Got endpoints: latency-svc-lfpk4 [228.477517ms]
  I1204 06:43:18.739782 23 service_latency.go:356] Created: latency-svc-jts6v
  I1204 06:43:18.757787 23 service_latency.go:363] Got endpoints: latency-svc-jts6v [244.946912ms]
  I1204 06:43:18.759416 23 service_latency.go:356] Created: latency-svc-tgvb5
  I1204 06:43:18.763992 23 service_latency.go:363] Got endpoints: latency-svc-tgvb5 [238.2793ms]
  I1204 06:43:18.771288 23 service_latency.go:356] Created: latency-svc-b55pw
  I1204 06:43:18.786149 23 service_latency.go:363] Got endpoints: latency-svc-b55pw [250.00349ms]
  I1204 06:43:18.792043 23 service_latency.go:356] Created: latency-svc-5n6jf
  I1204 06:43:18.798663 23 service_latency.go:363] Got endpoints: latency-svc-5n6jf [249.078313ms]
  I1204 06:43:18.804835 23 service_latency.go:356] Created: latency-svc-8xmnd
  I1204 06:43:18.842906 23 service_latency.go:363] Got endpoints: latency-svc-8xmnd [259.800798ms]
  I1204 06:43:18.854268 23 service_latency.go:356] Created: latency-svc-fzs45
  I1204 06:43:18.859153 23 service_latency.go:363] Got endpoints: latency-svc-fzs45 [254.953764ms]
  I1204 06:43:18.870601 23 service_latency.go:356] Created: latency-svc-htz5x
  I1204 06:43:18.877587 23 service_latency.go:363] Got endpoints: latency-svc-htz5x [268.10839ms]
  I1204 06:43:18.879655 23 service_latency.go:356] Created: latency-svc-p6fxh
  I1204 06:43:18.884363 23 service_latency.go:363] Got endpoints: latency-svc-p6fxh [257.55826ms]
  I1204 06:43:18.886452 23 service_latency.go:356] Created: latency-svc-s74n9
  I1204 06:43:18.897580 23 service_latency.go:363] Got endpoints: latency-svc-s74n9 [260.558267ms]
  I1204 06:43:18.898436 23 service_latency.go:356] Created: latency-svc-9ppbp
  I1204 06:43:18.905402 23 service_latency.go:363] Got endpoints: latency-svc-9ppbp [262.051736ms]
  I1204 06:43:18.908943 23 service_latency.go:356] Created: latency-svc-kbgdb
  I1204 06:43:18.915740 23 service_latency.go:356] Created: latency-svc-768fx
  I1204 06:43:18.924526 23 service_latency.go:356] Created: latency-svc-xfg28
  I1204 06:43:18.934675 23 service_latency.go:356] Created: latency-svc-6xp44
  I1204 06:43:18.965608 23 service_latency.go:363] Got endpoints: latency-svc-kbgdb [302.376658ms]
  I1204 06:43:18.979363 23 service_latency.go:356] Created: latency-svc-skhrs
  I1204 06:43:18.989741 23 service_latency.go:356] Created: latency-svc-chqfr
  I1204 06:43:18.998314 23 service_latency.go:356] Created: latency-svc-2tgln
  I1204 06:43:19.009702 23 service_latency.go:363] Got endpoints: latency-svc-768fx [340.665382ms]
  I1204 06:43:19.012522 23 service_latency.go:356] Created: latency-svc-pdjjg
  I1204 06:43:19.023504 23 service_latency.go:356] Created: latency-svc-8w7mq
  I1204 06:43:19.032873 23 service_latency.go:356] Created: latency-svc-qpgp9
  I1204 06:43:19.044846 23 service_latency.go:356] Created: latency-svc-nknc4
  I1204 06:43:19.054614 23 service_latency.go:363] Got endpoints: latency-svc-xfg28 [341.219248ms]
  I1204 06:43:19.055577 23 service_latency.go:356] Created: latency-svc-g2v8k
  I1204 06:43:19.066063 23 service_latency.go:356] Created: latency-svc-7mp2s
  I1204 06:43:19.102625 23 service_latency.go:356] Created: latency-svc-hd5l8
  I1204 06:43:19.102747 23 service_latency.go:363] Got endpoints: latency-svc-6xp44 [380.79559ms]
  I1204 06:43:19.110619 23 service_latency.go:356] Created: latency-svc-465bs
  I1204 06:43:19.124371 23 service_latency.go:356] Created: latency-svc-q2xnx
  I1204 06:43:19.138228 23 service_latency.go:356] Created: latency-svc-cmfjh
  I1204 06:43:19.149175 23 service_latency.go:356] Created: latency-svc-dj5f7
  I1204 06:43:19.150321 23 service_latency.go:363] Got endpoints: latency-svc-skhrs [418.673757ms]
  I1204 06:43:19.156533 23 service_latency.go:356] Created: latency-svc-stpfj
  I1204 06:43:19.180030 23 service_latency.go:356] Created: latency-svc-89wl2
  I1204 06:43:19.219790 23 service_latency.go:363] Got endpoints: latency-svc-chqfr [461.932579ms]
  I1204 06:43:19.234210 23 service_latency.go:356] Created: latency-svc-n4bv7
  I1204 06:43:19.250726 23 service_latency.go:363] Got endpoints: latency-svc-2tgln [486.674471ms]
  I1204 06:43:19.273908 23 service_latency.go:356] Created: latency-svc-pmpcx
  I1204 06:43:19.302578 23 service_latency.go:363] Got endpoints: latency-svc-pdjjg [516.353542ms]
  I1204 06:43:19.318611 23 service_latency.go:356] Created: latency-svc-dwtgx
  I1204 06:43:19.351130 23 service_latency.go:363] Got endpoints: latency-svc-8w7mq [552.363925ms]
  I1204 06:43:19.366422 23 service_latency.go:356] Created: latency-svc-ns5gl
  I1204 06:43:19.408187 23 service_latency.go:363] Got endpoints: latency-svc-qpgp9 [565.182297ms]
  I1204 06:43:19.422271 23 service_latency.go:356] Created: latency-svc-5n5wn
  I1204 06:43:19.452481 23 service_latency.go:363] Got endpoints: latency-svc-nknc4 [593.258924ms]
  I1204 06:43:19.466304 23 service_latency.go:356] Created: latency-svc-wrk7b
  I1204 06:43:19.500905 23 service_latency.go:363] Got endpoints: latency-svc-g2v8k [623.23173ms]
  I1204 06:43:19.525207 23 service_latency.go:356] Created: latency-svc-wck28
  I1204 06:43:19.551420 23 service_latency.go:363] Got endpoints: latency-svc-7mp2s [666.986863ms]
  I1204 06:43:19.568618 23 service_latency.go:356] Created: latency-svc-b69rw
  I1204 06:43:19.601469 23 service_latency.go:363] Got endpoints: latency-svc-hd5l8 [703.805425ms]
  I1204 06:43:19.620923 23 service_latency.go:356] Created: latency-svc-59qs7
  I1204 06:43:19.661741 23 service_latency.go:363] Got endpoints: latency-svc-465bs [756.262354ms]
  I1204 06:43:19.674969 23 service_latency.go:356] Created: latency-svc-5zxtj
  I1204 06:43:19.702653 23 service_latency.go:363] Got endpoints: latency-svc-q2xnx [736.972246ms]
  E1204 06:43:19.703568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:19.714667 23 service_latency.go:356] Created: latency-svc-skx4w
  I1204 06:43:19.753001 23 service_latency.go:363] Got endpoints: latency-svc-cmfjh [743.188533ms]
  I1204 06:43:19.769882 23 service_latency.go:356] Created: latency-svc-5txv4
  I1204 06:43:19.801571 23 service_latency.go:363] Got endpoints: latency-svc-dj5f7 [746.837704ms]
  I1204 06:43:19.815718 23 service_latency.go:356] Created: latency-svc-mk5lt
  I1204 06:43:19.852531 23 service_latency.go:363] Got endpoints: latency-svc-stpfj [749.713305ms]
  I1204 06:43:19.866572 23 service_latency.go:356] Created: latency-svc-48qr2
  I1204 06:43:19.900900 23 service_latency.go:363] Got endpoints: latency-svc-89wl2 [750.532731ms]
  I1204 06:43:19.924643 23 service_latency.go:356] Created: latency-svc-jmwfv
  I1204 06:43:19.951646 23 service_latency.go:363] Got endpoints: latency-svc-n4bv7 [731.77964ms]
  I1204 06:43:19.965094 23 service_latency.go:356] Created: latency-svc-v95gj
  I1204 06:43:20.005087 23 service_latency.go:363] Got endpoints: latency-svc-pmpcx [754.281413ms]
  I1204 06:43:20.019302 23 service_latency.go:356] Created: latency-svc-dwsbz
  I1204 06:43:20.051131 23 service_latency.go:363] Got endpoints: latency-svc-dwtgx [748.469334ms]
  I1204 06:43:20.065842 23 service_latency.go:356] Created: latency-svc-nztdg
  I1204 06:43:20.114491 23 service_latency.go:363] Got endpoints: latency-svc-ns5gl [763.263038ms]
  I1204 06:43:20.129810 23 service_latency.go:356] Created: latency-svc-tzjd2
  I1204 06:43:20.151638 23 service_latency.go:363] Got endpoints: latency-svc-5n5wn [743.361476ms]
  I1204 06:43:20.168265 23 service_latency.go:356] Created: latency-svc-fcc5s
  I1204 06:43:20.201826 23 service_latency.go:363] Got endpoints: latency-svc-wrk7b [749.254741ms]
  I1204 06:43:20.223684 23 service_latency.go:356] Created: latency-svc-gw248
  I1204 06:43:20.250958 23 service_latency.go:363] Got endpoints: latency-svc-wck28 [749.954033ms]
  I1204 06:43:20.274638 23 service_latency.go:356] Created: latency-svc-txfk2
  I1204 06:43:20.301667 23 service_latency.go:363] Got endpoints: latency-svc-b69rw [750.126127ms]
  I1204 06:43:20.344136 23 service_latency.go:356] Created: latency-svc-crzn9
  I1204 06:43:20.352678 23 service_latency.go:363] Got endpoints: latency-svc-59qs7 [751.114853ms]
  I1204 06:43:20.368817 23 service_latency.go:356] Created: latency-svc-kbt7h
  I1204 06:43:20.402515 23 service_latency.go:363] Got endpoints: latency-svc-5zxtj [740.691679ms]
  I1204 06:43:20.422019 23 service_latency.go:356] Created: latency-svc-rp2cn
  I1204 06:43:20.455163 23 service_latency.go:363] Got endpoints: latency-svc-skx4w [752.400113ms]
  I1204 06:43:20.479940 23 service_latency.go:356] Created: latency-svc-ftfsb
  I1204 06:43:20.502896 23 service_latency.go:363] Got endpoints: latency-svc-5txv4 [749.794359ms]
  I1204 06:43:20.522123 23 service_latency.go:356] Created: latency-svc-pwhnn
  I1204 06:43:20.552198 23 service_latency.go:363] Got endpoints: latency-svc-mk5lt [750.537907ms]
  I1204 06:43:20.568799 23 service_latency.go:356] Created: latency-svc-7vtct
  I1204 06:43:20.602288 23 service_latency.go:363] Got endpoints: latency-svc-48qr2 [749.659866ms]
  I1204 06:43:20.617542 23 service_latency.go:356] Created: latency-svc-cnjbs
  I1204 06:43:20.651847 23 service_latency.go:363] Got endpoints: latency-svc-jmwfv [750.800721ms]
  I1204 06:43:20.675802 23 service_latency.go:356] Created: latency-svc-5hh7c
  I1204 06:43:20.702774 23 service_latency.go:363] Got endpoints: latency-svc-v95gj [751.015464ms]
  E1204 06:43:20.703769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:20.719697 23 service_latency.go:356] Created: latency-svc-wplbd
  I1204 06:43:20.752404 23 service_latency.go:363] Got endpoints: latency-svc-dwsbz [747.209916ms]
  I1204 06:43:20.783106 23 service_latency.go:356] Created: latency-svc-llhgg
  I1204 06:43:20.802225 23 service_latency.go:363] Got endpoints: latency-svc-nztdg [750.976775ms]
  I1204 06:43:20.838421 23 service_latency.go:356] Created: latency-svc-6969b
  I1204 06:43:20.852096 23 service_latency.go:363] Got endpoints: latency-svc-tzjd2 [737.532237ms]
  I1204 06:43:20.864717 23 service_latency.go:356] Created: latency-svc-s6hz2
  I1204 06:43:20.901788 23 service_latency.go:363] Got endpoints: latency-svc-fcc5s [750.067653ms]
  I1204 06:43:20.916141 23 service_latency.go:356] Created: latency-svc-xmmvz
  I1204 06:43:20.953210 23 service_latency.go:363] Got endpoints: latency-svc-gw248 [751.275298ms]
  I1204 06:43:20.967466 23 service_latency.go:356] Created: latency-svc-nfztw
  I1204 06:43:21.006188 23 service_latency.go:363] Got endpoints: latency-svc-txfk2 [755.13066ms]
  I1204 06:43:21.032607 23 service_latency.go:356] Created: latency-svc-2q2wp
  I1204 06:43:21.051371 23 service_latency.go:363] Got endpoints: latency-svc-crzn9 [749.631514ms]
  I1204 06:43:21.063344 23 service_latency.go:356] Created: latency-svc-vlrp2
  I1204 06:43:21.110477 23 service_latency.go:363] Got endpoints: latency-svc-kbt7h [757.711304ms]
  I1204 06:43:21.124300 23 service_latency.go:356] Created: latency-svc-5bndj
  I1204 06:43:21.150777 23 service_latency.go:363] Got endpoints: latency-svc-rp2cn [748.159423ms]
  I1204 06:43:21.168148 23 service_latency.go:356] Created: latency-svc-zkz5n
  I1204 06:43:21.216163 23 service_latency.go:363] Got endpoints: latency-svc-ftfsb [760.897911ms]
  I1204 06:43:21.233209 23 service_latency.go:356] Created: latency-svc-qgmr4
  I1204 06:43:21.251556 23 service_latency.go:363] Got endpoints: latency-svc-pwhnn [748.557427ms]
  I1204 06:43:21.271208 23 service_latency.go:356] Created: latency-svc-nxs8t
  I1204 06:43:21.301966 23 service_latency.go:363] Got endpoints: latency-svc-7vtct [749.678115ms]
  I1204 06:43:21.323759 23 service_latency.go:356] Created: latency-svc-gmpvt
  I1204 06:43:21.351884 23 service_latency.go:363] Got endpoints: latency-svc-cnjbs [749.495975ms]
  I1204 06:43:21.366661 23 service_latency.go:356] Created: latency-svc-hmcn8
  I1204 06:43:21.399767 23 service_latency.go:363] Got endpoints: latency-svc-5hh7c [747.816527ms]
  I1204 06:43:21.420222 23 service_latency.go:356] Created: latency-svc-cf2bv
  I1204 06:43:21.452220 23 service_latency.go:363] Got endpoints: latency-svc-wplbd [749.356889ms]
  I1204 06:43:21.465556 23 service_latency.go:356] Created: latency-svc-vgdp9
  I1204 06:43:21.502963 23 service_latency.go:363] Got endpoints: latency-svc-llhgg [750.461566ms]
  I1204 06:43:21.528684 23 service_latency.go:356] Created: latency-svc-dvmcb
  I1204 06:43:21.563488 23 service_latency.go:363] Got endpoints: latency-svc-6969b [761.165986ms]
  I1204 06:43:21.581764 23 service_latency.go:356] Created: latency-svc-vjs8n
  I1204 06:43:21.601947 23 service_latency.go:363] Got endpoints: latency-svc-s6hz2 [749.746067ms]
  I1204 06:43:21.617095 23 service_latency.go:356] Created: latency-svc-q28cn
  I1204 06:43:21.651568 23 service_latency.go:363] Got endpoints: latency-svc-xmmvz [749.716515ms]
  I1204 06:43:21.664723 23 service_latency.go:356] Created: latency-svc-fcmlq
  I1204 06:43:21.700572 23 service_latency.go:363] Got endpoints: latency-svc-nfztw [747.263571ms]
  E1204 06:43:21.704790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:21.714599 23 service_latency.go:356] Created: latency-svc-wm5sq
  I1204 06:43:21.759937 23 service_latency.go:363] Got endpoints: latency-svc-2q2wp [753.651642ms]
  I1204 06:43:21.774504 23 service_latency.go:356] Created: latency-svc-qsm7d
  I1204 06:43:21.802885 23 service_latency.go:363] Got endpoints: latency-svc-vlrp2 [751.451438ms]
  I1204 06:43:21.818555 23 service_latency.go:356] Created: latency-svc-pxgv5
  I1204 06:43:21.854310 23 service_latency.go:363] Got endpoints: latency-svc-5bndj [743.725676ms]
  I1204 06:43:21.868492 23 service_latency.go:356] Created: latency-svc-k2j5k
  I1204 06:43:21.900556 23 service_latency.go:363] Got endpoints: latency-svc-zkz5n [749.672675ms]
  I1204 06:43:21.915332 23 service_latency.go:356] Created: latency-svc-b5xrn
  I1204 06:43:21.952088 23 service_latency.go:363] Got endpoints: latency-svc-qgmr4 [735.848664ms]
  I1204 06:43:21.975864 23 service_latency.go:356] Created: latency-svc-wwn5s
  I1204 06:43:22.001447 23 service_latency.go:363] Got endpoints: latency-svc-nxs8t [749.79611ms]
  I1204 06:43:22.015049 23 service_latency.go:356] Created: latency-svc-wbgjh
  I1204 06:43:22.051411 23 service_latency.go:363] Got endpoints: latency-svc-gmpvt [749.340751ms]
  I1204 06:43:22.083123 23 service_latency.go:356] Created: latency-svc-9hllc
  I1204 06:43:22.103888 23 service_latency.go:363] Got endpoints: latency-svc-hmcn8 [751.886877ms]
  I1204 06:43:22.123685 23 service_latency.go:356] Created: latency-svc-bqvf5
  I1204 06:43:22.152688 23 service_latency.go:363] Got endpoints: latency-svc-cf2bv [752.810168ms]
  I1204 06:43:22.168953 23 service_latency.go:356] Created: latency-svc-gk549
  I1204 06:43:22.201804 23 service_latency.go:363] Got endpoints: latency-svc-vgdp9 [749.479357ms]
  I1204 06:43:22.215973 23 service_latency.go:356] Created: latency-svc-mjpg2
  I1204 06:43:22.251294 23 service_latency.go:363] Got endpoints: latency-svc-dvmcb [748.231565ms]
  I1204 06:43:22.269172 23 service_latency.go:356] Created: latency-svc-f6t46
  I1204 06:43:22.306879 23 service_latency.go:363] Got endpoints: latency-svc-vjs8n [743.305905ms]
  I1204 06:43:22.320923 23 service_latency.go:356] Created: latency-svc-cdhg8
  I1204 06:43:22.354126 23 service_latency.go:363] Got endpoints: latency-svc-q28cn [752.08725ms]
  I1204 06:43:22.367653 23 service_latency.go:356] Created: latency-svc-tx8dj
  I1204 06:43:22.400378 23 service_latency.go:363] Got endpoints: latency-svc-fcmlq [748.745472ms]
  I1204 06:43:22.429261 23 service_latency.go:356] Created: latency-svc-xcnl9
  I1204 06:43:22.453268 23 service_latency.go:363] Got endpoints: latency-svc-wm5sq [752.603974ms]
  I1204 06:43:22.467696 23 service_latency.go:356] Created: latency-svc-dbmx5
  I1204 06:43:22.501045 23 service_latency.go:363] Got endpoints: latency-svc-qsm7d [741.015683ms]
  I1204 06:43:22.514031 23 service_latency.go:356] Created: latency-svc-t88sh
  I1204 06:43:22.554303 23 service_latency.go:363] Got endpoints: latency-svc-pxgv5 [751.308229ms]
  I1204 06:43:22.569399 23 service_latency.go:356] Created: latency-svc-7kpxv
  I1204 06:43:22.602807 23 service_latency.go:363] Got endpoints: latency-svc-k2j5k [748.361476ms]
  I1204 06:43:22.617909 23 service_latency.go:356] Created: latency-svc-klw9m
  I1204 06:43:22.652627 23 service_latency.go:363] Got endpoints: latency-svc-b5xrn [751.965117ms]
  I1204 06:43:22.666527 23 service_latency.go:356] Created: latency-svc-dfvxd
  I1204 06:43:22.701036 23 service_latency.go:363] Got endpoints: latency-svc-wwn5s [748.848697ms]
  E1204 06:43:22.705099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:22.714700 23 service_latency.go:356] Created: latency-svc-jdf7t
  I1204 06:43:22.759658 23 service_latency.go:363] Got endpoints: latency-svc-wbgjh [758.129438ms]
  I1204 06:43:22.783967 23 service_latency.go:356] Created: latency-svc-m2229
  I1204 06:43:22.800656 23 service_latency.go:363] Got endpoints: latency-svc-9hllc [749.123613ms]
  I1204 06:43:22.813901 23 service_latency.go:356] Created: latency-svc-cxdv4
  I1204 06:43:22.853564 23 service_latency.go:363] Got endpoints: latency-svc-bqvf5 [749.552821ms]
  I1204 06:43:22.868712 23 service_latency.go:356] Created: latency-svc-6gts2
  I1204 06:43:22.901192 23 service_latency.go:363] Got endpoints: latency-svc-gk549 [748.405735ms]
  I1204 06:43:22.914973 23 service_latency.go:356] Created: latency-svc-jzqt2
  I1204 06:43:22.953046 23 service_latency.go:363] Got endpoints: latency-svc-mjpg2 [751.162234ms]
  I1204 06:43:22.980182 23 service_latency.go:356] Created: latency-svc-6hsd4
  I1204 06:43:23.001334 23 service_latency.go:363] Got endpoints: latency-svc-f6t46 [749.938822ms]
  I1204 06:43:23.024615 23 service_latency.go:356] Created: latency-svc-rnczd
  I1204 06:43:23.051080 23 service_latency.go:363] Got endpoints: latency-svc-cdhg8 [744.106858ms]
  I1204 06:43:23.067302 23 service_latency.go:356] Created: latency-svc-brrc9
  I1204 06:43:23.101357 23 service_latency.go:363] Got endpoints: latency-svc-tx8dj [747.136386ms]
  I1204 06:43:23.112602 23 service_latency.go:356] Created: latency-svc-txq4n
  I1204 06:43:23.151414 23 service_latency.go:363] Got endpoints: latency-svc-xcnl9 [750.912361ms]
  I1204 06:43:23.182099 23 service_latency.go:356] Created: latency-svc-2jctm
  I1204 06:43:23.202004 23 service_latency.go:363] Got endpoints: latency-svc-dbmx5 [748.622561ms]
  I1204 06:43:23.215059 23 service_latency.go:356] Created: latency-svc-rtmnf
  I1204 06:43:23.252858 23 service_latency.go:363] Got endpoints: latency-svc-t88sh [751.72186ms]
  I1204 06:43:23.268158 23 service_latency.go:356] Created: latency-svc-s87bs
  I1204 06:43:23.311398 23 service_latency.go:363] Got endpoints: latency-svc-7kpxv [757.013387ms]
  I1204 06:43:23.326524 23 service_latency.go:356] Created: latency-svc-znhvh
  I1204 06:43:23.353631 23 service_latency.go:363] Got endpoints: latency-svc-klw9m [750.693832ms]
  I1204 06:43:23.368167 23 service_latency.go:356] Created: latency-svc-hgzdx
  I1204 06:43:23.415917 23 service_latency.go:363] Got endpoints: latency-svc-dfvxd [763.193678ms]
  I1204 06:43:23.434430 23 service_latency.go:356] Created: latency-svc-5tlmh
  I1204 06:43:23.451361 23 service_latency.go:363] Got endpoints: latency-svc-jdf7t [750.209189ms]
  I1204 06:43:23.465382 23 service_latency.go:356] Created: latency-svc-mhb9t
  I1204 06:43:23.502882 23 service_latency.go:363] Got endpoints: latency-svc-m2229 [743.110134ms]
  I1204 06:43:23.529654 23 service_latency.go:356] Created: latency-svc-jtmnf
  I1204 06:43:23.551681 23 service_latency.go:363] Got endpoints: latency-svc-cxdv4 [750.939133ms]
  I1204 06:43:23.566386 23 service_latency.go:356] Created: latency-svc-wsfbf
  I1204 06:43:23.602401 23 service_latency.go:363] Got endpoints: latency-svc-6gts2 [748.723228ms]
  I1204 06:43:23.615232 23 service_latency.go:356] Created: latency-svc-b8cd5
  I1204 06:43:23.652010 23 service_latency.go:363] Got endpoints: latency-svc-jzqt2 [750.725288ms]
  I1204 06:43:23.665469 23 service_latency.go:356] Created: latency-svc-7vvbc
  I1204 06:43:23.700678 23 service_latency.go:363] Got endpoints: latency-svc-6hsd4 [747.525556ms]
  E1204 06:43:23.705806      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:23.713314 23 service_latency.go:356] Created: latency-svc-qvztb
  I1204 06:43:23.753285 23 service_latency.go:363] Got endpoints: latency-svc-rnczd [751.837599ms]
  I1204 06:43:23.767043 23 service_latency.go:356] Created: latency-svc-gmg8h
  I1204 06:43:23.802271 23 service_latency.go:363] Got endpoints: latency-svc-brrc9 [751.065984ms]
  I1204 06:43:23.817602 23 service_latency.go:356] Created: latency-svc-h5pl5
  I1204 06:43:23.851515 23 service_latency.go:363] Got endpoints: latency-svc-txq4n [750.074649ms]
  I1204 06:43:23.865428 23 service_latency.go:356] Created: latency-svc-8vrx5
  I1204 06:43:23.902366 23 service_latency.go:363] Got endpoints: latency-svc-2jctm [750.835758ms]
  I1204 06:43:23.916310 23 service_latency.go:356] Created: latency-svc-txcdk
  I1204 06:43:23.966504 23 service_latency.go:363] Got endpoints: latency-svc-rtmnf [764.370689ms]
  I1204 06:43:23.981180 23 service_latency.go:356] Created: latency-svc-4npdc
  I1204 06:43:24.003323 23 service_latency.go:363] Got endpoints: latency-svc-s87bs [750.320112ms]
  I1204 06:43:24.019158 23 service_latency.go:356] Created: latency-svc-l64qb
  I1204 06:43:24.052121 23 service_latency.go:363] Got endpoints: latency-svc-znhvh [740.582346ms]
  I1204 06:43:24.080044 23 service_latency.go:356] Created: latency-svc-wv2sh
  I1204 06:43:24.101779 23 service_latency.go:363] Got endpoints: latency-svc-hgzdx [748.051161ms]
  I1204 06:43:24.117707 23 service_latency.go:356] Created: latency-svc-td5kr
  I1204 06:43:24.153972 23 service_latency.go:363] Got endpoints: latency-svc-5tlmh [737.974783ms]
  I1204 06:43:24.172606 23 service_latency.go:356] Created: latency-svc-85dqv
  I1204 06:43:24.200697 23 service_latency.go:363] Got endpoints: latency-svc-mhb9t [749.252083ms]
  I1204 06:43:24.225629 23 service_latency.go:356] Created: latency-svc-spvjm
  I1204 06:43:24.251376 23 service_latency.go:363] Got endpoints: latency-svc-jtmnf [748.376512ms]
  I1204 06:43:24.266327 23 service_latency.go:356] Created: latency-svc-2bjbm
  I1204 06:43:24.301406 23 service_latency.go:363] Got endpoints: latency-svc-wsfbf [749.630946ms]
  I1204 06:43:24.315661 23 service_latency.go:356] Created: latency-svc-phx6j
  I1204 06:43:24.353054 23 service_latency.go:363] Got endpoints: latency-svc-b8cd5 [750.54617ms]
  I1204 06:43:24.367503 23 service_latency.go:356] Created: latency-svc-kzvq8
  I1204 06:43:24.415117 23 service_latency.go:363] Got endpoints: latency-svc-7vvbc [763.002243ms]
  I1204 06:43:24.430519 23 service_latency.go:356] Created: latency-svc-b4vkt
  I1204 06:43:24.449840 23 service_latency.go:363] Got endpoints: latency-svc-qvztb [749.065477ms]
  I1204 06:43:24.465723 23 service_latency.go:356] Created: latency-svc-lqpw6
  I1204 06:43:24.502608 23 service_latency.go:363] Got endpoints: latency-svc-gmg8h [749.216519ms]
  I1204 06:43:24.533616 23 service_latency.go:356] Created: latency-svc-dljd9
  I1204 06:43:24.551976 23 service_latency.go:363] Got endpoints: latency-svc-h5pl5 [749.605152ms]
  I1204 06:43:24.569136 23 service_latency.go:356] Created: latency-svc-pcx58
  I1204 06:43:24.603783 23 service_latency.go:363] Got endpoints: latency-svc-8vrx5 [752.158215ms]
  I1204 06:43:24.618248 23 service_latency.go:356] Created: latency-svc-64bdf
  I1204 06:43:24.652240 23 service_latency.go:363] Got endpoints: latency-svc-txcdk [749.782723ms]
  I1204 06:43:24.675746 23 service_latency.go:356] Created: latency-svc-8tdnc
  I1204 06:43:24.700402 23 service_latency.go:363] Got endpoints: latency-svc-4npdc [733.792989ms]
  E1204 06:43:24.706544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:24.713814 23 service_latency.go:356] Created: latency-svc-5jrn9
  I1204 06:43:24.753855 23 service_latency.go:363] Got endpoints: latency-svc-l64qb [750.425597ms]
  I1204 06:43:24.766789 23 service_latency.go:356] Created: latency-svc-8wxn4
  I1204 06:43:24.803335 23 service_latency.go:363] Got endpoints: latency-svc-wv2sh [751.087611ms]
  I1204 06:43:24.818787 23 service_latency.go:356] Created: latency-svc-gpbjf
  I1204 06:43:24.856160 23 service_latency.go:363] Got endpoints: latency-svc-td5kr [754.266247ms]
  I1204 06:43:24.869955 23 service_latency.go:356] Created: latency-svc-rf2gr
  I1204 06:43:24.902480 23 service_latency.go:363] Got endpoints: latency-svc-85dqv [748.402233ms]
  I1204 06:43:24.917031 23 service_latency.go:356] Created: latency-svc-wwxtn
  I1204 06:43:24.951384 23 service_latency.go:363] Got endpoints: latency-svc-spvjm [750.585709ms]
  I1204 06:43:24.984586 23 service_latency.go:356] Created: latency-svc-bjlm9
  I1204 06:43:25.001897 23 service_latency.go:363] Got endpoints: latency-svc-2bjbm [750.437264ms]
  I1204 06:43:25.015180 23 service_latency.go:356] Created: latency-svc-445bx
  I1204 06:43:25.054487 23 service_latency.go:363] Got endpoints: latency-svc-phx6j [752.970071ms]
  I1204 06:43:25.069300 23 service_latency.go:356] Created: latency-svc-2ntpv
  I1204 06:43:25.101874 23 service_latency.go:363] Got endpoints: latency-svc-kzvq8 [748.671402ms]
  I1204 06:43:25.123653 23 service_latency.go:356] Created: latency-svc-ch44h
  I1204 06:43:25.151617 23 service_latency.go:363] Got endpoints: latency-svc-b4vkt [736.398145ms]
  I1204 06:43:25.166222 23 service_latency.go:356] Created: latency-svc-hdq4r
  I1204 06:43:25.201902 23 service_latency.go:363] Got endpoints: latency-svc-lqpw6 [751.987984ms]
  I1204 06:43:25.217696 23 service_latency.go:356] Created: latency-svc-4f2dx
  I1204 06:43:25.251579 23 service_latency.go:363] Got endpoints: latency-svc-dljd9 [748.856964ms]
  I1204 06:43:25.268184 23 service_latency.go:356] Created: latency-svc-8srls
  I1204 06:43:25.302029 23 service_latency.go:363] Got endpoints: latency-svc-pcx58 [749.942436ms]
  I1204 06:43:25.324509 23 service_latency.go:356] Created: latency-svc-frkbl
  I1204 06:43:25.353509 23 service_latency.go:363] Got endpoints: latency-svc-64bdf [749.566053ms]
  I1204 06:43:25.367215 23 service_latency.go:356] Created: latency-svc-nhrh6
  I1204 06:43:25.404178 23 service_latency.go:363] Got endpoints: latency-svc-8tdnc [751.833314ms]
  I1204 06:43:25.421002 23 service_latency.go:356] Created: latency-svc-grgnw
  I1204 06:43:25.450580 23 service_latency.go:363] Got endpoints: latency-svc-5jrn9 [750.07424ms]
  I1204 06:43:25.465639 23 service_latency.go:356] Created: latency-svc-fq5ld
  I1204 06:43:25.517696 23 service_latency.go:363] Got endpoints: latency-svc-8wxn4 [763.756357ms]
  I1204 06:43:25.532309 23 service_latency.go:356] Created: latency-svc-4xlcs
  I1204 06:43:25.551148 23 service_latency.go:363] Got endpoints: latency-svc-gpbjf [747.69975ms]
  I1204 06:43:25.567139 23 service_latency.go:356] Created: latency-svc-kwpmx
  I1204 06:43:25.601713 23 service_latency.go:363] Got endpoints: latency-svc-rf2gr [745.451433ms]
  I1204 06:43:25.616169 23 service_latency.go:356] Created: latency-svc-8g2lh
  I1204 06:43:25.652031 23 service_latency.go:363] Got endpoints: latency-svc-wwxtn [749.446082ms]
  I1204 06:43:25.667914 23 service_latency.go:356] Created: latency-svc-8lz64
  I1204 06:43:25.700731 23 service_latency.go:363] Got endpoints: latency-svc-bjlm9 [749.203653ms]
  E1204 06:43:25.706578      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:25.718809 23 service_latency.go:356] Created: latency-svc-fr5fh
  I1204 06:43:25.751429 23 service_latency.go:363] Got endpoints: latency-svc-445bx [749.413312ms]
  I1204 06:43:25.766597 23 service_latency.go:356] Created: latency-svc-9qwlv
  I1204 06:43:25.801138 23 service_latency.go:363] Got endpoints: latency-svc-2ntpv [746.551705ms]
  I1204 06:43:25.821114 23 service_latency.go:356] Created: latency-svc-x4kqq
  I1204 06:43:25.850683 23 service_latency.go:363] Got endpoints: latency-svc-ch44h [748.709294ms]
  I1204 06:43:25.868650 23 service_latency.go:356] Created: latency-svc-4d9xr
  I1204 06:43:25.901233 23 service_latency.go:363] Got endpoints: latency-svc-hdq4r [749.515943ms]
  I1204 06:43:25.937221 23 service_latency.go:356] Created: latency-svc-j8t4d
  I1204 06:43:25.958885 23 service_latency.go:363] Got endpoints: latency-svc-4f2dx [756.884065ms]
  I1204 06:43:26.001471 23 service_latency.go:363] Got endpoints: latency-svc-8srls [749.775335ms]
  I1204 06:43:26.051684 23 service_latency.go:363] Got endpoints: latency-svc-frkbl [749.545797ms]
  I1204 06:43:26.101699 23 service_latency.go:363] Got endpoints: latency-svc-nhrh6 [748.099027ms]
  I1204 06:43:26.152919 23 service_latency.go:363] Got endpoints: latency-svc-grgnw [748.619308ms]
  I1204 06:43:26.201732 23 service_latency.go:363] Got endpoints: latency-svc-fq5ld [751.029271ms]
  I1204 06:43:26.251069 23 service_latency.go:363] Got endpoints: latency-svc-4xlcs [733.276341ms]
  I1204 06:43:26.301857 23 service_latency.go:363] Got endpoints: latency-svc-kwpmx [750.640163ms]
  I1204 06:43:26.351778 23 service_latency.go:363] Got endpoints: latency-svc-8g2lh [749.975694ms]
  I1204 06:43:26.401059 23 service_latency.go:363] Got endpoints: latency-svc-8lz64 [748.955934ms]
  I1204 06:43:26.453183 23 service_latency.go:363] Got endpoints: latency-svc-fr5fh [752.357565ms]
  I1204 06:43:26.500819 23 service_latency.go:363] Got endpoints: latency-svc-9qwlv [749.237438ms]
  I1204 06:43:26.550713 23 service_latency.go:363] Got endpoints: latency-svc-x4kqq [749.502184ms]
  I1204 06:43:26.601349 23 service_latency.go:363] Got endpoints: latency-svc-4d9xr [750.575039ms]
  I1204 06:43:26.652177 23 service_latency.go:363] Got endpoints: latency-svc-j8t4d [750.861937ms]
  I1204 06:43:26.652401 23 service_latency.go:114] Latencies: [32.345086ms 40.173309ms 55.045493ms 68.944254ms 82.887573ms 123.616671ms 131.539628ms 138.375988ms 191.066042ms 218.635944ms 227.299398ms 227.69258ms 228.477517ms 229.25824ms 233.998543ms 238.2793ms 239.312615ms 239.433181ms 239.58096ms 241.367183ms 244.946912ms 245.596549ms 249.078313ms 250.00349ms 252.689351ms 252.762381ms 254.953764ms 257.55826ms 258.6224ms 259.800798ms 260.558267ms 262.051736ms 264.316618ms 268.10839ms 281.430103ms 283.319386ms 288.293155ms 292.005838ms 293.826762ms 297.025394ms 298.070006ms 302.376658ms 306.033507ms 309.683715ms 312.836533ms 314.607399ms 340.665382ms 341.219248ms 380.79559ms 418.673757ms 461.932579ms 486.674471ms 516.353542ms 552.363925ms 565.182297ms 593.258924ms 623.23173ms 666.986863ms 703.805425ms 731.77964ms 733.276341ms 733.792989ms 735.848664ms 736.398145ms 736.972246ms 737.532237ms 737.974783ms 740.582346ms 740.691679ms 741.015683ms 743.110134ms 743.188533ms 743.305905ms 743.361476ms 743.725676ms 744.106858ms 745.451433ms 746.551705ms 746.837704ms 747.136386ms 747.209916ms 747.263571ms 747.525556ms 747.69975ms 747.816527ms 748.051161ms 748.099027ms 748.159423ms 748.231565ms 748.361476ms 748.376512ms 748.402233ms 748.405735ms 748.469334ms 748.557427ms 748.619308ms 748.622561ms 748.671402ms 748.709294ms 748.723228ms 748.745472ms 748.848697ms 748.856964ms 748.955934ms 749.065477ms 749.123613ms 749.203653ms 749.216519ms 749.237438ms 749.252083ms 749.254741ms 749.340751ms 749.356889ms 749.413312ms 749.446082ms 749.479357ms 749.495975ms 749.502184ms 749.515943ms 749.545797ms 749.552821ms 749.566053ms 749.605152ms 749.630946ms 749.631514ms 749.659866ms 749.672675ms 749.678115ms 749.713305ms 749.716515ms 749.746067ms 749.775335ms 749.782723ms 749.794359ms 749.79611ms 749.938822ms 749.942436ms 749.954033ms 749.975694ms 750.067653ms 750.07424ms 750.074649ms 750.126127ms 750.209189ms 750.320112ms 750.425597ms 750.437264ms 750.461566ms 750.532731ms 750.537907ms 750.54617ms 750.575039ms 750.585709ms 750.640163ms 750.693832ms 750.725288ms 750.800721ms 750.835758ms 750.861937ms 750.912361ms 750.939133ms 750.976775ms 751.015464ms 751.029271ms 751.065984ms 751.087611ms 751.114853ms 751.162234ms 751.275298ms 751.308229ms 751.451438ms 751.72186ms 751.833314ms 751.837599ms 751.886877ms 751.965117ms 751.987984ms 752.08725ms 752.158215ms 752.357565ms 752.400113ms 752.603974ms 752.810168ms 752.970071ms 753.651642ms 754.266247ms 754.281413ms 755.13066ms 756.262354ms 756.884065ms 757.013387ms 757.711304ms 758.129438ms 760.897911ms 761.165986ms 763.002243ms 763.193678ms 763.263038ms 763.756357ms 764.370689ms]
  I1204 06:43:26.652427 23 service_latency.go:118] 50 %ile: 748.745472ms
  I1204 06:43:26.652442 23 service_latency.go:119] 90 %ile: 752.400113ms
  I1204 06:43:26.652455 23 service_latency.go:120] 99 %ile: 763.756357ms
  I1204 06:43:26.652467 23 service_latency.go:121] Total sample count: 200
  I1204 06:43:26.652591 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9067" for this suite. @ 12/04/24 06:43:26.658
• [10.769 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/04/24 06:43:26.665
  I1204 06:43:26.665586 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename hostport @ 12/04/24 06:43:26.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:26.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:26.683
  E1204 06:43:26.707707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/04/24 06:43:26.757
  E1204 06:43:27.708204      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:28.709173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.100.37 on the node which pod1 resides and expect scheduled @ 12/04/24 06:43:28.779
  E1204 06:43:29.709625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:30.710144      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.100.37 but use UDP protocol on the node which pod2 resides @ 12/04/24 06:43:30.798
  E1204 06:43:31.710907      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:32.711323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:33.712286      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:34.712689      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/04/24 06:43:34.867
  I1204 06:43:34.867525 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.100.37 http://127.0.0.1:54323/hostname] Namespace:hostport-938 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:43:34.867559 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:43:34.868442 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:43:34.868559 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-938/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.100.37+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.37, port: 54323 @ 12/04/24 06:43:34.955
  I1204 06:43:34.955136 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.100.37:54323/hostname] Namespace:hostport-938 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:43:34.955170 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:43:34.956133 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:43:34.956239 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-938/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.100.37%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.37, port: 54323 UDP @ 12/04/24 06:43:35.047
  I1204 06:43:35.047794 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.100.37 54323] Namespace:hostport-938 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:43:35.047822 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:43:35.048599 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:43:35.048688 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-938/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.100.37+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1204 06:43:35.713610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:36.714003      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:37.714562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:38.715563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:39.716088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:40.120793 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-938" for this suite. @ 12/04/24 06:43:40.126
• [13.469 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/04/24 06:43:40.134
  I1204 06:43:40.134338 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename containers @ 12/04/24 06:43:40.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:40.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:40.152
  E1204 06:43:40.716380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:41.717453      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:42.181108 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3011" for this suite. @ 12/04/24 06:43:42.185
• [2.057 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 12/04/24 06:43:42.192
  I1204 06:43:42.192245 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:43:42.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:42.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:42.21
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1042 @ 12/04/24 06:43:42.215
  STEP: changing the ExternalName service to type=ClusterIP @ 12/04/24 06:43:42.219
  STEP: creating replication controller externalname-service in namespace services-1042 @ 12/04/24 06:43:42.235
  I1204 06:43:42.248449      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1042, replica count: 2
  E1204 06:43:42.717655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:43.718221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:44.718579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:45.299627      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 06:43:45.299698 23 resource.go:361] Creating new exec pod
  E1204 06:43:45.719335      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:46.719834      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:47.720770      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:48.313512 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1042 exec execpod4v9kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1204 06:43:48.516352 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1204 06:43:48.516438 23 builder.go:147] stdout: "externalname-service-9p4gc"
  I1204 06:43:48.516546 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1042 exec execpod4v9kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.34.123 80'
  I1204 06:43:48.707365 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.34.123 80\nConnection to 10.109.34.123 80 port [tcp/http] succeeded!\n"
  I1204 06:43:48.707429 23 builder.go:147] stdout: ""
  E1204 06:43:48.721728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:43:49.516960 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1042 exec execpod4v9kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.34.123 80'
  I1204 06:43:49.696754 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.34.123 80\nConnection to 10.109.34.123 80 port [tcp/http] succeeded!\n"
  I1204 06:43:49.696862 23 builder.go:147] stdout: "externalname-service-9p4gc"
  I1204 06:43:49.697008 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1204 06:43:49.716597 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1042" for this suite. @ 12/04/24 06:43:49.72
  E1204 06:43:49.722218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
• [7.533 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/04/24 06:43:49.725
  I1204 06:43:49.725199 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:43:49.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:49.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:49.742
  STEP: Creating a pod to test downward api env vars @ 12/04/24 06:43:49.746
  E1204 06:43:50.722761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:51.724101      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:43:51.768
  I1204 06:43:51.771852 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-158861d9-5dc0-4e94-bd91-b4b3263b48d7 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 06:43:51.78
  I1204 06:43:51.794454 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7358" for this suite. @ 12/04/24 06:43:51.799
• [2.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/04/24 06:43:51.812
  I1204 06:43:51.812997 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 06:43:51.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:51.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:51.833
  STEP: Create a pod @ 12/04/24 06:43:51.837
  E1204 06:43:52.724498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:53.725094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/04/24 06:43:53.854
  I1204 06:43:53.866277 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1204 06:43:53.866433 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3645" for this suite. @ 12/04/24 06:43:53.871
• [2.064 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/04/24 06:43:53.877
  I1204 06:43:53.877140 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-runtime @ 12/04/24 06:43:53.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:53.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:53.895
  STEP: create the container @ 12/04/24 06:43:53.908
  W1204 06:43:53.929421      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/04/24 06:43:53.929
  E1204 06:43:54.725609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:55.726048      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:56.727129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/04/24 06:43:56.948
  STEP: the container should be terminated @ 12/04/24 06:43:56.951
  STEP: the termination message should be set @ 12/04/24 06:43:56.951
  I1204 06:43:56.951863 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/04/24 06:43:56.951
  I1204 06:43:56.963101 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5497" for this suite. @ 12/04/24 06:43:56.967
• [3.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 12/04/24 06:43:56.972
  I1204 06:43:56.972751 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:43:56.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:43:57.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:43:57.053
  STEP: Setting up server cert @ 12/04/24 06:43:57.13
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:43:57.551
  STEP: Deploying the webhook pod @ 12/04/24 06:43:57.561
  STEP: Wait for the deployment to be ready @ 12/04/24 06:43:57.574
  I1204 06:43:57.584822 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 06:43:57.727927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:43:58.729065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:43:59.596
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:43:59.608
  E1204 06:43:59.729402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:00.609536 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/04/24 06:44:00.619
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/04/24 06:44:00.622
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/04/24 06:44:00.622
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/04/24 06:44:00.622
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/04/24 06:44:00.624
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/04/24 06:44:00.624
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/04/24 06:44:00.626
  I1204 06:44:00.670608 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6673" for this suite. @ 12/04/24 06:44:00.676
  STEP: Destroying namespace "webhook-markers-8574" for this suite. @ 12/04/24 06:44:00.68
• [3.713 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 12/04/24 06:44:00.687
  I1204 06:44:00.687634 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:44:00.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:00.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:00.705
  E1204 06:44:00.729750      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 12/04/24 06:44:00.803
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:44:01.189
  STEP: Deploying the webhook pod @ 12/04/24 06:44:01.194
  STEP: Wait for the deployment to be ready @ 12/04/24 06:44:01.208
  I1204 06:44:01.217551 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 06:44:01.729996      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:02.730429      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:44:03.231
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:44:03.244
  E1204 06:44:03.730793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:04.244569 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1204 06:44:04.255284 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 06:44:04.731445      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-823-crds.webhook.example.com via the AdmissionRegistration API @ 12/04/24 06:44:04.771
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/04/24 06:44:04.795
  E1204 06:44:05.731543      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:06.732002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:07.412706 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4212" for this suite. @ 12/04/24 06:44:07.419
  STEP: Destroying namespace "webhook-markers-7775" for this suite. @ 12/04/24 06:44:07.425
• [6.743 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/04/24 06:44:07.43
  I1204 06:44:07.430552 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 06:44:07.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:07.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:07.448
  STEP: create the deployment @ 12/04/24 06:44:07.452
  W1204 06:44:07.459184      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/04/24 06:44:07.459
  STEP: delete the deployment @ 12/04/24 06:44:07.569
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/04/24 06:44:07.577
  E1204 06:44:07.732428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/04/24 06:44:08.096
  I1204 06:44:08.234811 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1204 06:44:08.235038 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9092" for this suite. @ 12/04/24 06:44:08.24
• [0.817 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/04/24 06:44:08.247
  I1204 06:44:08.247637 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/04/24 06:44:08.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:08.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:08.264
  I1204 06:44:08.268915 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 06:44:08.732849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:09.297658 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5713" for this suite. @ 12/04/24 06:44:09.303
• [1.064 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/04/24 06:44:09.311
  I1204 06:44:09.311728 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 06:44:09.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:09.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:09.331
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/04/24 06:44:09.337
  E1204 06:44:09.733051      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:10.733142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:11.733336      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:12.733612      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:44:13.36
  I1204 06:44:13.364969 23 output.go:196] Trying to get logs from node nodea17 pod pod-379c4cc0-bc53-4f9d-8a6f-85d2daa83a7a container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:44:13.379
  I1204 06:44:13.392089 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-960" for this suite. @ 12/04/24 06:44:13.396
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 12/04/24 06:44:13.401
  I1204 06:44:13.401055 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubelet-test @ 12/04/24 06:44:13.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:13.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:13.416
  I1204 06:44:13.504936 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2741" for this suite. @ 12/04/24 06:44:13.508
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/04/24 06:44:13.513
  I1204 06:44:13.513473 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 06:44:13.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:13.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:13.541
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:44:13.545
  E1204 06:44:13.734481      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:14.735220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:15.735823      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:16.736261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:44:17.611
  I1204 06:44:17.615333 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-d4e6fdeb-0de2-49c2-bdca-8913b847fa19 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:44:17.623
  I1204 06:44:17.637692 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8108" for this suite. @ 12/04/24 06:44:17.642
• [4.136 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/04/24 06:44:17.65
  I1204 06:44:17.650088 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename runtimeclass @ 12/04/24 06:44:17.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:17.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:17.667
  STEP: Deleting RuntimeClass runtimeclass-4354-delete-me @ 12/04/24 06:44:17.676
  STEP: Waiting for the RuntimeClass to disappear @ 12/04/24 06:44:17.681
  I1204 06:44:17.692558 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1204 06:44:17.736736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "runtimeclass-4354" for this suite. @ 12/04/24 06:44:17.742
• [0.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/04/24 06:44:17.749
  I1204 06:44:17.749942 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 06:44:17.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:17.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:17.769
  STEP: Creating configMap with name configmap-test-volume-bc9c5988-9d67-41f2-935b-05b8a4199892 @ 12/04/24 06:44:17.773
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:44:17.779
  E1204 06:44:18.737557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:19.737999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:20.738625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:21.739049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:44:21.81
  I1204 06:44:21.815194 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-91efc0d8-de50-4c92-8c46-68625267eccb container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:44:21.823
  I1204 06:44:21.838526 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8189" for this suite. @ 12/04/24 06:44:21.843
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/04/24 06:44:21.849
  I1204 06:44:21.849877 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/04/24 06:44:21.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:21.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:21.868
  STEP: create the container to handle the HTTPGet hook request. @ 12/04/24 06:44:21.944
  E1204 06:44:22.739795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:23.740511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/04/24 06:44:23.972
  E1204 06:44:24.740763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:25.741200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 12/04/24 06:44:25.994
  E1204 06:44:26.742127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:27.742441      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:28.742927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:29.743382      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 12/04/24 06:44:30.018
  I1204 06:44:30.040068 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4848" for this suite. @ 12/04/24 06:44:30.045
• [8.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/04/24 06:44:30.052
  I1204 06:44:30.052399 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename proxy @ 12/04/24 06:44:30.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:30.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:30.072
  STEP: starting an echo server on multiple ports @ 12/04/24 06:44:30.092
  STEP: creating replication controller proxy-service-f8rvw in namespace proxy-4209 @ 12/04/24 06:44:30.092
  I1204 06:44:30.098538      23 runners.go:193] Created replication controller with name: proxy-service-f8rvw, namespace: proxy-4209, replica count: 1
  E1204 06:44:30.744190      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:31.150364      23 runners.go:193] proxy-service-f8rvw Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1204 06:44:31.744772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:32.151140      23 runners.go:193] proxy-service-f8rvw Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 06:44:32.155341 23 proxy.go:230] setup took 2.077984469s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/04/24 06:44:32.155
  I1204 06:44:32.163117 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 7.066007ms)
  I1204 06:44:32.163099 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 7.08941ms)
  I1204 06:44:32.163262 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 7.383067ms)
  I1204 06:44:32.168195 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 12.359385ms)
  I1204 06:44:32.168269 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 12.343185ms)
  I1204 06:44:32.168522 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 12.322546ms)
  I1204 06:44:32.168560 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 12.890182ms)
  I1204 06:44:32.168604 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 13.010013ms)
  I1204 06:44:32.168687 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 12.917953ms)
  I1204 06:44:32.168977 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 12.988275ms)
  I1204 06:44:32.169066 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 13.063827ms)
  I1204 06:44:32.169812 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 13.931805ms)
  I1204 06:44:32.169862 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 13.949767ms)
  I1204 06:44:32.169910 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 13.878967ms)
  I1204 06:44:32.170026 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 14.254709ms)
  I1204 06:44:32.176990 23 proxy.go:558] (0) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 21.018294ms)
  I1204 06:44:32.182290 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.144765ms)
  I1204 06:44:32.182442 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.269271ms)
  I1204 06:44:32.182712 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.419573ms)
  I1204 06:44:32.182764 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.518885ms)
  I1204 06:44:32.182761 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.48885ms)
  I1204 06:44:32.182788 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 5.588488ms)
  I1204 06:44:32.183451 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.238846ms)
  I1204 06:44:32.183536 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.259754ms)
  I1204 06:44:32.183819 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.58054ms)
  I1204 06:44:32.183813 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 6.486437ms)
  I1204 06:44:32.184165 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.108729ms)
  I1204 06:44:32.184196 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 6.865485ms)
  I1204 06:44:32.184304 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 7.213613ms)
  I1204 06:44:32.184339 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 7.027731ms)
  I1204 06:44:32.184375 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 7.105834ms)
  I1204 06:44:32.184445 23 proxy.go:558] (1) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 7.13603ms)
  I1204 06:44:32.187665 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 3.165831ms)
  I1204 06:44:32.189726 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.209448ms)
  I1204 06:44:32.189804 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.22883ms)
  I1204 06:44:32.190642 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.983076ms)
  I1204 06:44:32.190715 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 6.130151ms)
  I1204 06:44:32.190745 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.027314ms)
  I1204 06:44:32.190766 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.231724ms)
  I1204 06:44:32.190810 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.098478ms)
  I1204 06:44:32.190773 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.089289ms)
  I1204 06:44:32.191176 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 6.578191ms)
  I1204 06:44:32.191207 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.565754ms)
  I1204 06:44:32.191338 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 6.751636ms)
  I1204 06:44:32.191473 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 6.739405ms)
  I1204 06:44:32.191651 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 7.149704ms)
  I1204 06:44:32.191674 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.013569ms)
  I1204 06:44:32.191724 23 proxy.go:558] (2) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 7.076428ms)
  I1204 06:44:32.195371 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 3.581581ms)
  I1204 06:44:32.195387 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 3.575909ms)
  I1204 06:44:32.195570 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 3.738917ms)
  I1204 06:44:32.195593 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 3.805313ms)
  I1204 06:44:32.197631 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 5.601608ms)
  I1204 06:44:32.197702 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 5.72368ms)
  I1204 06:44:32.197720 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.811263ms)
  I1204 06:44:32.197724 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 5.715995ms)
  I1204 06:44:32.197745 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.774391ms)
  I1204 06:44:32.197729 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 5.810788ms)
  I1204 06:44:32.198661 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.773681ms)
  I1204 06:44:32.198683 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 6.718836ms)
  I1204 06:44:32.199138 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 7.228207ms)
  I1204 06:44:32.199189 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 7.331852ms)
  I1204 06:44:32.199200 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.307142ms)
  I1204 06:44:32.199171 23 proxy.go:558] (3) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 7.178763ms)
  I1204 06:44:32.203554 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 4.115155ms)
  I1204 06:44:32.203608 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.149439ms)
  I1204 06:44:32.203827 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 4.538876ms)
  I1204 06:44:32.204179 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 4.664909ms)
  I1204 06:44:32.204223 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.902401ms)
  I1204 06:44:32.204239 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 4.851561ms)
  I1204 06:44:32.204257 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 4.822446ms)
  I1204 06:44:32.204247 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 4.704819ms)
  I1204 06:44:32.204281 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 4.843206ms)
  I1204 06:44:32.204390 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 5.089777ms)
  I1204 06:44:32.204392 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.107517ms)
  I1204 06:44:32.205338 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 5.975691ms)
  I1204 06:44:32.205623 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.012463ms)
  I1204 06:44:32.205682 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 6.236374ms)
  I1204 06:44:32.205637 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.246997ms)
  I1204 06:44:32.205734 23 proxy.go:558] (4) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 6.33524ms)
  I1204 06:44:32.208860 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 3.047735ms)
  I1204 06:44:32.211453 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.527243ms)
  I1204 06:44:32.211563 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.719167ms)
  I1204 06:44:32.211764 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.78726ms)
  I1204 06:44:32.212288 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 6.474613ms)
  I1204 06:44:32.212344 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.385208ms)
  I1204 06:44:32.212372 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.315003ms)
  I1204 06:44:32.212416 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 6.41514ms)
  I1204 06:44:32.212421 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.418846ms)
  I1204 06:44:32.212456 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.505152ms)
  I1204 06:44:32.213645 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 7.611135ms)
  I1204 06:44:32.213711 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 7.650855ms)
  I1204 06:44:32.213711 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 7.707974ms)
  I1204 06:44:32.213736 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 7.685535ms)
  I1204 06:44:32.213747 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 7.878113ms)
  I1204 06:44:32.213787 23 proxy.go:558] (5) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.873542ms)
  I1204 06:44:32.222041 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 8.07321ms)
  I1204 06:44:32.222076 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 8.078352ms)
  I1204 06:44:32.222274 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 8.409418ms)
  I1204 06:44:32.222306 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 8.416928ms)
  I1204 06:44:32.222346 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 8.404511ms)
  I1204 06:44:32.222326 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 8.206628ms)
  I1204 06:44:32.222385 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 8.370832ms)
  I1204 06:44:32.222432 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 8.303566ms)
  I1204 06:44:32.222634 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 8.587628ms)
  I1204 06:44:32.222837 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 8.771757ms)
  I1204 06:44:32.222876 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 8.720134ms)
  I1204 06:44:32.222908 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 8.896829ms)
  I1204 06:44:32.223017 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 8.932599ms)
  I1204 06:44:32.223238 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 9.330285ms)
  I1204 06:44:32.223273 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 9.153567ms)
  I1204 06:44:32.223303 23 proxy.go:558] (6) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 9.238042ms)
  I1204 06:44:32.227922 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.507364ms)
  I1204 06:44:32.227936 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 4.34506ms)
  I1204 06:44:32.228706 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 5.193501ms)
  I1204 06:44:32.228959 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 5.279987ms)
  I1204 06:44:32.229092 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.476883ms)
  I1204 06:44:32.229172 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.811128ms)
  I1204 06:44:32.229644 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.065614ms)
  I1204 06:44:32.229733 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.027559ms)
  I1204 06:44:32.229797 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 6.159195ms)
  I1204 06:44:32.229828 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.18627ms)
  I1204 06:44:32.229715 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.022106ms)
  I1204 06:44:32.229854 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 6.198802ms)
  I1204 06:44:32.229880 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.237912ms)
  I1204 06:44:32.229914 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.374426ms)
  I1204 06:44:32.229914 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 6.231768ms)
  I1204 06:44:32.230289 23 proxy.go:558] (7) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 6.840489ms)
  I1204 06:44:32.234997 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 3.957785ms)
  I1204 06:44:32.235024 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 4.116203ms)
  I1204 06:44:32.235242 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 4.644298ms)
  I1204 06:44:32.235279 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 4.220755ms)
  I1204 06:44:32.235300 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 4.654647ms)
  I1204 06:44:32.235285 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 4.554143ms)
  I1204 06:44:32.235316 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 4.329291ms)
  I1204 06:44:32.235318 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 4.374866ms)
  I1204 06:44:32.234959 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.597667ms)
  I1204 06:44:32.235294 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 4.274548ms)
  I1204 06:44:32.236890 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 6.346151ms)
  I1204 06:44:32.236914 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 6.070706ms)
  I1204 06:44:32.236937 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.129432ms)
  I1204 06:44:32.237058 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.371636ms)
  I1204 06:44:32.237062 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 6.293098ms)
  I1204 06:44:32.237429 23 proxy.go:558] (8) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 7.056056ms)
  I1204 06:44:32.242626 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 4.799729ms)
  I1204 06:44:32.242655 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 5.047259ms)
  I1204 06:44:32.242664 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.953253ms)
  I1204 06:44:32.242739 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.219311ms)
  I1204 06:44:32.243384 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.661217ms)
  I1204 06:44:32.243902 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.368022ms)
  I1204 06:44:32.243923 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 6.280735ms)
  I1204 06:44:32.243977 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 6.205484ms)
  I1204 06:44:32.244050 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.373903ms)
  I1204 06:44:32.244067 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 6.237253ms)
  I1204 06:44:32.244079 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.281877ms)
  I1204 06:44:32.244082 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 6.246089ms)
  I1204 06:44:32.243902 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.314735ms)
  I1204 06:44:32.244193 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.437555ms)
  I1204 06:44:32.244220 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 6.357499ms)
  I1204 06:44:32.244238 23 proxy.go:558] (9) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.380665ms)
  I1204 06:44:32.247196 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 2.775291ms)
  I1204 06:44:32.249752 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.186874ms)
  I1204 06:44:32.249788 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 5.277151ms)
  I1204 06:44:32.249803 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 4.73225ms)
  I1204 06:44:32.249846 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 5.136734ms)
  I1204 06:44:32.249822 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.349584ms)
  I1204 06:44:32.250043 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.06258ms)
  I1204 06:44:32.250055 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 5.501867ms)
  I1204 06:44:32.250078 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 5.034189ms)
  I1204 06:44:32.250129 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.499884ms)
  I1204 06:44:32.250414 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 5.83634ms)
  I1204 06:44:32.250453 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 5.817039ms)
  I1204 06:44:32.250451 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 5.790429ms)
  I1204 06:44:32.250498 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 5.965783ms)
  I1204 06:44:32.250588 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 5.803763ms)
  I1204 06:44:32.250433 23 proxy.go:558] (10) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 5.785254ms)
  I1204 06:44:32.254094 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 3.374978ms)
  I1204 06:44:32.254900 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 3.341709ms)
  I1204 06:44:32.254930 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 3.364502ms)
  I1204 06:44:32.254962 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 3.575547ms)
  I1204 06:44:32.254993 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 3.286899ms)
  I1204 06:44:32.255223 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 3.374868ms)
  I1204 06:44:32.255283 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 3.471265ms)
  I1204 06:44:32.255301 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 4.333517ms)
  I1204 06:44:32.255323 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 4.201534ms)
  I1204 06:44:32.255358 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 4.079129ms)
  I1204 06:44:32.256385 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 4.697048ms)
  I1204 06:44:32.256464 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 4.870429ms)
  I1204 06:44:32.256490 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 4.633175ms)
  I1204 06:44:32.256508 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 4.733128ms)
  I1204 06:44:32.256537 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 4.734563ms)
  I1204 06:44:32.256692 23 proxy.go:558] (11) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 5.046809ms)
  I1204 06:44:32.260470 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 3.634231ms)
  I1204 06:44:32.260464 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 3.649492ms)
  I1204 06:44:32.261507 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.543915ms)
  I1204 06:44:32.261506 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 4.519156ms)
  I1204 06:44:32.261565 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 4.516655ms)
  I1204 06:44:32.261558 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 4.62124ms)
  I1204 06:44:32.261900 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 5.128266ms)
  I1204 06:44:32.261926 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 4.860486ms)
  I1204 06:44:32.262023 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 5.02467ms)
  I1204 06:44:32.262056 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.137156ms)
  I1204 06:44:32.262114 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.138789ms)
  I1204 06:44:32.263502 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 6.456791ms)
  I1204 06:44:32.263520 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 6.630553ms)
  I1204 06:44:32.263670 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 6.647902ms)
  I1204 06:44:32.263695 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.750499ms)
  I1204 06:44:32.263700 23 proxy.go:558] (12) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 6.664935ms)
  I1204 06:44:32.268391 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 4.320209ms)
  I1204 06:44:32.268448 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 4.373519ms)
  I1204 06:44:32.268499 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 4.54639ms)
  I1204 06:44:32.269178 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.251569ms)
  I1204 06:44:32.269200 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 5.094279ms)
  I1204 06:44:32.269224 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.216912ms)
  I1204 06:44:32.269231 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.214678ms)
  I1204 06:44:32.269268 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 5.222829ms)
  I1204 06:44:32.269291 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 5.33956ms)
  I1204 06:44:32.269317 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.313645ms)
  I1204 06:44:32.269267 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 5.459733ms)
  I1204 06:44:32.269351 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 5.335442ms)
  I1204 06:44:32.269175 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.326973ms)
  I1204 06:44:32.269749 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 5.62373ms)
  I1204 06:44:32.269754 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 5.714391ms)
  I1204 06:44:32.269821 23 proxy.go:558] (13) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 5.724517ms)
  I1204 06:44:32.276318 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 6.240526ms)
  I1204 06:44:32.276404 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.23119ms)
  I1204 06:44:32.276760 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 6.827121ms)
  I1204 06:44:32.276755 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.768588ms)
  I1204 06:44:32.276775 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.648101ms)
  I1204 06:44:32.276816 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.608952ms)
  I1204 06:44:32.276814 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.751815ms)
  I1204 06:44:32.276864 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 6.917251ms)
  I1204 06:44:32.276868 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.724405ms)
  I1204 06:44:32.277177 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 7.003223ms)
  I1204 06:44:32.277289 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 7.188942ms)
  I1204 06:44:32.277376 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.217665ms)
  I1204 06:44:32.277672 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 7.518062ms)
  I1204 06:44:32.277689 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 7.50024ms)
  I1204 06:44:32.277694 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 7.77508ms)
  I1204 06:44:32.277707 23 proxy.go:558] (14) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 7.628388ms)
  I1204 06:44:32.282994 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.080515ms)
  I1204 06:44:32.283192 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.078931ms)
  I1204 06:44:32.283236 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.227268ms)
  I1204 06:44:32.283267 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 5.424336ms)
  I1204 06:44:32.283534 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 5.582117ms)
  I1204 06:44:32.283945 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 5.998829ms)
  I1204 06:44:32.284006 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 5.884162ms)
  I1204 06:44:32.284007 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 5.891133ms)
  I1204 06:44:32.284028 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.961654ms)
  I1204 06:44:32.284976 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.983176ms)
  I1204 06:44:32.285367 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 7.341706ms)
  I1204 06:44:32.285746 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 7.666546ms)
  I1204 06:44:32.285826 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.779019ms)
  I1204 06:44:32.285888 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 8.045878ms)
  I1204 06:44:32.286163 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 8.125017ms)
  I1204 06:44:32.286201 23 proxy.go:558] (15) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 8.146071ms)
  I1204 06:44:32.293675 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 7.074083ms)
  I1204 06:44:32.293723 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 7.208322ms)
  I1204 06:44:32.293728 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 7.198492ms)
  I1204 06:44:32.293747 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 7.367923ms)
  I1204 06:44:32.294046 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 7.371107ms)
  I1204 06:44:32.294060 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 7.722586ms)
  I1204 06:44:32.294111 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 7.846376ms)
  I1204 06:44:32.294277 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 7.858055ms)
  I1204 06:44:32.294323 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 7.858929ms)
  I1204 06:44:32.294351 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.892523ms)
  I1204 06:44:32.294668 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 8.026711ms)
  I1204 06:44:32.294688 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 8.113551ms)
  I1204 06:44:32.294727 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 8.460219ms)
  I1204 06:44:32.294723 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 8.42764ms)
  I1204 06:44:32.294769 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 8.386486ms)
  I1204 06:44:32.294773 23 proxy.go:558] (16) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 8.233841ms)
  I1204 06:44:32.298559 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 3.660412ms)
  I1204 06:44:32.298615 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 3.754509ms)
  I1204 06:44:32.299854 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 4.868053ms)
  I1204 06:44:32.300484 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 5.477615ms)
  I1204 06:44:32.300553 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 5.436199ms)
  I1204 06:44:32.301222 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 6.124471ms)
  I1204 06:44:32.301288 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 6.414917ms)
  I1204 06:44:32.301455 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.343068ms)
  I1204 06:44:32.301766 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 6.644267ms)
  I1204 06:44:32.301824 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 6.763319ms)
  I1204 06:44:32.301821 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 6.791202ms)
  I1204 06:44:32.301853 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.810733ms)
  I1204 06:44:32.302289 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 7.121199ms)
  I1204 06:44:32.302332 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 7.388274ms)
  I1204 06:44:32.302334 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 7.227635ms)
  I1204 06:44:32.304149 23 proxy.go:558] (17) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 9.106667ms)
  I1204 06:44:32.309740 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 5.439194ms)
  I1204 06:44:32.309782 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 5.520876ms)
  I1204 06:44:32.310077 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.758194ms)
  I1204 06:44:32.310177 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 5.686516ms)
  I1204 06:44:32.310200 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 5.784915ms)
  I1204 06:44:32.310213 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 5.710858ms)
  I1204 06:44:32.310206 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.977099ms)
  I1204 06:44:32.310239 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 5.844819ms)
  I1204 06:44:32.310772 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.273261ms)
  I1204 06:44:32.310908 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.439211ms)
  I1204 06:44:32.312769 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 8.293783ms)
  I1204 06:44:32.312761 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 8.401689ms)
  I1204 06:44:32.312778 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 8.356348ms)
  I1204 06:44:32.312809 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 8.27157ms)
  I1204 06:44:32.312811 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 8.587442ms)
  I1204 06:44:32.312918 23 proxy.go:558] (18) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 8.471682ms)
  I1204 06:44:32.319892 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.79351ms)
  I1204 06:44:32.319959 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:160/proxy/: foo (200; 6.590099ms)
  I1204 06:44:32.319968 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">test<... (200; 6.719793ms)
  I1204 06:44:32.319987 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:443/proxy/tlsrewritem... (200; 6.636512ms)
  I1204 06:44:32.320016 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.719205ms)
  I1204 06:44:32.320029 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:460/proxy/: tls baz (200; 6.672814ms)
  I1204 06:44:32.320054 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/http:proxy-service-f8rvw-wrh9g:1080/proxy/rewriteme">... (200; 6.668356ms)
  I1204 06:44:32.320138 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g:162/proxy/: bar (200; 6.837801ms)
  I1204 06:44:32.320171 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/: <a href="/api/v1/namespaces/proxy-4209/pods/proxy-service-f8rvw-wrh9g/proxy/rewriteme">test</a> (200; 6.845027ms)
  I1204 06:44:32.320207 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/pods/https:proxy-service-f8rvw-wrh9g:462/proxy/: tls qux (200; 7.185234ms)
  I1204 06:44:32.320673 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname1/proxy/: foo (200; 7.533576ms)
  I1204 06:44:32.321041 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname1/proxy/: tls baz (200; 7.6653ms)
  I1204 06:44:32.322127 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname2/proxy/: bar (200; 8.833313ms)
  I1204 06:44:32.322256 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/services/http:proxy-service-f8rvw:portname1/proxy/: foo (200; 9.069788ms)
  I1204 06:44:32.322362 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/services/https:proxy-service-f8rvw:tlsportname2/proxy/: tls qux (200; 9.087672ms)
  I1204 06:44:32.322368 23 proxy.go:558] (19) /api/v1/namespaces/proxy-4209/services/proxy-service-f8rvw:portname2/proxy/: bar (200; 9.154685ms)
  STEP: deleting ReplicationController proxy-service-f8rvw in namespace proxy-4209, will wait for the garbage collector to delete the pods @ 12/04/24 06:44:32.322
  E1204 06:44:32.744897      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:33.745290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:34.381162 23 resources.go:139] Deleting ReplicationController proxy-service-f8rvw took: 2.005344139s
  E1204 06:44:34.746368      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:35.746544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:36.746699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:37.747412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:38.748448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:39.749302      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:40.750388      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:41.751638      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:42.281661 23 resources.go:163] Terminating ReplicationController proxy-service-f8rvw pods took: 7.9004972s
  E1204 06:44:42.751800      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:42.782828 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4209" for this suite. @ 12/04/24 06:44:42.789
• [12.744 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 12/04/24 06:44:42.796
  I1204 06:44:42.796717 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-pred @ 12/04/24 06:44:42.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:42.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:42.819
  I1204 06:44:42.824293 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1204 06:44:42.893710 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I1204 06:44:42.898179 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1204 06:44:42.903671 23 predicates.go:957] kube-flannel-ds-s9d8k from kube-flannel started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:44:42.903738 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:44:42.903755 23 predicates.go:957] kube-proxy-cn5pv from kube-system started at 2024-12-04 06:01:54 +0000 UTC (1 container statuses recorded)
  I1204 06:44:42.903766 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:44:42.903779 23 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-04 06:03:38 +0000 UTC (1 container statuses recorded)
  I1204 06:44:42.903790 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1204 06:44:42.903801 23 predicates.go:957] sonobuoy-e2e-job-d101e3450e66430f from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:44:42.903811 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1204 06:44:42.903821 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:44:42.903832 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-hxfzx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:44:42.903842 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:44:42.903852 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1204 06:44:42.903863 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1204 06:44:42.908302 23 predicates.go:957] kube-flannel-ds-n648s from kube-flannel started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:44:42.908335 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I1204 06:44:42.908348 23 predicates.go:957] kube-proxy-lv6k4 from kube-system started at 2024-12-04 06:02:09 +0000 UTC (1 container statuses recorded)
  I1204 06:44:42.908360 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I1204 06:44:42.908370 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-jv5wx from sonobuoy started at 2024-12-04 06:03:44 +0000 UTC (2 container statuses recorded)
  I1204 06:44:42.908378 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1204 06:44:42.908387 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node nodea17 @ 12/04/24 06:44:42.935
  STEP: verifying the node has the label node nodeb14 @ 12/04/24 06:44:42.949
  I1204 06:44:43.006761 23 predicates.go:372] Pod kube-flannel-ds-n648s requesting resource cpu=100m on Node nodeb14
  I1204 06:44:43.006820 23 predicates.go:372] Pod kube-flannel-ds-s9d8k requesting resource cpu=100m on Node nodea17
  I1204 06:44:43.006840 23 predicates.go:372] Pod kube-proxy-cn5pv requesting resource cpu=0m on Node nodea17
  I1204 06:44:43.006863 23 predicates.go:372] Pod kube-proxy-lv6k4 requesting resource cpu=0m on Node nodeb14
  I1204 06:44:43.006879 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node nodea17
  I1204 06:44:43.006893 23 predicates.go:372] Pod sonobuoy-e2e-job-d101e3450e66430f requesting resource cpu=0m on Node nodea17
  I1204 06:44:43.006910 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-hxfzx requesting resource cpu=0m on Node nodea17
  I1204 06:44:43.006927 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f44a759d0c234dba-jv5wx requesting resource cpu=0m on Node nodeb14
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/04/24 06:44:43.006
  I1204 06:44:43.006978 23 predicates.go:382] Creating a pod which consumes cpu=11130m on Node nodea17
  I1204 06:44:43.018718 23 predicates.go:382] Creating a pod which consumes cpu=5530m on Node nodeb14
  E1204 06:44:43.752530      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:44.752943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/04/24 06:44:45.039
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7.180de654b0825bf6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6731/filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7 to nodeb14] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7.180de654d25c1945], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7.180de654d58dc88d], Reason = [Created], Message = [Created container filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7.180de654dcc0fe3c], Reason = [Started], Message = [Started container filler-pod-968d7a6d-32f3-4bd3-b068-afcd13a844c7] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23.180de654affce2d0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6731/filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23 to nodea17] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23.180de654cc843817], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23.180de654cd97bfcf], Reason = [Created], Message = [Created container filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23.180de654d349d9b0], Reason = [Started], Message = [Started container filler-pod-c2a5b8e5-0114-42a1-be04-5ac36e04bc23] @ 12/04/24 06:44:45.044
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.180de65528b3c57a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.] @ 12/04/24 06:44:45.055
  E1204 06:44:45.753962      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node nodea17 @ 12/04/24 06:44:46.057
  STEP: verifying the node doesn't have the label node @ 12/04/24 06:44:46.076
  STEP: removing the label node off the node nodeb14 @ 12/04/24 06:44:46.079
  STEP: verifying the node doesn't have the label node @ 12/04/24 06:44:46.092
  I1204 06:44:46.095591 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6731" for this suite. @ 12/04/24 06:44:46.099
• [3.309 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/04/24 06:44:46.105
  I1204 06:44:46.105576 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 06:44:46.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:44:46.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:44:46.122
  STEP: Creating pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052 @ 12/04/24 06:44:46.126
  E1204 06:44:46.754883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:47.755447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 06:44:48.144
  I1204 06:44:48.147626 23 container_probe.go:1749] Initial restart count of pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 is 0
  I1204 06:44:48.150918 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:44:48.756531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:49.757018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:50.158269 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:44:50.758001      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:51.758464      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:52.164015 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:44:52.758829      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:53.758967      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:54.169562 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:44:54.759811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:55.760263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:56.175852 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:44:56.760446      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:57.761272      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:44:58.186679 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:44:58.761690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:44:59.762207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:00.192843 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:00.762430      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:01.762948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:02.198992 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:02.763621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:03.763923      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:04.764628      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:04.783617 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:05.765661      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:06.766185      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:06.789191 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:07.767243      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:08.768402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:08.794674 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:09.768756      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:10.769191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:10.801828 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:11.770005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:12.770449      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:12.807925 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:13.770954      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:14.771505      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:14.813059 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:15.771814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:16.772312      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:16.818286 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:17.772418      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:18.772828      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:18.824324 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:19.773323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:20.773744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:20.830667 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:21.773991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:22.774227      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:22.836603 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:23.775142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:24.775345      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:24.842943 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:25.775608      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:26.776136      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:26.849225 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:27.776293      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:28.777406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:28.854642 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:29.777693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:30.777903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:30.860813 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:31.778759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:32.779217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:32.866633 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:33.779314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:34.779797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:34.871855 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:35.780002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:36.780671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:36.877467 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:37.781423      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:38.782463      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:38.882663 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:39.782751      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:40.782905      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:40.888858 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:41.783874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:42.784132      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:42.894696 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:43.784987      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:44.785393      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:44.900635 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:45.785618      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:46.785874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:46.905997 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:47.786140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:48.786903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:48.911169 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:49.787133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:50.787427      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:50.916828 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:51.787665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:52.788097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:52.922085 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:53.788942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:54.789375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:54.927906 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:55.789857      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:56.790285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:56.932990 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:57.791322      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:45:58.791142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:45:58.939089 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:45:59.791990      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:00.792489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:00.945551 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:01.792697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:02.793044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:02.951600 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:03.794119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:04.794693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:04.956133 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:05.795206      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:06.795738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:06.962054 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:07.795993      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:08.796135      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:08.967617 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:09.796531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:10.796947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:10.974902 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:11.797881      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:12.798333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:12.980647 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:13.798934      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:14.799315      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:14.986498 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:15.800566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:16.800997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:16.992021 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:17.802150      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:18.803005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:18.995947 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:19.803868      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:20.804372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:21.003396 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:21.804547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:22.804976      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:23.009027 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:23.805096      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:24.805494      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:25.014103 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:25.806044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:26.806563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:27.020049 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:27.806855      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:28.807319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:29.024873 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:29.807762      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:30.808223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:31.030950 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:31.808761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:32.809234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:33.037110 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:33.809389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:34.809841      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:35.041539 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:35.810476      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:36.810914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:37.047341 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:37.811210      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:38.812162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:39.052692 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:39.812525      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:40.812997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:41.059033 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:41.813232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:42.813654      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:43.064411 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:43.814793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:44.814973      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:45.070270 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:45.815179      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:46.815490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:47.076559 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:47.815729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:48.816043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:49.082680 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:49.816195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:50.816463      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:51.088431 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:51.817540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:52.817930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:53.094610 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:53.818023      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:54.818216      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:55.099506 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:55.818315      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:56.818698      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:57.104875 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:57.819796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:46:58.820774      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:46:59.109441 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:46:59.821578      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:00.821920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:01.116219 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:01.822339      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:02.822610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:03.122672 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:03.822895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:04.823223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:05.128061 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:05.824347      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:06.824703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:07.132928 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:07.825814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:08.826691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:09.137891 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:09.827018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:10.827256      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:11.144492 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:11.827523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:12.827769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:13.150757 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:13.828021      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:14.828414      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:15.156103 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:15.828761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:16.829005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:17.161265 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:17.829601      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:18.830364      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:19.167800 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:19.830676      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:20.830902      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:21.173602 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:21.831375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:22.832003      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:23.179947 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:23.833060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:24.833272      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:25.186316 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:25.834008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:26.834760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:27.192296 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:27.834929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:28.835818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:29.197582 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:29.836413      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:30.836608      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:31.203815 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:31.837638      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:32.838080      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:33.210193 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:33.838421      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:34.838841      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:35.214792 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:35.839110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:36.839579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:37.220064 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:37.839738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:38.840607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:39.225371 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:39.841067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:40.841326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:41.231329 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:41.842068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:42.842483      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:43.237064 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:43.843287      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:44.843703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:45.242989 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:45.844659      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:46.845050      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:47.248705 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:47.845406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:48.845659      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:49.254391 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:49.846071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:50.846510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:51.260944 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:51.846643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:52.847057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:53.266685 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:53.847979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:54.848438      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:55.272529 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:55.849198      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:56.849471      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:57.278442 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:57.850146      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:47:58.851132      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:47:59.283267 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:47:59.852207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:00.852662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:01.290340 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:01.853271      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:02.853658      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:03.297183 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:03.854645      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:04.854890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:05.302110 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:05.855098      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:06.855551      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:07.307850 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:07.855606      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:08.856828      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:09.313874 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:09.857605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:10.857869      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:11.320006 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:11.858864      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:12.859285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:13.324940 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:13.859918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:14.860406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:15.330111 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:15.861211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:16.861438      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:17.336485 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:17.862338      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:18.863236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:19.343045 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:19.863660      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:20.863927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:21.350162 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:21.864968      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:22.865380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:23.355875 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:23.865572      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:24.866001      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:25.362755 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:25.866359      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:26.867188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:27.368634 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:27.867280      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:28.868354      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:29.374025 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:29.868687      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:30.869705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:31.380367 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:31.869849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:32.870647      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:33.384556 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:33.871133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:34.871409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:35.388969 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:35.871605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:36.872070      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:37.394489 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:37.873231      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:38.874189      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:39.398860 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:39.874698      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:40.875250      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:41.404054 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:41.875733      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:42.876009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:43.408602 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:43.876131      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:44.876422      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:45.413317 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:45.877255      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:46.877473      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:47.418716 23 container_probe.go:1759] Get pod test-grpc-27acc07d-ad3c-41ba-9a34-193407ce6e28 in namespace container-probe-5052
  E1204 06:48:47.878480      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:48.878708      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/04/24 06:48:49.419
  I1204 06:48:49.436022 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5052" for this suite. @ 12/04/24 06:48:49.442
• [243.343 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/04/24 06:48:49.449
  I1204 06:48:49.449341 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:48:49.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:48:49.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:48:49.482
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:48:49.486
  E1204 06:48:49.879104      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:50.879668      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:51.880674      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:52.881183      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:48:53.514
  I1204 06:48:53.518416 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-58de94ea-d199-4b93-b8ef-6038c6363650 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:48:53.535
  I1204 06:48:53.552770 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4033" for this suite. @ 12/04/24 06:48:53.557
• [4.114 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/04/24 06:48:53.563
  I1204 06:48:53.563888 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/04/24 06:48:53.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:48:53.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:48:53.583
  STEP: creating @ 12/04/24 06:48:53.587
  STEP: getting @ 12/04/24 06:48:53.603
  STEP: listing in namespace @ 12/04/24 06:48:53.608
  STEP: patching @ 12/04/24 06:48:53.612
  STEP: deleting @ 12/04/24 06:48:53.63
  I1204 06:48:53.639945 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6748" for this suite. @ 12/04/24 06:48:53.658
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 12/04/24 06:48:53.666
  I1204 06:48:53.666377 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:48:53.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:48:53.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:48:53.684
  STEP: Setting up server cert @ 12/04/24 06:48:53.782
  E1204 06:48:53.881982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:48:54.357
  STEP: Deploying the webhook pod @ 12/04/24 06:48:54.365
  STEP: Wait for the deployment to be ready @ 12/04/24 06:48:54.38
  I1204 06:48:54.387786 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1204 06:48:54.882630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:55.883218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:48:56.402
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:48:56.435
  E1204 06:48:56.883568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:48:57.436432 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/04/24 06:48:57.444
  STEP: create the configmap with a random name @ 12/04/24 06:48:57.477
  STEP: verify the configmap is mutated @ 12/04/24 06:48:57.501
  STEP: create the configmap with 'skip-me' name @ 12/04/24 06:48:57.501
  I1204 06:48:57.549688 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6445" for this suite. @ 12/04/24 06:48:57.562
  STEP: Destroying namespace "webhook-markers-8280" for this suite. @ 12/04/24 06:48:57.567
• [3.907 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/04/24 06:48:57.573
  I1204 06:48:57.573696 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 06:48:57.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:48:57.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:48:57.59
  STEP: creating a ConfigMap @ 12/04/24 06:48:57.594
  STEP: fetching the ConfigMap @ 12/04/24 06:48:57.598
  STEP: patching the ConfigMap @ 12/04/24 06:48:57.601
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/04/24 06:48:57.606
  STEP: deleting the ConfigMap by collection with a label selector @ 12/04/24 06:48:57.609
  STEP: listing all ConfigMaps in test namespace @ 12/04/24 06:48:57.616
  I1204 06:48:57.619711 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4510" for this suite. @ 12/04/24 06:48:57.663
• [0.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/04/24 06:48:57.672
  I1204 06:48:57.672836 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename subpath @ 12/04/24 06:48:57.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:48:57.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:48:57.692
  STEP: Setting up data @ 12/04/24 06:48:57.697
  STEP: Creating pod pod-subpath-test-downwardapi-fhh5 @ 12/04/24 06:48:57.707
  STEP: Creating a pod to test atomic-volume-subpath @ 12/04/24 06:48:57.707
  E1204 06:48:57.884563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:58.885484      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:48:59.886408      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:00.886874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:01.887119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:02.887623      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:03.887870      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:04.888382      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:05.889017      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:06.889473      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:07.889969      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:08.890914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:09.891630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:10.892129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:11.893226      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:12.893605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:13.894149      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:14.894584      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:15.894573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:16.895081      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:17.896093      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:18.897232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:49:19.784
  I1204 06:49:19.788157 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-downwardapi-fhh5 container test-container-subpath-downwardapi-fhh5: <nil>
  STEP: delete the pod @ 12/04/24 06:49:19.8
  STEP: Deleting pod pod-subpath-test-downwardapi-fhh5 @ 12/04/24 06:49:19.814
  I1204 06:49:19.814759 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-fhh5" in namespace "subpath-4122"
  I1204 06:49:19.817944 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4122" for this suite. @ 12/04/24 06:49:19.822
• [22.155 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 12/04/24 06:49:19.827
  I1204 06:49:19.827402 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 06:49:19.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:19.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:19.846
  STEP: Creating a job @ 12/04/24 06:49:19.851
  STEP: Ensuring active pods == parallelism @ 12/04/24 06:49:19.861
  E1204 06:49:19.897199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:20.897900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 12/04/24 06:49:21.868
  E1204 06:49:21.898082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:49:22.392897 23 pod_client.go:173] Successfully updated pod "adopt-release-66j87"
  STEP: Checking that the Job readopts the Pod @ 12/04/24 06:49:22.392
  E1204 06:49:22.898581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:23.899629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 12/04/24 06:49:24.403
  E1204 06:49:24.900620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:49:24.915888 23 pod_client.go:173] Successfully updated pod "adopt-release-66j87"
  STEP: Checking that the Job releases the Pod @ 12/04/24 06:49:24.915
  E1204 06:49:25.901412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:26.902338      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:49:26.926596 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9409" for this suite. @ 12/04/24 06:49:26.933
• [7.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/04/24 06:49:26.939
  I1204 06:49:26.940005 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename init-container @ 12/04/24 06:49:26.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:26.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:26.956
  STEP: creating the pod @ 12/04/24 06:49:26.961
  I1204 06:49:26.961310 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1204 06:49:27.902379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:28.903258      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:29.903604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:30.903845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:49:31.756986 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-645" for this suite. @ 12/04/24 06:49:31.762
• [4.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/04/24 06:49:31.77
  I1204 06:49:31.770703 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:49:31.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:31.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:31.789
  STEP: Creating configMap with name projected-configmap-test-volume-caef3671-7081-4cef-91f8-3a474322a448 @ 12/04/24 06:49:31.794
  STEP: Creating a pod to test consume configMaps @ 12/04/24 06:49:31.799
  E1204 06:49:31.904088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:32.905162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:49:33.815
  I1204 06:49:33.819258 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-48e6223a-a0f5-4053-b0c0-725b1c82d209 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 06:49:33.826
  I1204 06:49:33.842263 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7663" for this suite. @ 12/04/24 06:49:33.847
• [2.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/04/24 06:49:33.853
  I1204 06:49:33.853391 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename subpath @ 12/04/24 06:49:33.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:33.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:33.875
  STEP: Setting up data @ 12/04/24 06:49:33.88
  STEP: Creating pod pod-subpath-test-configmap-55b9 @ 12/04/24 06:49:33.89
  STEP: Creating a pod to test atomic-volume-subpath @ 12/04/24 06:49:33.89
  E1204 06:49:33.905463      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:34.906157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:35.907217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:36.907685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:37.908199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:38.909442      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:39.909921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:40.910550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:41.911016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:42.911408      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:43.911705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:44.912110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:45.912894      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:46.913715      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:47.914194      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:48.914831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:49.915314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:50.915810      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:51.916038      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:52.916296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:53.917106      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:54.917367      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:55.917806      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:49:55.968
  I1204 06:49:55.972005 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-configmap-55b9 container test-container-subpath-configmap-55b9: <nil>
  STEP: delete the pod @ 12/04/24 06:49:55.981
  STEP: Deleting pod pod-subpath-test-configmap-55b9 @ 12/04/24 06:49:55.994
  I1204 06:49:55.994817 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-55b9" in namespace "subpath-7634"
  I1204 06:49:55.998258 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7634" for this suite. @ 12/04/24 06:49:56.003
• [22.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/04/24 06:49:56.01
  I1204 06:49:56.010862 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 06:49:56.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:56.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:56.033
  STEP: create the deployment @ 12/04/24 06:49:56.037
  W1204 06:49:56.044507      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/04/24 06:49:56.044
  STEP: delete the deployment @ 12/04/24 06:49:56.051
  STEP: wait for all rs to be garbage collected @ 12/04/24 06:49:56.07
  STEP: expected 0 pods, got 2 pods @ 12/04/24 06:49:56.086
  STEP: Gathering metrics @ 12/04/24 06:49:56.585
  I1204 06:49:56.706000 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1204 06:49:56.706300 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1316" for this suite. @ 12/04/24 06:49:56.711
• [0.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 12/04/24 06:49:56.722
  I1204 06:49:56.722941 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:49:56.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:56.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:56.738
  STEP: validating cluster-info @ 12/04/24 06:49:56.742
  I1204 06:49:56.742774 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-5919 cluster-info'
  I1204 06:49:56.829786 23 builder.go:146] stderr: ""
  I1204 06:49:56.829841 23 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1204 06:49:56.830064 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5919" for this suite. @ 12/04/24 06:49:56.834
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/04/24 06:49:56.841
  I1204 06:49:56.841968 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/04/24 06:49:56.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:56.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:56.86
  STEP: mirroring a new custom Endpoint @ 12/04/24 06:49:56.876
  I1204 06:49:56.894242 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1204 06:49:56.918542      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:49:57.919388      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 12/04/24 06:49:58.9
  STEP: mirroring deletion of a custom Endpoint @ 12/04/24 06:49:58.913
  E1204 06:49:58.919674      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:49:58.923691 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5870" for this suite. @ 12/04/24 06:49:58.928
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/04/24 06:49:58.935
  I1204 06:49:58.935253 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 06:49:58.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:58.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:58.954
  STEP: Creating ServiceAccount "e2e-sa-hxg6z"  @ 12/04/24 06:49:58.958
  I1204 06:49:58.963183 23 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-hxg6z"  @ 12/04/24 06:49:58.963
  I1204 06:49:58.971755 23 service_accounts.go:839] AutomountServiceAccountToken: true
  I1204 06:49:58.972019 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9040" for this suite. @ 12/04/24 06:49:59.03
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 12/04/24 06:49:59.038
  I1204 06:49:59.038339 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-webhook @ 12/04/24 06:49:59.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:49:59.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:49:59.059
  STEP: Setting up server cert @ 12/04/24 06:49:59.064
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/04/24 06:49:59.403
  STEP: Deploying the custom resource conversion webhook pod @ 12/04/24 06:49:59.414
  STEP: Wait for the deployment to be ready @ 12/04/24 06:49:59.428
  I1204 06:49:59.435369 23 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1204 06:49:59.920558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:00.920997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:50:01.449
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:50:01.467
  E1204 06:50:01.921109      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:02.468365 23 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1204 06:50:02.478605 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 06:50:02.921386      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:03.921781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:04.922836      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/04/24 06:50:05.032
  STEP: v2 custom resource should be converted @ 12/04/24 06:50:05.038
  I1204 06:50:05.597228 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4231" for this suite. @ 12/04/24 06:50:05.603
• [6.570 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 12/04/24 06:50:05.609
  I1204 06:50:05.609074 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:50:05.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:05.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:05.625
  STEP: Setting up server cert @ 12/04/24 06:50:05.723
  E1204 06:50:05.923891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:50:06.056
  STEP: Deploying the webhook pod @ 12/04/24 06:50:06.065
  STEP: Wait for the deployment to be ready @ 12/04/24 06:50:06.079
  I1204 06:50:06.085591 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 06:50:06.924223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:07.924451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:50:08.099
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:50:08.115
  E1204 06:50:08.925622      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:09.116564 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1204 06:50:09.126989 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-798-crds.webhook.example.com via the AdmissionRegistration API @ 12/04/24 06:50:09.641
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/04/24 06:50:09.664
  E1204 06:50:09.925680      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:10.925827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:11.925807      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:12.254077 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2594" for this suite. @ 12/04/24 06:50:12.259
  STEP: Destroying namespace "webhook-markers-8824" for this suite. @ 12/04/24 06:50:12.265
• [6.664 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 12/04/24 06:50:12.273
  I1204 06:50:12.273433 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 06:50:12.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:12.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:12.294
  STEP: creating service multi-endpoint-test in namespace services-1204 @ 12/04/24 06:50:12.298
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1204 to expose endpoints map[] @ 12/04/24 06:50:12.313
  I1204 06:50:12.316324 23 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1204 06:50:12.926234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:13.330086 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-1204 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1204 @ 12/04/24 06:50:13.33
  E1204 06:50:13.927318      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:14.927514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1204 to expose endpoints map[pod1:[100]] @ 12/04/24 06:50:15.364
  I1204 06:50:15.381685 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-1204 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1204 @ 12/04/24 06:50:15.381
  E1204 06:50:15.927781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:16.928443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1204 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/04/24 06:50:17.403
  I1204 06:50:17.419421 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-1204 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/04/24 06:50:17.419
  I1204 06:50:17.419568 23 resource.go:361] Creating new exec pod
  E1204 06:50:17.929441      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:18.930379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:19.931352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:20.434593 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1204 exec execpod222p6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1204 06:50:20.606901 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1204 06:50:20.606985 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:50:20.607106 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1204 exec execpod222p6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.251.33 80'
  I1204 06:50:20.771627 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.251.33 80\nConnection to 10.99.251.33 80 port [tcp/http] succeeded!\n"
  I1204 06:50:20.771714 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:50:20.771857 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1204 exec execpod222p6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E1204 06:50:20.932049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:20.933978 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1204 06:50:20.934069 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 06:50:20.934288 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1204 exec execpod222p6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.251.33 81'
  I1204 06:50:21.095794 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.251.33 81\nConnection to 10.99.251.33 81 port [tcp/*] succeeded!\n"
  I1204 06:50:21.095889 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1204 @ 12/04/24 06:50:21.095
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1204 to expose endpoints map[pod2:[101]] @ 12/04/24 06:50:21.108
  I1204 06:50:21.120318 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-1204 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1204 @ 12/04/24 06:50:21.12
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1204 to expose endpoints map[] @ 12/04/24 06:50:21.128
  I1204 06:50:21.136451 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-1204 exposes endpoints map[]
  I1204 06:50:21.152527 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1204" for this suite. @ 12/04/24 06:50:21.156
• [8.888 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 12/04/24 06:50:21.161
  I1204 06:50:21.161925 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 06:50:21.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:21.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:21.178
  STEP: creating Agnhost RC @ 12/04/24 06:50:21.182
  I1204 06:50:21.182723 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7971 create -f -'
  I1204 06:50:21.376334 23 builder.go:146] stderr: ""
  I1204 06:50:21.376442 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/04/24 06:50:21.376
  E1204 06:50:21.932743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:22.382322 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:50:22.382402 23 framework.go:733] Found 0 / 1
  E1204 06:50:22.932989      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:23.382216 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:50:23.382292 23 framework.go:733] Found 1 / 1
  I1204 06:50:23.382324 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/04/24 06:50:23.382
  I1204 06:50:23.385536 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:50:23.385598 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1204 06:50:23.385678 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7971 patch pod agnhost-primary-9xjqd -p {"metadata":{"annotations":{"x":"y"}}}'
  I1204 06:50:23.492048 23 builder.go:146] stderr: ""
  I1204 06:50:23.492131 23 builder.go:147] stdout: "pod/agnhost-primary-9xjqd patched\n"
  STEP: checking annotations @ 12/04/24 06:50:23.492
  I1204 06:50:23.495864 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1204 06:50:23.495922 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1204 06:50:23.496289 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7971" for this suite. @ 12/04/24 06:50:23.501
• [2.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/04/24 06:50:23.508
  I1204 06:50:23.508700 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 06:50:23.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:23.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:23.527
  STEP: Creating simple DaemonSet "daemon-set" @ 12/04/24 06:50:23.61
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/04/24 06:50:23.616
  I1204 06:50:23.702535 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:23.705869 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:50:23.705939 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 06:50:23.933145      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:24.624259 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:24.628663 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 06:50:24.628727 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 06:50:24.934312      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:25.623816 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:25.629457 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 06:50:25.629514 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/04/24 06:50:25.633
  I1204 06:50:25.724832 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:25.729468 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 06:50:25.729527 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 06:50:25.934704      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:26.653714 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:26.659404 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 06:50:26.659453 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 06:50:26.935703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:27.652127 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:27.656293 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 06:50:27.656352 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 06:50:27.936710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:28.651348 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 06:50:28.693642 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 06:50:28.693707 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/04/24 06:50:28.7
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3391, will wait for the garbage collector to delete the pods @ 12/04/24 06:50:28.7
  I1204 06:50:28.759855 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.316238ms
  I1204 06:50:28.860996 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.13149ms
  E1204 06:50:28.937497      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:29.865339 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 06:50:29.865405 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1204 06:50:29.869603 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15329"},"items":null}

  I1204 06:50:29.872714 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15329"},"items":null}

  I1204 06:50:29.884363 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3391" for this suite. @ 12/04/24 06:50:29.888
• [6.385 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/04/24 06:50:29.894
  I1204 06:50:29.894149 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pod-network-test @ 12/04/24 06:50:29.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:29.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:29.914
  STEP: Performing setup for networking test in namespace pod-network-test-7803 @ 12/04/24 06:50:29.918
  STEP: creating a selector @ 12/04/24 06:50:29.919
  STEP: Creating the service pods in kubernetes @ 12/04/24 06:50:29.919
  I1204 06:50:29.919128 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1204 06:50:29.938194      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:30.938749      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:31.938523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:32.939416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:33.940493      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:34.940690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:35.940864      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:36.941949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:37.942380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:38.942974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:39.943487      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:40.943904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:41.944906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/04/24 06:50:42.045
  E1204 06:50:42.945231      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:43.946308      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:44.075357 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1204 06:50:44.075488 23 networking.go:42] Breadth first check of 10.244.1.215 on host 192.168.100.37...
  I1204 06:50:44.079536 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.216:9080/dial?request=hostname&protocol=udp&host=10.244.1.215&port=8081&tries=1'] Namespace:pod-network-test-7803 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:50:44.079615 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:50:44.081110 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:50:44.081236 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7803/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.216%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.215%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1204 06:50:44.162906 23 utils.go:356] Waiting for responses: map[]
  I1204 06:50:44.162981 23 utils.go:360] reached 10.244.1.215 after 0/1 tries
  I1204 06:50:44.163009 23 networking.go:42] Breadth first check of 10.244.2.79 on host 192.168.100.114...
  I1204 06:50:44.166577 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.216:9080/dial?request=hostname&protocol=udp&host=10.244.2.79&port=8081&tries=1'] Namespace:pod-network-test-7803 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 06:50:44.166613 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 06:50:44.167225 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 06:50:44.167292 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7803/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.216%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.79%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1204 06:50:44.245799 23 utils.go:356] Waiting for responses: map[]
  I1204 06:50:44.245857 23 utils.go:360] reached 10.244.2.79 after 0/1 tries
  I1204 06:50:44.245871 23 networking.go:53] Going to retry 0 out of 2 pods....
  I1204 06:50:44.246043 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7803" for this suite. @ 12/04/24 06:50:44.251
• [14.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 12/04/24 06:50:44.259
  I1204 06:50:44.259292 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 06:50:44.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:44.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:44.278
  STEP: Counting existing ResourceQuota @ 12/04/24 06:50:44.282
  E1204 06:50:44.947639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:45.947942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:46.949132      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:47.949955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:48.950961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/04/24 06:50:49.288
  STEP: Ensuring resource quota status is calculated @ 12/04/24 06:50:49.304
  E1204 06:50:49.951346      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:50.951775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:50:51.310129 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1782" for this suite. @ 12/04/24 06:50:51.315
• [7.063 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/04/24 06:50:51.322
  I1204 06:50:51.322901 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 06:50:51.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:50:51.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:50:51.34
  STEP: Creating configMap with name cm-test-opt-del-a74dfaa5-e942-403b-80e3-f40a9757f9d8 @ 12/04/24 06:50:51.415
  STEP: Creating configMap with name cm-test-opt-upd-5e066dbe-0765-4fb7-b168-204ac6cf3070 @ 12/04/24 06:50:51.421
  STEP: Creating the pod @ 12/04/24 06:50:51.427
  E1204 06:50:51.952516      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:52.953830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-a74dfaa5-e942-403b-80e3-f40a9757f9d8 @ 12/04/24 06:50:53.474
  STEP: Updating configmap cm-test-opt-upd-5e066dbe-0765-4fb7-b168-204ac6cf3070 @ 12/04/24 06:50:53.48
  STEP: Creating configMap with name cm-test-opt-create-0f2ac504-7e13-4574-9b54-65f7cc74e67b @ 12/04/24 06:50:53.485
  STEP: waiting to observe update in volume @ 12/04/24 06:50:53.489
  E1204 06:50:53.954096      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:54.954595      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:55.955073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:56.956201      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:57.956811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:58.957717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:50:59.958870      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:00.959320      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:01.959777      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:02.960209      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:03.960963      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:04.961405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:05.961496      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:06.962542      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:07.963276      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:08.963949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:09.964469      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:10.964876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:11.965554      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:12.965707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:13.966055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:14.966610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:15.967426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:16.967595      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:17.968697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:18.969700      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:19.970685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:20.971237      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:21.972209      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:22.972703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:23.972831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:24.973337      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:25.974486      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:26.974557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:27.975220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:28.976082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:29.977021      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:30.977241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:31.977439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:32.977933      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:33.978727      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:34.979163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:35.980018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:36.980435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:37.981510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:38.982475      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:39.983310      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:40.983797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:41.984471      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:42.985024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:43.985972      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:44.986444      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:45.987634      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:46.987854      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:47.988782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:48.989879      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:49.990624      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:50.991125      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:51.991745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:52.992176      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:53.993211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:54.993718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:55.993816      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:56.995073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:57.995817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:58.997023      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:51:59.997172      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:00.997642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:01.997830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:02.998334      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:03.999443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:04.999908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:06.001971      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:07.000786      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:08.001354      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:09.002170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:10.003306      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:11.003830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:12.004490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:13.005039      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:14.006164      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:15.006639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:16.006730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:17.007147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:18.008005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:19.009000      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:20.009944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:21.010516      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:52:21.979777 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5741" for this suite. @ 12/04/24 06:52:21.985
• [90.668 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/04/24 06:52:21.991
  I1204 06:52:21.991915 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-runtime @ 12/04/24 06:52:21.993
  E1204 06:52:22.011045      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:22.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:22.016
  STEP: create the container @ 12/04/24 06:52:22.02
  W1204 06:52:22.030317      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/04/24 06:52:22.03
  E1204 06:52:23.012122      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:24.012239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:25.012568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/04/24 06:52:25.051
  STEP: the container should be terminated @ 12/04/24 06:52:25.055
  STEP: the termination message should be set @ 12/04/24 06:52:25.055
  I1204 06:52:25.055358 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/04/24 06:52:25.055
  I1204 06:52:25.070848 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2840" for this suite. @ 12/04/24 06:52:25.076
• [3.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 12/04/24 06:52:25.081
  I1204 06:52:25.081845 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename security-context @ 12/04/24 06:52:25.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:25.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:25.103
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/04/24 06:52:25.107
  E1204 06:52:26.013002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:27.013747      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:28.014233      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:29.015294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:52:29.132
  I1204 06:52:29.136332 23 output.go:196] Trying to get logs from node nodea17 pod security-context-352b0bd7-b3b2-4fc6-a13c-db9bd64b978f container test-container: <nil>
  STEP: delete the pod @ 12/04/24 06:52:29.143
  I1204 06:52:29.157676 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7156" for this suite. @ 12/04/24 06:52:29.162
• [4.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 12/04/24 06:52:29.168
  I1204 06:52:29.168053 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:52:29.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:29.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:29.185
  STEP: Setting up server cert @ 12/04/24 06:52:29.285
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:52:29.565
  STEP: Deploying the webhook pod @ 12/04/24 06:52:29.575
  STEP: Wait for the deployment to be ready @ 12/04/24 06:52:29.587
  I1204 06:52:29.595118 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 06:52:30.015536      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:31.015989      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:52:31.607
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:52:31.62
  E1204 06:52:32.016092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:52:32.620941 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/04/24 06:52:32.629
  STEP: verifying the validating webhook match conditions @ 12/04/24 06:52:32.639
  STEP: updating the validating webhook match conditions @ 12/04/24 06:52:32.642
  STEP: verifying the validating webhook match conditions @ 12/04/24 06:52:32.651
  I1204 06:52:32.690091 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5636" for this suite. @ 12/04/24 06:52:32.694
  STEP: Destroying namespace "webhook-markers-4635" for this suite. @ 12/04/24 06:52:32.716
• [3.553 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/04/24 06:52:32.721
  I1204 06:52:32.721495 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename certificates @ 12/04/24 06:52:32.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:32.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:32.74
  E1204 06:52:33.016630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting /apis @ 12/04/24 06:52:33.65
  STEP: getting /apis/certificates.k8s.io @ 12/04/24 06:52:33.656
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/04/24 06:52:33.658
  STEP: creating @ 12/04/24 06:52:33.66
  STEP: getting @ 12/04/24 06:52:33.677
  STEP: listing @ 12/04/24 06:52:33.68
  STEP: watching @ 12/04/24 06:52:33.684
  I1204 06:52:33.684622 23 certificates.go:316] starting watch
  STEP: patching @ 12/04/24 06:52:33.686
  STEP: updating @ 12/04/24 06:52:33.694
  I1204 06:52:33.700151 23 certificates.go:332] waiting for watch events with expected annotations
  I1204 06:52:33.700257 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/04/24 06:52:33.7
  STEP: patching /approval @ 12/04/24 06:52:33.703
  STEP: updating /approval @ 12/04/24 06:52:33.718
  STEP: getting /status @ 12/04/24 06:52:33.726
  STEP: patching /status @ 12/04/24 06:52:33.73
  STEP: updating /status @ 12/04/24 06:52:33.739
  STEP: deleting @ 12/04/24 06:52:33.746
  STEP: deleting a collection @ 12/04/24 06:52:33.759
  I1204 06:52:33.772393 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7821" for this suite. @ 12/04/24 06:52:33.776
• [1.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/04/24 06:52:33.782
  I1204 06:52:33.782812 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 06:52:33.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:33.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:33.801
  E1204 06:52:34.017286      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:35.017726      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:52:35.823320 23 delete.go:62] Deleting pod "var-expansion-013ad1a5-2ca8-44f2-9502-b0539ce3acfc" in namespace "var-expansion-9662"
  I1204 06:52:35.831826 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-013ad1a5-2ca8-44f2-9502-b0539ce3acfc" to be fully deleted
  E1204 06:52:36.018747      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:37.018979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:52:37.839986 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9662" for this suite. @ 12/04/24 06:52:37.844
• [4.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 12/04/24 06:52:37.849
  I1204 06:52:37.850008 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 06:52:37.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:37.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:37.867
  STEP: Setting up server cert @ 12/04/24 06:52:37.959
  E1204 06:52:38.018953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 06:52:38.533
  STEP: Deploying the webhook pod @ 12/04/24 06:52:38.539
  STEP: Wait for the deployment to be ready @ 12/04/24 06:52:38.552
  I1204 06:52:38.559633 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 06:52:39.019640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:40.020030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 06:52:40.572
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 06:52:40.596
  E1204 06:52:41.020349      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:52:41.597326 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/04/24 06:52:41.606
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/04/24 06:52:41.606
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/04/24 06:52:41.628
  E1204 06:52:42.021171      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/04/24 06:52:42.64
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/04/24 06:52:42.64
  E1204 06:52:43.021393      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/04/24 06:52:43.673
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/04/24 06:52:43.673
  E1204 06:52:44.021714      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:45.022011      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:46.022393      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:47.022846      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:48.023219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/04/24 06:52:48.714
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/04/24 06:52:48.714
  E1204 06:52:49.024291      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:50.024669      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:51.025034      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:52.025389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:53.026350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:52:53.793320 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7158" for this suite. @ 12/04/24 06:52:53.798
  STEP: Destroying namespace "webhook-markers-2288" for this suite. @ 12/04/24 06:52:53.802
• [15.957 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 12/04/24 06:52:53.807
  I1204 06:52:53.807233 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 06:52:53.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:52:53.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:52:53.824
  STEP: Creating a ResourceQuota with terminating scope @ 12/04/24 06:52:53.828
  STEP: Ensuring ResourceQuota status is calculated @ 12/04/24 06:52:53.831
  E1204 06:52:54.027406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:55.028451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 12/04/24 06:52:55.836
  STEP: Ensuring ResourceQuota status is calculated @ 12/04/24 06:52:55.842
  E1204 06:52:56.029476      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:57.029909      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 12/04/24 06:52:57.847
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/04/24 06:52:57.862
  E1204 06:52:58.031033      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:52:59.031900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/04/24 06:52:59.868
  E1204 06:53:00.032163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:01.032582      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/04/24 06:53:01.874
  STEP: Ensuring resource quota status released the pod usage @ 12/04/24 06:53:01.888
  E1204 06:53:02.033297      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:03.033760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 12/04/24 06:53:03.894
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/04/24 06:53:03.906
  E1204 06:53:04.034195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:05.034715      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/04/24 06:53:05.911
  E1204 06:53:06.035858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:07.036326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/04/24 06:53:07.916
  STEP: Ensuring resource quota status released the pod usage @ 12/04/24 06:53:07.927
  E1204 06:53:08.037326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:09.038498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:53:09.934324 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9326" for this suite. @ 12/04/24 06:53:09.939
• [16.141 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/04/24 06:53:09.948
  I1204 06:53:09.948504 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename cronjob @ 12/04/24 06:53:09.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:53:09.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:53:09.966
  STEP: Creating a ForbidConcurrent cronjob @ 12/04/24 06:53:09.97
  STEP: Ensuring a job is scheduled @ 12/04/24 06:53:09.976
  E1204 06:53:10.038604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:11.039067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:12.039628      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:13.040093      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:14.040215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:15.040640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:16.041506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:17.041947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:18.042353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:19.043310      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:20.043718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:21.044216      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:22.044901      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:23.045362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:24.045858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:25.046313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:26.046440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:27.046813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:28.048082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:29.048116      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:30.049101      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:31.049562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:32.049886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:33.050337      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:34.051058      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:35.051560      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:36.051595      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:37.051970      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:38.052962      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:39.054129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:40.054324      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:41.054646      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:42.055316      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:43.055763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:44.056738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:45.057273      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:46.057589      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:47.057914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:48.058428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:49.059194      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:50.059216      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:51.059699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:52.059742      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:53.060200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:54.060690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:55.061225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:56.062092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:57.062430      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:58.063175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:53:59.064012      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:00.064773      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:01.065220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/04/24 06:54:01.981
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/04/24 06:54:01.984
  STEP: Ensuring no more jobs are scheduled @ 12/04/24 06:54:01.988
  STEP: Removing cronjob @ 12/04/24 06:54:01.991
  I1204 06:54:01.998853 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7655" for this suite. @ 12/04/24 06:54:02.006
• [52.071 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/04/24 06:54:02.019
  I1204 06:54:02.019915 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 06:54:02.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:54:02.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:54:02.036
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 06:54:02.04
  E1204 06:54:02.065779      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:03.066240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:04.067207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:05.067720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 06:54:06.066
  E1204 06:54:06.068718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:06.070419 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-4d29cdb4-32ec-4466-9f75-8403c9bb195f container client-container: <nil>
  STEP: delete the pod @ 12/04/24 06:54:06.09
  I1204 06:54:06.104499 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9176" for this suite. @ 12/04/24 06:54:06.108
• [4.095 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 12/04/24 06:54:06.115
  I1204 06:54:06.115328 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 06:54:06.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:54:06.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:54:06.133
  I1204 06:54:06.137793 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 06:54:07.069797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:08.070535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1204 06:54:08.697016      23 warnings.go:70] unknown field "alpha"
  W1204 06:54:08.697069      23 warnings.go:70] unknown field "beta"
  W1204 06:54:08.697082      23 warnings.go:70] unknown field "delta"
  W1204 06:54:08.697093      23 warnings.go:70] unknown field "epsilon"
  W1204 06:54:08.697105      23 warnings.go:70] unknown field "gamma"
  E1204 06:54:09.070579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:09.242437 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6538" for this suite. @ 12/04/24 06:54:09.247
• [3.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/04/24 06:54:09.252
  I1204 06:54:09.252987 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename apf @ 12/04/24 06:54:09.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:54:09.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:54:09.272
  STEP: getting /apis @ 12/04/24 06:54:09.276
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/04/24 06:54:09.283
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/04/24 06:54:09.285
  STEP: creating @ 12/04/24 06:54:09.287
  STEP: getting @ 12/04/24 06:54:09.3
  STEP: listing @ 12/04/24 06:54:09.306
  STEP: watching @ 12/04/24 06:54:09.323
  I1204 06:54:09.323108 23 flowcontrol.go:394] starting watch
  STEP: patching @ 12/04/24 06:54:09.324
  STEP: updating @ 12/04/24 06:54:09.333
  I1204 06:54:09.353773 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 12/04/24 06:54:09.353
  STEP: patching /status @ 12/04/24 06:54:09.357
  STEP: updating /status @ 12/04/24 06:54:09.363
  STEP: deleting @ 12/04/24 06:54:09.395
  STEP: deleting a collection @ 12/04/24 06:54:09.407
  I1204 06:54:09.422208 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4862" for this suite. @ 12/04/24 06:54:09.426
• [0.178 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 12/04/24 06:54:09.431
  I1204 06:54:09.432031 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 06:54:09.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:54:09.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:54:09.451
  STEP: Creating resourceQuota "e2e-rq-status-mkhfz" @ 12/04/24 06:54:09.539
  I1204 06:54:09.548042 23 resource_quota.go:1102] Resource quota "e2e-rq-status-mkhfz" reports spec: hard cpu limit of 500m
  I1204 06:54:09.548109 23 resource_quota.go:1104] Resource quota "e2e-rq-status-mkhfz" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-mkhfz" /status @ 12/04/24 06:54:09.548
  STEP: Confirm /status for "e2e-rq-status-mkhfz" resourceQuota via watch @ 12/04/24 06:54:09.558
  I1204 06:54:09.560651 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-mkhfz" in namespace "resourcequota-2225" with hard status: v1.ResourceList(nil)
  I1204 06:54:09.560770 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-mkhfz" in namespace "resourcequota-2225" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1204 06:54:09.560925 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-mkhfz" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/04/24 06:54:09.563
  I1204 06:54:09.570207 23 resource_quota.go:1152] Resource quota "e2e-rq-status-mkhfz" reports spec: hard cpu limit of 1
  I1204 06:54:09.570273 23 resource_quota.go:1153] Resource quota "e2e-rq-status-mkhfz" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-mkhfz" /status @ 12/04/24 06:54:09.57
  STEP: Confirm /status for "e2e-rq-status-mkhfz" resourceQuota via watch @ 12/04/24 06:54:09.576
  I1204 06:54:09.579072 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-mkhfz" in namespace "resourcequota-2225" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1204 06:54:09.579170 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-mkhfz" in namespace "resourcequota-2225" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1204 06:54:09.579199 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-mkhfz" /status was patched
  STEP: Get "e2e-rq-status-mkhfz" /status @ 12/04/24 06:54:09.579
  I1204 06:54:09.583198 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-mkhfz" reports status: hard cpu of 1
  I1204 06:54:09.583274 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-mkhfz" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-mkhfz" /status before checking Spec is unchanged @ 12/04/24 06:54:09.586
  I1204 06:54:09.590392 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-mkhfz" reports status: hard cpu of 2
  I1204 06:54:09.590469 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-mkhfz" reports status: hard memory of 2Gi
  I1204 06:54:09.592817 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-mkhfz" in namespace "resourcequota-2225" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1204 06:54:09.595593 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038cfba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038cfbf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038cfc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:10.071103      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:11.071806      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:12.071815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:13.072379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:14.072665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:14.598516 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038cfde8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038cfe48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038cfe78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:15.072891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:16.073409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:17.073887      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:18.074318      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:19.075320      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:19.597613 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1e0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1e120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1e168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:20.076241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:21.076693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:22.076960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:23.077148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:24.078231      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:24.597710 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411aac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411ab28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411ab58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:25.078371      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:26.078815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:27.079275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:28.079717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:29.080490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:29.597757 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411ad80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411adb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411ae10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:30.081530      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:31.081976      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:32.082730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:33.083205      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:34.083383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:34.597578 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b0c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:35.084136      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:36.084534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:37.084956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:38.085320      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:39.086398      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:39.598877 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b458), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b4e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:40.087519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:41.087930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:42.088372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:43.088793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:44.089627      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:44.596517 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b6f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b788), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411b7d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:45.090067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:46.090514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:47.090913      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:48.091338      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:49.092213      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:49.597417 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411bb90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411bbc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411bc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:50.093146      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:51.093621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:52.093997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:53.094405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:54.095394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:54.597305 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411bf20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00411bf68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:54:55.095882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:56.096326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:57.097148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:58.097638      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:54:59.098349      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:54:59.597667 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038402d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:00.099431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:01.099899      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:02.100328      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:03.100741      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:04.101504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:04.598455 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038404f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:05.102063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:06.102477      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:07.102864      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:08.103180      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:09.104092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:09.598722 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038407f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:10.104929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:11.105341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:12.105817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:13.106247      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:14.106493      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:14.596934 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840b58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:15.107625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:16.108340      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:17.108765      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:18.109313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:19.110223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:19.596861 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003840fa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:20.110448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:21.110883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:22.111313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:23.111766      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:24.112449      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:24.598249 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841248), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038412a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:25.112693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:26.113107      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:27.113587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:28.113974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:29.114867      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:29.599106 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841590), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841668), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038416b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:30.116015      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:31.116480      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:32.116937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:33.117635      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:34.118381      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:34.597769 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038419e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841a58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841a88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:35.119581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:36.120088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:37.120555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:38.120996      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:39.121904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:39.598053 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841db8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003841e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:40.122810      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:41.123224      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:42.124110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:43.124573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:44.125298      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:44.598106 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d41e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d42e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:45.125722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:46.126130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:47.126546      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:48.126984      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:49.127781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:49.597359 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413590), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413650), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:50.127859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:51.128296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:52.128863      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:53.129246      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:54.130397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:54.598111 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1ea50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1eab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1eaf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:55:55.130775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:56.131205      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:57.131681      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:58.132163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:55:59.133336      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:55:59.597840 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1edc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1ee10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1ee40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:00.133467      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:01.133936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:02.134349      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:03.134795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:04.134851      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:04.599633 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1f068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1f0f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c1f128), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:05.135219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:06.135415      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:07.136667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:08.137363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:09.138490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:09.597908 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012241b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:10.139650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:11.140096      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:12.140515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:13.140926      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:14.141731      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:14.598605 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:15.142159      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:16.142581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:17.143024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:18.143521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:19.144230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:19.598411 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012248d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:20.144960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:21.145369      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:22.146385      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:23.146868      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:24.147686      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:24.598470 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224ca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:25.148090      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:26.148508      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:27.148921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:28.149353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:29.150176      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:29.599638 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001224ff0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:30.151342      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:31.151818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:32.152267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:33.152724      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:34.153444      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:34.598318 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225290), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012252c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:35.153815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:36.154224      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:37.154601      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:38.155036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:39.155903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:39.598178 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012255c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:40.156959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:41.157357      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:42.157805      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:43.158151      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:44.158975      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:44.598161 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012259e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225a10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225ab8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:45.159953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:46.160216      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:47.160598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:48.161022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:49.161257      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:49.597221 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225e48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001225ec0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:50.161781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:51.162237      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:52.162473      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:53.162883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:54.163716      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:54.598657 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014122d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014123c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:56:55.163951      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:56.164355      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:57.164774      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:58.164968      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:56:59.165834      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:56:59.597927 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014127b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014127e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:00.166560      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:01.166794      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:02.167286      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:03.167710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:04.167944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:04.599807 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412f48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001412f78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:05.168325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:06.169061      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:07.169235      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:08.169678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:09.170312      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:09.597268 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014131b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:10.170575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:11.171018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:12.171443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:13.171751      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:14.172437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:14.598066 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413530), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413608), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:15.172734      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:16.173025      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:17.173448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:18.173840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:19.174133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:19.599184 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413848), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413878), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0014138c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:20.174581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:21.174935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:22.175744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:23.175999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:24.176852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:24.598359 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4c78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4cf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:25.177442      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:26.177642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:27.178057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:28.178452      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:29.178655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:29.598559 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413bc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:30.179174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:31.179620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:32.179850      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:33.180268      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:34.181102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:34.598960 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413f08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001413f68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba018), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:35.181648      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:36.182379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:37.182672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:38.183067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:39.183931      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:39.598676 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4f48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4fc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d4ff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:40.184920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:41.185338      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:42.185738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:43.186564      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:44.187280      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:44.598650 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d52c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d52f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d5368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:45.188340      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:46.188757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:47.189134      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:48.190226      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:49.190348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:49.597479 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d5560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d55d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008d5620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:50.191199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:51.191711      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:52.192114      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:53.192346      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:54.192597      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:54.597740 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:57:55.192721      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:56.192970      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:57.193204      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:58.193424      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:57:59.193653      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:57:59.597453 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba7f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:00.194604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:01.194907      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:02.195087      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:03.195309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:04.195594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:04.598366 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbaa68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbaab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbaaf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:05.196064      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:06.197102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:07.197741      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:08.197811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:09.198742      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:09.598150 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:10.199847      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:11.200277      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:12.200759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:13.201213      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:14.202057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:14.599585 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba3d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:15.202305      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:16.202767      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:17.203158      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:18.203640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:19.204397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:19.597496 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dba7f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:20.205350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:21.205760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:22.206200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:23.206671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:24.207386      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:24.598047 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbaa98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbaae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbab28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:25.207688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:26.208114      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:27.208556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:28.208987      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:29.209266      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:29.599519 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-mkhfz" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-mkhfz", GenerateName:"", Namespace:"resourcequota-2225", SelfLink:"", UID:"418f0aea-dccc-4038-8302-35932011f55d", ResourceVersion:"16154", Generation:0, CreationTimestamp:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-mkhfz"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbad68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbae28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 4, 6, 54, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dbae58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1204 06:58:30.209206      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:31.209641      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:32.210104      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:33.210502      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:34.211431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:34.597762 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-mkhfz" Spec was unchanged and /status reset
  I1204 06:58:34.598035 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2225" for this suite. @ 12/04/24 06:58:34.604
• [265.180 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 12/04/24 06:58:34.612
  I1204 06:58:34.612233 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 06:58:34.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:58:34.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:58:34.635
  I1204 06:58:34.639929 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 06:58:35.211629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:36.212197      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:37.212619      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 06:58:37.750030 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3433" for this suite. @ 12/04/24 06:58:37.755
• [3.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/04/24 06:58:37.76
  I1204 06:58:37.760579 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename ingressclass @ 12/04/24 06:58:37.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:58:37.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:58:37.777
  STEP: getting /apis @ 12/04/24 06:58:37.781
  STEP: getting /apis/networking.k8s.io @ 12/04/24 06:58:37.787
  STEP: getting /apis/networking.k8s.iov1 @ 12/04/24 06:58:37.789
  STEP: creating @ 12/04/24 06:58:37.791
  STEP: getting @ 12/04/24 06:58:37.806
  STEP: listing @ 12/04/24 06:58:37.809
  STEP: watching @ 12/04/24 06:58:37.813
  I1204 06:58:37.813607 23 ingressclass.go:348] starting watch
  STEP: patching @ 12/04/24 06:58:37.815
  STEP: updating @ 12/04/24 06:58:37.822
  I1204 06:58:37.828053 23 ingressclass.go:364] waiting for watch events with expected annotations
  I1204 06:58:37.828132 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/04/24 06:58:37.828
  STEP: deleting a collection @ 12/04/24 06:58:37.839
  I1204 06:58:37.851286 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4990" for this suite. @ 12/04/24 06:58:37.855
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/04/24 06:58:37.861
  I1204 06:58:37.861792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename cronjob @ 12/04/24 06:58:37.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 06:58:37.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 06:58:37.88
  STEP: Creating a ReplaceConcurrent cronjob @ 12/04/24 06:58:37.884
  STEP: Ensuring a job is scheduled @ 12/04/24 06:58:37.889
  E1204 06:58:38.213563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:39.214775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:40.215688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:41.216265      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:42.216839      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:43.217287      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:44.218046      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:45.218529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:46.219529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:47.219955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:48.220991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:49.221929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:50.221955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:51.222292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:52.222392      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:53.222648      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:54.222773      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:55.222966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:56.223934      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:57.224169      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:58.224195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:58:59.224458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:00.225657      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:01.226122      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/04/24 06:59:01.894
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/04/24 06:59:01.898
  STEP: Ensuring the job is replaced with a new one @ 12/04/24 06:59:01.902
  E1204 06:59:02.226975      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:03.227440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:04.227680      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:05.228130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:06.228178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:07.228443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:08.228777      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:09.229415      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:10.230261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:11.230704      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:12.231608      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:13.232027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:14.232961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:15.233397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:16.233787      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:17.234273      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:18.235163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:19.235959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:20.236695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:21.237154      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:22.237399      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:23.237599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:24.237760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:25.238269      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:26.238476      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:27.238906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:28.239717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:29.240461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:30.241211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:31.241658      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:32.241789      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:33.242034      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:34.242446      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:35.242936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:36.243851      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:37.244263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:38.245112      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:39.245980      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:40.246627      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:41.247076      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:42.248173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:43.248625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:44.248994      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:45.249435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:46.250392      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:47.250865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:48.251276      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:49.252110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:50.252289      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:51.252700      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:52.253872      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:53.254269      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:54.254762      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:55.255287      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:56.256223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:57.256722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:58.257051      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 06:59:59.258010      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:00.258200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:01.258642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 12/04/24 07:00:01.908
  I1204 07:00:01.915255 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7656" for this suite. @ 12/04/24 07:00:01.92
• [84.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 12/04/24 07:00:01.934
  I1204 07:00:01.935013 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption @ 12/04/24 07:00:01.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:00:01.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:00:01.965
  I1204 07:00:01.992608 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1204 07:00:02.259668      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:03.260169      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:04.260493      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:05.260900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:06.262050      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:07.261999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:08.262629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:09.263314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:10.264385      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:11.264802      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:12.265549      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:13.265966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:14.266925      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:15.267359      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:16.268402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:17.268822      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:18.269624      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:19.270363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:20.270540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:21.270947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:22.271410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:23.271848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:24.272047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:25.272914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:26.273136      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:27.273566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:28.274197      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:29.275088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:30.275211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:31.275712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:32.276801      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:33.277224      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:34.277404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:35.277828      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:36.278810      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:37.279239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:38.279248      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:39.280097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:40.280425      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:41.280876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:42.280907      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:43.281351      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:44.281750      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:45.282192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:46.282409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:47.282860      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:48.283100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:49.283951      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:50.284759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:51.285228      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:52.285449      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:53.285882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:54.286640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:55.287062      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:56.288220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:57.288717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:58.289488      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:00:59.290423      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:00.291344      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:01.291797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:01.999084 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/04/24 07:01:02.003
  I1204 07:01:02.003784 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/04/24 07:01:02.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:01:02.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:01:02.018
  I1204 07:01:02.042224 23 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1204 07:01:02.046346 23 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1204 07:01:02.105377 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4283" for this suite. @ 12/04/24 07:01:02.109
  I1204 07:01:02.117289 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6186" for this suite. @ 12/04/24 07:01:02.21
• [60.286 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/04/24 07:01:02.22
  I1204 07:01:02.220733 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 07:01:02.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:01:02.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:01:02.239
  STEP: Creating pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209 @ 12/04/24 07:01:02.244
  E1204 07:01:02.293060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:03.294083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 07:01:04.261
  I1204 07:01:04.264569 23 container_probe.go:1749] Initial restart count of pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 is 0
  I1204 07:01:04.268158 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:04.294516      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:05.294927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:06.274080 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:06.295162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:07.295655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:08.280420 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:08.296718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:09.297465      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:10.285570 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:10.297820      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:11.298248      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:12.290388 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:12.298630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:13.299102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:14.294860 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:14.300086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:15.300513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:16.300565      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:16.300677 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:17.301019      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:18.301625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:18.305932 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:19.302386      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:20.302880      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:20.310969 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:21.303136      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:22.303710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:22.316435 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:23.304511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:24.305450      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:25.306358      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:25.945729 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:26.307302      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:27.307753      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:27.951124 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:28.308768      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:29.309755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:29.956666 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:30.310061      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:31.310489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:31.962260 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:32.310717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:33.311164      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:33.967096 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:34.311597      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:35.312099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:35.973265 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:36.312873      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:37.313236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:37.978952 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:38.313338      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:39.314285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:39.984280 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:40.314682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:41.315129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:41.989878 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:42.315190      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:43.315849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:43.994887 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:44.316360      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:45.316785      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:46.002328 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:46.317840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:47.318491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:48.008553 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:48.318794      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:49.319733      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:50.013761 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:50.320167      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:51.320607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:52.019343 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:52.320808      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:53.321336      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:54.023946 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:54.321321      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:55.321791      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:56.029298 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:56.322900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:57.323384      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:01:58.034204 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:01:58.323621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:01:59.324504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:00.040124 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:02:00.325559      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:01.326014      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:02.045041 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:02:02.326371      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:03.326819      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:04.050802 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:02:04.327212      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:05.327710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:06.056069 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:02:06.329124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:07.329165      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:08.061921 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  E1204 07:02:08.329240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:09.329531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:10.068257 23 container_probe.go:1759] Get pod test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 in namespace container-probe-8209
  I1204 07:02:10.068365 23 container_probe.go:1763] Restart count of pod container-probe-8209/test-grpc-5172b232-c94e-49be-98e7-2f6999763c82 is now 1 (1m5.803729779s elapsed)
  STEP: deleting the pod @ 12/04/24 07:02:10.068
  I1204 07:02:10.078685 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8209" for this suite. @ 12/04/24 07:02:10.084
• [67.871 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/04/24 07:02:10.092
  I1204 07:02:10.092884 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:02:10.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:10.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:10.113
  STEP: Creating projection with secret that has name projected-secret-test-a41c9c2e-ec0c-473a-924b-b726af19c553 @ 12/04/24 07:02:10.117
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:02:10.122
  E1204 07:02:10.330498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:11.331230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:12.331772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:13.332287      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:02:14.145
  I1204 07:02:14.149293 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-02884243-628a-4b19-9967-94a907a68e6c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:02:14.17
  I1204 07:02:14.182534 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6707" for this suite. @ 12/04/24 07:02:14.187
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 12/04/24 07:02:14.192
  I1204 07:02:14.192675 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename disruption @ 12/04/24 07:02:14.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:14.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:14.211
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:02:14.22
  E1204 07:02:14.332957      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:15.333991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 12/04/24 07:02:16.225
  STEP: Waiting for all pods to be running @ 12/04/24 07:02:16.233
  I1204 07:02:16.237195 23 disruption.go:691] running pods: 0 < 1
  E1204 07:02:16.334494      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:17.334942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 12/04/24 07:02:18.24
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:02:18.252
  STEP: Patching PodDisruptionBudget status @ 12/04/24 07:02:18.26
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:02:18.271
  I1204 07:02:18.275383 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8993" for this suite. @ 12/04/24 07:02:18.28
• [4.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/04/24 07:02:18.286
  I1204 07:02:18.286204 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 07:02:18.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:18.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:18.304
  E1204 07:02:18.334892      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:18.392663 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1204 07:02:18.397775 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1204 07:02:18.483163 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:02:18.486614 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:02:18.486673 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:02:19.335814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:19.404032 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:02:19.408148 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:02:19.408224 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:02:20.336032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:20.404808 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:02:20.408438 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 07:02:20.408475 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I1204 07:02:20.408493 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1204 07:02:20.417317 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E1204 07:02:21.336999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:21.432890 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1204 07:02:21.443149 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I1204 07:02:21.443207 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1204 07:02:21.447396 23 daemon_set.go:1193] Wrong image for pod: daemon-set-lb2wn. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1204 07:02:21.447445 23 daemon_set.go:1198] Pod daemon-set-lb2wn is not available
  I1204 07:02:21.534118 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1204 07:02:22.337675      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:22.453485 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1204 07:02:23.338292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:23.451204 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1204 07:02:24.338625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:24.449407 23 daemon_set.go:1198] Pod daemon-set-vjz5d is not available
  I1204 07:02:24.454226 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/04/24 07:02:24.462
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2190, will wait for the garbage collector to delete the pods @ 12/04/24 07:02:24.463
  I1204 07:02:24.525738 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.244413ms
  I1204 07:02:24.626306 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.566911ms
  E1204 07:02:25.339267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:25.830600 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:02:25.830681 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1204 07:02:25.835336 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17223"},"items":null}

  I1204 07:02:25.839365 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17223"},"items":null}

  I1204 07:02:25.849754 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2190" for this suite. @ 12/04/24 07:02:25.853
• [7.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/04/24 07:02:25.86
  I1204 07:02:25.860627 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename proxy @ 12/04/24 07:02:25.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:25.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:25.876
  I1204 07:02:25.880045 23 proxy.go:293] Creating pod...
  E1204 07:02:26.339437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:27.340531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:27.901517 23 proxy.go:317] Creating service...
  I1204 07:02:27.922608 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/DELETE
  I1204 07:02:27.928056 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1204 07:02:27.928131 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/GET
  I1204 07:02:27.932234 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1204 07:02:27.932302 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/HEAD
  I1204 07:02:27.935390 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1204 07:02:27.935449 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/OPTIONS
  I1204 07:02:27.939175 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1204 07:02:27.939240 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/PATCH
  I1204 07:02:27.943272 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1204 07:02:27.943338 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/POST
  I1204 07:02:27.947198 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1204 07:02:27.947260 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/pods/agnhost/proxy/some/path/with/PUT
  I1204 07:02:27.950974 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1204 07:02:27.951040 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/DELETE
  I1204 07:02:27.955439 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1204 07:02:27.955574 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/GET
  I1204 07:02:27.959920 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1204 07:02:27.959986 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/HEAD
  I1204 07:02:27.964378 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1204 07:02:27.964436 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/OPTIONS
  I1204 07:02:27.968488 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1204 07:02:27.968552 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/PATCH
  I1204 07:02:27.973623 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1204 07:02:27.973686 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/POST
  I1204 07:02:27.979118 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1204 07:02:27.979197 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3650/services/test-service/proxy/some/path/with/PUT
  I1204 07:02:27.983694 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1204 07:02:27.983927 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3650" for this suite. @ 12/04/24 07:02:27.988
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/04/24 07:02:28.027
  I1204 07:02:28.027795 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename discovery @ 12/04/24 07:02:28.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:28.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:28.047
  STEP: Setting up server cert @ 12/04/24 07:02:28.061
  E1204 07:02:28.340449      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 12/04/24 07:02:28.524
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/04/24 07:02:28.526
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/04/24 07:02:28.527
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/04/24 07:02:28.529
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/04/24 07:02:28.53
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/04/24 07:02:28.532
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/04/24 07:02:28.533
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/04/24 07:02:28.535
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/04/24 07:02:28.537
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/04/24 07:02:28.539
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/04/24 07:02:28.54
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/04/24 07:02:28.542
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/04/24 07:02:28.544
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/04/24 07:02:28.546
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/04/24 07:02:28.547
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/04/24 07:02:28.549
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/04/24 07:02:28.551
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/04/24 07:02:28.552
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/04/24 07:02:28.554
  I1204 07:02:28.556643 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1991" for this suite. @ 12/04/24 07:02:28.561
• [0.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/04/24 07:02:28.57
  I1204 07:02:28.570803 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:02:28.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:28.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:28.595
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:02:28.6
  E1204 07:02:29.341404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:30.342129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:31.342344      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:32.342787      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:02:32.632
  I1204 07:02:32.635614 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-3467f7b9-c458-401f-b515-4cc9d1314f7a container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:02:32.642
  I1204 07:02:32.656730 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8187" for this suite. @ 12/04/24 07:02:32.661
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/04/24 07:02:32.667
  I1204 07:02:32.667245 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 07:02:32.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:32.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:32.685
  STEP: set up a multi version CRD @ 12/04/24 07:02:32.69
  I1204 07:02:32.690942 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:02:33.343483      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:34.344363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:35.344513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: rename a version @ 12/04/24 07:02:36.343
  E1204 07:02:36.344660      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the new version name is served @ 12/04/24 07:02:36.364
  STEP: check the old version name is removed @ 12/04/24 07:02:37.206
  E1204 07:02:37.344934      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 12/04/24 07:02:37.946
  E1204 07:02:38.345610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:39.346479      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:40.346873      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:40.941336 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6482" for this suite. @ 12/04/24 07:02:40.951
• [8.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/04/24 07:02:40.962
  I1204 07:02:40.962444 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/04/24 07:02:40.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:40.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:40.986
  STEP: creating a target pod @ 12/04/24 07:02:40.99
  E1204 07:02:41.347456      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:42.347946      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/04/24 07:02:43.014
  E1204 07:02:43.348699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:44.349155      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/04/24 07:02:45.041
  I1204 07:02:45.041261 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3274 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:02:45.041297 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:02:45.042414 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:02:45.042531 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3274/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1204 07:02:45.120719 23 exec_util.go:111] Exec stderr: ""
  I1204 07:02:45.128009 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3274" for this suite. @ 12/04/24 07:02:45.133
• [4.177 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/04/24 07:02:45.139
  I1204 07:02:45.139388 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 07:02:45.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:45.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:45.158
  E1204 07:02:45.350275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:46.351160      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 12/04/24 07:02:47.182
  I1204 07:02:47.182319 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2965 pod-service-account-98b36b14-da81-478d-a75d-dabc1a4747bd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E1204 07:02:47.351592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 12/04/24 07:02:47.352
  I1204 07:02:47.352514 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2965 pod-service-account-98b36b14-da81-478d-a75d-dabc1a4747bd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/04/24 07:02:47.505
  I1204 07:02:47.505894 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2965 pod-service-account-98b36b14-da81-478d-a75d-dabc1a4747bd -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1204 07:02:47.668423 23 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-2965"
  I1204 07:02:47.672035 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2965" for this suite. @ 12/04/24 07:02:47.676
• [2.543 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/04/24 07:02:47.682
  I1204 07:02:47.682449 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 07:02:47.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:47.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:47.703
  I1204 07:02:47.708092 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:02:48.352653      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/04/24 07:02:49.069
  I1204 07:02:49.070439 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7425 --namespace=crd-publish-openapi-7425 create -f -'
  I1204 07:02:49.211054 23 builder.go:146] stderr: ""
  I1204 07:02:49.211131 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7182-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1204 07:02:49.211214 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7425 --namespace=crd-publish-openapi-7425 delete e2e-test-crd-publish-openapi-7182-crds test-cr'
  I1204 07:02:49.305096 23 builder.go:146] stderr: ""
  I1204 07:02:49.305169 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7182-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1204 07:02:49.305263 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7425 --namespace=crd-publish-openapi-7425 apply -f -'
  E1204 07:02:49.353078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:49.411998 23 builder.go:146] stderr: ""
  I1204 07:02:49.412063 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7182-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1204 07:02:49.412150 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7425 --namespace=crd-publish-openapi-7425 delete e2e-test-crd-publish-openapi-7182-crds test-cr'
  I1204 07:02:49.514127 23 builder.go:146] stderr: ""
  I1204 07:02:49.514209 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7182-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/04/24 07:02:49.514
  I1204 07:02:49.514357 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7425 explain e2e-test-crd-publish-openapi-7182-crds'
  I1204 07:02:49.603053 23 builder.go:146] stderr: ""
  I1204 07:02:49.603154 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7182-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1204 07:02:50.353609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:50.962730 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7425" for this suite. @ 12/04/24 07:02:50.973
• [3.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/04/24 07:02:50.979
  I1204 07:02:50.980011 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/04/24 07:02:50.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:50.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:50.999
  STEP: create the container to handle the HTTPGet hook request. @ 12/04/24 07:02:51.074
  E1204 07:02:51.354431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:52.354472      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/04/24 07:02:53.109
  E1204 07:02:53.355158      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:54.356148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/04/24 07:02:55.126
  STEP: delete the pod with lifecycle hook @ 12/04/24 07:02:55.134
  E1204 07:02:55.356292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:56.356727      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:57.151590 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6441" for this suite. @ 12/04/24 07:02:57.157
• [6.183 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 12/04/24 07:02:57.163
  I1204 07:02:57.163797 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:02:57.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:02:57.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:02:57.184
  STEP: creating a replication controller @ 12/04/24 07:02:57.188
  I1204 07:02:57.188900 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 create -f -'
  E1204 07:02:57.357792      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:02:57.365014 23 builder.go:146] stderr: ""
  I1204 07:02:57.365083 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/04/24 07:02:57.365
  I1204 07:02:57.365240 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:02:57.455648 23 builder.go:146] stderr: ""
  I1204 07:02:57.455714 23 builder.go:147] stdout: "update-demo-nautilus-2zp5j update-demo-nautilus-hg9hs "
  I1204 07:02:57.455795 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-2zp5j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:02:57.538061 23 builder.go:146] stderr: ""
  I1204 07:02:57.538127 23 builder.go:147] stdout: ""
  I1204 07:02:57.538151 23 kubectl.go:2502] update-demo-nautilus-2zp5j is created but not running
  E1204 07:02:58.358614      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:02:59.359030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:00.359522      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:01.359944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:02.360294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:02.538967 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:03:02.629733 23 builder.go:146] stderr: ""
  I1204 07:03:02.629818 23 builder.go:147] stdout: "update-demo-nautilus-2zp5j update-demo-nautilus-hg9hs "
  I1204 07:03:02.629913 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-2zp5j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:03:02.714689 23 builder.go:146] stderr: ""
  I1204 07:03:02.714763 23 builder.go:147] stdout: ""
  I1204 07:03:02.714789 23 kubectl.go:2502] update-demo-nautilus-2zp5j is created but not running
  E1204 07:03:03.360847      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:04.361426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:05.361782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:06.362316      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:07.363088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:07.715929 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:03:07.822403 23 builder.go:146] stderr: ""
  I1204 07:03:07.822479 23 builder.go:147] stdout: "update-demo-nautilus-2zp5j update-demo-nautilus-hg9hs "
  I1204 07:03:07.822588 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-2zp5j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:03:07.907608 23 builder.go:146] stderr: ""
  I1204 07:03:07.907677 23 builder.go:147] stdout: "true"
  I1204 07:03:07.907756 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-2zp5j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:03:07.991711 23 builder.go:146] stderr: ""
  I1204 07:03:07.991780 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:03:07.991809 23 kubectl.go:2393] validating pod update-demo-nautilus-2zp5j
  I1204 07:03:07.998906 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:03:07.999047 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:03:07.999075 23 kubectl.go:2520] update-demo-nautilus-2zp5j is verified up and running
  I1204 07:03:07.999149 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-hg9hs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:03:08.085979 23 builder.go:146] stderr: ""
  I1204 07:03:08.086032 23 builder.go:147] stdout: "true"
  I1204 07:03:08.086085 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-hg9hs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:03:08.169672 23 builder.go:146] stderr: ""
  I1204 07:03:08.169736 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:03:08.169763 23 kubectl.go:2393] validating pod update-demo-nautilus-hg9hs
  I1204 07:03:08.175926 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:03:08.176037 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:03:08.176060 23 kubectl.go:2520] update-demo-nautilus-hg9hs is verified up and running
  STEP: scaling down the replication controller @ 12/04/24 07:03:08.176
  I1204 07:03:08.178421 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1204 07:03:08.178494 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1204 07:03:08.363671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:09.283430 23 builder.go:146] stderr: ""
  I1204 07:03:09.283552 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/04/24 07:03:09.283
  I1204 07:03:09.283717 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1204 07:03:09.364328      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:09.372216 23 builder.go:146] stderr: ""
  I1204 07:03:09.372272 23 builder.go:147] stdout: "update-demo-nautilus-2zp5j update-demo-nautilus-hg9hs "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/04/24 07:03:09.372
  E1204 07:03:10.364942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:11.365509      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:12.365878      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:13.366667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:14.366940      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:14.373433 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:03:14.465251 23 builder.go:146] stderr: ""
  I1204 07:03:14.465342 23 builder.go:147] stdout: "update-demo-nautilus-hg9hs "
  I1204 07:03:14.465416 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-hg9hs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:03:14.551266 23 builder.go:146] stderr: ""
  I1204 07:03:14.551334 23 builder.go:147] stdout: "true"
  I1204 07:03:14.551421 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-hg9hs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:03:14.643897 23 builder.go:146] stderr: ""
  I1204 07:03:14.643993 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:03:14.644022 23 kubectl.go:2393] validating pod update-demo-nautilus-hg9hs
  I1204 07:03:14.649460 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:03:14.649551 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:03:14.649575 23 kubectl.go:2520] update-demo-nautilus-hg9hs is verified up and running
  STEP: scaling up the replication controller @ 12/04/24 07:03:14.649
  I1204 07:03:14.651905 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1204 07:03:14.651978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1204 07:03:15.367172      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:15.766578 23 builder.go:146] stderr: ""
  I1204 07:03:15.766660 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/04/24 07:03:15.766
  I1204 07:03:15.766931 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:03:15.863039 23 builder.go:146] stderr: ""
  I1204 07:03:15.863109 23 builder.go:147] stdout: "update-demo-nautilus-7kj5t update-demo-nautilus-hg9hs "
  I1204 07:03:15.863188 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-7kj5t -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:03:15.947666 23 builder.go:146] stderr: ""
  I1204 07:03:15.947739 23 builder.go:147] stdout: "true"
  I1204 07:03:15.947816 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-7kj5t -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:03:16.037511 23 builder.go:146] stderr: ""
  I1204 07:03:16.037572 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:03:16.037595 23 kubectl.go:2393] validating pod update-demo-nautilus-7kj5t
  I1204 07:03:16.044219 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:03:16.044305 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:03:16.044328 23 kubectl.go:2520] update-demo-nautilus-7kj5t is verified up and running
  I1204 07:03:16.044400 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-hg9hs -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:03:16.132114 23 builder.go:146] stderr: ""
  I1204 07:03:16.132183 23 builder.go:147] stdout: "true"
  I1204 07:03:16.132264 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods update-demo-nautilus-hg9hs -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:03:16.218176 23 builder.go:146] stderr: ""
  I1204 07:03:16.218252 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:03:16.218279 23 kubectl.go:2393] validating pod update-demo-nautilus-hg9hs
  I1204 07:03:16.222172 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:03:16.222298 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:03:16.222339 23 kubectl.go:2520] update-demo-nautilus-hg9hs is verified up and running
  STEP: using delete to clean up resources @ 12/04/24 07:03:16.222
  I1204 07:03:16.222520 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 delete --grace-period=0 --force -f -'
  I1204 07:03:16.312725 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:03:16.312793 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1204 07:03:16.312863 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get rc,svc -l name=update-demo --no-headers'
  E1204 07:03:16.367417      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:16.407120 23 builder.go:146] stderr: "No resources found in kubectl-8882 namespace.\n"
  I1204 07:03:16.407207 23 builder.go:147] stdout: ""
  I1204 07:03:16.407296 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-8882 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1204 07:03:16.513127 23 builder.go:146] stderr: ""
  I1204 07:03:16.513195 23 builder.go:147] stdout: ""
  I1204 07:03:16.513377 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8882" for this suite. @ 12/04/24 07:03:16.517
• [19.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/04/24 07:03:16.534
  I1204 07:03:16.534529 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:03:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:03:16.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:03:16.554
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:03:16.558
  E1204 07:03:17.367736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:18.368760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:19.369626      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:20.370009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:03:20.582
  I1204 07:03:20.585926 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-ef9de1ca-a2b2-4b62-b97e-ad8c9873e51e container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:03:20.594
  I1204 07:03:20.608358 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-664" for this suite. @ 12/04/24 07:03:20.612
• [4.084 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 12/04/24 07:03:20.618
  I1204 07:03:20.618802 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 07:03:20.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:03:20.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:03:20.634
  STEP: Creating a suspended job @ 12/04/24 07:03:20.641
  STEP: Patching the Job @ 12/04/24 07:03:20.646
  STEP: Watching for Job to be patched @ 12/04/24 07:03:20.664
  I1204 07:03:20.666947 23 job.go:1330] Event ADDED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-job-label:e2e-j8mh6] and annotations: map[]
  I1204 07:03:20.667039 23 job.go:1330] Event MODIFIED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-job-label:e2e-j8mh6] and annotations: map[]
  I1204 07:03:20.667241 23 job.go:1333] Event MODIFIED found for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[]
  STEP: Updating the job @ 12/04/24 07:03:20.667
  STEP: Watching for Job to be updated @ 12/04/24 07:03:20.676
  I1204 07:03:20.678461 23 job.go:1333] Event MODIFIED found for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  I1204 07:03:20.678500 23 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/04/24 07:03:20.678
  I1204 07:03:20.681959 23 job.go:1233] Job: e2e-j8mh6 as labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6]
  STEP: Waiting for job to complete @ 12/04/24 07:03:20.682
  E1204 07:03:21.370288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:22.370858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:23.371960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:24.372202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:25.373301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:26.373539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:27.374196      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:28.375078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:29.375330      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:30.375610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 12/04/24 07:03:30.693
  STEP: Watching for Job to be deleted @ 12/04/24 07:03:30.704
  I1204 07:03:30.706778 23 job.go:1330] Event MODIFIED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  I1204 07:03:30.707034 23 job.go:1330] Event MODIFIED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  I1204 07:03:30.707083 23 job.go:1330] Event MODIFIED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  I1204 07:03:30.707358 23 job.go:1330] Event MODIFIED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  I1204 07:03:30.707501 23 job.go:1330] Event MODIFIED observed for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  I1204 07:03:30.707738 23 job.go:1333] Event DELETED found for Job e2e-j8mh6 in namespace job-2312 with labels: map[e2e-j8mh6:patched e2e-job-label:e2e-j8mh6] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/04/24 07:03:30.707
  I1204 07:03:30.710870 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2312" for this suite. @ 12/04/24 07:03:30.716
• [10.107 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 12/04/24 07:03:30.726
  I1204 07:03:30.726329 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:03:30.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:03:30.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:03:30.743
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/04/24 07:03:30.747
  I1204 07:03:30.747825 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4899 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1204 07:03:30.844507 23 builder.go:146] stderr: ""
  I1204 07:03:30.844578 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/04/24 07:03:30.844
  I1204 07:03:30.844724 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4899 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1204 07:03:30.938191 23 builder.go:146] stderr: ""
  I1204 07:03:30.938258 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/04/24 07:03:30.938
  I1204 07:03:30.941634 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4899 delete pods e2e-test-httpd-pod'
  E1204 07:03:31.375707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:32.376083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:33.059900 23 builder.go:146] stderr: ""
  I1204 07:03:33.059981 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1204 07:03:33.060176 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4899" for this suite. @ 12/04/24 07:03:33.065
• [2.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/04/24 07:03:33.071
  I1204 07:03:33.071976 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 07:03:33.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:03:33.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:03:33.089
  I1204 07:03:33.095069 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1204 07:03:33.106083 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1204 07:03:33.376353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:34.377050      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:35.377232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:36.377446      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:37.377653      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:38.109669 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/04/24 07:03:38.109
  I1204 07:03:38.109827 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1204 07:03:38.115754 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1204 07:03:38.122372 23 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1204 07:03:38.378139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:39.378639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:03:40.133408 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1204 07:03:40.137184 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1204 07:03:40.150060 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f0f844b-5054-4fe9-bfde-9248ea3e0b12",
      ResourceVersion: (string) (len=5) "17846",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868892618,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 07:03:40.162289 23 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f757f2fd-85da-444b-a0f0-ccb2bbb61a7d",
      ResourceVersion: (string) (len=5) "17836",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868892618,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8f0f844b-5054-4fe9-bfde-9248ea3e0b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 66 30 66 38 34  34 62 2d 35 30 35 34 2d  |\"8f0f844b-5054-|
              00000120  34 66 65 39 2d 62 66 64  65 2d 39 32 34 38 65 61  |4fe9-bfde-9248ea|
              00000130  33 65 30 62 31 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e0b12\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 07:03:40.165293 23 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1204 07:03:40.165643 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e18552b4-3ebe-4ed1-99b7-9a5f78e30f90",
      ResourceVersion: (string) (len=5) "17845",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868892613,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8f0f844b-5054-4fe9-bfde-9248ea3e0b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892613,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 66 30 66 38 34 34  |"uid\":\"8f0f844|
              000000b0  62 2d 35 30 35 34 2d 34  66 65 39 2d 62 66 64 65  |b-5054-4fe9-bfde|
              000000c0  2d 39 32 34 38 65 61 33  65 30 62 31 32 5c 22 7d  |-9248ea3e0b12\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 07:03:40.172098 23 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-2rpjw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-2rpjw",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-2121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a41fd34b-f5c0-41dc-8476-b33dfa831f8a",
      ResourceVersion: (string) (len=5) "17835",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868892618,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "f757f2fd-85da-444b-a0f0-ccb2bbb61a7d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 37  35 37 66 32 66 64 2d 38  |d\":\"f757f2fd-8|
              00000090  35 64 61 2d 34 34 34 62  2d 61 30 66 30 2d 63 63  |5da-444b-a0f0-cc|
              000000a0  62 32 62 62 62 36 31 61  37 64 5c 22 7d 22 3a 7b  |b2bbb61a7d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  34 36 5c 22 7d 22 3a 7b  |.244.1.246\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hzz5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hzz5w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892619,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868892618,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868892618,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868892618,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://e0b5a8853e424f1eb5d304826bd0f70a1969a5d6886aa1014c01a4f465a6bf55",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hzz5w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 07:03:40.174938 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2121" for this suite. @ 12/04/24 07:03:40.181
• [7.115 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/04/24 07:03:40.187
  I1204 07:03:40.187269 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 07:03:40.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:03:40.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:03:40.208
  STEP: Creating a pod to test env composition @ 12/04/24 07:03:40.212
  E1204 07:03:40.379725      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:41.380532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:42.381207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:43.382387      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:03:44.235
  I1204 07:03:44.239414 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-611be8c8-6d83-47f1-8f72-37d44cf6f009 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:03:44.246
  I1204 07:03:44.261026 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2394" for this suite. @ 12/04/24 07:03:44.265
• [4.083 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 12/04/24 07:03:44.27
  I1204 07:03:44.270752 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename taint-single-pod @ 12/04/24 07:03:44.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:03:44.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:03:44.288
  I1204 07:03:44.293002 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1204 07:03:44.382903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:45.383569      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:46.384104      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:47.384568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:48.385069      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:49.385566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:50.386105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:51.386525      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:52.387574      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:53.388478      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:54.389113      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:55.389532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:56.389906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:57.390357      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:58.391156      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:03:59.391697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:00.392268      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:01.392787      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:02.393389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:03.394162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:04.394791      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:05.395236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:06.395305      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:07.395903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:08.396524      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:09.397008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:10.397130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:11.397616      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:12.398326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:13.399232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:14.400111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:15.400518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:16.401516      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:17.401982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:18.402691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:19.403113      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:20.403829      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:21.404321      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:22.405133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:23.405949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:24.406620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:25.406727      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:26.407572      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:27.408015      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:28.408700      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:29.409160      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:30.410285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:31.410738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:32.411673      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:33.412567      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:34.412728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:35.413232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:36.413960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:37.414348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:38.414375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:39.414755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:40.415225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:41.415717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:42.416080      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:43.416967      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:04:44.293304 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I1204 07:04:44.297249 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 12/04/24 07:04:44.297
  E1204 07:04:44.417659      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:04:44.515327 23 taints.go:294] Pod is running on nodea17. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/04/24 07:04:44.515
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/04/24 07:04:44.531
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/04/24 07:04:44.535
  I1204 07:04:44.535240 23 taints.go:313] Pod wasn't evicted. Proceeding
  I1204 07:04:44.535268 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/04/24 07:04:44.55
  STEP: Waiting some time to make sure that toleration time passed. @ 12/04/24 07:04:44.553
  E1204 07:04:45.418192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:46.418743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:47.419204      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:48.420002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:49.420439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:50.420775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:51.421140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:52.421411      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:53.421790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:54.422979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:55.423222      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:56.423671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:57.424091      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:58.424790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:04:59.425197      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:00.425634      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:01.425923      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:02.426631      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:03.427555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:04.427733      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:05.428236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:06.428269      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:07.428513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:08.429397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:09.429862      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:10.430137      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:11.430567      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:12.431095      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:13.431809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:14.432529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:15.433218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:16.433619      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:17.434021      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:18.435017      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:19.435442      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:20.435725      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:21.436154      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:22.436524      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:23.436642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:24.436798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:25.437232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:26.438420      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:27.438776      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:28.439637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:29.440113      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:30.440566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:31.441016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:32.441435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:33.442638      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:34.443025      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:35.443491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:36.443967      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:37.444383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:38.445276      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:39.445708      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:40.446097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:41.446591      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:42.446993      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:43.447833      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:44.448259      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:45.449201      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:46.449650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:47.450099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:48.451030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:49.451531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:50.451965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:51.452422      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:52.452858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:53.453865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:54.454288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:55.454853      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:56.455341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:57.455837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:58.456732      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:05:59.457138      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:05:59.553493 23 taints.go:329] Pod wasn't evicted. Test successful
  I1204 07:05:59.553786 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2392" for this suite. @ 12/04/24 07:05:59.56
• [135.296 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/04/24 07:05:59.566
  I1204 07:05:59.566826 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:05:59.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:05:59.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:05:59.626
  STEP: Creating secret with name secret-test-f106c39b-0fd8-4b9f-9709-f2312cc3eef0 @ 12/04/24 07:05:59.63
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:05:59.638
  E1204 07:06:00.457592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:01.458803      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:02.459650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:03.459786      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:04.460127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:06:04.518
  I1204 07:06:04.522552 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-d55db6bd-a569-4132-b76e-2796eaef8695 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:06:04.538
  I1204 07:06:04.553941 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8617" for this suite. @ 12/04/24 07:06:04.558
• [4.998 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 12/04/24 07:06:04.565
  I1204 07:06:04.565350 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:06:04.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:06:04.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:06:04.581
  STEP: creating service in namespace services-3930 @ 12/04/24 07:06:04.586
  STEP: creating service affinity-clusterip in namespace services-3930 @ 12/04/24 07:06:04.586
  STEP: creating replication controller affinity-clusterip in namespace services-3930 @ 12/04/24 07:06:04.598
  I1204 07:06:04.609960      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-3930, replica count: 3
  E1204 07:06:05.460947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:06.461374      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:07.461851      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:07.661348      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 07:06:07.669555 23 resource.go:361] Creating new exec pod
  E1204 07:06:08.462760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:09.463527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:10.463794      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:10.775602 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-3930 exec execpod-affinityd5wn2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1204 07:06:10.946416 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1204 07:06:10.946544 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:06:10.946683 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-3930 exec execpod-affinityd5wn2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.202.12 80'
  I1204 07:06:11.113563 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.202.12 80\nConnection to 10.102.202.12 80 port [tcp/http] succeeded!\n"
  I1204 07:06:11.113652 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:06:11.113774 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-3930 exec execpod-affinityd5wn2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.102.202.12:80/ ; done'
  I1204 07:06:11.388190 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.102.202.12:80/\n"
  I1204 07:06:11.388293 23 builder.go:147] stdout: "\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp\naffinity-clusterip-fkskp"
  I1204 07:06:11.388325 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388347 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388365 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388384 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388406 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388423 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388441 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388458 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388476 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388493 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388511 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388528 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388547 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388565 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388582 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388598 23 service.go:242] Received response from host: affinity-clusterip-fkskp
  I1204 07:06:11.388710 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3930, will wait for the garbage collector to delete the pods @ 12/04/24 07:06:11.4
  I1204 07:06:11.460732 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.625578ms
  E1204 07:06:11.464111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:11.561310 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.572178ms
  E1204 07:06:12.464662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:13.464788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:14.465713      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:14.584843 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3930" for this suite. @ 12/04/24 07:06:14.59
• [10.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/04/24 07:06:14.598
  I1204 07:06:14.598439 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/04/24 07:06:14.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:06:14.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:06:14.616
  STEP: create the container to handle the HTTPGet hook request. @ 12/04/24 07:06:14.69
  E1204 07:06:15.466319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:16.466895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:17.467663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:18.468573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:19.469017      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/04/24 07:06:19.842
  E1204 07:06:20.469428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:21.470005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/04/24 07:06:22.446
  STEP: delete the pod with lifecycle hook @ 12/04/24 07:06:22.468
  E1204 07:06:22.471110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:23.471488      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:24.472512      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:24.485503 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8643" for this suite. @ 12/04/24 07:06:24.489
• [9.898 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/04/24 07:06:24.496
  I1204 07:06:24.496263 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pod-network-test @ 12/04/24 07:06:24.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:06:24.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:06:24.514
  STEP: Performing setup for networking test in namespace pod-network-test-9583 @ 12/04/24 07:06:24.518
  STEP: creating a selector @ 12/04/24 07:06:24.518
  STEP: Creating the service pods in kubernetes @ 12/04/24 07:06:24.518
  I1204 07:06:24.518810 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1204 07:06:25.473166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:26.474047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:27.474300      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:28.475198      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:29.476091      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:30.476526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:31.477436      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:32.477890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:33.478629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:34.479055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:35.480072      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:36.480476      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:37.481166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:38.482077      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:39.482611      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:40.483047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:41.483852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:42.484389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:43.484891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:44.485557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:45.485818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:46.486314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/04/24 07:06:46.615
  E1204 07:06:47.486976      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:48.487834      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:48.634752 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1204 07:06:48.634818 23 networking.go:42] Breadth first check of 10.244.1.254 on host 192.168.100.37...
  I1204 07:06:48.638976 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.4:9080/dial?request=hostname&protocol=http&host=10.244.1.254&port=8083&tries=1'] Namespace:pod-network-test-9583 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:06:48.639041 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:06:48.640102 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:06:48.640235 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9583/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.254%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1204 07:06:48.717475 23 utils.go:356] Waiting for responses: map[]
  I1204 07:06:48.717535 23 utils.go:360] reached 10.244.1.254 after 0/1 tries
  I1204 07:06:48.717557 23 networking.go:42] Breadth first check of 10.244.2.85 on host 192.168.100.114...
  I1204 07:06:48.722150 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.4:9080/dial?request=hostname&protocol=http&host=10.244.2.85&port=8083&tries=1'] Namespace:pod-network-test-9583 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:06:48.722206 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:06:48.723046 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:06:48.723195 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9583/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.85%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1204 07:06:48.799731 23 utils.go:356] Waiting for responses: map[]
  I1204 07:06:48.799773 23 utils.go:360] reached 10.244.2.85 after 0/1 tries
  I1204 07:06:48.799787 23 networking.go:53] Going to retry 0 out of 2 pods....
  I1204 07:06:48.799883 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9583" for this suite. @ 12/04/24 07:06:48.805
• [24.317 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/04/24 07:06:48.813
  I1204 07:06:48.813220 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:06:48.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:06:48.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:06:48.83
  STEP: Creating configMap with name configmap-test-volume-map-37432722-bf9a-431c-9df6-d79aeb45e698 @ 12/04/24 07:06:48.834
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:06:48.839
  E1204 07:06:49.488118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:50.488867      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:06:50.859
  I1204 07:06:50.862613 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-4ef13e4a-c641-48fe-a722-277a242ad67a container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:06:50.869
  I1204 07:06:50.883612 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2878" for this suite. @ 12/04/24 07:06:50.888
• [2.080 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/04/24 07:06:50.893
  I1204 07:06:50.893635 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:06:50.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:06:50.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:06:50.911
  STEP: Creating service test in namespace statefulset-4419 @ 12/04/24 07:06:50.915
  STEP: Looking for a node to schedule stateful set and pod @ 12/04/24 07:06:50.919
  STEP: Creating pod with conflicting port in namespace statefulset-4419 @ 12/04/24 07:06:50.989
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4419 @ 12/04/24 07:06:51
  E1204 07:06:51.490024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:52.490706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4419 @ 12/04/24 07:06:53.008
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4419 @ 12/04/24 07:06:53.021
  I1204 07:06:53.033216 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-4419, name: ss-0, uid: a722cdf5-ed61-4288-9253-d11bec3cc063, status phase: Pending. Waiting for statefulset controller to delete.
  I1204 07:06:53.056690 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-4419, name: ss-0, uid: a722cdf5-ed61-4288-9253-d11bec3cc063, status phase: Failed. Waiting for statefulset controller to delete.
  I1204 07:06:53.065437 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-4419, name: ss-0, uid: a722cdf5-ed61-4288-9253-d11bec3cc063, status phase: Failed. Waiting for statefulset controller to delete.
  I1204 07:06:53.069767 23 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-4419
  STEP: Removing pod with conflicting port in namespace statefulset-4419 @ 12/04/24 07:06:53.069
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4419 and will be in running state @ 12/04/24 07:06:53.08
  E1204 07:06:53.491185      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:54.491819      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:06:55.087844 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4419
  I1204 07:06:55.091303 23 rest.go:150] Scaling statefulset ss to 0
  E1204 07:06:55.492758      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:56.493671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:57.494379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:58.495345      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:06:59.495802      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:00.496252      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:01.496688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:02.497203      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:03.498097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:04.498512      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:05.106715 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:07:05.111120 23 rest.go:88] Deleting statefulset ss
  I1204 07:07:05.126428 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4419" for this suite. @ 12/04/24 07:07:05.131
• [14.244 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/04/24 07:07:05.137
  I1204 07:07:05.137862 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replication-controller @ 12/04/24 07:07:05.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:07:05.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:07:05.157
  STEP: Creating ReplicationController "e2e-rc-4d8jf" @ 12/04/24 07:07:05.161
  I1204 07:07:05.167061 23 rc.go:792] Get Replication Controller "e2e-rc-4d8jf" to confirm replicas
  E1204 07:07:05.498708      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:06.168021 23 rc.go:792] Get Replication Controller "e2e-rc-4d8jf" to confirm replicas
  I1204 07:07:06.172026 23 rc.go:801] Found 1 replicas for "e2e-rc-4d8jf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-4d8jf" @ 12/04/24 07:07:06.172
  STEP: Updating a scale subresource @ 12/04/24 07:07:06.175
  STEP: Verifying replicas where modified for replication controller "e2e-rc-4d8jf" @ 12/04/24 07:07:06.181
  I1204 07:07:06.181877 23 rc.go:792] Get Replication Controller "e2e-rc-4d8jf" to confirm replicas
  E1204 07:07:06.499030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:07.183028 23 rc.go:792] Get Replication Controller "e2e-rc-4d8jf" to confirm replicas
  I1204 07:07:07.188041 23 rc.go:801] Found 2 replicas for "e2e-rc-4d8jf" replication controller
  I1204 07:07:07.188297 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8246" for this suite. @ 12/04/24 07:07:07.193
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/04/24 07:07:07.199
  I1204 07:07:07.199825 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 07:07:07.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:07:07.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:07:07.239
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/04/24 07:07:07.243
  I1204 07:07:07.244081 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:07:07.499649      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:08.500113      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:09.500866      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:10.501803      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:11.502489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:12.503060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/04/24 07:07:12.964
  I1204 07:07:12.965614 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:07:13.503399      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:14.353564 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:07:14.504400      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:15.504908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:16.505620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:17.506074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:18.506179      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:19.506997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:20.507221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:21.507568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:22.508512      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:23.422205 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9718" for this suite. @ 12/04/24 07:07:23.433
• [16.239 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/04/24 07:07:23.44
  I1204 07:07:23.440608 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename chunking @ 12/04/24 07:07:23.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:07:23.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:07:23.459
  STEP: creating a large number of resources @ 12/04/24 07:07:23.464
  E1204 07:07:23.508546      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:24.509437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:25.510413      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:26.511202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:27.512014      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:28.512676      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:29.512845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:30.514030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:31.515008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:32.515409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:33.516401      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:34.517287      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:35.517760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:36.518089      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:37.518867      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:38.519683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:39.520041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:40.520962      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 12/04/24 07:07:41.151
  I1204 07:07:41.197488 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1204 07:07:41.248444 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1204 07:07:41.297916 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1204 07:07:41.347844 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1204 07:07:41.396838 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1204 07:07:41.447603 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1204 07:07:41.498390 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E1204 07:07:41.521515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:41.548247 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1204 07:07:41.597961 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1204 07:07:41.646725 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1204 07:07:41.698166 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1204 07:07:41.747870 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1204 07:07:41.797568 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1204 07:07:41.848115 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1204 07:07:41.897860 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1204 07:07:41.948624 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1204 07:07:41.998113 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1204 07:07:42.048424 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1204 07:07:42.097457 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1204 07:07:42.148039 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1204 07:07:42.198450 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1204 07:07:42.247844 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1204 07:07:42.297540 23 chunking.go:98] Retrieved 17/17 results with rv 19101 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1204 07:07:42.347749 23 chunking.go:98] Retrieved 9/17 results with rv 19101 and continue 
  I1204 07:07:42.397353 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1204 07:07:42.448004 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1204 07:07:42.497869 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E1204 07:07:42.521890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:42.548235 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1204 07:07:42.597566 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1204 07:07:42.647575 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1204 07:07:42.697876 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1204 07:07:42.746827 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1204 07:07:42.797847 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1204 07:07:42.848080 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1204 07:07:42.897739 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1204 07:07:42.947544 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1204 07:07:42.997363 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1204 07:07:43.048113 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1204 07:07:43.097520 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1204 07:07:43.147929 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1204 07:07:43.197491 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1204 07:07:43.249023 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1204 07:07:43.297387 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1204 07:07:43.347583 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1204 07:07:43.397309 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1204 07:07:43.447561 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1204 07:07:43.498288 23 chunking.go:98] Retrieved 17/17 results with rv 19103 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  E1204 07:07:43.522196      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:43.547533 23 chunking.go:98] Retrieved 9/17 results with rv 19103 and continue 
  I1204 07:07:43.598872 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1204 07:07:43.647548 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1204 07:07:43.698435 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1204 07:07:43.748111 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1204 07:07:43.797991 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1204 07:07:43.848012 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1204 07:07:43.897199 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1204 07:07:43.948802 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1204 07:07:43.998382 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1204 07:07:44.048028 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1204 07:07:44.097772 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1204 07:07:44.149047 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1204 07:07:44.198065 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1204 07:07:44.247694 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1204 07:07:44.298496 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1204 07:07:44.348394 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1204 07:07:44.397061 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1204 07:07:44.447860 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1204 07:07:44.497125 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E1204 07:07:44.523087      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:07:44.547902 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1204 07:07:44.598857 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1204 07:07:44.647357 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1204 07:07:44.698219 23 chunking.go:98] Retrieved 17/17 results with rv 19105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1204 07:07:44.747333 23 chunking.go:98] Retrieved 9/17 results with rv 19105 and continue 
  STEP: retrieving those results all at once @ 12/04/24 07:07:44.747
  I1204 07:07:44.807063 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9131" for this suite. @ 12/04/24 07:07:44.848
• [21.461 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/04/24 07:07:44.901
  I1204 07:07:44.902007 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sysctl @ 12/04/24 07:07:44.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:07:44.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:07:44.921
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/04/24 07:07:44.926
  STEP: Watching for error events or started pod @ 12/04/24 07:07:44.935
  E1204 07:07:45.524057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:46.524847      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 12/04/24 07:07:46.941
  E1204 07:07:47.525622      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:48.526615      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 12/04/24 07:07:48.952
  STEP: Getting logs from the pod @ 12/04/24 07:07:48.952
  STEP: Checking that the sysctl is actually updated @ 12/04/24 07:07:48.961
  I1204 07:07:48.961991 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2206" for this suite. @ 12/04/24 07:07:48.966
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/04/24 07:07:48.979
  I1204 07:07:48.979924 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pod-network-test @ 12/04/24 07:07:48.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:07:48.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:07:48.998
  STEP: Performing setup for networking test in namespace pod-network-test-5222 @ 12/04/24 07:07:49.003
  STEP: creating a selector @ 12/04/24 07:07:49.003
  STEP: Creating the service pods in kubernetes @ 12/04/24 07:07:49.003
  I1204 07:07:49.003187 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1204 07:07:49.527309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:50.527581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:51.528667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:52.529193      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:53.529977      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:54.530578      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:55.530658      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:56.531166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:57.531515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:58.532341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:07:59.533208      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:00.533576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/04/24 07:08:01.068
  E1204 07:08:01.534323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:02.534760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:03.104477 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1204 07:08:03.104560 23 utils.go:496] Going to poll 10.244.1.8 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1204 07:08:03.107205 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.8:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5222 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:08:03.107269 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:08:03.108514 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:08:03.108641 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5222/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.8%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1204 07:08:03.191799 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1204 07:08:03.191846 23 utils.go:496] Going to poll 10.244.2.89 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1204 07:08:03.195795 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.89:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5222 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:08:03.195853 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:08:03.196788 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:08:03.196900 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5222/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.89%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1204 07:08:03.266862 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1204 07:08:03.267052 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5222" for this suite. @ 12/04/24 07:08:03.272
• [14.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/04/24 07:08:03.277
  I1204 07:08:03.277641 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 07:08:03.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:03.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:03.293
  STEP: creating pod @ 12/04/24 07:08:03.297
  E1204 07:08:03.535826      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:04.535891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:05.320425 23 pods.go:83] Pod pod-hostip-25052bd1-4e10-4de9-aa33-ffe9e3d65296 has hostIP: 192.168.100.37
  I1204 07:08:05.320729 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3448" for this suite. @ 12/04/24 07:08:05.326
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/04/24 07:08:05.333
  I1204 07:08:05.334057 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 07:08:05.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:05.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:05.356
  I1204 07:08:05.434646 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/04/24 07:08:05.441
  I1204 07:08:05.446578 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:05.446636 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/04/24 07:08:05.446
  E1204 07:08:05.537004      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:05.548285 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:05.548348 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:08:06.537959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:06.547892 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:06.547943 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:08:07.539044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:07.548443 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 07:08:07.548512 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/04/24 07:08:07.552
  I1204 07:08:07.574158 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:07.574222 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/04/24 07:08:07.574
  I1204 07:08:07.648230 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:07.648274 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:08:08.539683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:08.594249 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:08.594311 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:08:09.540252      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:09.593895 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 07:08:09.593965 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/04/24 07:08:09.602
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5295, will wait for the garbage collector to delete the pods @ 12/04/24 07:08:09.602
  I1204 07:08:09.664185 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.022121ms
  I1204 07:08:09.765240 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.051472ms
  E1204 07:08:10.541426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:10.970442 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:10.970506 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1204 07:08:10.975946 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19715"},"items":null}

  I1204 07:08:10.979570 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19715"},"items":null}

  I1204 07:08:11.002741 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5295" for this suite. @ 12/04/24 07:08:11.006
• [5.678 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 12/04/24 07:08:11.012
  I1204 07:08:11.012467 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 07:08:11.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:11.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:11.031
  STEP: Counting existing ResourceQuota @ 12/04/24 07:08:11.035
  E1204 07:08:11.541499      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:12.542348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:13.542517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:14.543617      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:15.543844      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/04/24 07:08:16.039
  STEP: Ensuring resource quota status is calculated @ 12/04/24 07:08:16.044
  E1204 07:08:16.544394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:17.545217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 12/04/24 07:08:18.049
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/04/24 07:08:18.068
  E1204 07:08:18.545281      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:19.545706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/04/24 07:08:20.073
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/04/24 07:08:20.076
  STEP: Ensuring a pod cannot update its resource requirements @ 12/04/24 07:08:20.079
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/04/24 07:08:20.084
  E1204 07:08:20.546261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:21.546757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/04/24 07:08:22.09
  STEP: Ensuring resource quota status released the pod usage @ 12/04/24 07:08:22.1
  E1204 07:08:22.547100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:23.547927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:24.105660 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7879" for this suite. @ 12/04/24 07:08:24.11
• [13.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/04/24 07:08:24.119
  I1204 07:08:24.119914 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 07:08:24.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:24.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:24.138
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/04/24 07:08:24.219
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/04/24 07:08:24.225
  I1204 07:08:24.312045 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:08:24.315553 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:24.315616 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:08:24.548982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:25.550184      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:26.550939      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:26.831193 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:08:26.848954 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 07:08:26.849019 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/04/24 07:08:26.861
  I1204 07:08:26.968247 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:08:26.978443 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 07:08:26.978503 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  E1204 07:08:27.551167      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:27.968939 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:08:27.972847 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 07:08:27.972907 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  E1204 07:08:28.551850      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:28.969936 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:08:28.973802 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 07:08:28.973911 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/04/24 07:08:28.973
  STEP: Deleting DaemonSet "daemon-set" @ 12/04/24 07:08:28.981
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3484, will wait for the garbage collector to delete the pods @ 12/04/24 07:08:28.981
  I1204 07:08:29.042109 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.696607ms
  I1204 07:08:29.142363 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.243236ms
  E1204 07:08:29.552157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:30.552954      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:31.553673      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:31.647715 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:08:31.647782 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1204 07:08:31.652305 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19850"},"items":null}

  I1204 07:08:31.655721 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19850"},"items":null}

  I1204 07:08:31.665856 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3484" for this suite. @ 12/04/24 07:08:31.669
• [7.554 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/04/24 07:08:31.674
  I1204 07:08:31.674888 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replicaset @ 12/04/24 07:08:31.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:31.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:31.693
  STEP: Create a ReplicaSet @ 12/04/24 07:08:31.697
  STEP: Verify that the required pods have come up @ 12/04/24 07:08:31.701
  I1204 07:08:31.705226 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E1204 07:08:32.554376      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:33.555331      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:34.555763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:35.556273      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:36.556748      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:36.710325 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/04/24 07:08:36.71
  I1204 07:08:36.713112 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/04/24 07:08:36.713
  STEP: DeleteCollection of the ReplicaSets @ 12/04/24 07:08:36.716
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/04/24 07:08:36.722
  I1204 07:08:36.724765 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7424" for this suite. @ 12/04/24 07:08:36.73
• [5.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/04/24 07:08:36.738
  I1204 07:08:36.738085 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 07:08:36.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:36.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:36.751
  I1204 07:08:36.755610 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:08:37.557049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/04/24 07:08:38.1
  I1204 07:08:38.100968 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5947 --namespace=crd-publish-openapi-5947 create -f -'
  I1204 07:08:38.250218 23 builder.go:146] stderr: ""
  I1204 07:08:38.250272 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4889-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1204 07:08:38.250341 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5947 --namespace=crd-publish-openapi-5947 delete e2e-test-crd-publish-openapi-4889-crds test-cr'
  I1204 07:08:38.353788 23 builder.go:146] stderr: ""
  I1204 07:08:38.353867 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4889-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1204 07:08:38.353948 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5947 --namespace=crd-publish-openapi-5947 apply -f -'
  I1204 07:08:38.502015 23 builder.go:146] stderr: ""
  I1204 07:08:38.502092 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4889-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1204 07:08:38.502178 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5947 --namespace=crd-publish-openapi-5947 delete e2e-test-crd-publish-openapi-4889-crds test-cr'
  E1204 07:08:38.557865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:38.597059 23 builder.go:146] stderr: ""
  I1204 07:08:38.597131 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4889-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/04/24 07:08:38.597
  I1204 07:08:38.597275 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-5947 explain e2e-test-crd-publish-openapi-4889-crds'
  I1204 07:08:38.695136 23 builder.go:146] stderr: ""
  I1204 07:08:38.695220 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4889-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1204 07:08:39.558793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:40.054360 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5947" for this suite. @ 12/04/24 07:08:40.065
• [3.335 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 12/04/24 07:08:40.074
  I1204 07:08:40.074171 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:08:40.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:40.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:40.093
  STEP: Setting up server cert @ 12/04/24 07:08:40.192
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:08:40.396
  STEP: Deploying the webhook pod @ 12/04/24 07:08:40.407
  STEP: Wait for the deployment to be ready @ 12/04/24 07:08:40.418
  I1204 07:08:40.426834 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:08:40.559103      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:41.559959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:08:42.438
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:08:42.452
  E1204 07:08:42.560394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:43.453610 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/04/24 07:08:43.462
  STEP: create a namespace for the webhook @ 12/04/24 07:08:43.485
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/04/24 07:08:43.499
  E1204 07:08:43.560519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:43.569103 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9897" for this suite. @ 12/04/24 07:08:43.573
  STEP: Destroying namespace "webhook-markers-1789" for this suite. @ 12/04/24 07:08:43.581
  STEP: Destroying namespace "fail-closed-namespace-5076" for this suite. @ 12/04/24 07:08:43.585
• [3.516 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/04/24 07:08:43.59
  I1204 07:08:43.590151 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename events @ 12/04/24 07:08:43.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:43.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:43.607
  STEP: creating a test event @ 12/04/24 07:08:43.612
  STEP: listing events in all namespaces @ 12/04/24 07:08:43.618
  STEP: listing events in test namespace @ 12/04/24 07:08:43.623
  STEP: listing events with field selection filtering on source @ 12/04/24 07:08:43.626
  STEP: listing events with field selection filtering on reportingController @ 12/04/24 07:08:43.629
  STEP: getting the test event @ 12/04/24 07:08:43.632
  STEP: patching the test event @ 12/04/24 07:08:43.635
  STEP: getting the test event @ 12/04/24 07:08:43.645
  STEP: updating the test event @ 12/04/24 07:08:43.648
  STEP: getting the test event @ 12/04/24 07:08:43.655
  STEP: deleting the test event @ 12/04/24 07:08:43.659
  STEP: listing events in all namespaces @ 12/04/24 07:08:43.667
  STEP: listing events in test namespace @ 12/04/24 07:08:43.67
  I1204 07:08:43.674180 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-488" for this suite. @ 12/04/24 07:08:43.678
• [0.095 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/04/24 07:08:43.685
  I1204 07:08:43.685337 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename containers @ 12/04/24 07:08:43.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:43.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:43.708
  STEP: Creating a pod to test override command @ 12/04/24 07:08:43.712
  E1204 07:08:44.561083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:45.562452      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:46.562661      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:47.563240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:08:47.737
  I1204 07:08:47.741687 23 output.go:196] Trying to get logs from node nodea17 pod client-containers-bd828e44-3c8d-4665-b550-e046d571bf2d container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:08:47.749
  I1204 07:08:47.763680 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7852" for this suite. @ 12/04/24 07:08:47.768
• [4.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 12/04/24 07:08:47.776
  I1204 07:08:47.776388 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 07:08:47.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:08:47.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:08:47.795
  STEP: Creating a test headless service @ 12/04/24 07:08:47.8
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7954 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7954;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7954 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7954;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7954.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7954.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7954.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7954.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7954.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7954.svc;check="$$(dig +notcp +noall +answer +search 190.65.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.65.190_udp@PTR;check="$$(dig +tcp +noall +answer +search 190.65.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.65.190_tcp@PTR;sleep 1; done
   @ 12/04/24 07:08:47.825
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7954 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7954;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7954 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7954;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7954.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7954.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7954.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7954.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7954.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7954.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7954.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7954.svc;check="$$(dig +notcp +noall +answer +search 190.65.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.65.190_udp@PTR;check="$$(dig +tcp +noall +answer +search 190.65.110.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.110.65.190_tcp@PTR;sleep 1; done
   @ 12/04/24 07:08:47.825
  STEP: creating a pod to probe DNS @ 12/04/24 07:08:47.825
  STEP: submitting the pod to kubernetes @ 12/04/24 07:08:47.825
  E1204 07:08:48.564078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:49.564644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 07:08:49.847
  STEP: looking for the results for each expected name from probers @ 12/04/24 07:08:49.851
  I1204 07:08:49.857776 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.861931 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.865866 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.870003 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.874423 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.878602 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.882996 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.887420 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.910382 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.914315 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.918555 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.922308 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.926541 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.930044 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.933861 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.937723 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:49.969010 23 dns_common.go:489] Lookups using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7954 wheezy_tcp@dns-test-service.dns-7954 wheezy_udp@dns-test-service.dns-7954.svc wheezy_tcp@dns-test-service.dns-7954.svc wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7954 jessie_tcp@dns-test-service.dns-7954 jessie_udp@dns-test-service.dns-7954.svc jessie_tcp@dns-test-service.dns-7954.svc jessie_udp@_http._tcp.dns-test-service.dns-7954.svc jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc]

  I1204 07:08:49.976202 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:08:49.982096 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:08:49.988030 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:08:50.565055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:51.565579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:52.566041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:53.567033      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:54.567540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:54.858244 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.863148 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.867854 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.872455 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.877030 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.881622 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.886092 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.890364 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.911204 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.914980 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.919112 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.923208 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.927200 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.931782 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.936461 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.940673 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:54.958810 23 dns_common.go:489] Lookups using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7954 wheezy_tcp@dns-test-service.dns-7954 wheezy_udp@dns-test-service.dns-7954.svc wheezy_tcp@dns-test-service.dns-7954.svc wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7954 jessie_tcp@dns-test-service.dns-7954 jessie_udp@dns-test-service.dns-7954.svc jessie_tcp@dns-test-service.dns-7954.svc jessie_udp@_http._tcp.dns-test-service.dns-7954.svc jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc]

  I1204 07:08:54.966261 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:08:54.972247 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:08:54.978101 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:08:55.568016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:56.568514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:57.568933      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:58.568943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:08:59.569459      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:08:59.858002 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.862907 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.867655 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.872103 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.877116 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.881683 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.886079 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.890212 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.911002 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.915686 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.920483 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.924769 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.929093 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.933351 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.937619 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.942180 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:08:59.960466 23 dns_common.go:489] Lookups using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7954 wheezy_tcp@dns-test-service.dns-7954 wheezy_udp@dns-test-service.dns-7954.svc wheezy_tcp@dns-test-service.dns-7954.svc wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7954 jessie_tcp@dns-test-service.dns-7954 jessie_udp@dns-test-service.dns-7954.svc jessie_tcp@dns-test-service.dns-7954.svc jessie_udp@_http._tcp.dns-test-service.dns-7954.svc jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc]

  I1204 07:08:59.966885 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:08:59.972739 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:08:59.978677 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:09:00.569604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:01.569992      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:02.570491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:03.571029      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:04.571848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:09:04.858258 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.863275 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.867907 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.872513 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.876927 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.881610 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.885942 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.890425 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.911764 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.916276 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.920466 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.924621 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.928972 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.932920 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.936962 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.941094 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:04.957384 23 dns_common.go:489] Lookups using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7954 wheezy_tcp@dns-test-service.dns-7954 wheezy_udp@dns-test-service.dns-7954.svc wheezy_tcp@dns-test-service.dns-7954.svc wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7954 jessie_tcp@dns-test-service.dns-7954 jessie_udp@dns-test-service.dns-7954.svc jessie_tcp@dns-test-service.dns-7954.svc jessie_udp@_http._tcp.dns-test-service.dns-7954.svc jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc]

  I1204 07:09:04.963740 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:09:04.970263 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:09:04.976426 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:09:05.572921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:06.573373      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:07.573567      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:08.574194      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:09.574724      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:09:09.858810 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.863937 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.868082 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.871846 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.875354 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.879445 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.883355 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.887771 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.907992 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.911710 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.915067 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.918814 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.922340 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.926089 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.929881 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.933982 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:09.949066 23 dns_common.go:489] Lookups using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7954 wheezy_tcp@dns-test-service.dns-7954 wheezy_udp@dns-test-service.dns-7954.svc wheezy_tcp@dns-test-service.dns-7954.svc wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7954 jessie_tcp@dns-test-service.dns-7954 jessie_udp@dns-test-service.dns-7954.svc jessie_tcp@dns-test-service.dns-7954.svc jessie_udp@_http._tcp.dns-test-service.dns-7954.svc jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc]

  I1204 07:09:09.955405 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:09:09.961539 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:09:09.968127 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:09:10.575778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:11.576448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:12.577329      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:13.578592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:14.579097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:09:14.858346 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.862854 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.867338 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.871678 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.877081 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.881999 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.886450 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.890413 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.912039 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.915932 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.920331 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.924510 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954 from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.928883 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.933044 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.937741 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.941874 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc from pod dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98: the server could not find the requested resource (get pods dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98)
  I1204 07:09:14.959024 23 dns_common.go:489] Lookups using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7954 wheezy_tcp@dns-test-service.dns-7954 wheezy_udp@dns-test-service.dns-7954.svc wheezy_tcp@dns-test-service.dns-7954.svc wheezy_udp@_http._tcp.dns-test-service.dns-7954.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7954.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7954 jessie_tcp@dns-test-service.dns-7954 jessie_udp@dns-test-service.dns-7954.svc jessie_tcp@dns-test-service.dns-7954.svc jessie_udp@_http._tcp.dns-test-service.dns-7954.svc jessie_tcp@_http._tcp.dns-test-service.dns-7954.svc]

  I1204 07:09:14.965729 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:09:14.971682 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:09:14.977854 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:09:15.579761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:16.580989      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:17.581325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:18.582318      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:19.582834      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:09:19.953939 23 dns_common.go:527] DNS probes using dns-7954/dns-test-59d82bf2-5b36-4758-8272-f9aabf746e98 succeeded

  STEP: deleting the pod @ 12/04/24 07:09:19.954
  STEP: deleting the test service @ 12/04/24 07:09:19.968
  STEP: deleting the test headless service @ 12/04/24 07:09:19.986
  I1204 07:09:20.002687 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7954" for this suite. @ 12/04/24 07:09:20.012
• [32.241 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/04/24 07:09:20.017
  I1204 07:09:20.017761 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename chunking @ 12/04/24 07:09:20.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:09:20.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:09:20.033
  STEP: creating a large number of resources @ 12/04/24 07:09:20.037
  E1204 07:09:20.583443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:21.584055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:22.584496      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:23.585510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:24.586192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:25.587259      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:26.588126      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:27.588648      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:28.589565      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:29.590068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:30.590119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:31.591124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:32.591604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:33.592632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:34.592736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:35.593209      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:36.593637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:37.594590      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 12/04/24 07:09:37.725
  I1204 07:09:37.774699 23 chunking.go:163] Retrieved 40/40 results with rv 20627 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 12/04/24 07:09:37.774
  E1204 07:09:38.595526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:39.595963      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:40.596333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:41.596953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:42.597303      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:43.598130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:44.598610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:45.599108      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:46.599532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:47.599935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:48.600882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:49.601405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:50.601845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:51.602498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:52.602974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:53.603793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:54.604239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:55.604714      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:56.605130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:57.605599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:09:57.781930 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:09:58.606632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:09:59.607079      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:00.607479      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:01.607908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:02.608326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:03.609190      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:04.609618      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:05.610073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:06.610501      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:07.610964      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:08.611930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:09.612296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:10.612690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:11.613154      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:12.613556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:13.614447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:14.614886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:15.615328      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:16.615717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:17.616393      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:10:17.782825 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:10:18.617565      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:19.617900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:20.618223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:21.618599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:22.618978      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:23.619760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:24.620181      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:25.620581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:26.620952      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:27.621319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:28.621426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:29.621694      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:30.622138      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:31.622642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:32.623145      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:33.623857      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:34.624071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:35.624550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:36.624985      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:37.625226      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:10:37.783529 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:10:38.625918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:39.626015      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:40.626376      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:41.626757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:42.626997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:43.627868      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:44.628276      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:45.628500      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:46.628974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:47.629582      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:48.630680      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:49.631131      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:50.631580      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:51.631784      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:52.632185      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:53.632989      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:54.633241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:55.633676      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:56.634099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:57.634422      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:10:57.781390 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:10:58.634685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:10:59.635157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:00.635404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:01.635862      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:02.636237      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:03.637046      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:04.637422      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:05.637814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:06.638121      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:07.638551      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:08.638856      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:09.639279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:10.639698      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:11.640074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:12.640845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:13.641665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:14.642005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:15.642785      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:16.643147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:17.643590      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:11:17.782276 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:11:18.643825      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:19.644210      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:20.644320      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:21.645200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:22.645637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:23.646541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:24.647147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:25.647606      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:26.648045      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:27.648486      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:28.649387      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:29.649803      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:30.650241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:31.650696      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:32.651160      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:33.652082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:34.652524      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:35.652933      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:36.653353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:37.653797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:11:37.782208 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:11:38.654886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:39.655284      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:40.655742      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:41.656186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:42.656643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:43.657510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:44.657932      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:45.658365      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:46.659375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:47.659833      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:48.659887      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:49.660435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:50.660837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:51.661581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:52.662008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:53.662874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:54.663346      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:55.663848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:56.664328      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:57.664770      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:11:57.781679 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:11:58.665866      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:11:59.666521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:00.666935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:01.667382      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:02.667706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:03.668483      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:04.668860      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:05.669285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:06.669733      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:07.670206      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:08.671073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:09.671536      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:10.671964      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:11.672434      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:12.672887      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:13.673937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:14.674339      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:15.674781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:16.675175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:17.675640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:12:17.781863 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:12:18.676343      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:19.676743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:20.677239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:21.677660      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:22.678086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:23.679002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:24.679392      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:25.679826      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:26.680297      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:27.680759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:28.681587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:29.681983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:30.682442      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:31.682876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:32.683303      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:33.684171      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:34.684599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:35.685032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:36.685452      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:37.685780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:12:37.782655 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:12:38.686294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:39.686692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:40.687113      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:41.687585      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:42.687991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:43.689063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:44.689509      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:45.689919      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:46.690329      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:47.690740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:48.691657      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:49.692344      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:50.692798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:51.693237      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:52.693653      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:53.694508      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:54.694934      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:55.695374      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:56.695829      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:57.696246      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:12:57.782536 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:12:58.697281      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:12:59.697706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:00.698107      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:01.699296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:02.699743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:03.700230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:04.700651      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:05.701073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:06.701527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:07.702000      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:08.703042      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:09.703522      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:10.703943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:11.704360      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:12.704757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:13.705586      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:14.705993      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:15.706397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:16.706822      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:17.707182      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:13:17.782503 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:13:18.708311      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:19.708763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:20.709895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:21.709975      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:22.710494      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:23.711347      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:24.711745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:25.712215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:26.712690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:27.713139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:28.714155      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:29.714537      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:30.714937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:31.715367      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:32.715774      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:33.716646      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:34.717037      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:35.717455      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:36.717852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:37.718310      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:13:37.784076 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:13:38.718838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:39.719304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:40.719736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:41.720195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:42.720663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:43.721518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:44.721939      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:45.722405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:46.722851      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:47.723292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:48.724261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:49.724715      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:50.725134      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:51.725670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:52.726047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:53.727075      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:54.727545      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:55.728061      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:56.728579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:57.729076      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:13:57.782350 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:13:58.729752      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:13:59.730260      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:00.730663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:01.731092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:02.731522      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:03.732552      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:04.733029      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:05.733404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:06.733826      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:07.734296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:08.735124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:09.735579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:10.736049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:11.736506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:12.736946      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:13.738019      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:14.738490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:15.738936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:16.739389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:17.739797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:14:17.782221 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:14:18.740115      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:19.740544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:20.740980      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:21.741408      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:22.741848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:23.742905      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:24.743583      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:25.743981      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:26.744474      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:27.744877      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:28.745906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:29.746362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:30.746779      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:31.747170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:32.747597      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:33.748458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:34.748883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:35.749322      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:36.749683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:37.750123      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:14:37.783062 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:14:38.750970      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:39.751421      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:40.751867      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:41.752319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:42.752753      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:43.753604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:44.753988      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:45.754438      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:46.754869      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:47.755323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:48.756327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:49.756757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:50.757172      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:51.757623      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:52.758010      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:53.759081      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:54.759549      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:55.759983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:56.760394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:57.760705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:14:57.781713 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:14:58.760828      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:14:59.761129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:00.761625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:01.762066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:02.762502      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:03.763062      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:04.763351      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:05.763752      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:06.764148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:07.764563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:08.764718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:09.765099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:10.765398      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:11.765692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:12.765950      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:13.766437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:14.766662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:15.766938      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:16.767219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:17.767491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:15:17.783031 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:15:18.768012      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:19.768440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:20.769700      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:21.769738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:22.770379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:23.771171      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:24.771740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:25.772195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:26.772607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:27.772971      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:28.774063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:29.774400      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:30.774892      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:31.775304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:32.775675      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:33.776487      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:34.776999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:35.777428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:36.777850      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:37.778693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:15:37.781526 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:15:38.779588      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:39.780016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:40.780462      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:41.780917      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:42.781361      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:43.782280      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:44.782730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:45.783170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:46.783642      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:47.784267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:48.785200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:49.785590      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:50.786035      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:51.786488      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:52.786916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:53.787888      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:54.788309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:55.788705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:56.789144      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:15:57.782598 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:15:57.789279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:58.790107      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:15:59.790549      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:00.790967      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:01.791449      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:02.791915      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:03.792983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:04.793431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:05.793814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:06.794261      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:07.795154      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:08.796099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:09.796523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:10.796920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:11.797349      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:12.797799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:13.798770      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:14.799187      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:15.799650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:16.800090      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:16:17.781880 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:16:17.800656      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:18.801334      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:19.801798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:20.802262      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:21.802658      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:22.803105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:23.803959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:24.804369      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:25.804793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:26.805133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:27.805844      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:28.806658      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:29.807040      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:30.807490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:31.807998      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:32.808435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:33.809361      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:34.809834      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:35.810519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:36.810943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:16:37.782365 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:16:37.811012      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:38.811966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:39.812435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:40.812761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:41.813196      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:42.813602      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:43.814489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:44.814898      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:45.815233      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:46.815728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:47.816769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:48.817632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:49.818088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:50.818514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:51.818932      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:52.819398      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:53.820363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:54.820820      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:55.821319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:56.821704      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:16:57.783082 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:16:57.822727      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:58.823813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:16:59.824206      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:00.825024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:01.825440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:02.825860      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:03.826891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:04.827367      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:05.827744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:06.828166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:07.829043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:08.830186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:09.830562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:10.830990      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:11.831383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:12.831808      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:13.832876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:14.833295      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:15.833775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:16.834196      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:17:17.782910 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:17:17.834557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:18.835232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:19.835614      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:20.836615      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:21.836532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:22.837447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:23.838175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:24.838598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:25.839027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:26.839937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:27.840500      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:28.841222      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:29.841631      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:30.842003      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:31.842535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:32.842985      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:33.844043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:34.844531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:35.844917      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:36.845350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:17:37.782214 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:17:37.845916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:38.847078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:39.847613      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:40.848084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:41.848594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:42.849064      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:43.850420      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:44.851053      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:45.851541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:46.852063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:47.852861      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:48.852971      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:49.853424      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:50.853915      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:51.854620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:52.855059      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:53.856230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:54.856683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:55.857146      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:56.857584      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:17:57.783388 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:17:57.858088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:58.859002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:17:59.859517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:00.859934      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:01.860523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:02.860961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:03.862124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:04.862590      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:05.863032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:06.863519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:07.863994      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:08.865098      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:09.865948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:10.866328      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:11.866778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:12.867239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:13.868082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:14.868434      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:15.868897      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:16.869391      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:18:17.782413 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjA2MjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1204 07:18:17.869935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:18.870505      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:19.870812      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:20.871210      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:21.871722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:22.872215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:23.873138      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:24.873521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:25.873974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:26.874390      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:27.874749      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:28.874896      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:29.875399      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:30.876016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:31.876363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:32.876809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:33.876963      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:34.877413      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:35.877869      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:36.878355      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:18:37.780934 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1204 07:18:37.781016 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/04/24 07:18:37.781
  STEP: retrieving all remaining pages @ 12/04/24 07:18:37.788
  I1204 07:18:37.793481 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1204 07:18:37.798871 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1204 07:18:37.804855 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1204 07:18:37.809993 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1204 07:18:37.814608 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1204 07:18:37.819128 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1204 07:18:37.824536 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MzYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1204 07:18:37.828861 23 chunking.go:221] Retrieved 40/40 results with rv 21436 and continue 
  I1204 07:18:37.829315 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6313" for this suite. @ 12/04/24 07:18:37.834
• [557.823 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/04/24 07:18:37.842
  I1204 07:18:37.842753 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:18:37.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:37.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:37.872
  STEP: Creating configMap configmap-4230/configmap-test-271f9b53-0423-4195-9a90-6fd05f37f729 @ 12/04/24 07:18:37.876
  E1204 07:18:37.879086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:18:37.882
  E1204 07:18:38.880323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:39.880841      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:40.881801      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:41.882232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:18:41.91
  I1204 07:18:41.914627 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-1bee8edd-80c3-4fe9-8b61-0ecda083965e container env-test: <nil>
  STEP: delete the pod @ 12/04/24 07:18:41.938
  I1204 07:18:41.953976 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4230" for this suite. @ 12/04/24 07:18:41.959
• [4.122 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/04/24 07:18:41.964
  I1204 07:18:41.964727 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename ingress @ 12/04/24 07:18:41.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:41.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:41.984
  STEP: getting /apis @ 12/04/24 07:18:41.989
  STEP: getting /apis/networking.k8s.io @ 12/04/24 07:18:41.995
  STEP: getting /apis/networking.k8s.iov1 @ 12/04/24 07:18:41.997
  STEP: creating @ 12/04/24 07:18:41.999
  STEP: getting @ 12/04/24 07:18:42.013
  STEP: listing @ 12/04/24 07:18:42.016
  STEP: watching @ 12/04/24 07:18:42.019
  I1204 07:18:42.019586 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/04/24 07:18:42.021
  STEP: cluster-wide watching @ 12/04/24 07:18:42.025
  I1204 07:18:42.025717 23 ingress.go:198] starting watch
  STEP: patching @ 12/04/24 07:18:42.027
  STEP: updating @ 12/04/24 07:18:42.034
  I1204 07:18:42.042819 23 ingress.go:221] waiting for watch events with expected annotations
  I1204 07:18:42.042891 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/04/24 07:18:42.043
  STEP: updating /status @ 12/04/24 07:18:42.048
  STEP: get /status @ 12/04/24 07:18:42.057
  STEP: deleting @ 12/04/24 07:18:42.061
  STEP: deleting a collection @ 12/04/24 07:18:42.071
  I1204 07:18:42.086897 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6324" for this suite. @ 12/04/24 07:18:42.091
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/04/24 07:18:42.097
  I1204 07:18:42.097819 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename runtimeclass @ 12/04/24 07:18:42.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:42.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:42.114
  STEP: getting /apis @ 12/04/24 07:18:42.118
  STEP: getting /apis/node.k8s.io @ 12/04/24 07:18:42.125
  STEP: getting /apis/node.k8s.io/v1 @ 12/04/24 07:18:42.126
  STEP: creating @ 12/04/24 07:18:42.128
  STEP: watching @ 12/04/24 07:18:42.142
  I1204 07:18:42.142463 23 runtimeclass.go:275] starting watch
  STEP: getting @ 12/04/24 07:18:42.147
  STEP: listing @ 12/04/24 07:18:42.15
  STEP: patching @ 12/04/24 07:18:42.153
  STEP: updating @ 12/04/24 07:18:42.159
  I1204 07:18:42.163789 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/04/24 07:18:42.163
  STEP: deleting a collection @ 12/04/24 07:18:42.175
  I1204 07:18:42.187908 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9055" for this suite. @ 12/04/24 07:18:42.192
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/04/24 07:18:42.198
  I1204 07:18:42.198655 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename security-context-test @ 12/04/24 07:18:42.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:42.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:42.217
  E1204 07:18:42.882483      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:43.883682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:44.884041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:45.884507      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:18:46.245117 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9870" for this suite. @ 12/04/24 07:18:46.25
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 12/04/24 07:18:46.259
  I1204 07:18:46.259057 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:18:46.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:46.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:46.277
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/04/24 07:18:46.281
  I1204 07:18:46.282055 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7781 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1204 07:18:46.385589 23 builder.go:146] stderr: ""
  I1204 07:18:46.385664 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/04/24 07:18:46.385
  E1204 07:18:46.884898      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:47.885062      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:48.885142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:49.885581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:50.885978      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/04/24 07:18:51.437
  I1204 07:18:51.438251 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7781 get pod e2e-test-httpd-pod -o json'
  I1204 07:18:51.529201 23 builder.go:146] stderr: ""
  I1204 07:18:51.529589 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-04T07:18:46Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7781\",\n        \"resourceVersion\": \"21937\",\n        \"uid\": \"51a6b679-a701-45b4-9637-8caaf1bd561a\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-x6mnr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"nodea17\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-x6mnr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-04T07:18:47Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-04T07:18:46Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-04T07:18:47Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-04T07:18:47Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-04T07:18:46Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://fc275419df19179e7d33a3589faa72079b4887043721c582af1287f7d9f0f9a3\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-04T07:18:46Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-x6mnr\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.100.37\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.100.37\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.21\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.21\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-04T07:18:46Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/04/24 07:18:51.529
  I1204 07:18:51.529862 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7781 replace -f -'
  I1204 07:18:51.710444 23 builder.go:146] stderr: ""
  I1204 07:18:51.710530 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/04/24 07:18:51.71
  I1204 07:18:51.714693 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7781 delete pods e2e-test-httpd-pod'
  E1204 07:18:51.886455      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:52.886845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:18:53.576904 23 builder.go:146] stderr: ""
  I1204 07:18:53.576981 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1204 07:18:53.577184 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7781" for this suite. @ 12/04/24 07:18:53.583
• [7.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/04/24 07:18:53.59
  I1204 07:18:53.590273 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 07:18:53.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:53.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:53.61
  STEP: creating the pod @ 12/04/24 07:18:53.614
  STEP: setting up watch @ 12/04/24 07:18:53.614
  STEP: submitting the pod to kubernetes @ 12/04/24 07:18:53.718
  STEP: verifying the pod is in kubernetes @ 12/04/24 07:18:53.729
  STEP: verifying pod creation was observed @ 12/04/24 07:18:53.733
  E1204 07:18:53.887444      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:54.887854      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/04/24 07:18:55.746
  STEP: verifying pod deletion was observed @ 12/04/24 07:18:55.752
  E1204 07:18:55.888815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:18:56.592946 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2686" for this suite. @ 12/04/24 07:18:56.597
• [3.013 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/04/24 07:18:56.604
  I1204 07:18:56.604196 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 07:18:56.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:18:56.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:18:56.621
  E1204 07:18:56.888914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:57.889094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:58.889720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:18:59.890322      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:00.890712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:01.891036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:02.891861      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:03.892810      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:04.893832      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:05.894533      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:06.895506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:07.895757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:08.896780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:09.897987      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:10.898336      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:11.899135      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:12.899179      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:13.899255      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:14.899530      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:15.899921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:16.900202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:17.900227      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:18.901285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:19.902420      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:20.903532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:21.904073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:22.904766      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:23.905373      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:24.906290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:25.906729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:26.907431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:27.908370      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:28.908977      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:29.910197      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:30.910837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:31.910950      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:32.911696      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:33.911753      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:34.912447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:35.912883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:36.913034      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:37.913236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:38.914078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:39.914389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:40.915411      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:41.915548      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:42.916707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:43.917402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:44.918274      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:45.919223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:46.919793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:47.920706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:48.921306      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:49.922250      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:50.922572      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:51.923645      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:52.923833      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:53.924253      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:54.924548      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:55.924693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:19:56.640331 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8920" for this suite. @ 12/04/24 07:19:56.645
• [60.048 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/04/24 07:19:56.652
  I1204 07:19:56.652514 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename security-context-test @ 12/04/24 07:19:56.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:19:56.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:19:56.676
  E1204 07:19:56.925568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:57.926458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:58.927023      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:19:59.927367      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:00.702757 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6963" for this suite. @ 12/04/24 07:20:00.707
• [4.061 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/04/24 07:20:00.713
  I1204 07:20:00.713477 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:20:00.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:00.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:00.732
  STEP: creating a secret @ 12/04/24 07:20:00.736
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/04/24 07:20:00.74
  STEP: patching the secret @ 12/04/24 07:20:00.743
  STEP: deleting the secret using a LabelSelector @ 12/04/24 07:20:00.753
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/04/24 07:20:00.759
  I1204 07:20:00.762290 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8508" for this suite. @ 12/04/24 07:20:00.766
• [0.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/04/24 07:20:00.771
  I1204 07:20:00.771495 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename namespaces @ 12/04/24 07:20:00.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:00.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:00.832
  STEP: Updating Namespace "namespaces-8492" @ 12/04/24 07:20:00.836
  I1204 07:20:00.843196 23 namespace.go:389] Namespace "namespaces-8492" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1abf54d8-ca8b-401e-a800-2097092b657c", "kubernetes.io/metadata.name":"namespaces-8492", "namespaces-8492":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1204 07:20:00.843418 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8492" for this suite. @ 12/04/24 07:20:00.867
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 12/04/24 07:20:00.874
  I1204 07:20:00.874331 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:20:00.875
  E1204 07:20:00.928123      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:00.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:00.937
  STEP: creating service nodeport-test with type=NodePort in namespace services-1274 @ 12/04/24 07:20:00.941
  STEP: creating replication controller nodeport-test in namespace services-1274 @ 12/04/24 07:20:00.964
  I1204 07:20:00.971995      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1274, replica count: 2
  E1204 07:20:01.929195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:02.929655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:03.930667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:04.023050      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 07:20:04.023192 23 resource.go:361] Creating new exec pod
  E1204 07:20:04.930891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:05.931119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:06.931309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:07.048886 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1204 07:20:07.236682 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1204 07:20:07.236762 23 builder.go:147] stdout: ""
  E1204 07:20:07.931683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:08.049184 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1204 07:20:08.229733 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1204 07:20:08.229810 23 builder.go:147] stdout: "nodeport-test-kw957"
  I1204 07:20:08.229943 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.184.178 80'
  I1204 07:20:08.403231 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.184.178 80\nConnection to 10.96.184.178 80 port [tcp/http] succeeded!\n"
  I1204 07:20:08.403292 23 builder.go:147] stdout: ""
  E1204 07:20:08.932052      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:09.230818 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.184.178 80'
  I1204 07:20:09.391654 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.184.178 80\nConnection to 10.96.184.178 80 port [tcp/http] succeeded!\n"
  I1204 07:20:09.391732 23 builder.go:147] stdout: ""
  E1204 07:20:09.932536      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:10.230181 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.184.178 80'
  I1204 07:20:10.397023 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.184.178 80\nConnection to 10.96.184.178 80 port [tcp/http] succeeded!\n"
  I1204 07:20:10.397107 23 builder.go:147] stdout: "nodeport-test-kw957"
  I1204 07:20:10.397261 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 32222'
  I1204 07:20:10.563698 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 32222\nConnection to 192.168.100.37 32222 port [tcp/*] succeeded!\n"
  I1204 07:20:10.563776 23 builder.go:147] stdout: "nodeport-test-kw957"
  I1204 07:20:10.563897 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-1274 exec execpod7wj67 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 32222'
  I1204 07:20:10.730201 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 32222\nConnection to 192.168.100.114 32222 port [tcp/*] succeeded!\n"
  I1204 07:20:10.730285 23 builder.go:147] stdout: "nodeport-test-kw957"
  I1204 07:20:10.730540 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1274" for this suite. @ 12/04/24 07:20:10.735
• [9.867 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/04/24 07:20:10.743
  I1204 07:20:10.743673 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename watch @ 12/04/24 07:20:10.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:10.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:10.763
  STEP: getting a starting resourceVersion @ 12/04/24 07:20:10.768
  STEP: starting a background goroutine to produce watch events @ 12/04/24 07:20:10.771
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/04/24 07:20:10.771
  E1204 07:20:10.932604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:11.932744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:12.932825      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:13.551588 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7715" for this suite. @ 12/04/24 07:20:13.601
• [2.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 12/04/24 07:20:13.652
  I1204 07:20:13.652044 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 07:20:13.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:13.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:13.671
  STEP: Creating a ResourceQuota @ 12/04/24 07:20:13.676
  STEP: Getting a ResourceQuota @ 12/04/24 07:20:13.68
  STEP: Updating a ResourceQuota @ 12/04/24 07:20:13.684
  STEP: Verifying a ResourceQuota was modified @ 12/04/24 07:20:13.689
  STEP: Deleting a ResourceQuota @ 12/04/24 07:20:13.692
  STEP: Verifying the deleted ResourceQuota @ 12/04/24 07:20:13.696
  I1204 07:20:13.699625 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1710" for this suite. @ 12/04/24 07:20:13.705
• [0.057 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/04/24 07:20:13.709
  I1204 07:20:13.709673 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:20:13.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:13.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:13.773
  STEP: Starting the proxy @ 12/04/24 07:20:13.777
  I1204 07:20:13.778341 23 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4742 proxy --unix-socket=/tmp/kubectl-proxy-unix3320775672/test'
  STEP: retrieving proxy /api/ output @ 12/04/24 07:20:13.848
  I1204 07:20:13.849461 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4742" for this suite. @ 12/04/24 07:20:13.855
• [0.163 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/04/24 07:20:13.872
  I1204 07:20:13.873041 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:20:13.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:13.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:13.909
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/04/24 07:20:13.914
  E1204 07:20:13.934413      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:14.933833      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:15.933916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:16.934489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:17.935083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:20:17.936
  I1204 07:20:17.941528 23 output.go:196] Trying to get logs from node nodea17 pod pod-f072fd44-4d58-48da-97e2-a72d211b12fc container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:20:17.963
  I1204 07:20:17.980196 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8935" for this suite. @ 12/04/24 07:20:17.984
• [4.117 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 12/04/24 07:20:17.99
  I1204 07:20:17.990132 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename disruption @ 12/04/24 07:20:17.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:18.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:18.012
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:20:18.022
  E1204 07:20:18.935343      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:19.935831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 12/04/24 07:20:20.049
  I1204 07:20:20.054042 23 disruption.go:691] running pods: 0 < 3
  E1204 07:20:20.936593      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:21.937626      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:22.060269 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1311" for this suite. @ 12/04/24 07:20:22.065
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 12/04/24 07:20:22.072
  I1204 07:20:22.072910 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename security-context @ 12/04/24 07:20:22.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:22.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:22.094
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/04/24 07:20:22.099
  E1204 07:20:22.938519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:23.939300      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:20:24.119
  I1204 07:20:24.123303 23 output.go:196] Trying to get logs from node nodea17 pod security-context-9d72d7a9-451f-40c3-b80d-620c616ee8c5 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:20:24.13
  I1204 07:20:24.144122 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7474" for this suite. @ 12/04/24 07:20:24.148
• [2.081 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 12/04/24 07:20:24.153
  I1204 07:20:24.153832 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 07:20:24.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:24.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:24.173
  STEP: Creating a test headless service @ 12/04/24 07:20:24.177
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-74.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-74.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/04/24 07:20:24.181
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-74.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-74.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/04/24 07:20:24.181
  STEP: creating a pod to probe DNS @ 12/04/24 07:20:24.181
  STEP: submitting the pod to kubernetes @ 12/04/24 07:20:24.181
  E1204 07:20:24.940431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:25.941161      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 07:20:26.211
  STEP: looking for the results for each expected name from probers @ 12/04/24 07:20:26.215
  I1204 07:20:26.235178 23 dns_common.go:527] DNS probes using dns-74/dns-test-c6ef04a3-c588-4ddf-a828-d71191a4fe62 succeeded

  STEP: deleting the pod @ 12/04/24 07:20:26.235
  STEP: deleting the test headless service @ 12/04/24 07:20:26.248
  I1204 07:20:26.260653 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-74" for this suite. @ 12/04/24 07:20:26.265
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/04/24 07:20:26.271
  I1204 07:20:26.271066 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:20:26.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:26.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:26.288
  STEP: Creating projection with secret that has name secret-emptykey-test-3bbd555b-ad4b-4c4c-9825-d9ed4f4009dc @ 12/04/24 07:20:26.293
  I1204 07:20:26.295638 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2112" for this suite. @ 12/04/24 07:20:26.366
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/04/24 07:20:26.373
  I1204 07:20:26.373536 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 07:20:26.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:26.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:26.393
  E1204 07:20:26.941684      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:27.942330      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:28.414156 23 delete.go:62] Deleting pod "var-expansion-a7fd5eef-1e0c-4bef-8ae4-08d0ff56919d" in namespace "var-expansion-935"
  I1204 07:20:28.422429 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-a7fd5eef-1e0c-4bef-8ae4-08d0ff56919d" to be fully deleted
  E1204 07:20:28.942853      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:29.943421      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:30.431094 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-935" for this suite. @ 12/04/24 07:20:30.436
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/04/24 07:20:30.444
  I1204 07:20:30.444119 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:20:30.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:30.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:30.464
  STEP: Creating configMap configmap-4666/configmap-test-8e5ad86e-4cb0-4c21-ba8d-3ad0ae37dd53 @ 12/04/24 07:20:30.469
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:20:30.474
  E1204 07:20:30.943333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:31.943891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:32.945044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:33.946138      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:20:34.495
  I1204 07:20:34.499715 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-263af3df-4ce0-4b70-b2f5-59c29a0260b7 container env-test: <nil>
  STEP: delete the pod @ 12/04/24 07:20:34.507
  I1204 07:20:34.522770 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4666" for this suite. @ 12/04/24 07:20:34.527
• [4.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 12/04/24 07:20:34.533
  I1204 07:20:34.533625 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 07:20:34.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:34.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:34.554
  I1204 07:20:34.559645 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:20:34.946368      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:35.947593      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:36.948099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1204 07:20:37.119531      23 warnings.go:70] unknown field "alpha"
  W1204 07:20:37.119579      23 warnings.go:70] unknown field "beta"
  W1204 07:20:37.119591      23 warnings.go:70] unknown field "delta"
  W1204 07:20:37.119603      23 warnings.go:70] unknown field "epsilon"
  W1204 07:20:37.119627      23 warnings.go:70] unknown field "gamma"
  I1204 07:20:37.667262 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3142" for this suite. @ 12/04/24 07:20:37.673
• [3.149 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/04/24 07:20:37.682
  I1204 07:20:37.682475 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:20:37.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:37.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:37.703
  STEP: Creating configMap with name configmap-test-volume-f195a666-d667-411b-b4ff-d90a201af9fc @ 12/04/24 07:20:37.708
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:20:37.713
  E1204 07:20:37.948920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:38.950127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:39.950464      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:40.950913      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:20:41.736
  I1204 07:20:41.740527 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-14268c4c-f43f-4690-853d-da0acd09a2ff container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:20:41.748
  I1204 07:20:41.762987 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5631" for this suite. @ 12/04/24 07:20:41.769
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/04/24 07:20:41.777
  I1204 07:20:41.777906 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:20:41.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:20:41.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:20:41.797
  STEP: Creating service test in namespace statefulset-1163 @ 12/04/24 07:20:41.802
  STEP: Creating a new StatefulSet @ 12/04/24 07:20:41.806
  I1204 07:20:41.818355 23 wait.go:40] Found 0 stateful pods, waiting for 3
  E1204 07:20:41.951798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:42.952333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:43.952571      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:44.952742      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:45.953214      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:46.953711      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:47.953949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:48.954780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:49.955317      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:50.955841      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:20:51.819912 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:20:51.819990 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:20:51.820023 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/04/24 07:20:51.831
  I1204 07:20:51.843934 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/04/24 07:20:51.844
  E1204 07:20:51.956577      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:52.957044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:53.958032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:54.958436      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:55.958709      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:56.959174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:57.959440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:58.959581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:20:59.959928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:00.960344      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/04/24 07:21:01.852
  STEP: Performing a canary update @ 12/04/24 07:21:01.852
  I1204 07:21:01.864676 23 statefulset.go:2507] Updating stateful set ss2
  I1204 07:21:01.871368 23 wait.go:74] Waiting for Pod statefulset-1163/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1204 07:21:01.960442      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:02.960928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:03.961933      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:04.962299      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:05.962707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:06.963097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:07.963544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:08.964149      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:09.964720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:10.965754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/04/24 07:21:11.876
  I1204 07:21:11.910366 23 wait.go:40] Found 2 stateful pods, waiting for 3
  E1204 07:21:11.966564      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:12.967052      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:13.967620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:14.968077      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:15.968526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:16.969031      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:17.969552      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:18.970334      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:19.970795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:20.972815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:21:21.910452 23 wait.go:40] Found 2 stateful pods, waiting for 3
  E1204 07:21:21.971304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:22.971769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:23.972746      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:24.973114      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:25.973527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:26.973939      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:27.974359      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:28.975089      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:29.975529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:30.975904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:21:31.908929 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:21:31.909014 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:21:31.909040 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/04/24 07:21:31.917
  I1204 07:21:31.926363 23 statefulset.go:2507] Updating stateful set ss2
  I1204 07:21:31.935693 23 wait.go:74] Waiting for Pod statefulset-1163/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1204 07:21:31.976492      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:32.976940      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:33.977943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:34.978426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:35.978809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:36.979228      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:37.979712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:38.980575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:39.981031      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:40.981520      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:21:41.950060 23 statefulset.go:2507] Updating stateful set ss2
  I1204 07:21:41.959580 23 wait.go:56] Waiting for StatefulSet statefulset-1163/ss2 to complete update
  I1204 07:21:41.959651 23 wait.go:63] Waiting for Pod statefulset-1163/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1204 07:21:41.982478      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:42.982873      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:43.983504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:44.983895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:45.984406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:46.984889      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:47.985321      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:48.986111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:49.986594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:50.987005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:21:51.962239 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1163
  I1204 07:21:51.966079 23 rest.go:150] Scaling statefulset ss2 to 0
  E1204 07:21:51.987621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:52.988029      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:53.989107      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:54.989561      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:55.990445      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:56.990849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:57.991251      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:58.992284      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:21:59.992723      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:00.993170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:22:01.987886 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:22:01.992406 23 rest.go:88] Deleting statefulset ss2
  E1204 07:22:01.993647      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:22:02.010410 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1163" for this suite. @ 12/04/24 07:22:02.015
• [80.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/04/24 07:22:02.021
  I1204 07:22:02.021925 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:22:02.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:02.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:02.039
  I1204 07:22:02.083688 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4652" for this suite. @ 12/04/24 07:22:02.115
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/04/24 07:22:02.137
  I1204 07:22:02.138044 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/04/24 07:22:02.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:02.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:02.157
  I1204 07:22:02.161906 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:22:02.993717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/04/24 07:22:03.526
  I1204 07:22:03.527044 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7714 --namespace=crd-publish-openapi-7714 create -f -'
  E1204 07:22:03.994559      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:04.995605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:22:05.663119 23 builder.go:146] stderr: ""
  I1204 07:22:05.663186 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1002-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1204 07:22:05.663271 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7714 --namespace=crd-publish-openapi-7714 delete e2e-test-crd-publish-openapi-1002-crds test-cr'
  I1204 07:22:05.750891 23 builder.go:146] stderr: ""
  I1204 07:22:05.750996 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1002-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1204 07:22:05.751112 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7714 --namespace=crd-publish-openapi-7714 apply -f -'
  I1204 07:22:05.856310 23 builder.go:146] stderr: ""
  I1204 07:22:05.856391 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1002-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1204 07:22:05.856496 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7714 --namespace=crd-publish-openapi-7714 delete e2e-test-crd-publish-openapi-1002-crds test-cr'
  I1204 07:22:05.946973 23 builder.go:146] stderr: ""
  I1204 07:22:05.947057 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1002-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/04/24 07:22:05.947
  I1204 07:22:05.947234 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=crd-publish-openapi-7714 explain e2e-test-crd-publish-openapi-1002-crds'
  E1204 07:22:05.995943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:22:06.038367 23 builder.go:146] stderr: ""
  I1204 07:22:06.038531 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1002-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1204 07:22:06.996904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:22:07.391985 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7714" for this suite. @ 12/04/24 07:22:07.403
• [5.274 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/04/24 07:22:07.411
  I1204 07:22:07.411985 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:22:07.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:07.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:07.425
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:22:07.429
  E1204 07:22:07.997348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:08.998470      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:09.999664      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:11.000091      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:22:11.451
  I1204 07:22:11.454548 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-c02d079a-d6c4-404e-8feb-641c61029ff0 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:22:11.461
  I1204 07:22:11.476521 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3208" for this suite. @ 12/04/24 07:22:11.481
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/04/24 07:22:11.486
  I1204 07:22:11.486851 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 07:22:11.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:11.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:11.505
  I1204 07:22:11.524136 23 service_accounts.go:618] created pod
  E1204 07:22:12.001041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:13.001913      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:14.002007      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:15.002404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:22:15.538
  E1204 07:22:16.002804      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:17.003211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:18.003660      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:19.004416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:20.004813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:21.005280      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:22.005687      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:23.006119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:24.007071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:25.007560      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:26.007979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:27.008540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:28.008961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:29.010031      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:30.010398      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:31.010837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:32.011278      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:33.011670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:34.011860      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:35.012377      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:36.012793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:37.013220      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:38.014118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:39.015176      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:40.015668      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:41.015889      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:42.016247      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:43.016654      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:44.017240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:45.017603      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:22:45.538619 23 service_accounts.go:624] polling logs
  I1204 07:22:45.546633 23 service_accounts.go:634] Pod logs: 
  I1204 07:22:12.115387       1 log.go:245] OK: Got token
  I1204 07:22:12.115451       1 log.go:245] validating with in-cluster discovery
  I1204 07:22:12.115859       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1204 07:22:12.116082       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8362:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013370), NotBefore:(*jwt.NumericDate)(0xc000013460), IssuedAt:(*jwt.NumericDate)(0xc000013380), ID:"d46cc763-ad1a-4dff-b415-db1d6f7b31c4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8362", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"32585478-d22f-4d93-a29b-1eadc888276d"}}}
  I1204 07:22:12.135062       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1204 07:22:12.145954       1 log.go:245] OK: Validated signature on JWT
  I1204 07:22:12.146113       1 log.go:245] OK: Got valid claims from token!
  I1204 07:22:12.146164       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8362:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00025b5a0), NotBefore:(*jwt.NumericDate)(0xc00025b5c8), IssuedAt:(*jwt.NumericDate)(0xc00025b5a8), ID:"d46cc763-ad1a-4dff-b415-db1d6f7b31c4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8362", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"32585478-d22f-4d93-a29b-1eadc888276d"}}}

  I1204 07:22:45.546761 23 service_accounts.go:638] completed pod
  I1204 07:22:45.553117 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8362" for this suite. @ 12/04/24 07:22:45.558
• [34.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/04/24 07:22:45.564
  I1204 07:22:45.564450 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:22:45.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:45.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:45.584
  STEP: Creating secret with name secret-test-6336a90f-dda9-4e2d-a3c7-0feda735c8dc @ 12/04/24 07:22:45.589
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:22:45.593
  E1204 07:22:46.018423      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:47.019002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:22:47.611
  I1204 07:22:47.615217 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-800ab643-c210-4bc8-870a-2dac853b19c2 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:22:47.622
  I1204 07:22:47.677223 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-204" for this suite. @ 12/04/24 07:22:47.682
• [2.126 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 12/04/24 07:22:47.693
  I1204 07:22:47.693258 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename disruption @ 12/04/24 07:22:47.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:47.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:47.711
  STEP: Creating a kubernetes client @ 12/04/24 07:22:47.715
  I1204 07:22:47.715763 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename disruption-2 @ 12/04/24 07:22:47.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:47.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:47.816
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:22:47.824
  E1204 07:22:48.019812      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:49.019936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:22:49.837
  E1204 07:22:50.020930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:51.021333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:22:51.847
  E1204 07:22:52.022383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:53.022667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 12/04/24 07:22:53.853
  STEP: listing a collection of PDBs in namespace disruption-3018 @ 12/04/24 07:22:53.858
  STEP: deleting a collection of PDBs @ 12/04/24 07:22:53.862
  STEP: Waiting for the PDB collection to be deleted @ 12/04/24 07:22:53.873
  I1204 07:22:53.877026 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9229" for this suite. @ 12/04/24 07:22:53.882
  I1204 07:22:53.890695 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3018" for this suite. @ 12/04/24 07:22:53.984
• [6.298 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/04/24 07:22:53.991
  I1204 07:22:53.991556 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:22:53.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:54.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:54.01
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/04/24 07:22:54.015
  E1204 07:22:54.023526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:55.024492      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:56.024941      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:57.025521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:22:58.025983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:22:58.038
  I1204 07:22:58.043151 23 output.go:196] Trying to get logs from node nodea17 pod pod-b4af3b61-5ef1-4b50-b410-f6a952de8ccd container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:22:58.049
  I1204 07:22:58.065404 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6205" for this suite. @ 12/04/24 07:22:58.07
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/04/24 07:22:58.077
  I1204 07:22:58.077814 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename endpointslice @ 12/04/24 07:22:58.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:22:58.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:22:58.096
  E1204 07:22:59.026423      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:00.026932      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 12/04/24 07:23:00.194
  STEP: referencing matching pods with named port @ 12/04/24 07:23:00.202
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/04/24 07:23:00.208
  STEP: recreating EndpointSlices after they've been deleted @ 12/04/24 07:23:00.215
  I1204 07:23:00.232302 23 endpointslice.go:938] EndpointSlice for Service endpointslice-9161/example-named-port not found
  E1204 07:23:01.027445      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:02.028063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:02.239844 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9161" for this suite. @ 12/04/24 07:23:02.244
• [4.173 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 12/04/24 07:23:02.251
  I1204 07:23:02.251690 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:23:02.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:23:02.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:23:02.269
  STEP: creating service multiprotocol-test in namespace services-8835 @ 12/04/24 07:23:02.273
  STEP: creating pod pod1 in namespace services-8835 @ 12/04/24 07:23:02.294
  STEP: Creating pod pod1 in namespace services-8835 @ 12/04/24 07:23:02.295
  E1204 07:23:03.028173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:04.028498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8835 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/04/24 07:23:04.359
  I1204 07:23:04.375760 23 service.go:4392] successfully validated that service multiprotocol-test in namespace services-8835 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/04/24 07:23:04.376
  I1204 07:23:04.376359 23 resource.go:361] Creating new exec pod
  E1204 07:23:05.029191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:06.029699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:06.395028 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80'
  I1204 07:23:06.566206 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.179.114 80\nConnection to 10.105.179.114 80 port [tcp/http] succeeded!\n"
  I1204 07:23:06.566285 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:23:06.566436 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.179.114 80'
  E1204 07:23:07.030448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:08.031076      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:09.031663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:10.032090      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:10.745814 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.179.114 80\nConnection to 10.105.179.114 80 port [udp/*] succeeded!\n"
  I1204 07:23:10.745892 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/04/24 07:23:10.745
  I1204 07:23:10.756556 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80'
  I1204 07:23:10.924272 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.179.114 80\nConnection to 10.105.179.114 80 port [tcp/http] succeeded!\n"
  I1204 07:23:10.924339 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:23:10.924455 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.179.114 80'
  E1204 07:23:11.032229      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:12.032654      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:13.033364      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:14.034147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:15.034884      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:15.091766 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.179.114 80\nConnection to 10.105.179.114 80 port [udp/*] succeeded!\n"
  I1204 07:23:15.091850 23 builder.go:147] stdout: ""
  I1204 07:23:15.091950 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.179.114 80'
  E1204 07:23:16.035656      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:17.036544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:18.037527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:19.038520      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:19.250834 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.179.114 80\nConnection to 10.105.179.114 80 port [udp/*] succeeded!\n"
  I1204 07:23:19.250929 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/04/24 07:23:19.251
  I1204 07:23:19.263783 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.105.179.114 80'
  E1204 07:23:20.039177      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:21.039992      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:22.040521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:23.040999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:23.428230 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.105.179.114 80\nConnection to 10.105.179.114 80 port [udp/*] succeeded!\n"
  I1204 07:23:23.428326 23 builder.go:147] stdout: "pod1"
  I1204 07:23:23.428486 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80'
  E1204 07:23:24.041965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:25.042666      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:25.590408 23 builder.go:135] rc: 1
  I1204 07:23:25.590560 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.105.179.114 80
  nc: connect to 10.105.179.114 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1204 07:23:25.590700 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80'
  E1204 07:23:26.043153      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:27.043660      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:27.756465 23 builder.go:135] rc: 1
  I1204 07:23:27.756570 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.105.179.114 80
  nc: connect to 10.105.179.114 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1204 07:23:27.756761 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80'
  E1204 07:23:28.044461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:29.045202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:29.918177 23 builder.go:135] rc: 1
  I1204 07:23:29.918279 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-8835 exec execpodp8hh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.179.114 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.105.179.114 80
  nc: connect to 10.105.179.114 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1204 07:23:29.918602 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8835" for this suite. @ 12/04/24 07:23:29.925
• [27.680 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/04/24 07:23:29.931
  I1204 07:23:29.931914 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/04/24 07:23:29.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:23:29.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:23:29.949
  I1204 07:23:29.953739 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:23:30.045907      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:31.046937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:32.048045      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:33.048685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:34.049000      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:35.049949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:36.050961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:23:36.214308 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-426" for this suite. @ 12/04/24 07:23:36.22
• [6.298 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/04/24 07:23:36.23
  I1204 07:23:36.230445 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 07:23:36.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:23:36.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:23:36.25
  STEP: Creating a pod to test substitution in container's args @ 12/04/24 07:23:36.255
  E1204 07:23:37.051386      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:38.052218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:39.053252      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:40.053711      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:23:40.279
  I1204 07:23:40.283334 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-df1bc766-2d4b-454d-9ba4-87a7b821a26b container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:23:40.291
  I1204 07:23:40.307104 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5503" for this suite. @ 12/04/24 07:23:40.312
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/04/24 07:23:40.32
  I1204 07:23:40.320657 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename subpath @ 12/04/24 07:23:40.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:23:40.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:23:40.342
  STEP: Setting up data @ 12/04/24 07:23:40.348
  STEP: Creating pod pod-subpath-test-projected-v4d4 @ 12/04/24 07:23:40.357
  STEP: Creating a pod to test atomic-volume-subpath @ 12/04/24 07:23:40.357
  E1204 07:23:41.053752      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:42.053940      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:43.055015      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:44.055953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:45.056372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:46.056799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:47.057633      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:48.058434      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:49.059126      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:50.059586      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:51.059928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:52.060361      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:53.060927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:54.061234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:55.061568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:56.062016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:57.062376      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:58.062852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:23:59.063127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:00.063657      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:01.064490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:02.064952      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:03.065150      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:04.066087      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:24:04.449
  I1204 07:24:04.453605 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-projected-v4d4 container test-container-subpath-projected-v4d4: <nil>
  STEP: delete the pod @ 12/04/24 07:24:04.465
  STEP: Deleting pod pod-subpath-test-projected-v4d4 @ 12/04/24 07:24:04.48
  I1204 07:24:04.480468 23 delete.go:62] Deleting pod "pod-subpath-test-projected-v4d4" in namespace "subpath-4051"
  I1204 07:24:04.483534 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4051" for this suite. @ 12/04/24 07:24:04.488
• [24.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/04/24 07:24:04.496
  I1204 07:24:04.496714 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:24:04.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:24:04.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:24:04.519
  STEP: Creating a pod to test downward api env vars @ 12/04/24 07:24:04.524
  E1204 07:24:05.066304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:06.067018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:07.067447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:08.068695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:24:08.549
  I1204 07:24:08.552987 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-1528428f-fb42-4e25-a425-93ed8ae99d49 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:24:08.562
  I1204 07:24:08.580676 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7084" for this suite. @ 12/04/24 07:24:08.586
• [4.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/04/24 07:24:08.592
  I1204 07:24:08.592066 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename events @ 12/04/24 07:24:08.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:24:08.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:24:08.611
  STEP: Create set of events @ 12/04/24 07:24:08.615
  STEP: get a list of Events with a label in the current namespace @ 12/04/24 07:24:08.63
  STEP: delete a list of events @ 12/04/24 07:24:08.634
  I1204 07:24:08.634327 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/04/24 07:24:08.648
  I1204 07:24:08.652260 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2923" for this suite. @ 12/04/24 07:24:08.686
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/04/24 07:24:08.693
  I1204 07:24:08.693773 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 07:24:08.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:24:08.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:24:08.713
  STEP: creating the pod with failed condition @ 12/04/24 07:24:08.717
  E1204 07:24:09.068066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:10.068679      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:11.069147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:12.069583      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:13.069753      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:14.069979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:15.070106      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:16.070353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:17.071547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:18.071885      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:19.072534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:20.072863      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:21.073294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:22.073849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:23.074084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:24.074958      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:25.075643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:26.076026      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:27.076949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:28.077383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:29.078012      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:30.078380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:31.078550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:32.078908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:33.079717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:34.080479      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:35.081290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:36.081686      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:37.081959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:38.082401      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:39.083295      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:40.083707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:41.084292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:42.084669      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:43.085795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:44.086641      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:45.086943      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:46.087362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:47.088407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:48.088973      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:49.088997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:50.089387      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:51.090043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:52.090485      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:53.090594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:54.091325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:55.092055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:56.092534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:57.092908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:58.093364      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:24:59.094002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:00.094389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:01.095092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:02.095598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:03.096412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:04.097554      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:05.098037      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:06.098556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:07.099309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:08.099799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:09.100481      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:10.100916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:11.101142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:12.101724      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:13.102513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:14.103575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:15.104763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:16.105184      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:17.106013      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:18.106453      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:19.106617      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:20.107095      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:21.108153      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:22.108546      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:23.109217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:24.109945      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:25.110152      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:26.110624      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:27.110590      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:28.111033      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:29.111256      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:30.111568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:31.111838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:32.112139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:33.112647      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:34.113419      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:35.113754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:36.114238      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:37.114830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:38.115529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:39.115767      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:40.116116      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:41.116678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:42.117230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:43.117682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:44.117975      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:45.118844      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:46.119313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:47.119877      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:48.120515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:49.120500      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:50.120819      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:51.121316      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:52.121778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:53.122481      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:54.123234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:55.123625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:56.124041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:57.124185      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:58.125168      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:25:59.126374      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:00.126784      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:01.127598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:02.128074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:03.128724      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:04.129048      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:05.129183      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:06.129655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:07.129634      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:08.130779      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 12/04/24 07:26:08.728
  E1204 07:26:09.131050      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:26:09.242693 23 pod_client.go:173] Successfully updated pod "var-expansion-c920614b-db4e-494b-b662-a4eba21d73a1"
  STEP: waiting for pod running @ 12/04/24 07:26:09.242
  E1204 07:26:10.132027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:11.132486      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/04/24 07:26:11.252
  I1204 07:26:11.252818 23 delete.go:62] Deleting pod "var-expansion-c920614b-db4e-494b-b662-a4eba21d73a1" in namespace "var-expansion-8152"
  I1204 07:26:11.261170 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-c920614b-db4e-494b-b662-a4eba21d73a1" to be fully deleted
  E1204 07:26:12.132824      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:13.133349      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:14.133788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:15.134293      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:16.134615      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:17.135097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:18.135692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:19.135922      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:20.136199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:21.136662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:22.137306      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:23.137604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:24.137600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:25.138030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:26.138664      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:27.138995      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:28.139062      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:29.139853      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:30.140706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:31.141129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:32.141729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:33.142157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:34.143084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:35.143573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:36.143740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:37.144181      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:38.144405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:39.145279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:40.145517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:41.146313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:42.146651      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:43.147078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:26:43.358635 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8152" for this suite. @ 12/04/24 07:26:43.364
• [154.677 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/04/24 07:26:43.371
  I1204 07:26:43.371495 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:26:43.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:26:43.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:26:43.393
  STEP: Creating service test in namespace statefulset-7672 @ 12/04/24 07:26:43.398
  STEP: Creating statefulset ss in namespace statefulset-7672 @ 12/04/24 07:26:43.406
  I1204 07:26:43.417034 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E1204 07:26:44.147516      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:45.147583      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:46.148007      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:47.148443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:48.148959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:49.149839      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:50.150184      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:51.150600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:52.151013      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:53.151421      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:26:53.419961 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/04/24 07:26:53.427
  STEP: Getting /status @ 12/04/24 07:26:53.441
  I1204 07:26:53.447141 23 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/04/24 07:26:53.447
  I1204 07:26:53.458287 23 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/04/24 07:26:53.458
  I1204 07:26:53.461060 23 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1204 07:26:53.461146 23 statefulset.go:1111] Found Statefulset ss in namespace statefulset-7672 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 07:26:53.461174 23 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/04/24 07:26:53.461
  I1204 07:26:53.461228 23 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1204 07:26:53.472008 23 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/04/24 07:26:53.472
  I1204 07:26:53.474739 23 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1204 07:26:53.474836 23 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-7672 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 07:26:53.475054 23 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1204 07:26:53.475123 23 statefulset.go:1148] Found Statefulset ss in namespace statefulset-7672 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1204 07:26:53.475205 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7672
  I1204 07:26:53.478174 23 rest.go:150] Scaling statefulset ss to 0
  E1204 07:26:54.151745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:55.152397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:56.152820      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:57.153265      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:58.153755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:26:59.154643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:00.155047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:01.155491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:02.155927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:03.156352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:27:03.494179 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:27:03.498211 23 rest.go:88] Deleting statefulset ss
  I1204 07:27:03.513770 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7672" for this suite. @ 12/04/24 07:27:03.52
• [20.155 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 12/04/24 07:27:03.527
  I1204 07:27:03.527346 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename daemonsets @ 12/04/24 07:27:03.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:27:03.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:27:03.546
  STEP: Creating simple DaemonSet "daemon-set" @ 12/04/24 07:27:03.632
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/04/24 07:27:03.639
  I1204 07:27:03.720921 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:27:03.724701 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:27:03.724760 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:27:04.156858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:27:04.646051 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:27:04.650589 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1204 07:27:04.650655 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  E1204 07:27:05.157027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:27:05.646360 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1204 07:27:05.651433 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1204 07:27:05.651534 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 12/04/24 07:27:05.655
  I1204 07:27:05.660178 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/04/24 07:27:05.66
  I1204 07:27:05.669766 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/04/24 07:27:05.669
  I1204 07:27:05.672724 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1204 07:27:05.672943 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.673128 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.673292 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.673345 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-2550 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1204 07:27:05.673369 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/04/24 07:27:05.673
  STEP: watching for the daemon set status to be patched @ 12/04/24 07:27:05.683
  I1204 07:27:05.686163 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1204 07:27:05.686436 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.686678 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.686938 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.687013 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-2550 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1204 07:27:05.687248 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1204 07:27:05.687328 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-2550 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1204 07:27:05.687366 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/04/24 07:27:05.691
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2550, will wait for the garbage collector to delete the pods @ 12/04/24 07:27:05.691
  I1204 07:27:05.751888 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.236773ms
  I1204 07:27:05.852573 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.665468ms
  E1204 07:27:06.157899      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:07.157920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:27:07.158106 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1204 07:27:07.158177 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1204 07:27:07.162702 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24201"},"items":null}

  I1204 07:27:07.166874 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24201"},"items":null}

  I1204 07:27:07.179508 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2550" for this suite. @ 12/04/24 07:27:07.183
• [3.664 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/04/24 07:27:07.192
  I1204 07:27:07.192060 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:27:07.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:27:07.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:27:07.214
  STEP: Creating configMap with name cm-test-opt-del-3aab8c1d-24c1-4bf7-b646-909d06e8c9c6 @ 12/04/24 07:27:07.224
  STEP: Creating configMap with name cm-test-opt-upd-e91b87a7-c3a1-4232-91af-18dbf17cf459 @ 12/04/24 07:27:07.23
  STEP: Creating the pod @ 12/04/24 07:27:07.235
  E1204 07:27:08.158083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:09.158397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-3aab8c1d-24c1-4bf7-b646-909d06e8c9c6 @ 12/04/24 07:27:09.301
  STEP: Updating configmap cm-test-opt-upd-e91b87a7-c3a1-4232-91af-18dbf17cf459 @ 12/04/24 07:27:09.309
  STEP: Creating configMap with name cm-test-opt-create-994d94cc-1054-4973-9388-1d18f0b6e398 @ 12/04/24 07:27:09.315
  STEP: waiting to observe update in volume @ 12/04/24 07:27:09.32
  E1204 07:27:10.158868      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:11.159305      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:12.160461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:13.160912      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:14.161563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:15.162049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:16.162753      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:17.163240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:18.164069      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:19.164236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:20.164537      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:21.165006      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:22.166131      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:23.166572      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:24.167248      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:25.167701      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:26.168562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:27.169064      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:28.169157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:29.169328      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:30.170375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:31.170853      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:32.172075      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:33.173009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:34.173375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:35.173816      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:36.174523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:37.174966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:38.175534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:39.176299      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:40.176557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:41.176978      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:42.177264      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:43.177720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:44.178278      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:45.178703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:46.179075      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:47.179624      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:48.180607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:49.181362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:50.181447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:51.181903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:52.182048      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:53.182544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:54.183678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:55.184057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:56.184701      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:57.185258      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:58.185302      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:27:59.186241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:00.186750      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:01.187225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:02.190315      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:03.190735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:04.190950      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:05.192441      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:06.192340      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:07.192932      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:08.192842      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:09.193962      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:10.194465      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:11.194881      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:12.195195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:13.195712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:14.196388      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:15.196831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:16.197193      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:17.197630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:18.198706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:19.198790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:20.199011      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:21.199441      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:22.200146      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:23.200532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:24.200956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:25.201407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:28:25.733584 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6547" for this suite. @ 12/04/24 07:28:25.737
• [78.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 12/04/24 07:28:25.742
  I1204 07:28:25.742803 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:28:25.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:28:25.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:28:25.763
  STEP: fetching services @ 12/04/24 07:28:25.768
  I1204 07:28:25.772012 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8197" for this suite. @ 12/04/24 07:28:25.776
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/04/24 07:28:25.791
  I1204 07:28:25.791259 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename proxy @ 12/04/24 07:28:25.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:28:25.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:28:25.873
  I1204 07:28:25.877618 23 proxy.go:387] Creating pod...
  E1204 07:28:26.201436      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:27.202174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:28:27.894413 23 proxy.go:411] Creating service...
  I1204 07:28:27.911157 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=DELETE
  I1204 07:28:27.917172 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1204 07:28:27.917240 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=OPTIONS
  I1204 07:28:27.935919 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1204 07:28:27.935977 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=PATCH
  I1204 07:28:27.939907 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1204 07:28:27.939984 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=POST
  I1204 07:28:27.943756 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1204 07:28:27.943814 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=PUT
  I1204 07:28:27.947704 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1204 07:28:27.947766 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=DELETE
  I1204 07:28:27.952952 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1204 07:28:27.953023 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1204 07:28:27.957782 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1204 07:28:27.957839 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=PATCH
  I1204 07:28:27.962864 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1204 07:28:27.962925 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=POST
  I1204 07:28:27.967239 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1204 07:28:27.967300 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=PUT
  I1204 07:28:27.971256 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1204 07:28:27.971328 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=GET
  I1204 07:28:27.974171 23 proxy.go:487] http.Client request:GET StatusCode:301
  I1204 07:28:27.974232 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=GET
  I1204 07:28:27.977802 23 proxy.go:487] http.Client request:GET StatusCode:301
  I1204 07:28:27.977849 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/pods/agnhost/proxy?method=HEAD
  I1204 07:28:27.981521 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1204 07:28:27.981587 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4339/services/e2e-proxy-test-service/proxy?method=HEAD
  I1204 07:28:27.985411 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1204 07:28:27.985639 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4339" for this suite. @ 12/04/24 07:28:27.996
• [2.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/04/24 07:28:28.01
  I1204 07:28:28.010837 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 07:28:28.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:28:28.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:28:28.027
  STEP: create the rc @ 12/04/24 07:28:28.093
  W1204 07:28:28.099649      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1204 07:28:28.203073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:29.203720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:30.204140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:31.204877      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:32.205587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:33.206033      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/04/24 07:28:34.105
  STEP: wait for the rc to be deleted @ 12/04/24 07:28:34.113
  E1204 07:28:34.207035      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:35.207529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:36.208007      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:37.208159      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:38.208415      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/04/24 07:28:39.119
  E1204 07:28:39.208957      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:40.209130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:41.209362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:42.209598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:43.209754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:44.209994      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:45.210207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:46.210657      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:47.211097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:48.211567      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:49.212350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:50.212576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:51.212990      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:52.213425      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:53.213864      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:54.214719      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:55.214924      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:56.215293      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:57.215711      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:58.215896      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:28:59.216686      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:00.217096      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:01.217473      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:02.217880      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:03.218108      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:04.218924      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:05.219670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:06.219912      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:07.220203      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:08.220593      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/04/24 07:29:09.137
  E1204 07:29:09.221370      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:29:09.267244 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1204 07:29:09.267359 23 delete.go:95] Deleting pod "simpletest.rc-2xlzk" in namespace "gc-6182"
  I1204 07:29:09.281471 23 delete.go:95] Deleting pod "simpletest.rc-4p4cc" in namespace "gc-6182"
  I1204 07:29:09.298677 23 delete.go:95] Deleting pod "simpletest.rc-4pd2b" in namespace "gc-6182"
  I1204 07:29:09.312425 23 delete.go:95] Deleting pod "simpletest.rc-54dd8" in namespace "gc-6182"
  I1204 07:29:09.320936 23 delete.go:95] Deleting pod "simpletest.rc-5bz9m" in namespace "gc-6182"
  I1204 07:29:09.330302 23 delete.go:95] Deleting pod "simpletest.rc-5pghd" in namespace "gc-6182"
  I1204 07:29:09.339602 23 delete.go:95] Deleting pod "simpletest.rc-67tmd" in namespace "gc-6182"
  I1204 07:29:09.347834 23 delete.go:95] Deleting pod "simpletest.rc-6hjfj" in namespace "gc-6182"
  I1204 07:29:09.356135 23 delete.go:95] Deleting pod "simpletest.rc-6jqtr" in namespace "gc-6182"
  I1204 07:29:09.367258 23 delete.go:95] Deleting pod "simpletest.rc-6nmc7" in namespace "gc-6182"
  I1204 07:29:09.378126 23 delete.go:95] Deleting pod "simpletest.rc-7c5rw" in namespace "gc-6182"
  I1204 07:29:09.389081 23 delete.go:95] Deleting pod "simpletest.rc-7q6nj" in namespace "gc-6182"
  I1204 07:29:09.400096 23 delete.go:95] Deleting pod "simpletest.rc-7wm46" in namespace "gc-6182"
  I1204 07:29:09.409713 23 delete.go:95] Deleting pod "simpletest.rc-8b5z4" in namespace "gc-6182"
  I1204 07:29:09.420981 23 delete.go:95] Deleting pod "simpletest.rc-8c7cx" in namespace "gc-6182"
  I1204 07:29:09.429638 23 delete.go:95] Deleting pod "simpletest.rc-8cllb" in namespace "gc-6182"
  I1204 07:29:09.437434 23 delete.go:95] Deleting pod "simpletest.rc-8g2bp" in namespace "gc-6182"
  I1204 07:29:09.445511 23 delete.go:95] Deleting pod "simpletest.rc-96hqq" in namespace "gc-6182"
  I1204 07:29:09.463223 23 delete.go:95] Deleting pod "simpletest.rc-96mwz" in namespace "gc-6182"
  I1204 07:29:09.471876 23 delete.go:95] Deleting pod "simpletest.rc-97mth" in namespace "gc-6182"
  I1204 07:29:09.481448 23 delete.go:95] Deleting pod "simpletest.rc-97xlb" in namespace "gc-6182"
  I1204 07:29:09.488225 23 delete.go:95] Deleting pod "simpletest.rc-9h6j8" in namespace "gc-6182"
  I1204 07:29:09.505011 23 delete.go:95] Deleting pod "simpletest.rc-b8rz5" in namespace "gc-6182"
  I1204 07:29:09.516265 23 delete.go:95] Deleting pod "simpletest.rc-bc7xb" in namespace "gc-6182"
  I1204 07:29:09.539934 23 delete.go:95] Deleting pod "simpletest.rc-cg9rv" in namespace "gc-6182"
  I1204 07:29:09.548609 23 delete.go:95] Deleting pod "simpletest.rc-cs2cg" in namespace "gc-6182"
  I1204 07:29:09.559174 23 delete.go:95] Deleting pod "simpletest.rc-cx7hz" in namespace "gc-6182"
  I1204 07:29:09.569527 23 delete.go:95] Deleting pod "simpletest.rc-d5fxv" in namespace "gc-6182"
  I1204 07:29:09.577692 23 delete.go:95] Deleting pod "simpletest.rc-d5hv5" in namespace "gc-6182"
  I1204 07:29:09.588471 23 delete.go:95] Deleting pod "simpletest.rc-dgdcm" in namespace "gc-6182"
  I1204 07:29:09.599112 23 delete.go:95] Deleting pod "simpletest.rc-dpmw8" in namespace "gc-6182"
  I1204 07:29:09.610488 23 delete.go:95] Deleting pod "simpletest.rc-dvj5t" in namespace "gc-6182"
  I1204 07:29:09.617726 23 delete.go:95] Deleting pod "simpletest.rc-dx7vv" in namespace "gc-6182"
  I1204 07:29:09.626390 23 delete.go:95] Deleting pod "simpletest.rc-f6nxx" in namespace "gc-6182"
  I1204 07:29:09.635147 23 delete.go:95] Deleting pod "simpletest.rc-fhh28" in namespace "gc-6182"
  I1204 07:29:09.644973 23 delete.go:95] Deleting pod "simpletest.rc-fkpzs" in namespace "gc-6182"
  I1204 07:29:09.664286 23 delete.go:95] Deleting pod "simpletest.rc-fqlts" in namespace "gc-6182"
  I1204 07:29:09.678736 23 delete.go:95] Deleting pod "simpletest.rc-fsk6h" in namespace "gc-6182"
  I1204 07:29:09.690547 23 delete.go:95] Deleting pod "simpletest.rc-gdhk4" in namespace "gc-6182"
  I1204 07:29:09.701584 23 delete.go:95] Deleting pod "simpletest.rc-gk7fk" in namespace "gc-6182"
  I1204 07:29:09.708836 23 delete.go:95] Deleting pod "simpletest.rc-gk7rk" in namespace "gc-6182"
  I1204 07:29:09.720091 23 delete.go:95] Deleting pod "simpletest.rc-gnbj5" in namespace "gc-6182"
  I1204 07:29:09.727847 23 delete.go:95] Deleting pod "simpletest.rc-gwnpg" in namespace "gc-6182"
  I1204 07:29:09.737588 23 delete.go:95] Deleting pod "simpletest.rc-h2t9h" in namespace "gc-6182"
  I1204 07:29:09.752079 23 delete.go:95] Deleting pod "simpletest.rc-h5cqq" in namespace "gc-6182"
  I1204 07:29:09.759559 23 delete.go:95] Deleting pod "simpletest.rc-h8wcc" in namespace "gc-6182"
  I1204 07:29:09.768296 23 delete.go:95] Deleting pod "simpletest.rc-h9xlq" in namespace "gc-6182"
  I1204 07:29:09.775447 23 delete.go:95] Deleting pod "simpletest.rc-hqqrx" in namespace "gc-6182"
  I1204 07:29:09.785609 23 delete.go:95] Deleting pod "simpletest.rc-j4twl" in namespace "gc-6182"
  I1204 07:29:09.793868 23 delete.go:95] Deleting pod "simpletest.rc-j6d96" in namespace "gc-6182"
  I1204 07:29:09.803218 23 delete.go:95] Deleting pod "simpletest.rc-jfr9g" in namespace "gc-6182"
  I1204 07:29:09.812224 23 delete.go:95] Deleting pod "simpletest.rc-k86vb" in namespace "gc-6182"
  I1204 07:29:09.819561 23 delete.go:95] Deleting pod "simpletest.rc-kqtjl" in namespace "gc-6182"
  I1204 07:29:09.829894 23 delete.go:95] Deleting pod "simpletest.rc-ksdkl" in namespace "gc-6182"
  I1204 07:29:09.842981 23 delete.go:95] Deleting pod "simpletest.rc-ktp66" in namespace "gc-6182"
  I1204 07:29:09.855986 23 delete.go:95] Deleting pod "simpletest.rc-lcj4s" in namespace "gc-6182"
  I1204 07:29:09.866138 23 delete.go:95] Deleting pod "simpletest.rc-lkvh9" in namespace "gc-6182"
  I1204 07:29:09.875733 23 delete.go:95] Deleting pod "simpletest.rc-llfv4" in namespace "gc-6182"
  I1204 07:29:09.887362 23 delete.go:95] Deleting pod "simpletest.rc-lmbmd" in namespace "gc-6182"
  I1204 07:29:09.897828 23 delete.go:95] Deleting pod "simpletest.rc-lplvq" in namespace "gc-6182"
  I1204 07:29:09.906339 23 delete.go:95] Deleting pod "simpletest.rc-mjsjs" in namespace "gc-6182"
  I1204 07:29:09.913989 23 delete.go:95] Deleting pod "simpletest.rc-mlj6c" in namespace "gc-6182"
  I1204 07:29:09.933217 23 delete.go:95] Deleting pod "simpletest.rc-mqq44" in namespace "gc-6182"
  I1204 07:29:09.984001 23 delete.go:95] Deleting pod "simpletest.rc-mstpw" in namespace "gc-6182"
  I1204 07:29:10.034517 23 delete.go:95] Deleting pod "simpletest.rc-mtzmh" in namespace "gc-6182"
  I1204 07:29:10.084588 23 delete.go:95] Deleting pod "simpletest.rc-n5hjn" in namespace "gc-6182"
  I1204 07:29:10.136167 23 delete.go:95] Deleting pod "simpletest.rc-nnssq" in namespace "gc-6182"
  I1204 07:29:10.184369 23 delete.go:95] Deleting pod "simpletest.rc-p98gb" in namespace "gc-6182"
  E1204 07:29:10.221916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:29:10.236718 23 delete.go:95] Deleting pod "simpletest.rc-phgkl" in namespace "gc-6182"
  I1204 07:29:10.282712 23 delete.go:95] Deleting pod "simpletest.rc-ppc7s" in namespace "gc-6182"
  I1204 07:29:10.332888 23 delete.go:95] Deleting pod "simpletest.rc-q77dx" in namespace "gc-6182"
  I1204 07:29:10.385681 23 delete.go:95] Deleting pod "simpletest.rc-qdt6v" in namespace "gc-6182"
  I1204 07:29:10.431127 23 delete.go:95] Deleting pod "simpletest.rc-qs7rp" in namespace "gc-6182"
  I1204 07:29:10.480951 23 delete.go:95] Deleting pod "simpletest.rc-qvsjf" in namespace "gc-6182"
  I1204 07:29:10.534484 23 delete.go:95] Deleting pod "simpletest.rc-rwq77" in namespace "gc-6182"
  I1204 07:29:10.583492 23 delete.go:95] Deleting pod "simpletest.rc-s6rxm" in namespace "gc-6182"
  I1204 07:29:10.645639 23 delete.go:95] Deleting pod "simpletest.rc-sjhgv" in namespace "gc-6182"
  I1204 07:29:10.683855 23 delete.go:95] Deleting pod "simpletest.rc-swbxc" in namespace "gc-6182"
  I1204 07:29:10.732190 23 delete.go:95] Deleting pod "simpletest.rc-sx9bn" in namespace "gc-6182"
  I1204 07:29:10.782328 23 delete.go:95] Deleting pod "simpletest.rc-t5j56" in namespace "gc-6182"
  I1204 07:29:10.832292 23 delete.go:95] Deleting pod "simpletest.rc-tc9f2" in namespace "gc-6182"
  I1204 07:29:10.883140 23 delete.go:95] Deleting pod "simpletest.rc-td2gc" in namespace "gc-6182"
  I1204 07:29:10.930597 23 delete.go:95] Deleting pod "simpletest.rc-tfklg" in namespace "gc-6182"
  I1204 07:29:10.994470 23 delete.go:95] Deleting pod "simpletest.rc-tsgrf" in namespace "gc-6182"
  I1204 07:29:11.034148 23 delete.go:95] Deleting pod "simpletest.rc-vc8rk" in namespace "gc-6182"
  I1204 07:29:11.080982 23 delete.go:95] Deleting pod "simpletest.rc-vgvk4" in namespace "gc-6182"
  I1204 07:29:11.132005 23 delete.go:95] Deleting pod "simpletest.rc-vm7s8" in namespace "gc-6182"
  I1204 07:29:11.186328 23 delete.go:95] Deleting pod "simpletest.rc-vqbhh" in namespace "gc-6182"
  E1204 07:29:11.222065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:29:11.231632 23 delete.go:95] Deleting pod "simpletest.rc-w277z" in namespace "gc-6182"
  I1204 07:29:11.279278 23 delete.go:95] Deleting pod "simpletest.rc-w2cxb" in namespace "gc-6182"
  I1204 07:29:11.331390 23 delete.go:95] Deleting pod "simpletest.rc-w5t8d" in namespace "gc-6182"
  I1204 07:29:11.382452 23 delete.go:95] Deleting pod "simpletest.rc-w9m9t" in namespace "gc-6182"
  I1204 07:29:11.434206 23 delete.go:95] Deleting pod "simpletest.rc-wk4w2" in namespace "gc-6182"
  I1204 07:29:11.483957 23 delete.go:95] Deleting pod "simpletest.rc-wpz9l" in namespace "gc-6182"
  I1204 07:29:11.533005 23 delete.go:95] Deleting pod "simpletest.rc-wxz47" in namespace "gc-6182"
  I1204 07:29:11.581798 23 delete.go:95] Deleting pod "simpletest.rc-x898f" in namespace "gc-6182"
  I1204 07:29:11.631964 23 delete.go:95] Deleting pod "simpletest.rc-xlhdd" in namespace "gc-6182"
  I1204 07:29:11.680803 23 delete.go:95] Deleting pod "simpletest.rc-xnxl9" in namespace "gc-6182"
  I1204 07:29:11.730820 23 delete.go:95] Deleting pod "simpletest.rc-zhg88" in namespace "gc-6182"
  I1204 07:29:11.781131 23 delete.go:95] Deleting pod "simpletest.rc-zlrjz" in namespace "gc-6182"
  I1204 07:29:11.832631 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6182" for this suite. @ 12/04/24 07:29:11.875
• [43.916 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 12/04/24 07:29:11.927
  I1204 07:29:11.927739 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:29:11.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:29:11.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:29:11.947
  STEP: creating all guestbook components @ 12/04/24 07:29:11.952
  I1204 07:29:11.952708 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1204 07:29:11.952917 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 create -f -'
  I1204 07:29:12.169847 23 builder.go:146] stderr: ""
  I1204 07:29:12.169926 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1204 07:29:12.170013 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1204 07:29:12.170203 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 create -f -'
  E1204 07:29:12.222722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:29:12.367728 23 builder.go:146] stderr: ""
  I1204 07:29:12.367797 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1204 07:29:12.367858 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1204 07:29:12.368004 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 create -f -'
  I1204 07:29:12.584067 23 builder.go:146] stderr: ""
  I1204 07:29:12.584144 23 builder.go:147] stdout: "service/frontend created\n"
  I1204 07:29:12.584306 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1204 07:29:12.584592 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 create -f -'
  I1204 07:29:12.733217 23 builder.go:146] stderr: ""
  I1204 07:29:12.733286 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1204 07:29:12.733406 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1204 07:29:12.733665 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 create -f -'
  I1204 07:29:12.863097 23 builder.go:146] stderr: ""
  I1204 07:29:12.863199 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1204 07:29:12.863306 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1204 07:29:12.863610 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 create -f -'
  I1204 07:29:13.000335 23 builder.go:146] stderr: ""
  I1204 07:29:13.000406 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/04/24 07:29:13
  I1204 07:29:13.000521 23 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E1204 07:29:13.223652      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:14.224195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:15.224809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:16.225271      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:17.225678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:29:18.051903 23 kubectl.go:2276] Waiting for frontend to serve content.
  I1204 07:29:18.065373 23 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1204 07:29:18.081225 23 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/04/24 07:29:18.092
  I1204 07:29:18.092389 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 delete --grace-period=0 --force -f -'
  I1204 07:29:18.206121 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:29:18.206182 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/04/24 07:29:18.206
  I1204 07:29:18.206378 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 delete --grace-period=0 --force -f -'
  E1204 07:29:18.225964      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:29:18.303282 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:29:18.303340 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/04/24 07:29:18.303
  I1204 07:29:18.303824 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 delete --grace-period=0 --force -f -'
  I1204 07:29:18.465737 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:29:18.465796 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/04/24 07:29:18.465
  I1204 07:29:18.466032 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 delete --grace-period=0 --force -f -'
  I1204 07:29:18.551372 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:29:18.551430 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/04/24 07:29:18.551
  I1204 07:29:18.551687 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 delete --grace-period=0 --force -f -'
  I1204 07:29:18.636317 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:29:18.636404 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/04/24 07:29:18.636
  I1204 07:29:18.636639 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-7227 delete --grace-period=0 --force -f -'
  I1204 07:29:18.727018 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:29:18.727114 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1204 07:29:18.727387 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7227" for this suite. @ 12/04/24 07:29:18.732
• [6.814 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 12/04/24 07:29:18.741
  I1204 07:29:18.741930 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 07:29:18.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:29:18.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:29:18.767
  I1204 07:29:18.771990 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  W1204 07:29:18.773380      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0042b3f40 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1204 07:29:19.226060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:20.226283      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:21.226691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1204 07:29:21.327489      23 warnings.go:70] unknown field "alpha"
  W1204 07:29:21.327534      23 warnings.go:70] unknown field "beta"
  W1204 07:29:21.327547      23 warnings.go:70] unknown field "delta"
  W1204 07:29:21.327558      23 warnings.go:70] unknown field "epsilon"
  W1204 07:29:21.327570      23 warnings.go:70] unknown field "gamma"
  I1204 07:29:21.877495 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2792" for this suite. @ 12/04/24 07:29:21.883
• [3.148 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/04/24 07:29:21.89
  I1204 07:29:21.890180 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename cronjob @ 12/04/24 07:29:21.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:29:21.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:29:21.908
  STEP: Creating a cronjob @ 12/04/24 07:29:21.912
  STEP: creating @ 12/04/24 07:29:21.912
  STEP: getting @ 12/04/24 07:29:21.919
  STEP: listing @ 12/04/24 07:29:21.922
  STEP: watching @ 12/04/24 07:29:21.926
  I1204 07:29:21.926284 23 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/04/24 07:29:21.928
  STEP: cluster-wide watching @ 12/04/24 07:29:21.931
  I1204 07:29:21.931542 23 cronjob.go:382] starting watch
  STEP: patching @ 12/04/24 07:29:21.933
  STEP: updating @ 12/04/24 07:29:21.945
  I1204 07:29:21.954905 23 cronjob.go:406] waiting for watch events with expected annotations
  I1204 07:29:21.954989 23 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/04/24 07:29:21.955
  STEP: updating /status @ 12/04/24 07:29:21.962
  STEP: get /status @ 12/04/24 07:29:21.971
  STEP: deleting @ 12/04/24 07:29:21.974
  STEP: deleting a collection @ 12/04/24 07:29:21.989
  I1204 07:29:21.998825 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1482" for this suite. @ 12/04/24 07:29:22.003
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 12/04/24 07:29:22.009
  I1204 07:29:22.009665 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption @ 12/04/24 07:29:22.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:29:22.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:29:22.029
  I1204 07:29:22.049286 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1204 07:29:22.227540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:23.228433      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:24.229391      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:25.229826      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:26.230175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:27.231070      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:28.232095      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:29.232503      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:30.233153      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:31.233630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:32.234060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:33.234541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:34.235566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:35.235971      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:36.236243      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:37.236640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:38.237744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:39.238438      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:40.239360      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:41.239833      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:42.240475      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:43.240918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:44.241608      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:45.242027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:46.242017      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:47.242510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:48.242769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:49.243268      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:50.243556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:51.243956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:52.244744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:53.245174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:54.246292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:55.246694      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:56.247407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:57.247948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:58.248404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:29:59.249009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:00.249795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:01.250275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:02.250561      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:03.251127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:04.251671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:05.252109      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:06.253192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:07.253555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:08.253776      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:09.254500      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:10.255663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:11.256076      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:12.256258      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:13.256677      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:14.257729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:15.258156      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:16.258649      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:17.259174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:18.260217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:19.260784      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:20.261558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:21.261988      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:22.057032 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/04/24 07:30:22.06
  I1204 07:30:22.088641 23 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1204 07:30:22.095612 23 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1204 07:30:22.122164 23 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1204 07:30:22.132572 23 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/04/24 07:30:22.132
  E1204 07:30:22.262215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:23.262672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/04/24 07:30:24.158
  E1204 07:30:24.263333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:25.263844      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:26.264814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:27.265298      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:28.256622 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4630" for this suite. @ 12/04/24 07:30:28.26
  E1204 07:30:28.265354      23 retrywatcher.go:131] "Watch failed" err="context canceled"
• [66.256 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/04/24 07:30:28.266
  I1204 07:30:28.266491 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename tables @ 12/04/24 07:30:28.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:28.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:28.286
  I1204 07:30:28.294736 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1454" for this suite. @ 12/04/24 07:30:28.361
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/04/24 07:30:28.367
  I1204 07:30:28.367919 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:30:28.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:28.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:28.386
  STEP: Creating a pod to test downward api env vars @ 12/04/24 07:30:28.39
  E1204 07:30:29.266290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:30.267141      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:31.267523      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:32.267886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:30:32.414
  I1204 07:30:32.418095 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-2f4ac8a0-4d8a-4ea3-9141-9a7fae11d73c container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:30:32.44
  I1204 07:30:32.459228 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2246" for this suite. @ 12/04/24 07:30:32.464
• [4.102 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 12/04/24 07:30:32.47
  I1204 07:30:32.470125 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:30:32.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:32.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:32.487
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6317 @ 12/04/24 07:30:32.492
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/04/24 07:30:32.509
  STEP: creating service externalsvc in namespace services-6317 @ 12/04/24 07:30:32.509
  STEP: creating replication controller externalsvc in namespace services-6317 @ 12/04/24 07:30:32.525
  I1204 07:30:32.535439      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6317, replica count: 2
  E1204 07:30:33.268643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:34.269614      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:35.270080      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:35.586710      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/04/24 07:30:35.591
  I1204 07:30:35.622385 23 resource.go:361] Creating new exec pod
  E1204 07:30:36.270639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:37.271136      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:37.636140 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-6317 exec execpodcfbk4 -- /bin/sh -x -c nslookup nodeport-service.services-6317.svc.cluster.local'
  I1204 07:30:37.834839 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-6317.svc.cluster.local\n"
  I1204 07:30:37.834927 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6317.svc.cluster.local\tcanonical name = externalsvc.services-6317.svc.cluster.local.\nName:\texternalsvc.services-6317.svc.cluster.local\nAddress: 10.105.155.154\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6317, will wait for the garbage collector to delete the pods @ 12/04/24 07:30:37.835
  I1204 07:30:37.895215 23 resources.go:139] Deleting ReplicationController externalsvc took: 5.971821ms
  I1204 07:30:37.996289 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.067436ms
  E1204 07:30:38.271903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:39.272480      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:40.273289      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:41.273416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:41.315541 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1204 07:30:41.328940 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6317" for this suite. @ 12/04/24 07:30:41.333
• [8.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/04/24 07:30:41.338
  I1204 07:30:41.338493 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:30:41.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:41.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:41.36
  STEP: Creating projection with secret that has name projected-secret-test-map-d0dbcefe-2b83-4c7d-bf25-e221a2bacdc6 @ 12/04/24 07:30:41.365
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:30:41.37
  E1204 07:30:42.273725      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:43.274021      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:44.274780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:45.275223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:30:45.392
  I1204 07:30:45.400788 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-6c96f284-c550-42f4-bb0e-249790a515f8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:30:45.407
  I1204 07:30:45.419603 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3900" for this suite. @ 12/04/24 07:30:45.424
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/04/24 07:30:45.431
  I1204 07:30:45.431353 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replicaset @ 12/04/24 07:30:45.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:45.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:45.448
  STEP: Create a Replicaset @ 12/04/24 07:30:45.456
  STEP: Verify that the required pods have come up. @ 12/04/24 07:30:45.463
  I1204 07:30:45.467628 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1204 07:30:46.276135      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:47.276672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:48.276974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:49.277845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:50.278275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:50.471635 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/04/24 07:30:50.471
  STEP: Getting /status @ 12/04/24 07:30:50.471
  I1204 07:30:50.475800 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/04/24 07:30:50.475
  I1204 07:30:50.485392 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/04/24 07:30:50.485
  I1204 07:30:50.487930 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1204 07:30:50.488137 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.488325 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.488635 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.488735 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6904 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1204 07:30:50.488771 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/04/24 07:30:50.488
  I1204 07:30:50.488838 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1204 07:30:50.493550 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/04/24 07:30:50.493
  I1204 07:30:50.495914 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1204 07:30:50.496129 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.496279 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.496546 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.496629 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6904 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 07:30:50.496795 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1204 07:30:50.496845 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6904 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1204 07:30:50.496870 23 replica_set.go:729] Replicaset test-rs has a patched status
  I1204 07:30:50.497021 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6904" for this suite. @ 12/04/24 07:30:50.5
• [5.074 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/04/24 07:30:50.505
  I1204 07:30:50.505876 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 07:30:50.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:50.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:50.523
  STEP: creating a Deployment @ 12/04/24 07:30:50.531
  STEP: waiting for Deployment to be created @ 12/04/24 07:30:50.536
  STEP: waiting for all Replicas to be Ready @ 12/04/24 07:30:50.538
  I1204 07:30:50.540721 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.540775 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.551231 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.551285 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.560505 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.560555 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.590751 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1204 07:30:50.590802 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1204 07:30:51.278678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:52.002535 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1204 07:30:52.002609 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1204 07:30:52.278961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:52.318023 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/04/24 07:30:52.318
  I1204 07:30:52.334065 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/04/24 07:30:52.334
  I1204 07:30:52.336075 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336123 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336161 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336184 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336212 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336230 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336382 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336433 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 0
  I1204 07:30:52.336561 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:52.336591 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:52.336615 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.336634 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.336656 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.336674 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.345223 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.345276 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.356707 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.356756 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:52.362669 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:52.362722 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:52.374048 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:52.374098 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  E1204 07:30:53.279211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:53.332210 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:53.332282 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:53.347029 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  STEP: listing Deployments @ 12/04/24 07:30:53.347
  I1204 07:30:53.349992 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/04/24 07:30:53.35
  I1204 07:30:53.370102 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/04/24 07:30:53.37
  I1204 07:30:53.380651 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:53.380751 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:53.394195 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:53.412517 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:53.423072 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1204 07:30:54.279352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:54.360072 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:54.371154 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:54.378190 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1204 07:30:54.392311 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1204 07:30:55.279605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:30:56.047276 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/04/24 07:30:56.063
  STEP: fetching the DeploymentStatus @ 12/04/24 07:30:56.074
  I1204 07:30:56.092722 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:56.092844 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:56.092897 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:56.093416 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:56.093496 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 1
  I1204 07:30:56.093531 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:56.093688 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:56.093919 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:56.093969 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 2
  I1204 07:30:56.094018 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-4863 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/04/24 07:30:56.094
  I1204 07:30:56.103073 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.103233 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.103300 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.103736 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.103928 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.104332 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.104431 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.104462 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.104587 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.104774 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.104807 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.105011 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.105048 23 deployment.go:475] observed event type MODIFIED
  I1204 07:30:56.109904 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1204 07:30:56.112907 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4863" for this suite. @ 12/04/24 07:30:56.117
• [5.617 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 12/04/24 07:30:56.123
  I1204 07:30:56.123741 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 07:30:56.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:30:56.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:30:56.141
  STEP: Counting existing ResourceQuota @ 12/04/24 07:30:56.145
  E1204 07:30:56.280327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:57.281410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:58.281960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:30:59.282910      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:00.283426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/04/24 07:31:01.149
  STEP: Ensuring resource quota status is calculated @ 12/04/24 07:31:01.155
  E1204 07:31:01.283689      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:02.284440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 12/04/24 07:31:03.16
  STEP: Ensuring resource quota status captures replicaset creation @ 12/04/24 07:31:03.174
  E1204 07:31:03.285558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:04.286439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 12/04/24 07:31:05.18
  STEP: Ensuring resource quota status released usage @ 12/04/24 07:31:05.186
  E1204 07:31:05.287036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:06.287435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:07.193677 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6947" for this suite. @ 12/04/24 07:31:07.199
• [11.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/04/24 07:31:07.206
  I1204 07:31:07.206711 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:31:07.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:07.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:07.23
  STEP: Creating configMap with name projected-configmap-test-volume-map-11e15926-7cd4-49ba-ae90-e42c6fecc7ff @ 12/04/24 07:31:07.234
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:31:07.239
  E1204 07:31:07.287784      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:08.287949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:09.288516      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:10.289614      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:31:11.266
  I1204 07:31:11.270993 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-0a551e2a-bc83-4ce3-98fc-50147ce9053f container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:31:11.279
  E1204 07:31:11.290414      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:11.295584 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4282" for this suite. @ 12/04/24 07:31:11.3
• [4.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/04/24 07:31:11.308
  I1204 07:31:11.308333 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:31:11.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:11.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:11.327
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:31:11.331
  E1204 07:31:12.291451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:13.291700      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:14.292166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:15.292591      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:31:15.358
  I1204 07:31:15.362353 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-1a2904d0-b4cf-4327-936f-1d3e05abb9e9 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:31:15.37
  I1204 07:31:15.383598 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9195" for this suite. @ 12/04/24 07:31:15.389
• [4.089 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/04/24 07:31:15.397
  I1204 07:31:15.397199 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 07:31:15.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:15.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:15.428
  STEP: Creating a pod to test substitution in volume subpath @ 12/04/24 07:31:15.432
  E1204 07:31:16.293264      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:17.293670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:18.293906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:19.294820      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:31:19.458
  I1204 07:31:19.462562 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-d3cccbcd-9d1c-4fa5-985b-0ca1d67f73f1 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:31:19.469
  I1204 07:31:19.488096 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5387" for this suite. @ 12/04/24 07:31:19.493
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 12/04/24 07:31:19.499
  I1204 07:31:19.499340 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:31:19.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:19.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:19.518
  STEP: Setting up server cert @ 12/04/24 07:31:19.616
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:31:19.943
  STEP: Deploying the webhook pod @ 12/04/24 07:31:19.954
  STEP: Wait for the deployment to be ready @ 12/04/24 07:31:19.967
  I1204 07:31:19.975437 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:31:20.295884      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:21.296410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:31:21.989
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:31:22.005
  E1204 07:31:22.297356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:23.006334 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/04/24 07:31:23.016
  STEP: create a pod that should be denied by the webhook @ 12/04/24 07:31:23.041
  STEP: create a pod that causes the webhook to hang @ 12/04/24 07:31:23.061
  E1204 07:31:23.298239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:24.299673      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:25.300147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:26.300695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:27.300813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:28.301323      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:29.301443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:30.301639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:31.301909      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:32.302086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 12/04/24 07:31:33.07
  STEP: create a configmap that should be admitted by the webhook @ 12/04/24 07:31:33.084
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/04/24 07:31:33.098
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/04/24 07:31:33.11
  STEP: create a namespace that bypass the webhook @ 12/04/24 07:31:33.117
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/04/24 07:31:33.133
  I1204 07:31:33.182418 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4486" for this suite. @ 12/04/24 07:31:33.186
  STEP: Destroying namespace "webhook-markers-3308" for this suite. @ 12/04/24 07:31:33.192
  STEP: Destroying namespace "exempted-namespace-8976" for this suite. @ 12/04/24 07:31:33.196
• [13.702 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 12/04/24 07:31:33.203
  I1204 07:31:33.203355 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubelet-test @ 12/04/24 07:31:33.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:33.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:33.237
  STEP: Waiting for pod completion @ 12/04/24 07:31:33.254
  E1204 07:31:33.302575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:34.303233      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:35.303699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:36.304202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:37.277859 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2880" for this suite. @ 12/04/24 07:31:37.283
• [4.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/04/24 07:31:37.291
  I1204 07:31:37.291568 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replicaset @ 12/04/24 07:31:37.293
  E1204 07:31:37.304217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:37.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:37.312
  I1204 07:31:37.331601 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1204 07:31:38.305162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:39.305932      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:40.306367      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:41.306824      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:42.307407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:42.335044 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/04/24 07:31:42.335
  STEP: Scaling up "test-rs" replicaset @ 12/04/24 07:31:42.335
  I1204 07:31:42.346122 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/04/24 07:31:42.346
  I1204 07:31:42.354654 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5066 with ReadyReplicas 1, AvailableReplicas 1
  I1204 07:31:42.361546 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5066 with ReadyReplicas 1, AvailableReplicas 1
  I1204 07:31:42.370345 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5066 with ReadyReplicas 1, AvailableReplicas 1
  I1204 07:31:42.386350 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5066 with ReadyReplicas 1, AvailableReplicas 1
  I1204 07:31:43.160999 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-5066 with ReadyReplicas 2, AvailableReplicas 2
  E1204 07:31:43.308441      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:43.494351 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-5066 with ReadyReplicas 3 found true
  I1204 07:31:43.494612 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5066" for this suite. @ 12/04/24 07:31:43.499
• [6.213 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/04/24 07:31:43.504
  I1204 07:31:43.505011 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:31:43.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:43.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:43.522
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:31:43.527
  E1204 07:31:44.308893      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:45.309603      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:46.310034      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:47.310524      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:31:47.55
  I1204 07:31:47.554603 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-6f0208dc-9154-44ca-a9b6-7b3e86f7e312 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:31:47.561
  I1204 07:31:47.576977 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6905" for this suite. @ 12/04/24 07:31:47.582
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/04/24 07:31:47.588
  I1204 07:31:47.588349 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 07:31:47.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:47.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:47.618
  STEP: creating a Deployment @ 12/04/24 07:31:47.625
  I1204 07:31:47.625969 23 deployment.go:507] Creating simple deployment test-deployment-w8f8v
  I1204 07:31:47.639084 23 deployment.go:222] deployment "test-deployment-w8f8v" doesn't have the required revision set
  E1204 07:31:48.310965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:49.311260      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Getting /status @ 12/04/24 07:31:49.656
  I1204 07:31:49.662402 23 deployment.go:532] Deployment test-deployment-w8f8v has Conditions: [{Available True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8f8v-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/04/24 07:31:49.662
  I1204 07:31:49.675122 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 7, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 31, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 7, 31, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 31, 47, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-w8f8v-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/04/24 07:31:49.675
  I1204 07:31:49.678340 23 deployment.go:579] Observed &Deployment event: ADDED
  I1204 07:31:49.678423 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8f8v-f4dbbbf74"}
  I1204 07:31:49.678690 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1204 07:31:49.678754 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8f8v-f4dbbbf74"}
  I1204 07:31:49.678782 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1204 07:31:49.678963 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1204 07:31:49.679026 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1204 07:31:49.679054 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-w8f8v-f4dbbbf74" is progressing.}
  I1204 07:31:49.679221 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1204 07:31:49.679272 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1204 07:31:49.679300 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8f8v-f4dbbbf74" has successfully progressed.}
  I1204 07:31:49.679555 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1204 07:31:49.679615 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1204 07:31:49.679642 23 deployment.go:575] Observed Deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8f8v-f4dbbbf74" has successfully progressed.}
  I1204 07:31:49.679673 23 deployment.go:572] Found Deployment test-deployment-w8f8v in namespace deployment-235 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 07:31:49.679715 23 deployment.go:583] Deployment test-deployment-w8f8v has an updated status
  STEP: patching the Statefulset Status @ 12/04/24 07:31:49.679
  I1204 07:31:49.679781 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1204 07:31:49.688645 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/04/24 07:31:49.688
  I1204 07:31:49.691983 23 deployment.go:616] Observed &Deployment event: ADDED
  I1204 07:31:49.692084 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8f8v-f4dbbbf74"}
  I1204 07:31:49.692271 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1204 07:31:49.692334 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w8f8v-f4dbbbf74"}
  I1204 07:31:49.692362 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1204 07:31:49.692539 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1204 07:31:49.692620 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1204 07:31:49.692654 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:47 +0000 UTC 2024-12-04 07:31:47 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-w8f8v-f4dbbbf74" is progressing.}
  I1204 07:31:49.692828 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1204 07:31:49.692870 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1204 07:31:49.692895 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8f8v-f4dbbbf74" has successfully progressed.}
  I1204 07:31:49.693061 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1204 07:31:49.693113 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1204 07:31:49.693140 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-04 07:31:48 +0000 UTC 2024-12-04 07:31:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w8f8v-f4dbbbf74" has successfully progressed.}
  I1204 07:31:49.693162 23 deployment.go:612] Observed deployment test-deployment-w8f8v in namespace deployment-235 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1204 07:31:49.693339 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1204 07:31:49.693382 23 deployment.go:609] Found deployment test-deployment-w8f8v in namespace deployment-235 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1204 07:31:49.693409 23 deployment.go:620] Deployment test-deployment-w8f8v has a patched status
  I1204 07:31:49.697245 23 deployment.go:633] Deployment "test-deployment-w8f8v":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-w8f8v",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-235",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82fcade5-64cb-4bbd-93dd-796e4e46c450",
      ResourceVersion: (string) (len=5) "27582",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894309,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-w8f8v-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 07:31:49.750434 23 deployment.go:39] New ReplicaSet "test-deployment-w8f8v-f4dbbbf74" of Deployment "test-deployment-w8f8v":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-w8f8v-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-235",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "575becb8-bd88-44ab-bd67-a6e15285526b",
      ResourceVersion: (string) (len=5) "27545",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-w8f8v",
          UID: (types.UID) (len=36) "82fcade5-64cb-4bbd-93dd-796e4e46c450",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 38 32 66  |k:{\"uid\":\"82f|
              00000120  63 61 64 65 35 2d 36 34  63 62 2d 34 62 62 64 2d  |cade5-64cb-4bbd-|
              00000130  39 33 64 64 2d 37 39 36  65 34 65 34 36 63 34 35  |93dd-796e4e46c45|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 07:31:49.759204 23 deployment.go:67] Pod "test-deployment-w8f8v-f4dbbbf74-69hms" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-w8f8v-f4dbbbf74-69hms",
      GenerateName: (string) (len=32) "test-deployment-w8f8v-f4dbbbf74-",
      Namespace: (string) (len=14) "deployment-235",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b5c0793-3746-4cd5-83d6-1028d5a62312",
      ResourceVersion: (string) (len=5) "27544",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-w8f8v-f4dbbbf74",
          UID: (types.UID) (len=36) "575becb8-bd88-44ab-bd67-a6e15285526b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 37 35 62 65 63 62  38 2d 62 64 38 38 2d 34  |"575becb8-bd88-4|
              000000a0  34 61 62 2d 62 64 36 37  2d 61 36 65 31 35 32 38  |4ab-bd67-a6e1528|
              000000b0  35 35 32 36 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5526b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 32 5c 22 7d 22 3a 7b  |.244.1.132\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9d8lf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9d8lf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894308,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894307,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894307,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868894308,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://15e987156bde6fe12b0d56087bfc7475cdce534b0df542b5f3e75b9cf8456b35",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9d8lf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 07:31:49.764318 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-235" for this suite. @ 12/04/24 07:31:49.77
• [2.189 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 12/04/24 07:31:49.777
  I1204 07:31:49.777718 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pv @ 12/04/24 07:31:49.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:49.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:49.796
  STEP: Creating initial PV and PVC @ 12/04/24 07:31:49.8
  I1204 07:31:49.800702 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2239" @ 12/04/24 07:31:49.813
  STEP: Listing PVCs in namespace "pv-2239" @ 12/04/24 07:31:49.817
  STEP: Patching the PV "pv-2239-sldxm" @ 12/04/24 07:31:49.822
  STEP: Patching the PVC "pvc-28jqg" @ 12/04/24 07:31:49.866
  STEP: Getting PV "pv-2239-sldxm" @ 12/04/24 07:31:49.877
  STEP: Getting PVC "pvc-28jqg" @ 12/04/24 07:31:49.88
  STEP: Deleting PVC "pvc-28jqg" @ 12/04/24 07:31:49.884
  STEP: Confirm deletion of PVC "pvc-28jqg" @ 12/04/24 07:31:49.892
  E1204 07:31:50.311575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:51.312006      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2239-sldxm" @ 12/04/24 07:31:51.901
  STEP: Confirm deletion of PV "pv-2239-sldxm" @ 12/04/24 07:31:51.909
  E1204 07:31:52.312286      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:53.312809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 12/04/24 07:31:53.917
  I1204 07:31:53.917761 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2239-htlhd" @ 12/04/24 07:31:53.927
  STEP: Updating the PVC "pvc-ctrrt" @ 12/04/24 07:31:53.937
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-ctrrt=updated" @ 12/04/24 07:31:53.946
  STEP: Deleting PVC "pvc-ctrrt" via DeleteCollection @ 12/04/24 07:31:53.949
  STEP: Confirm deletion of PVC "pvc-ctrrt" @ 12/04/24 07:31:53.956
  E1204 07:31:54.313820      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:55.314269      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-2239-htlhd" via DeleteCollection @ 12/04/24 07:31:55.963
  STEP: Confirm deletion of PV "pv-2239-htlhd" @ 12/04/24 07:31:55.971
  E1204 07:31:56.314513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:57.314921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:31:57.981077 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1204 07:31:57.981167 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-ctrrt"
  I1204 07:31:57.985190 23 pv.go:193] Deleting PersistentVolume "pv-2239-htlhd"
  I1204 07:31:57.988914 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2239" for this suite. @ 12/04/24 07:31:57.994
• [8.222 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/04/24 07:31:58
  I1204 07:31:58.000149 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:31:58.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:31:58.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:31:58.019
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:31:58.023
  E1204 07:31:58.316010      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:31:59.316152      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:00.316856      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:01.317311      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:32:02.048
  I1204 07:32:02.052596 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-a0ac5fb6-3144-4d83-ae36-41a25654df44 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:32:02.06
  I1204 07:32:02.074199 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2314" for this suite. @ 12/04/24 07:32:02.079
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 12/04/24 07:32:02.085
  I1204 07:32:02.085706 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:32:02.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:32:02.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:32:02.109
  STEP: create deployment with httpd image @ 12/04/24 07:32:02.113
  I1204 07:32:02.113939 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6813 create -f -'
  I1204 07:32:02.250294 23 builder.go:146] stderr: ""
  I1204 07:32:02.250356 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/04/24 07:32:02.25
  I1204 07:32:02.250511 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6813 diff -f -'
  E1204 07:32:02.318140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:02.429743 23 builder.go:135] rc: 1
  I1204 07:32:02.429896 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-6813 delete -f -'
  I1204 07:32:02.516234 23 builder.go:146] stderr: ""
  I1204 07:32:02.516292 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1204 07:32:02.516513 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6813" for this suite. @ 12/04/24 07:32:02.521
• [0.441 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/04/24 07:32:02.527
  I1204 07:32:02.527047 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 07:32:02.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:32:02.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:32:02.545
  STEP: Creating pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151 @ 12/04/24 07:32:02.55
  E1204 07:32:03.318609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:04.318930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 07:32:04.568
  I1204 07:32:04.572790 23 container_probe.go:1749] Initial restart count of pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 is 0
  I1204 07:32:04.576861 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:05.319878      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:06.320303      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:06.582412 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:07.321510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:08.322199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:08.588251 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:09.323234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:10.323760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:10.594943 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:11.323927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:12.324382      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:12.600799 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:13.324604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:14.325529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:14.606613 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:15.326345      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:16.326831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:16.612777 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:17.327918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:18.328379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:18.617969 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:19.328824      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:20.329722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:20.623625 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:21.330401      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:22.331302      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:22.628599 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:23.331532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:24.331816      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:24.635364 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  I1204 07:32:24.635447 23 container_probe.go:1763] Restart count of pod container-probe-8151/liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 is now 1 (20.062592797s elapsed)
  E1204 07:32:25.332092      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:26.332272      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:26.641290 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:27.333065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:28.333504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:28.647863 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:29.333599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:30.334100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:30.654241 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:31.335230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:32.335683      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:32.661420 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:33.336681      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:34.337080      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:34.668812 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:35.337341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:36.337556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:36.674590 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:37.338380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:38.339378      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:38.680033 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:39.339450      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:40.339736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:40.685334 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:41.339974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:42.340390      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:42.691592 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:43.340781      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:44.341267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:44.697375 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  I1204 07:32:44.697463 23 container_probe.go:1763] Restart count of pod container-probe-8151/liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 is now 2 (40.124608808s elapsed)
  E1204 07:32:45.342084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:46.342543      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:46.702997 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:47.342780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:48.343289      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:48.708893 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:49.343710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:50.343953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:50.714564 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:51.344232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:52.344634      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:52.720490 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:53.345586      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:54.345801      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:54.729020 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:55.346854      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:56.347129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:56.734782 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:57.347264      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:32:58.348265      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:32:58.739268 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:32:59.349166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:00.349609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:00.744633 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:01.349782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:02.350036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:02.749635 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:03.350751      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:04.350888      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:04.756139 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  I1204 07:33:04.756230 23 container_probe.go:1763] Restart count of pod container-probe-8151/liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 is now 3 (1m0.1833747s elapsed)
  E1204 07:33:05.351931      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:06.352389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:06.762434 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:07.353413      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:08.354386      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:08.768695 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:09.354450      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:10.354891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:10.775285 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:11.354953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:12.355366      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:12.780580 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:13.355515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:14.355739      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:14.786984 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:15.356915      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:16.357427      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:16.792331 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:17.358001      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:18.358948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:18.797847 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:19.359489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:20.359944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:20.803835 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:21.360378      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:22.360835      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:22.808844 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:23.360884      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:24.361357      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:24.814606 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  I1204 07:33:24.814679 23 container_probe.go:1763] Restart count of pod container-probe-8151/liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 is now 4 (1m20.241825598s elapsed)
  E1204 07:33:25.362438      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:26.363304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:26.820275 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:27.363763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:28.364761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:28.826141 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:29.364837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:30.365267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:30.832155 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:31.365732      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:32.366340      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:32.837670 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:33.367557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:34.367992      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:34.844282 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:35.369157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:36.369577      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:36.850930 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:37.370535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:38.371361      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:38.856217 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:39.371872      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:40.372355      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:40.862340 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:41.373194      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:42.373672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:42.867193 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:43.374429      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:44.374854      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:44.872667 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:45.375203      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:46.375938      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:46.877119 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:47.376946      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:48.377263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:48.883101 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:49.377610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:50.378055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:50.888804 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:51.378378      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:52.378799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:52.894398 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:53.379632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:54.380046      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:54.900251 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:55.381022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:56.381448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:56.905638 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:57.382316      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:33:58.383195      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:33:58.911433 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:33:59.384178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:00.384611      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:00.916939 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:01.385695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:02.386127      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:02.923846 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:03.386938      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:04.387330      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:04.930225 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:05.387699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:06.388140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:06.935839 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:07.388334      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:08.389317      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:08.940955 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:09.389521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:10.389968      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:10.946480 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:11.390519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:12.390917      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:12.950908 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:13.391877      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:14.392283      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:14.956741 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:15.392705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:16.393106      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:16.961683 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:17.393211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:18.394115      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:18.966730 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:19.394326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:20.395033      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:20.972004 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:21.395587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:22.396027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:22.977500 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  E1204 07:34:23.396242      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:24.396644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:24.984249 23 container_probe.go:1759] Get pod liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 in namespace container-probe-8151
  I1204 07:34:24.984332 23 container_probe.go:1763] Restart count of pod container-probe-8151/liveness-2c5e0727-a0df-4cc1-aa0a-3d35c2895196 is now 5 (2m20.411478094s elapsed)
  STEP: deleting the pod @ 12/04/24 07:34:24.984
  I1204 07:34:24.996519 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8151" for this suite. @ 12/04/24 07:34:25.001
• [142.481 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/04/24 07:34:25.008
  I1204 07:34:25.008169 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename namespaces @ 12/04/24 07:34:25.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:25.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:25.025
  STEP: Read namespace status @ 12/04/24 07:34:25.03
  I1204 07:34:25.033817 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/04/24 07:34:25.033
  I1204 07:34:25.040753 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/04/24 07:34:25.04
  I1204 07:34:25.051449 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1204 07:34:25.051748 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8241" for this suite. @ 12/04/24 07:34:25.101
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/04/24 07:34:25.109
  I1204 07:34:25.109369 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename security-context-test @ 12/04/24 07:34:25.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:25.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:25.128
  E1204 07:34:25.397548      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:26.398294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:27.398970      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:28.398961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:29.177066 23 security_context.go:538] Got logs for pod "busybox-privileged-false-47e27a21-0695-4160-971c-eeac42db4f45": "ip: RTNETLINK answers: Operation not permitted\n"
  I1204 07:34:29.177501 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6924" for this suite. @ 12/04/24 07:34:29.183
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/04/24 07:34:29.191
  I1204 07:34:29.191318 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replication-controller @ 12/04/24 07:34:29.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:29.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:29.212
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/04/24 07:34:29.216
  E1204 07:34:29.399691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:30.400759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 12/04/24 07:34:31.236
  STEP: Then the orphan pod is adopted @ 12/04/24 07:34:31.242
  E1204 07:34:31.401827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:32.251157 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9671" for this suite. @ 12/04/24 07:34:32.256
• [3.073 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 12/04/24 07:34:32.264
  I1204 07:34:32.264112 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:34:32.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:32.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:32.285
  STEP: creating the pod @ 12/04/24 07:34:32.29
  I1204 07:34:32.290688 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 create -f -'
  E1204 07:34:32.402228      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:32.478369 23 builder.go:146] stderr: ""
  I1204 07:34:32.478452 23 builder.go:147] stdout: "pod/pause created\n"
  E1204 07:34:33.403705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:34.404325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/04/24 07:34:34.489
  I1204 07:34:34.489437 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 label pods pause testing-label=testing-label-value'
  I1204 07:34:34.595720 23 builder.go:146] stderr: ""
  I1204 07:34:34.595968 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/04/24 07:34:34.596
  I1204 07:34:34.596104 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 get pod pause -L testing-label'
  I1204 07:34:34.684056 23 builder.go:146] stderr: ""
  I1204 07:34:34.684144 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/04/24 07:34:34.684
  I1204 07:34:34.684283 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 label pods pause testing-label-'
  I1204 07:34:34.777105 23 builder.go:146] stderr: ""
  I1204 07:34:34.777240 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/04/24 07:34:34.777
  I1204 07:34:34.777407 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 get pod pause -L testing-label'
  I1204 07:34:34.873920 23 builder.go:146] stderr: ""
  I1204 07:34:34.874000 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/04/24 07:34:34.874
  I1204 07:34:34.874313 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 delete --grace-period=0 --force -f -'
  I1204 07:34:34.973305 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:34:34.973391 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1204 07:34:34.973534 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 get rc,svc -l name=pause --no-headers'
  I1204 07:34:35.073193 23 builder.go:146] stderr: "No resources found in kubectl-1044 namespace.\n"
  I1204 07:34:35.073267 23 builder.go:147] stdout: ""
  I1204 07:34:35.073378 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1044 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1204 07:34:35.154981 23 builder.go:146] stderr: ""
  I1204 07:34:35.155078 23 builder.go:147] stdout: ""
  I1204 07:34:35.155329 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1044" for this suite. @ 12/04/24 07:34:35.16
• [2.902 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 12/04/24 07:34:35.167
  I1204 07:34:35.167430 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:34:35.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:35.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:35.186
  STEP: Setting up server cert @ 12/04/24 07:34:35.283
  E1204 07:34:35.405162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:34:35.444
  STEP: Deploying the webhook pod @ 12/04/24 07:34:35.455
  STEP: Wait for the deployment to be ready @ 12/04/24 07:34:35.469
  I1204 07:34:35.477667 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1204 07:34:36.406446      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:37.407102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:34:37.489
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:34:37.502
  E1204 07:34:38.408285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:38.503801 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/04/24 07:34:38.512
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/04/24 07:34:38.536
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/04/24 07:34:38.548
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/04/24 07:34:38.559
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/04/24 07:34:38.569
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/04/24 07:34:38.577
  I1204 07:34:38.622235 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4376" for this suite. @ 12/04/24 07:34:38.626
  STEP: Destroying namespace "webhook-markers-3459" for this suite. @ 12/04/24 07:34:38.632
• [3.469 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/04/24 07:34:38.636
  I1204 07:34:38.636989 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:34:38.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:38.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:38.654
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:34:38.658
  E1204 07:34:39.408736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:40.409473      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:41.410229      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:42.410765      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:34:42.681
  I1204 07:34:42.684854 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-04314183-d775-468d-8cae-53d41459f110 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:34:42.69
  I1204 07:34:42.702242 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7063" for this suite. @ 12/04/24 07:34:42.707
• [4.077 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/04/24 07:34:42.713
  I1204 07:34:42.713751 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:34:42.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:42.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:42.732
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:34:42.736
  E1204 07:34:43.411292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:44.411754      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:45.412166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:46.412631      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:34:46.763
  I1204 07:34:46.767936 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-0c30b582-5153-40a4-bcf6-a12102249c97 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:34:46.775
  I1204 07:34:46.790204 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9449" for this suite. @ 12/04/24 07:34:46.795
• [4.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/04/24 07:34:46.801
  I1204 07:34:46.801637 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:34:46.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:34:46.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:34:46.822
  STEP: Creating service test in namespace statefulset-2027 @ 12/04/24 07:34:46.826
  STEP: Creating a new StatefulSet @ 12/04/24 07:34:46.831
  I1204 07:34:46.842591 23 wait.go:40] Found 0 stateful pods, waiting for 3
  E1204 07:34:47.413616      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:48.414094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:49.414617      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:50.415082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:51.415500      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:52.415928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:53.416743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:54.417164      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:55.417576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:56.418007      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:34:56.846105 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:34:56.846189 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:34:56.846227 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:34:56.858392 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-2027 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 07:34:57.066792 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 07:34:57.066865 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 07:34:57.066894 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1204 07:34:57.418815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:58.419702      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:34:59.420163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:00.420600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:01.421070      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:02.421840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:03.422763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:04.423173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:05.423630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:06.424069      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/04/24 07:35:07.077
  I1204 07:35:07.088806 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/04/24 07:35:07.088
  E1204 07:35:07.425103      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:08.426047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:09.426486      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:10.426909      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:11.427383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:12.427795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:13.428639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:14.429037      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:15.429480      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:16.429887      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 12/04/24 07:35:17.099
  I1204 07:35:17.103296 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-2027 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 07:35:17.291658 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 07:35:17.291739 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 07:35:17.291765 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1204 07:35:17.430138      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:18.431036      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:19.431515      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:20.431956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:21.432405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:22.433164      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:23.434052      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:24.434891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:25.435296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:26.435720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 12/04/24 07:35:27.312
  I1204 07:35:27.312397 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-2027 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1204 07:35:27.436298      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:35:27.531436 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 07:35:27.531526 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 07:35:27.531587 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1204 07:35:28.437186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:29.437636      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:30.438086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:31.438579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:32.439111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:33.439955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:34.440434      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:35.440911      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:36.441600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:37.442334      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:35:37.552142 23 statefulset.go:2507] Updating stateful set ss2
  E1204 07:35:38.443332      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:39.443830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:40.444313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:41.445111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:42.445526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:43.446457      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:44.446922      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:45.447372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:46.447778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:47.448451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 12/04/24 07:35:47.563
  I1204 07:35:47.568359 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-2027 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 07:35:47.751851 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 07:35:47.751933 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 07:35:47.751966 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1204 07:35:48.450023      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:49.449935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:50.450139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:51.450572      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:52.451052      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:53.451965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:54.452339      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:55.452594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:56.453004      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:57.453418      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:35:57.769384 23 statefulset.go:138] Deleting all statefulset in ns statefulset-2027
  I1204 07:35:57.773570 23 rest.go:150] Scaling statefulset ss2 to 0
  E1204 07:35:58.453592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:35:59.453948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:00.454429      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:01.454882      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:02.455344      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:03.456184      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:04.456380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:05.456649      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:06.457400      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:07.458173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:07.787815 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:36:07.791789 23 rest.go:88] Deleting statefulset ss2
  I1204 07:36:07.807040 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2027" for this suite. @ 12/04/24 07:36:07.814
• [81.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/04/24 07:36:07.821
  I1204 07:36:07.821569 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:36:07.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:36:07.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:36:07.838
  STEP: creating secret secrets-3479/secret-test-65ed3fff-d56d-418d-a21f-bbea5803676f @ 12/04/24 07:36:07.843
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:36:07.847
  E1204 07:36:08.459393      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:09.459772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:10.459723      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:11.460416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:36:11.871
  I1204 07:36:11.875071 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-d9a56146-7e8d-4c25-bd5c-3617f53ad222 container env-test: <nil>
  STEP: delete the pod @ 12/04/24 07:36:11.887
  I1204 07:36:11.901653 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3479" for this suite. @ 12/04/24 07:36:11.907
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/04/24 07:36:11.915
  I1204 07:36:11.915283 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:36:11.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:36:11.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:36:11.936
  STEP: Creating secret with name secret-test-877e8161-400b-4b21-996b-a4026ed0aef2 @ 12/04/24 07:36:12.037
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:36:12.041
  E1204 07:36:12.461527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:13.461924      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:14.462253      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:15.463037      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:36:16.064
  I1204 07:36:16.068103 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-46e070a5-e616-491b-b846-0b4370fc84f1 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:36:16.076
  I1204 07:36:16.090141 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7975" for this suite. @ 12/04/24 07:36:16.095
  STEP: Destroying namespace "secret-namespace-6298" for this suite. @ 12/04/24 07:36:16.1
• [4.191 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/04/24 07:36:16.107
  I1204 07:36:16.107161 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:36:16.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:36:16.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:36:16.128
  STEP: Creating secret with name secret-test-map-e7eaeda4-1f4c-413b-a326-b97e2f0af3fe @ 12/04/24 07:36:16.132
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:36:16.137
  E1204 07:36:16.464049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:17.464405      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:18.465232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:19.465684      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:36:20.162
  I1204 07:36:20.166311 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-eeb00108-5d2d-4ec9-a94c-40ae81c3d774 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:36:20.174
  I1204 07:36:20.187244 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3105" for this suite. @ 12/04/24 07:36:20.193
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 12/04/24 07:36:20.199
  I1204 07:36:20.199741 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:36:20.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:36:20.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:36:20.218
  STEP: creating service in namespace services-4562 @ 12/04/24 07:36:20.222
  STEP: creating service affinity-nodeport-transition in namespace services-4562 @ 12/04/24 07:36:20.222
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4562 @ 12/04/24 07:36:20.238
  I1204 07:36:20.243434      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4562, replica count: 3
  E1204 07:36:20.466494      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:21.467104      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:22.468024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:23.294160      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 07:36:23.307434 23 resource.go:361] Creating new exec pod
  E1204 07:36:23.468438      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:24.468885      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:25.469729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:26.325970 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4562 exec execpod-affinitystllr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E1204 07:36:26.470779      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:26.500466 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1204 07:36:26.500529 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:36:26.500614 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4562 exec execpod-affinitystllr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.222.160 80'
  I1204 07:36:26.673000 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.222.160 80\nConnection to 10.109.222.160 80 port [tcp/http] succeeded!\n"
  I1204 07:36:26.673083 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:36:26.673204 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4562 exec execpod-affinitystllr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 32519'
  I1204 07:36:26.843048 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 32519\nConnection to 192.168.100.37 32519 port [tcp/*] succeeded!\n"
  I1204 07:36:26.843159 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:36:26.843326 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4562 exec execpod-affinitystllr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 32519'
  I1204 07:36:27.005520 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 32519\nConnection to 192.168.100.114 32519 port [tcp/*] succeeded!\n"
  I1204 07:36:27.005602 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:36:27.018646 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4562 exec execpod-affinitystllr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.37:32519/ ; done'
  I1204 07:36:27.314045 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n"
  I1204 07:36:27.314124 23 builder.go:147] stdout: "\naffinity-nodeport-transition-q5l56\naffinity-nodeport-transition-7hlsb\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-7hlsb\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-7hlsb\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-q5l56\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-q5l56\naffinity-nodeport-transition-7hlsb\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-7hlsb\naffinity-nodeport-transition-q5l56"
  I1204 07:36:27.314151 23 service.go:242] Received response from host: affinity-nodeport-transition-q5l56
  I1204 07:36:27.314165 23 service.go:242] Received response from host: affinity-nodeport-transition-7hlsb
  I1204 07:36:27.314177 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314190 23 service.go:242] Received response from host: affinity-nodeport-transition-7hlsb
  I1204 07:36:27.314204 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314215 23 service.go:242] Received response from host: affinity-nodeport-transition-7hlsb
  I1204 07:36:27.314226 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314237 23 service.go:242] Received response from host: affinity-nodeport-transition-q5l56
  I1204 07:36:27.314248 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314259 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314272 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314282 23 service.go:242] Received response from host: affinity-nodeport-transition-q5l56
  I1204 07:36:27.314293 23 service.go:242] Received response from host: affinity-nodeport-transition-7hlsb
  I1204 07:36:27.314304 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.314415 23 service.go:242] Received response from host: affinity-nodeport-transition-7hlsb
  I1204 07:36:27.314442 23 service.go:242] Received response from host: affinity-nodeport-transition-q5l56
  I1204 07:36:27.324884 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-4562 exec execpod-affinitystllr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.37:32519/ ; done'
  E1204 07:36:27.471772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:27.620247 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32519/\n"
  I1204 07:36:27.620344 23 builder.go:147] stdout: "\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z\naffinity-nodeport-transition-shq2z"
  I1204 07:36:27.620408 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620448 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620470 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620489 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620526 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620571 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620591 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620615 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620634 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620657 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620683 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620723 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620755 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620780 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620798 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620817 23 service.go:242] Received response from host: affinity-nodeport-transition-shq2z
  I1204 07:36:27.620935 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4562, will wait for the garbage collector to delete the pods @ 12/04/24 07:36:27.634
  I1204 07:36:27.695189 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 6.617558ms
  I1204 07:36:27.796200 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.003881ms
  E1204 07:36:28.472751      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:29.473803      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:30.473880      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:31.019605 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4562" for this suite. @ 12/04/24 07:36:31.024
• [10.832 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/04/24 07:36:31.033
  I1204 07:36:31.033478 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/04/24 07:36:31.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:36:31.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:36:31.053
  I1204 07:36:31.057416 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:36:31.474771      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:32.475761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:33.476849      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:34.188703 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8967" for this suite. @ 12/04/24 07:36:34.194
• [3.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 12/04/24 07:36:34.202
  I1204 07:36:34.202200 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 07:36:34.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:36:34.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:36:34.222
  STEP: Creating a test headless service @ 12/04/24 07:36:34.23
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 254.74.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.74.254_udp@PTR;check="$$(dig +tcp +noall +answer +search 254.74.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.74.254_tcp@PTR;sleep 1; done
   @ 12/04/24 07:36:34.251
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7240.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7240.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7240.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7240.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 254.74.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.74.254_udp@PTR;check="$$(dig +tcp +noall +answer +search 254.74.97.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.97.74.254_tcp@PTR;sleep 1; done
   @ 12/04/24 07:36:34.251
  STEP: creating a pod to probe DNS @ 12/04/24 07:36:34.251
  STEP: submitting the pod to kubernetes @ 12/04/24 07:36:34.251
  E1204 07:36:34.477804      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:35.478284      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 07:36:36.268
  STEP: looking for the results for each expected name from probers @ 12/04/24 07:36:36.272
  I1204 07:36:36.276858 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.280240 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.290295 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.295612 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.317054 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.321102 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.325286 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.329835 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:36.352761 23 dns_common.go:489] Lookups using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 failed for: [wheezy_udp@dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_udp@dns-test-service.dns-7240.svc.cluster.local jessie_tcp@dns-test-service.dns-7240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local]

  I1204 07:36:36.359811 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:36:36.366212 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:36:36.372342 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:36:36.478927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:37.479336      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:38.479755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:39.480183      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:40.480635      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:41.278331 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.283158 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.287724 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.292417 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.314823 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.319422 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.324365 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.329150 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:41.346781 23 dns_common.go:489] Lookups using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 failed for: [wheezy_udp@dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_udp@dns-test-service.dns-7240.svc.cluster.local jessie_tcp@dns-test-service.dns-7240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local]

  I1204 07:36:41.353945 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:36:41.360731 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:36:41.366992 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:36:41.481578      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:42.482008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:43.482817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:44.483682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:45.484061      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:46.278883 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.283530 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.288334 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.292169 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.312142 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.315953 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.320388 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.324203 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:46.339421 23 dns_common.go:489] Lookups using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 failed for: [wheezy_udp@dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_udp@dns-test-service.dns-7240.svc.cluster.local jessie_tcp@dns-test-service.dns-7240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local]

  I1204 07:36:46.345812 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:36:46.353016 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:36:46.359720 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:36:46.484082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:47.484914      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:48.485812      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:49.486290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:50.486732      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:51.281018 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.287909 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.293059 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.298282 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.318690 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.322917 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.326931 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.331182 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:51.347905 23 dns_common.go:489] Lookups using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 failed for: [wheezy_udp@dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_udp@dns-test-service.dns-7240.svc.cluster.local jessie_tcp@dns-test-service.dns-7240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local]

  I1204 07:36:51.354814 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:36:51.360998 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:36:51.367168 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:36:51.487787      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:52.488234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:53.488981      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:54.489480      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:55.489945      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:36:56.279250 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.284029 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.288944 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.293801 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.316449 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.320618 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.325160 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.329795 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:36:56.352304 23 dns_common.go:489] Lookups using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 failed for: [wheezy_udp@dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_udp@dns-test-service.dns-7240.svc.cluster.local jessie_tcp@dns-test-service.dns-7240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local]

  I1204 07:36:56.359448 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:36:56.366124 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:36:56.372476 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:36:56.491095      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:57.491305      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:58.492453      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:36:59.492874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:00.493243      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:01.278087 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.283258 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.288834 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.293454 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.315884 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.325202 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.329624 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.334519 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local from pod dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4: the server could not find the requested resource (get pods dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4)
  I1204 07:37:01.349731 23 dns_common.go:489] Lookups using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 failed for: [wheezy_udp@dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@dns-test-service.dns-7240.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_udp@dns-test-service.dns-7240.svc.cluster.local jessie_tcp@dns-test-service.dns-7240.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7240.svc.cluster.local]

  I1204 07:37:01.355997 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:37:01.362342 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:37:01.368505 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:37:01.494046      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:02.494471      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:03.495326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:04.495773      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:05.496778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:06.352365 23 dns_common.go:527] DNS probes using dns-7240/dns-test-26e74d22-7036-48d5-a5db-b0d7ca7a04b4 succeeded

  STEP: deleting the pod @ 12/04/24 07:37:06.352
  STEP: deleting the test service @ 12/04/24 07:37:06.366
  STEP: deleting the test headless service @ 12/04/24 07:37:06.411
  I1204 07:37:06.419830 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7240" for this suite. @ 12/04/24 07:37:06.424
• [32.227 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/04/24 07:37:06.43
  I1204 07:37:06.430066 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:37:06.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:06.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:06.459
  STEP: Creating secret with name projected-secret-test-d48f3f59-0797-4b50-9f18-2078378db8cc @ 12/04/24 07:37:06.464
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:37:06.469
  E1204 07:37:06.497146      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:07.497477      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:08.498559      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:09.498948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:37:10.496
  E1204 07:37:10.498979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:10.499565 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-7a12f0bd-6ecf-4860-93ad-c82043da4fc3 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:37:10.505
  I1204 07:37:10.519745 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7692" for this suite. @ 12/04/24 07:37:10.524
• [4.098 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/04/24 07:37:10.528
  I1204 07:37:10.528749 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replicaset @ 12/04/24 07:37:10.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:10.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:10.545
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/04/24 07:37:10.549
  I1204 07:37:10.564061 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1204 07:37:11.499343      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:12.500171      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:13.501056      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:14.501514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:15.501965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:15.568009 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/04/24 07:37:15.568
  STEP: getting scale subresource @ 12/04/24 07:37:15.568
  STEP: updating a scale subresource @ 12/04/24 07:37:15.57
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/04/24 07:37:15.586
  STEP: Patch a scale subresource @ 12/04/24 07:37:15.591
  I1204 07:37:15.606946 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1969" for this suite. @ 12/04/24 07:37:15.611
• [5.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/04/24 07:37:15.618
  I1204 07:37:15.618227 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:37:15.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:15.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:15.634
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:37:15.639
  E1204 07:37:16.502486      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:17.503166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:18.503688      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:19.504133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:37:19.661
  I1204 07:37:19.665502 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-5459b585-672c-459a-aadc-c4002822ac39 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:37:19.672
  I1204 07:37:19.686200 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4241" for this suite. @ 12/04/24 07:37:19.691
• [4.092 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/04/24 07:37:19.71
  I1204 07:37:19.710533 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pod-network-test @ 12/04/24 07:37:19.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:19.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:19.728
  STEP: Performing setup for networking test in namespace pod-network-test-6498 @ 12/04/24 07:37:19.732
  STEP: creating a selector @ 12/04/24 07:37:19.732
  STEP: Creating the service pods in kubernetes @ 12/04/24 07:37:19.732
  I1204 07:37:19.732974 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1204 07:37:20.504242      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:21.504672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:22.505730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:23.506610      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:24.506912      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:25.507402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:26.507679      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:27.508140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:28.508763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:29.509174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:30.509569      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:31.509989      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/04/24 07:37:31.86
  E1204 07:37:32.510303      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:33.511271      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:33.904978 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1204 07:37:33.905051 23 utils.go:496] Going to poll 10.244.1.158 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1204 07:37:33.908349 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.158 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6498 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:37:33.908415 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:37:33.909492 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:37:33.909610 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6498/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.158+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1204 07:37:34.511594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:34.991746 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1204 07:37:34.991840 23 utils.go:496] Going to poll 10.244.2.159 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1204 07:37:34.996711 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.159 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6498 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:37:34.996775 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:37:34.997714 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:37:34.997829 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6498/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.159+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1204 07:37:35.511795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:36.073860 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1204 07:37:36.074142 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6498" for this suite. @ 12/04/24 07:37:36.08
• [16.377 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/04/24 07:37:36.087
  I1204 07:37:36.087286 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:37:36.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:36.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:36.107
  STEP: Creating configMap that has name configmap-test-emptyKey-02ec2b86-8b47-423c-ab34-fbd3a6e35f84 @ 12/04/24 07:37:36.111
  I1204 07:37:36.113636 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-968" for this suite. @ 12/04/24 07:37:36.181
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/04/24 07:37:36.188
  I1204 07:37:36.188358 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:37:36.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:36.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:36.21
  I1204 07:37:36.252337 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5392" for this suite. @ 12/04/24 07:37:36.281
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/04/24 07:37:36.287
  I1204 07:37:36.287665 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/04/24 07:37:36.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:36.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:36.311
  I1204 07:37:36.315825 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:37:36.511926      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:37.512840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:38.513815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:39.386543 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5106" for this suite. @ 12/04/24 07:37:39.392
• [3.113 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/04/24 07:37:39.4
  I1204 07:37:39.401032 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename endpointslice @ 12/04/24 07:37:39.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:39.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:39.417
  I1204 07:37:39.432248 23 endpointslice.go:1045] Endpoints addresses: [192.168.100.86] , ports: [6443]
  I1204 07:37:39.432308 23 endpointslice.go:1075] EndpointSlices addresses: [192.168.100.86] , ports: [6443]
  I1204 07:37:39.432440 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1765" for this suite. @ 12/04/24 07:37:39.493
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 12/04/24 07:37:39.502
  I1204 07:37:39.502845 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename field-validation @ 12/04/24 07:37:39.504
  E1204 07:37:39.514682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:39.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:39.521
  STEP: apply creating a deployment @ 12/04/24 07:37:39.526
  I1204 07:37:39.541152 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7173" for this suite. @ 12/04/24 07:37:39.594
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/04/24 07:37:39.603
  I1204 07:37:39.603080 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:37:39.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:39.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:39.622
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/04/24 07:37:39.627
  E1204 07:37:40.514942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:41.515645      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:42.516308      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:43.516899      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:37:43.65
  I1204 07:37:43.654952 23 output.go:196] Trying to get logs from node nodea17 pod pod-be37fd1c-90d5-49f7-a82d-e5711ec810c8 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:37:43.662
  I1204 07:37:43.677589 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4476" for this suite. @ 12/04/24 07:37:43.682
• [4.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 12/04/24 07:37:43.689
  I1204 07:37:43.689033 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 07:37:43.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:43.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:43.708
  STEP: Creating a ResourceQuota @ 12/04/24 07:37:43.713
  STEP: Getting a ResourceQuota @ 12/04/24 07:37:43.717
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/04/24 07:37:43.721
  STEP: Patching the ResourceQuota @ 12/04/24 07:37:43.724
  STEP: Deleting a Collection of ResourceQuotas @ 12/04/24 07:37:43.729
  STEP: Verifying the deleted ResourceQuota @ 12/04/24 07:37:43.736
  I1204 07:37:43.739814 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3169" for this suite. @ 12/04/24 07:37:43.783
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/04/24 07:37:43.792
  I1204 07:37:43.792495 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 07:37:43.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:37:43.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:37:43.81
  STEP: create the rc1 @ 12/04/24 07:37:43.884
  STEP: create the rc2 @ 12/04/24 07:37:43.892
  E1204 07:37:44.517278      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:45.517601      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:46.517910      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:47.518068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:48.518938      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:49.518644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/04/24 07:37:49.904
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/04/24 07:37:50.358
  STEP: wait for the rc to be deleted @ 12/04/24 07:37:50.364
  E1204 07:37:50.519618      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:51.519729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:52.520858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:53.521740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:54.522152      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:37:55.379553 23 garbage_collector.go:762] 69 pods remaining
  I1204 07:37:55.379627 23 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I1204 07:37:55.379646 23 garbage_collector.go:770] 
  E1204 07:37:55.523240      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:56.523637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:57.523745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:58.524662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:37:59.525032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/04/24 07:38:00.38
  I1204 07:38:00.506963 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1204 07:38:00.507075 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-278jq" in namespace "gc-2548"
  I1204 07:38:00.519607 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29wr7" in namespace "gc-2548"
  E1204 07:38:00.525851      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:38:00.532887 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2q72j" in namespace "gc-2548"
  I1204 07:38:00.543092 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2v2xn" in namespace "gc-2548"
  I1204 07:38:00.556059 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48lsk" in namespace "gc-2548"
  I1204 07:38:00.565807 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-496xl" in namespace "gc-2548"
  I1204 07:38:00.576625 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gvzw" in namespace "gc-2548"
  I1204 07:38:00.600877 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4rdxd" in namespace "gc-2548"
  I1204 07:38:00.612314 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59dg7" in namespace "gc-2548"
  I1204 07:38:00.621628 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5g7x6" in namespace "gc-2548"
  I1204 07:38:00.629901 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mlgk" in namespace "gc-2548"
  I1204 07:38:00.637095 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6bfjt" in namespace "gc-2548"
  I1204 07:38:00.646154 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tkkv" in namespace "gc-2548"
  I1204 07:38:00.656807 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78qv7" in namespace "gc-2548"
  I1204 07:38:00.665735 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7vrdp" in namespace "gc-2548"
  I1204 07:38:00.680878 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8frts" in namespace "gc-2548"
  I1204 07:38:00.690769 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8gr5d" in namespace "gc-2548"
  I1204 07:38:00.700086 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-96t9p" in namespace "gc-2548"
  I1204 07:38:00.707238 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9k68f" in namespace "gc-2548"
  I1204 07:38:00.716558 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9lb7h" in namespace "gc-2548"
  I1204 07:38:00.725142 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sz9x" in namespace "gc-2548"
  I1204 07:38:00.735748 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9vb2b" in namespace "gc-2548"
  I1204 07:38:00.747838 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b85vm" in namespace "gc-2548"
  I1204 07:38:00.756795 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bjglj" in namespace "gc-2548"
  I1204 07:38:00.766405 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvcjk" in namespace "gc-2548"
  I1204 07:38:00.778856 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ck24n" in namespace "gc-2548"
  I1204 07:38:00.785336 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clcn5" in namespace "gc-2548"
  I1204 07:38:00.794233 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crj6h" in namespace "gc-2548"
  I1204 07:38:00.810436 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7b6s" in namespace "gc-2548"
  I1204 07:38:00.822509 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dnlbt" in namespace "gc-2548"
  I1204 07:38:00.832702 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f2xzn" in namespace "gc-2548"
  I1204 07:38:00.842328 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fb52k" in namespace "gc-2548"
  I1204 07:38:00.853690 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fcsjj" in namespace "gc-2548"
  I1204 07:38:00.864079 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fd7cc" in namespace "gc-2548"
  I1204 07:38:00.874756 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fht2s" in namespace "gc-2548"
  I1204 07:38:00.884449 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fph8l" in namespace "gc-2548"
  I1204 07:38:00.892920 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g6znq" in namespace "gc-2548"
  I1204 07:38:00.900777 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gc7k7" in namespace "gc-2548"
  I1204 07:38:00.911122 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gmq6r" in namespace "gc-2548"
  I1204 07:38:00.919831 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gv2db" in namespace "gc-2548"
  I1204 07:38:00.930914 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hlqkt" in namespace "gc-2548"
  I1204 07:38:00.939847 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hr6c7" in namespace "gc-2548"
  I1204 07:38:00.947665 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hsqjn" in namespace "gc-2548"
  I1204 07:38:00.955087 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j69x8" in namespace "gc-2548"
  I1204 07:38:00.969313 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j6msj" in namespace "gc-2548"
  I1204 07:38:00.978450 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jldxm" in namespace "gc-2548"
  I1204 07:38:00.987714 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jmgr7" in namespace "gc-2548"
  I1204 07:38:00.995988 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jrhcx" in namespace "gc-2548"
  I1204 07:38:01.003779 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jtl97" in namespace "gc-2548"
  I1204 07:38:01.016967 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k7xvr" in namespace "gc-2548"
  I1204 07:38:01.026290 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2548" for this suite. @ 12/04/24 07:38:01.029
• [17.241 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/04/24 07:38:01.033
  I1204 07:38:01.033738 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename lease-test @ 12/04/24 07:38:01.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:01.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:01.049
  I1204 07:38:01.103126 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-322" for this suite. @ 12/04/24 07:38:01.131
• [0.104 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/04/24 07:38:01.137
  I1204 07:38:01.137807 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:38:01.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:01.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:01.155
  STEP: Creating secret with name secret-test-5ab785bb-e9d6-41fa-8c1a-0d58e08c90d6 @ 12/04/24 07:38:01.159
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:38:01.162
  E1204 07:38:01.526715      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:02.527175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:03.527436      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:04.527685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:38:05.183
  I1204 07:38:05.186518 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-c0fd9593-6dae-41aa-8e47-4376275bc184 container secret-env-test: <nil>
  STEP: delete the pod @ 12/04/24 07:38:05.193
  I1204 07:38:05.207755 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2592" for this suite. @ 12/04/24 07:38:05.213
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/04/24 07:38:05.219
  I1204 07:38:05.219057 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename subpath @ 12/04/24 07:38:05.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:05.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:05.238
  STEP: Setting up data @ 12/04/24 07:38:05.242
  STEP: Creating pod pod-subpath-test-secret-kgws @ 12/04/24 07:38:05.252
  STEP: Creating a pod to test atomic-volume-subpath @ 12/04/24 07:38:05.252
  E1204 07:38:05.528433      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:06.529094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:07.530152      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:08.531094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:09.531942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:10.532041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:11.532221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:12.532691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:13.532846      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:14.533309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:15.534327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:16.534706      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:17.535799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:18.536788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:19.537594      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:20.538201      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:21.538316      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:22.538728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:23.539275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:24.539710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:25.540427      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:26.540831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:27.541215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:28.542067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:38:29.329
  I1204 07:38:29.333504 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-secret-kgws container test-container-subpath-secret-kgws: <nil>
  STEP: delete the pod @ 12/04/24 07:38:29.341
  STEP: Deleting pod pod-subpath-test-secret-kgws @ 12/04/24 07:38:29.356
  I1204 07:38:29.356394 23 delete.go:62] Deleting pod "pod-subpath-test-secret-kgws" in namespace "subpath-6813"
  I1204 07:38:29.360153 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6813" for this suite. @ 12/04/24 07:38:29.365
• [24.151 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 12/04/24 07:38:29.37
  I1204 07:38:29.370633 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:38:29.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:29.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:29.389
  STEP: Setting up server cert @ 12/04/24 07:38:29.487
  E1204 07:38:29.542848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:38:29.803
  STEP: Deploying the webhook pod @ 12/04/24 07:38:29.815
  STEP: Wait for the deployment to be ready @ 12/04/24 07:38:29.829
  I1204 07:38:29.836770 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1204 07:38:30.543399      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:31.543949      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:38:31.852
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:38:31.871
  E1204 07:38:32.544561      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:38:32.872262 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/04/24 07:38:32.883
  STEP: create a pod that should be updated by the webhook @ 12/04/24 07:38:32.909
  I1204 07:38:32.980992 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8982" for this suite. @ 12/04/24 07:38:32.986
  STEP: Destroying namespace "webhook-markers-9927" for this suite. @ 12/04/24 07:38:32.991
• [3.626 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/04/24 07:38:32.997
  I1204 07:38:32.997513 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename watch @ 12/04/24 07:38:32.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:33.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:33.017
  STEP: creating a watch on configmaps with a certain label @ 12/04/24 07:38:33.022
  STEP: creating a new configmap @ 12/04/24 07:38:33.024
  STEP: modifying the configmap once @ 12/04/24 07:38:33.029
  STEP: changing the label value of the configmap @ 12/04/24 07:38:33.039
  STEP: Expecting to observe a delete notification for the watched object @ 12/04/24 07:38:33.047
  I1204 07:38:33.048162 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5100  3629d4ea-00cd-4dbe-b47f-61bdebba7c14 31453 0 2024-12-04 07:38:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-04 07:38:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:38:33.048478 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5100  3629d4ea-00cd-4dbe-b47f-61bdebba7c14 31454 0 2024-12-04 07:38:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-04 07:38:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:38:33.048771 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5100  3629d4ea-00cd-4dbe-b47f-61bdebba7c14 31455 0 2024-12-04 07:38:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-04 07:38:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/04/24 07:38:33.048
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/04/24 07:38:33.057
  E1204 07:38:33.544800      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:34.545192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:35.545600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:36.545795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:37.546110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:38.547102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:39.547286      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:40.547912      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:41.548145      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:42.548621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 12/04/24 07:38:43.058
  STEP: modifying the configmap a third time @ 12/04/24 07:38:43.069
  STEP: deleting the configmap @ 12/04/24 07:38:43.078
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/04/24 07:38:43.083
  I1204 07:38:43.083782 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5100  3629d4ea-00cd-4dbe-b47f-61bdebba7c14 31500 0 2024-12-04 07:38:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-04 07:38:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:38:43.084040 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5100  3629d4ea-00cd-4dbe-b47f-61bdebba7c14 31501 0 2024-12-04 07:38:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-04 07:38:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:38:43.084240 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5100  3629d4ea-00cd-4dbe-b47f-61bdebba7c14 31502 0 2024-12-04 07:38:32 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-04 07:38:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:38:43.084398 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5100" for this suite. @ 12/04/24 07:38:43.089
• [10.099 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 12/04/24 07:38:43.096
  I1204 07:38:43.096703 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 07:38:43.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:43.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:43.117
  STEP: Creating a ResourceQuota with best effort scope @ 12/04/24 07:38:43.122
  STEP: Ensuring ResourceQuota status is calculated @ 12/04/24 07:38:43.126
  E1204 07:38:43.549232      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:44.549692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 12/04/24 07:38:45.133
  STEP: Ensuring ResourceQuota status is calculated @ 12/04/24 07:38:45.14
  E1204 07:38:45.550528      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:46.550930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 12/04/24 07:38:47.145
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/04/24 07:38:47.159
  E1204 07:38:47.551379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:48.552116      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/04/24 07:38:49.166
  E1204 07:38:49.553027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:50.553871      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/04/24 07:38:51.172
  STEP: Ensuring resource quota status released the pod usage @ 12/04/24 07:38:51.182
  E1204 07:38:51.554223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:52.554680      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 12/04/24 07:38:53.188
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/04/24 07:38:53.201
  E1204 07:38:53.554740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:54.555304      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/04/24 07:38:55.204
  E1204 07:38:55.555630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:56.556265      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/04/24 07:38:57.209
  STEP: Ensuring resource quota status released the pod usage @ 12/04/24 07:38:57.221
  E1204 07:38:57.556582      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:38:58.557488      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:38:59.226978 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1105" for this suite. @ 12/04/24 07:38:59.231
• [16.143 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 12/04/24 07:38:59.24
  I1204 07:38:59.240153 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:38:59.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:38:59.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:38:59.256
  STEP: creating a replication controller @ 12/04/24 07:38:59.26
  I1204 07:38:59.260762 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 create -f -'
  I1204 07:38:59.437127 23 builder.go:146] stderr: ""
  I1204 07:38:59.437211 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/04/24 07:38:59.437
  I1204 07:38:59.437399 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:38:59.524994 23 builder.go:146] stderr: ""
  I1204 07:38:59.525068 23 builder.go:147] stdout: "update-demo-nautilus-9bbql update-demo-nautilus-9tlh7 "
  I1204 07:38:59.525157 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods update-demo-nautilus-9bbql -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1204 07:38:59.557813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:38:59.613038 23 builder.go:146] stderr: ""
  I1204 07:38:59.613100 23 builder.go:147] stdout: ""
  I1204 07:38:59.613125 23 kubectl.go:2502] update-demo-nautilus-9bbql is created but not running
  E1204 07:39:00.558595      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:01.558990      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:02.559511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:03.560374      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:04.560818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:39:04.614382 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1204 07:39:04.709828 23 builder.go:146] stderr: ""
  I1204 07:39:04.709907 23 builder.go:147] stdout: "update-demo-nautilus-9bbql update-demo-nautilus-9tlh7 "
  I1204 07:39:04.710016 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods update-demo-nautilus-9bbql -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:39:04.797024 23 builder.go:146] stderr: ""
  I1204 07:39:04.797093 23 builder.go:147] stdout: "true"
  I1204 07:39:04.797171 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods update-demo-nautilus-9bbql -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:39:04.886119 23 builder.go:146] stderr: ""
  I1204 07:39:04.886197 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:39:04.886225 23 kubectl.go:2393] validating pod update-demo-nautilus-9bbql
  I1204 07:39:04.893425 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:39:04.893512 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:39:04.893535 23 kubectl.go:2520] update-demo-nautilus-9bbql is verified up and running
  I1204 07:39:04.893594 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods update-demo-nautilus-9tlh7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1204 07:39:04.977926 23 builder.go:146] stderr: ""
  I1204 07:39:04.978011 23 builder.go:147] stdout: "true"
  I1204 07:39:04.978089 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods update-demo-nautilus-9tlh7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1204 07:39:05.065821 23 builder.go:146] stderr: ""
  I1204 07:39:05.065889 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1204 07:39:05.065917 23 kubectl.go:2393] validating pod update-demo-nautilus-9tlh7
  I1204 07:39:05.071912 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1204 07:39:05.072012 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1204 07:39:05.072038 23 kubectl.go:2520] update-demo-nautilus-9tlh7 is verified up and running
  STEP: using delete to clean up resources @ 12/04/24 07:39:05.072
  I1204 07:39:05.072158 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 delete --grace-period=0 --force -f -'
  I1204 07:39:05.158552 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1204 07:39:05.158620 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1204 07:39:05.158721 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get rc,svc -l name=update-demo --no-headers'
  I1204 07:39:05.252136 23 builder.go:146] stderr: "No resources found in kubectl-4646 namespace.\n"
  I1204 07:39:05.252233 23 builder.go:147] stdout: ""
  I1204 07:39:05.252346 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-4646 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1204 07:39:05.351776 23 builder.go:146] stderr: ""
  I1204 07:39:05.351882 23 builder.go:147] stdout: ""
  I1204 07:39:05.352227 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4646" for this suite. @ 12/04/24 07:39:05.358
• [6.127 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/04/24 07:39:05.367
  I1204 07:39:05.367197 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 07:39:05.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:39:05.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:39:05.385
  I1204 07:39:05.389457 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1204 07:39:05.397478 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1204 07:39:05.406528 23 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1204 07:39:05.561500      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:06.561997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:39:07.415274 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1204 07:39:07.418282 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1204 07:39:07.428000 23 deployment.go:313] Updating deployment test-recreate-deployment
  I1204 07:39:07.428066 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1204 07:39:07.502239 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9300",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7e784ab-ceae-466b-9d58-6c56aefd4373",
      ResourceVersion: (string) (len=5) "31661",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 07:39:07.516036 23 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9300",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44149b7b-029c-4531-ac0c-f696be6a8e66",
      ResourceVersion: (string) (len=5) "31658",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f7e784ab-ceae-466b-9d58-6c56aefd4373",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 65 37 38 34  61 62 2d 63 65 61 65 2d  |\"f7e784ab-ceae-|
              00000120  34 36 36 62 2d 39 64 35  38 2d 36 63 35 36 61 65  |466b-9d58-6c56ae|
              00000130  66 64 34 33 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fd4373\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 07:39:07.518316 23 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1204 07:39:07.518800 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9300",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25da027c-5ad8-484d-a39f-6f4e18c2f5bf",
      ResourceVersion: (string) (len=5) "31649",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894745,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f7e784ab-ceae-466b-9d58-6c56aefd4373",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 65 37 38 34  61 62 2d 63 65 61 65 2d  |\"f7e784ab-ceae-|
              00000120  34 36 36 62 2d 39 64 35  38 2d 36 63 35 36 61 65  |466b-9d58-6c56ae|
              00000130  66 64 34 33 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fd4373\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 07:39:07.525321 23 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-ddg5w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-ddg5w",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-9300",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c6ec318-a548-4b07-a24c-7014433dfd35",
      ResourceVersion: (string) (len=5) "31660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "44149b7b-029c-4531-ac0c-f696be6a8e66",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 34  31 34 39 62 37 62 2d 30  |d\":\"44149b7b-0|
              00000090  32 39 63 2d 34 35 33 31  2d 61 63 30 63 2d 66 36  |29c-4531-ac0c-f6|
              000000a0  39 36 62 65 36 61 38 65  36 36 5c 22 7d 22 3a 7b  |96be6a8e66\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qjk95",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qjk95",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868894747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868894747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qjk95",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 07:39:07.529307 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9300" for this suite. @ 12/04/24 07:39:07.534
• [2.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/04/24 07:39:07.54
  I1204 07:39:07.540498 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:39:07.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:39:07.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:39:07.559
  E1204 07:39:07.561908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:39:07.563
  E1204 07:39:08.562423      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:09.562540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:10.562749      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:11.563170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:39:11.589
  I1204 07:39:11.593318 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-87362fb2-4538-4bf2-afb4-7e099e233a01 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:39:11.599
  I1204 07:39:11.615624 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5706" for this suite. @ 12/04/24 07:39:11.62
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 12/04/24 07:39:11.626
  I1204 07:39:11.626814 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename sched-preemption @ 12/04/24 07:39:11.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:39:11.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:39:11.646
  I1204 07:39:11.726908 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1204 07:39:12.564101      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:13.565038      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:14.565428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:15.565920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:16.566206      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:17.566632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:18.566814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:19.567288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:20.568139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:21.568563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:22.569678      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:23.570463      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:24.570682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:25.571551      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:26.571985      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:27.572389      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:28.572504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:29.573294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:30.573880      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:31.574292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:32.575173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:33.576031      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:34.576971      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:35.577416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:36.577726      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:37.578198      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:38.579193      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:39.579843      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:40.580719      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:41.581171      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:42.581618      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:43.581756      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:44.581950      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:45.582368      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:46.583355      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:47.583765      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:48.584944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:49.585486      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:50.585925      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:51.586364      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:52.587132      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:53.588027      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:54.588118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:55.588558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:56.589091      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:57.589526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:58.590057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:39:59.590471      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:00.590982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:01.591592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:02.592137      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:03.592982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:04.593343      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:05.593717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:06.594715      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:07.595109      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:08.595991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:09.596301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:10.597337      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:11.597844      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:40:11.733662 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 12/04/24 07:40:11.738
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 12/04/24 07:40:11.75
  I1204 07:40:11.764535 23 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 12/04/24 07:40:11.764
  E1204 07:40:12.598097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:13.599022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 12/04/24 07:40:13.773
  I1204 07:40:13.782401 23 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 12/04/24 07:40:13.782
  E1204 07:40:14.599300      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:15.599702      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 12/04/24 07:40:15.791
  I1204 07:40:15.795162 23 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1204 07:40:16.312095 23 pod_client.go:173] Successfully updated pod "victim-pod"
  I1204 07:40:16.358002 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3854" for this suite. @ 12/04/24 07:40:16.361
• [64.740 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/04/24 07:40:16.366
  I1204 07:40:16.366858 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:40:16.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:16.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:16.406
  STEP: Creating a pod to test downward API volume plugin @ 12/04/24 07:40:16.411
  E1204 07:40:16.600587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:17.601300      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:18.602330      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:19.602786      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:40:20.433
  I1204 07:40:20.437254 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-c520fc52-69a4-45dc-b42a-398514d01024 container client-container: <nil>
  STEP: delete the pod @ 12/04/24 07:40:20.445
  I1204 07:40:20.459150 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2841" for this suite. @ 12/04/24 07:40:20.464
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/04/24 07:40:20.471
  I1204 07:40:20.471482 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 07:40:20.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:20.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:20.491
  STEP: Creating a pod to test service account token:  @ 12/04/24 07:40:20.496
  E1204 07:40:20.603611      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:21.604048      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:22.604669      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:23.605563      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:40:24.519
  I1204 07:40:24.523841 23 output.go:196] Trying to get logs from node nodea17 pod test-pod-23433c81-9291-46d2-b636-9f798b7f8e98 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:40:24.532
  I1204 07:40:24.550180 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7251" for this suite. @ 12/04/24 07:40:24.555
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/04/24 07:40:24.564
  I1204 07:40:24.564828 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename subjectreview @ 12/04/24 07:40:24.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:24.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:24.586
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7798" @ 12/04/24 07:40:24.59
  I1204 07:40:24.597052 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7798:e2e"
  I1204 07:40:24.597122 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7798"}
  I1204 07:40:24.597150 23 subjectreviews.go:71] saUID: "e107c127-4f7f-401f-91dd-21a75df0d2b2"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7798:e2e" @ 12/04/24 07:40:24.597
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7798:e2e" @ 12/04/24 07:40:24.597
  I1204 07:40:24.600813 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7798:e2e" api 'list' configmaps in "subjectreview-7798" namespace @ 12/04/24 07:40:24.6
  I1204 07:40:24.603406 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7798:e2e" @ 12/04/24 07:40:24.603
  E1204 07:40:24.605632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:40:24.606765 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1204 07:40:24.606825 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1204 07:40:24.607019 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7798" for this suite. @ 12/04/24 07:40:24.655
• [0.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/04/24 07:40:24.662
  I1204 07:40:24.662212 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename server-version @ 12/04/24 07:40:24.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:24.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:24.686
  STEP: Request ServerVersion @ 12/04/24 07:40:24.691
  STEP: Confirm major version @ 12/04/24 07:40:24.692
  I1204 07:40:24.693007 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/04/24 07:40:24.693
  I1204 07:40:24.693066 23 server_version.go:58] cleanMinorVersion: 31
  I1204 07:40:24.693094 23 server_version.go:62] Minor version: 31
  I1204 07:40:24.693215 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3197" for this suite. @ 12/04/24 07:40:24.756
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 12/04/24 07:40:24.763
  I1204 07:40:24.763503 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl @ 12/04/24 07:40:24.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:24.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:24.791
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/04/24 07:40:24.796
  I1204 07:40:24.796624 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1570 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1204 07:40:24.898863 23 builder.go:146] stderr: ""
  I1204 07:40:24.898931 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/04/24 07:40:24.898
  I1204 07:40:24.903403 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-1570 delete pods e2e-test-httpd-pod'
  E1204 07:40:25.606088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:26.606794      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:40:26.699045 23 builder.go:146] stderr: ""
  I1204 07:40:26.699124 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1204 07:40:26.699297 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1570" for this suite. @ 12/04/24 07:40:26.704
• [1.946 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/04/24 07:40:26.71
  I1204 07:40:26.710478 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename events @ 12/04/24 07:40:26.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:26.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:26.731
  STEP: Create set of events @ 12/04/24 07:40:26.737
  I1204 07:40:26.741418 23 core_events.go:198] created test-event-1
  I1204 07:40:26.745199 23 core_events.go:198] created test-event-2
  I1204 07:40:26.750403 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/04/24 07:40:26.75
  STEP: delete collection of events @ 12/04/24 07:40:26.754
  I1204 07:40:26.754162 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/04/24 07:40:26.78
  I1204 07:40:26.781021 23 core_events.go:230] requesting list of events to confirm quantity
  I1204 07:40:26.784010 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8387" for this suite. @ 12/04/24 07:40:26.805
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/04/24 07:40:26.812
  I1204 07:40:26.812112 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename gc @ 12/04/24 07:40:26.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:26.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:26.834
  STEP: create the rc @ 12/04/24 07:40:26.839
  W1204 07:40:26.844817      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1204 07:40:27.607940      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:28.608938      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:29.609363      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:30.609923      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:31.610466      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/04/24 07:40:31.929
  STEP: wait for all pods to be garbage collected @ 12/04/24 07:40:31.935
  E1204 07:40:32.611182      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:33.611946      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:34.612130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:35.612506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:36.612961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/04/24 07:40:36.946
  I1204 07:40:37.063530 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1204 07:40:37.063735 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9921" for this suite. @ 12/04/24 07:40:37.067
• [10.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 12/04/24 07:40:37.076
  I1204 07:40:37.076394 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:40:37.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:37.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:37.095
  STEP: Setting up server cert @ 12/04/24 07:40:37.192
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:40:37.571
  STEP: Deploying the webhook pod @ 12/04/24 07:40:37.595
  STEP: Wait for the deployment to be ready @ 12/04/24 07:40:37.61
  E1204 07:40:37.613506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:40:37.617424 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:40:38.613782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:39.614315      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:40:39.63
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:40:39.645
  E1204 07:40:40.615329      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:40:40.645793 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/04/24 07:40:40.655
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/04/24 07:40:40.676
  I1204 07:40:40.676351 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:40:40.737373 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8509" for this suite. @ 12/04/24 07:40:40.742
  STEP: Destroying namespace "webhook-markers-7925" for this suite. @ 12/04/24 07:40:40.751
• [3.679 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/04/24 07:40:40.756
  I1204 07:40:40.756213 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/04/24 07:40:40.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:40.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:40.773
  STEP: creating the policy @ 12/04/24 07:40:40.784
  STEP: waiting until the marker is denied @ 12/04/24 07:40:40.8
  STEP: testing a replicated Deployment to be allowed @ 12/04/24 07:40:41.411
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/04/24 07:40:41.423
  I1204 07:40:41.465832 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4898" for this suite. @ 12/04/24 07:40:41.473
• [0.723 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/04/24 07:40:41.479
  I1204 07:40:41.479931 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename namespaces @ 12/04/24 07:40:41.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:41.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:41.499
  STEP: Creating a test namespace @ 12/04/24 07:40:41.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:41.596
  STEP: Creating a service in the namespace @ 12/04/24 07:40:41.599
  STEP: Deleting the namespace @ 12/04/24 07:40:41.614
  E1204 07:40:41.616380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the namespace to be removed. @ 12/04/24 07:40:41.62
  E1204 07:40:42.616930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:43.617484      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:44.617928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:45.618702      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:46.618942      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:47.619231      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/04/24 07:40:47.626
  STEP: Verifying there is no service in the namespace @ 12/04/24 07:40:47.642
  I1204 07:40:47.645445 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7053" for this suite. @ 12/04/24 07:40:47.65
  STEP: Destroying namespace "nsdeletetest-7787" for this suite. @ 12/04/24 07:40:47.655
  I1204 07:40:47.658508 23 framework.go:370] Namespace nsdeletetest-7787 was already deleted
  STEP: Destroying namespace "nsdeletetest-8967" for this suite. @ 12/04/24 07:40:47.658
• [6.184 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/04/24 07:40:47.663
  I1204 07:40:47.663953 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:40:47.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:47.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:47.746
  STEP: Creating secret with name secret-test-ff006f53-f6b3-4b31-ac8f-30ba1833114d @ 12/04/24 07:40:47.751
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:40:47.755
  E1204 07:40:48.620001      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:49.620587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:50.620798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:51.621255      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:40:51.78
  I1204 07:40:51.784756 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-e8aa7b35-ba37-4aa3-a151-5ec84ee79edb container secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:40:51.791
  I1204 07:40:51.808918 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2429" for this suite. @ 12/04/24 07:40:51.813
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/04/24 07:40:51.82
  I1204 07:40:51.820473 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:40:51.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:40:51.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:40:51.839
  STEP: Creating service test in namespace statefulset-3021 @ 12/04/24 07:40:51.844
  STEP: Creating statefulset ss in namespace statefulset-3021 @ 12/04/24 07:40:51.849
  I1204 07:40:51.861224 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E1204 07:40:52.621547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:53.622600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:54.622982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:55.623437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:56.623921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:57.625032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:58.625924      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:40:59.626356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:00.626793      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:01.627188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:01.863981 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/04/24 07:41:01.873
  STEP: updating a scale subresource @ 12/04/24 07:41:01.877
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/04/24 07:41:01.885
  STEP: Patch a scale subresource @ 12/04/24 07:41:01.889
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/04/24 07:41:01.899
  I1204 07:41:01.903348 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3021
  I1204 07:41:01.906728 23 rest.go:150] Scaling statefulset ss to 0
  E1204 07:41:02.627437      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:03.628114      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:04.628550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:05.629305      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:06.629750      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:07.630506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:08.630695      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:09.631111      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:10.631556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:11.632009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:11.920500 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:41:11.924508 23 rest.go:88] Deleting statefulset ss
  I1204 07:41:11.939981 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3021" for this suite. @ 12/04/24 07:41:11.944
• [20.130 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/04/24 07:41:11.95
  I1204 07:41:11.950435 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/04/24 07:41:11.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:41:11.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:41:11.97
  STEP: Creating 50 configmaps @ 12/04/24 07:41:11.974
  STEP: Creating RC which spawns configmap-volume pods @ 12/04/24 07:41:12.257
  I1204 07:41:12.327038 23 resource.go:87] Pod name wrapped-volume-race-943bbdf2-7461-4cb7-9bae-cf9ea2056f1b: Found 3 pods out of 5
  E1204 07:41:12.632292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:13.633174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:14.633614      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:15.634054      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:16.634677      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:17.336112 23 resource.go:87] Pod name wrapped-volume-race-943bbdf2-7461-4cb7-9bae-cf9ea2056f1b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/04/24 07:41:17.336
  STEP: Creating RC which spawns configmap-volume pods @ 12/04/24 07:41:17.362
  I1204 07:41:17.384935 23 resource.go:87] Pod name wrapped-volume-race-20273675-01a5-466b-8751-80bde48fa7ff: Found 1 pods out of 5
  E1204 07:41:17.634983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:18.635890      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:19.636296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:20.636735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:21.637168      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:22.394877 23 resource.go:87] Pod name wrapped-volume-race-20273675-01a5-466b-8751-80bde48fa7ff: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/04/24 07:41:22.394
  STEP: Creating RC which spawns configmap-volume pods @ 12/04/24 07:41:22.45
  I1204 07:41:22.473515 23 resource.go:87] Pod name wrapped-volume-race-15ad50ee-2991-444c-9aa2-3d1c8f97c1d9: Found 1 pods out of 5
  E1204 07:41:22.637647      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:23.637743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:24.638247      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:25.638745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:26.639190      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:27.483341 23 resource.go:87] Pod name wrapped-volume-race-15ad50ee-2991-444c-9aa2-3d1c8f97c1d9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/04/24 07:41:27.483
  STEP: deleting ReplicationController wrapped-volume-race-15ad50ee-2991-444c-9aa2-3d1c8f97c1d9 in namespace emptydir-wrapper-8257, will wait for the garbage collector to delete the pods @ 12/04/24 07:41:27.506
  I1204 07:41:27.568650 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-15ad50ee-2991-444c-9aa2-3d1c8f97c1d9 took: 8.198438ms
  E1204 07:41:27.640246      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:27.669730 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-15ad50ee-2991-444c-9aa2-3d1c8f97c1d9 pods took: 101.062106ms
  STEP: deleting ReplicationController wrapped-volume-race-20273675-01a5-466b-8751-80bde48fa7ff in namespace emptydir-wrapper-8257, will wait for the garbage collector to delete the pods @ 12/04/24 07:41:28.47
  I1204 07:41:28.536791 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-20273675-01a5-466b-8751-80bde48fa7ff took: 10.198482ms
  I1204 07:41:28.637300 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-20273675-01a5-466b-8751-80bde48fa7ff pods took: 100.49637ms
  E1204 07:41:28.640720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:29.641622      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-943bbdf2-7461-4cb7-9bae-cf9ea2056f1b in namespace emptydir-wrapper-8257, will wait for the garbage collector to delete the pods @ 12/04/24 07:41:30.138
  I1204 07:41:30.200741 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-943bbdf2-7461-4cb7-9bae-cf9ea2056f1b took: 7.27081ms
  I1204 07:41:30.300969 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-943bbdf2-7461-4cb7-9bae-cf9ea2056f1b pods took: 100.21047ms
  E1204 07:41:30.642137      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 12/04/24 07:41:31.101
  I1204 07:41:31.365741 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8257" for this suite. @ 12/04/24 07:41:31.37
• [19.427 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/04/24 07:41:31.377
  I1204 07:41:31.377128 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename conformance-tests @ 12/04/24 07:41:31.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:41:31.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:41:31.399
  STEP: Getting node addresses @ 12/04/24 07:41:31.404
  I1204 07:41:31.404584 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1204 07:41:31.471158 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3579" for this suite. @ 12/04/24 07:41:31.475
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 12/04/24 07:41:31.482
  I1204 07:41:31.482491 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:41:31.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:41:31.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:41:31.502
  STEP: Setting up server cert @ 12/04/24 07:41:31.599
  E1204 07:41:31.642511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:41:32.072
  STEP: Deploying the webhook pod @ 12/04/24 07:41:32.084
  STEP: Wait for the deployment to be ready @ 12/04/24 07:41:32.096
  I1204 07:41:32.103290 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:41:32.643276      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:33.644047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:34.118050 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1204 07:41:34.644799      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:35.645223      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:36.124307 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1204 07:41:36.645997      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:37.646125      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:38.123681 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1204 07:41:38.646356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:39.646547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:40.123981 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 4, 7, 41, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1204 07:41:40.646738      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:41.646953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:41:42.123
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:41:42.138
  E1204 07:41:42.647959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:41:43.138703 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1204 07:41:43.147131 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:41:43.648378      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7426-crds.webhook.example.com via the AdmissionRegistration API @ 12/04/24 07:41:43.661
  STEP: Creating a custom resource while v1 is storage version @ 12/04/24 07:41:43.685
  E1204 07:41:44.648995      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:45.649408      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/04/24 07:41:45.742
  STEP: Patching the custom resource while v2 is storage version @ 12/04/24 07:41:45.798
  I1204 07:41:46.395140 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2315" for this suite. @ 12/04/24 07:41:46.401
  STEP: Destroying namespace "webhook-markers-7993" for this suite. @ 12/04/24 07:41:46.406
• [14.931 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/04/24 07:41:46.413
  I1204 07:41:46.413425 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename endpointslice @ 12/04/24 07:41:46.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:41:46.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:41:46.431
  STEP: getting /apis @ 12/04/24 07:41:46.436
  STEP: getting /apis/discovery.k8s.io @ 12/04/24 07:41:46.442
  STEP: getting /apis/discovery.k8s.iov1 @ 12/04/24 07:41:46.444
  STEP: creating @ 12/04/24 07:41:46.446
  STEP: getting @ 12/04/24 07:41:46.46
  STEP: listing @ 12/04/24 07:41:46.464
  STEP: watching @ 12/04/24 07:41:46.467
  I1204 07:41:46.467170 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/04/24 07:41:46.468
  STEP: cluster-wide watching @ 12/04/24 07:41:46.472
  I1204 07:41:46.472405 23 endpointslice.go:459] starting watch
  STEP: patching @ 12/04/24 07:41:46.474
  STEP: updating @ 12/04/24 07:41:46.481
  I1204 07:41:46.489174 23 endpointslice.go:482] waiting for watch events with expected annotations
  I1204 07:41:46.489273 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/04/24 07:41:46.489
  STEP: deleting a collection @ 12/04/24 07:41:46.5
  I1204 07:41:46.512157 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8170" for this suite. @ 12/04/24 07:41:46.516
• [0.108 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/04/24 07:41:46.521
  I1204 07:41:46.521837 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:41:46.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:41:46.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:41:46.54
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/04/24 07:41:46.544
  E1204 07:41:46.649796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:47.650710      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:48.651650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:49.652113      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:41:50.572
  I1204 07:41:50.576249 23 output.go:196] Trying to get logs from node nodea17 pod pod-c0d926a4-946e-4b93-85fe-b3ee6df052e3 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:41:50.588
  I1204 07:41:50.608476 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-781" for this suite. @ 12/04/24 07:41:50.613
• [4.098 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/04/24 07:41:50.62
  I1204 07:41:50.620560 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename secrets @ 12/04/24 07:41:50.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:41:50.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:41:50.642
  E1204 07:41:50.652805      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating secret with name s-test-opt-del-9ca1416d-3637-4ff1-a18c-014d108b1022 @ 12/04/24 07:41:50.714
  STEP: Creating secret with name s-test-opt-upd-5f89c576-d121-48ad-bb04-2e1929a297d3 @ 12/04/24 07:41:50.721
  STEP: Creating the pod @ 12/04/24 07:41:50.725
  E1204 07:41:51.653597      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:52.654310      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-9ca1416d-3637-4ff1-a18c-014d108b1022 @ 12/04/24 07:41:52.769
  STEP: Updating secret s-test-opt-upd-5f89c576-d121-48ad-bb04-2e1929a297d3 @ 12/04/24 07:41:52.777
  STEP: Creating secret with name s-test-opt-create-90403d6f-eba0-413e-b9c0-e43479655e89 @ 12/04/24 07:41:52.784
  STEP: waiting to observe update in volume @ 12/04/24 07:41:52.788
  E1204 07:41:53.654675      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:54.655068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:55.655675      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:56.656100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:57.656257      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:58.657086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:41:59.657926      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:00.658434      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:01.659581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:02.660233      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:03.660837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:04.661267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:05.661433      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:06.662208      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:07.662571      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:08.663555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:09.663761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:10.664130      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:11.664913      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:12.665348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:13.665565      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:14.666011      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:15.666182      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:16.667108      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:17.667553      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:18.668410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:19.669045      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:20.669697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:21.670006      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:22.670464      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:23.670504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:24.670921      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:25.671225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:26.671676      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:27.672692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:28.673545      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:29.674667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:30.675060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:31.675672      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:32.676440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:33.676663      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:34.677369      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:35.678086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:36.678547      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:37.679514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:38.680409      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:39.681416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:40.681836      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:41.682955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:42.683361      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:43.684364      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:44.684821      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:45.685016      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:46.685453      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:47.685513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:48.686383      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:49.686533      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:50.686959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:51.687387      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:52.687928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:53.688308      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:54.688687      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:55.689054      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:56.689482      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:57.690044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:58.690929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:42:59.691518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:00.692536      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:01.693456      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:02.693857      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:03.694874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:04.695318      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:05.696497      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:06.696824      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:07.698044      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:08.699049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:09.217091 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3087" for this suite. @ 12/04/24 07:43:09.221
• [78.606 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/04/24 07:43:09.226
  I1204 07:43:09.226693 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 07:43:09.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:43:09.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:43:09.244
  STEP: Creating pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685 @ 12/04/24 07:43:09.247
  E1204 07:43:09.699891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:10.700451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/04/24 07:43:11.264
  I1204 07:43:11.268339 23 container_probe.go:1749] Initial restart count of pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 is 0
  I1204 07:43:11.272293 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:11.700836      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:12.702029      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:13.278757 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:13.702900      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:14.703282      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:15.282550 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:15.704321      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:16.704776      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:17.288858 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:17.705356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:18.706229      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:19.294344 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:19.706979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:20.707592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:21.300019 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:21.708740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:22.709190      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:23.305628 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:23.709556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:24.710244      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:25.311229 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:25.710621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:26.711057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:27.316925 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:27.711848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:28.712768      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:29.322350 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:29.713068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:30.713425      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:31.328624 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:31.714086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:32.714520      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:33.334904 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:33.715598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:34.716125      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:35.341028 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:35.716398      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:36.716805      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:37.346227 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:37.717757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:38.718581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:39.350914 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:39.719580      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:40.719814      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:41.357113 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:41.720656      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:42.720993      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:43.363721 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:43.721102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:44.721444      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:45.369742 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:45.722411      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:46.722647      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:47.375285 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:47.722650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:48.723539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:49.380338 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:49.723662      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:50.724059      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:51.386844 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:51.724355      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:52.724573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:53.395959 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:53.725288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:54.725604      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:55.400758 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:55.726271      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:56.726703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:57.406368 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:57.726840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:43:58.727838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:43:59.411826 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:43:59.728047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:00.728447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:01.416432 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:01.728629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:02.729007      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:03.423938 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:03.729163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:04.729504      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:05.429618 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:05.730094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:06.730356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:07.435035 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:07.730837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:08.731811      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:09.439886 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:09.732480      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:10.732852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:11.445116 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:11.733609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:12.733987      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:13.451347 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:13.734876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:14.735284      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:15.457188 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:15.735575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:16.735984      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:17.462689 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:17.736010      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:18.736979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:19.467957 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:19.737659      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:20.738152      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:21.472570 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:21.738966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:22.739313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:23.478395 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:23.739857      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:24.740250      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:25.483901 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:25.741337      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:26.741755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:27.490448 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:27.741870      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:28.742838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:29.495397 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:29.743775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:30.744173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:31.501016 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:31.744294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:32.744625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:33.507258 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:33.745755      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:34.746158      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:35.513255 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:35.746461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:36.746835      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:37.518521 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:37.746848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:38.747867      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:39.523609 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:39.747947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:40.748366      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:41.529152 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:41.749482      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:42.749897      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:43.535798 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:43.749995      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:44.750390      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:45.541231 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:45.750603      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:46.751026      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:47.546617 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:47.751989      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:48.752957      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:49.552636 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:49.754008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:50.754718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:51.559789 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:51.755149      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:52.755529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:53.565082 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:53.756519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:54.756905      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:55.570988 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:55.757226      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:56.757639      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:57.576568 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:57.757883      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:44:58.758818      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:44:59.582205 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:44:59.759668      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:00.760075      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:01.588332 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:01.760757      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:02.761159      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:03.595050 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:03.761329      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:04.761736      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:05.600440 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:05.762838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:06.763224      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:07.606213 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:07.763394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:08.764367      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:09.611662 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:09.765065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:10.765498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:11.617204 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:11.765598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:12.766735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:13.623336 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:13.766666      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:14.767417      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:15.627981 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:15.768362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:16.768541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:17.632942 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:17.769264      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:18.770119      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:19.638451 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:19.770787      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:20.771436      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:21.642907 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:21.772076      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:22.772263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:23.649210 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:23.772410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:24.772796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:25.654016 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:25.773302      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:26.773712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:27.659508 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:27.773723      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:28.773976      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:29.664569 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:29.774888      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:30.775260      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:31.669052 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:31.776342      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:32.776743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:33.675593 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:33.777889      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:34.778201      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:35.681094 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:35.778179      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:36.778591      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:37.686342 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:37.779581      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:38.779777      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:39.692786 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:39.780131      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:40.780551      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:41.697950 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:41.781183      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:42.781597      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:43.704494 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:43.781694      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:44.781948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:45.710812 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:45.783129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:46.783537      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:47.716725 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:47.784308      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:48.785126      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:49.722332 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:49.785626      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:50.786015      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:51.727369 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:51.786628      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:52.786797      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:53.734483 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:53.787702      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:54.787967      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:55.739900 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:55.787994      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:56.788357      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:57.745386 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:57.788651      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:45:58.789483      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:45:59.751047 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:45:59.790290      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:00.790529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:01.756246 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:01.791382      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:02.792133      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:03.762518 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:03.792891      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:04.793284      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:05.767977 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:05.794215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:06.794625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:07.772756 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:07.795056      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:08.796040      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:09.777589 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:09.796916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:10.797326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:11.783212 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:11.797325      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:12.797735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:13.788459 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:13.798717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:14.799106      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:15.794455 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:15.799779      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:16.800069      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:17.799186 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:17.800272      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:18.801140      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:19.801784      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:19.805425 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:20.802502      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:21.803174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:21.811214 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:22.804022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:23.805028      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:23.818376 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:24.805509      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:25.805901      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:25.824839 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:26.806902      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:27.807622      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:27.829553 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:28.808108      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:29.808455      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:29.835616 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:30.808705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:31.809017      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:31.841915 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:32.809950      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:33.810979      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:33.847364 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:34.811511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:35.811906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:35.853252 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:36.812440      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:37.812866      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:37.859419 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:38.812991      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:39.813432      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:39.864850 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:40.814010      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:41.814491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:41.871363 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:42.815397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:43.816178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:43.877241 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:44.817248      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:45.817978      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:45.883337 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:46.818680      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:47.819094      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:47.890632 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:48.819916      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:49.820350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:49.896673 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:50.820700      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:51.820951      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:51.902156 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:52.821266      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:53.822137      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:53.908431 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:54.822404      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:55.822795      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:55.914180 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:56.823026      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:57.823448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:57.919842 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:46:58.824039      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:46:59.824287      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:46:59.925469 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:47:00.825003      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:01.825446      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:47:01.929887 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:47:02.825585      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:03.826527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:47:03.936643 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:47:04.826743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:05.827170      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:47:05.943096 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:47:06.828102      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:07.828539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:47:07.948657 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:47:08.828936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:09.830032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:47:09.954460 23 container_probe.go:1759] Get pod test-webserver-6b47974c-c521-4904-afb6-033de15a2902 in namespace container-probe-4685
  E1204 07:47:10.830531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:11.830948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 12/04/24 07:47:11.956
  I1204 07:47:11.971443 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4685" for this suite. @ 12/04/24 07:47:11.976
• [242.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/04/24 07:47:11.994
  I1204 07:47:11.994921 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:47:11.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:47:12.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:47:12.014
  STEP: Creating configMap with name configmap-test-volume-map-8035b147-f5cf-4933-954e-baddcad50044 @ 12/04/24 07:47:12.019
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:47:12.026
  E1204 07:47:12.831221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:13.832256      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:14.833257      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:15.833684      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:47:16.051
  I1204 07:47:16.055583 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-bd2410a0-7155-44cc-99f5-996843a97b58 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:47:16.078
  I1204 07:47:16.096465 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6420" for this suite. @ 12/04/24 07:47:16.102
• [4.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/04/24 07:47:16.115
  I1204 07:47:16.115076 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename events @ 12/04/24 07:47:16.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:47:16.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:47:16.133
  STEP: creating a test event @ 12/04/24 07:47:16.138
  STEP: listing all events in all namespaces @ 12/04/24 07:47:16.144
  STEP: patching the test event @ 12/04/24 07:47:16.148
  STEP: fetching the test event @ 12/04/24 07:47:16.155
  STEP: updating the test event @ 12/04/24 07:47:16.159
  STEP: getting the test event @ 12/04/24 07:47:16.169
  STEP: deleting the test event @ 12/04/24 07:47:16.172
  STEP: listing all events in all namespaces @ 12/04/24 07:47:16.179
  I1204 07:47:16.183583 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5045" for this suite. @ 12/04/24 07:47:16.202
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/04/24 07:47:16.209
  I1204 07:47:16.209980 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:47:16.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:47:16.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:47:16.237
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/04/24 07:47:16.242
  E1204 07:47:16.834609      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:17.835153      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:18.835496      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:19.835794      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:47:20.265
  I1204 07:47:20.270291 23 output.go:196] Trying to get logs from node nodea17 pod pod-dcac754e-d677-4496-b5f7-23541feee670 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:47:20.278
  I1204 07:47:20.291590 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-600" for this suite. @ 12/04/24 07:47:20.296
• [4.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/04/24 07:47:20.302
  I1204 07:47:20.302370 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 07:47:20.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:47:20.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:47:20.321
  STEP: creating the pod @ 12/04/24 07:47:20.326
  STEP: submitting the pod to kubernetes @ 12/04/24 07:47:20.326
  E1204 07:47:20.836817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:21.837221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/04/24 07:47:22.347
  STEP: updating the pod @ 12/04/24 07:47:22.351
  E1204 07:47:22.837722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:47:22.864245 23 pod_client.go:173] Successfully updated pod "pod-update-4932ecd3-d55d-41bf-9f98-583a9d1f1524"
  STEP: verifying the updated pod is in kubernetes @ 12/04/24 07:47:22.867
  I1204 07:47:22.871821 23 pods.go:391] Pod update OK
  I1204 07:47:22.872056 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4742" for this suite. @ 12/04/24 07:47:22.877
• [2.582 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/04/24 07:47:22.885
  I1204 07:47:22.885281 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:47:22.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:47:22.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:47:22.902
  STEP: Creating a pod to test downward api env vars @ 12/04/24 07:47:22.906
  E1204 07:47:23.838915      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:24.839685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:25.840245      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:26.840682      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:47:26.931
  I1204 07:47:26.935415 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-25d87284-c089-4bf4-9fdd-292f62f22d18 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:47:26.944
  I1204 07:47:26.956262 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2151" for this suite. @ 12/04/24 07:47:26.961
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/04/24 07:47:26.976
  I1204 07:47:26.976597 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:47:26.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:47:26.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:47:26.997
  STEP: Creating configMap with name configmap-test-upd-8a8a3253-d026-4db0-8177-fac28df3d6ce @ 12/04/24 07:47:27.061
  STEP: Creating the pod @ 12/04/24 07:47:27.067
  E1204 07:47:27.841247      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:28.842265      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-8a8a3253-d026-4db0-8177-fac28df3d6ce @ 12/04/24 07:47:29.096
  STEP: waiting to observe update in volume @ 12/04/24 07:47:29.101
  E1204 07:47:29.842648      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:30.843080      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:31.843278      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:32.843718      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:33.843918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:34.844352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:35.845484      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:36.845923      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:37.845999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:38.847045      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:39.847528      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:40.847946      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:41.848060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:42.848517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:43.849074      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:44.849508      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:45.850573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:46.851256      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:47.851596      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:48.852470      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:49.853251      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:50.853719      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:51.854938      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:52.855431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:53.856450      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:54.856859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:55.857655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:56.858057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:57.858804      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:58.858982      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:47:59.859164      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:00.859677      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:01.859717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:02.860093      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:03.860188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:04.860606      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:05.860805      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:06.861093      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:07.862291      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:08.863217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:09.863204      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:10.863763      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:11.863761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:12.864348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:13.864871      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:14.865272      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:15.866333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:16.866928      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:17.868087      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:18.869097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:19.869291      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:20.869728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:21.870147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:22.870626      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:23.871732      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:24.872225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:25.872274      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:26.872696      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:27.873458      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:28.874448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:29.874643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:30.875067      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:31.875443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:32.875895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:33.876667      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:34.877091      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:35.878008      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:36.878439      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:37.878464      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:38.879032      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:39.879747      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:40.880186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:41.881236      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:42.881600      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:43.882495      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:44.882937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:45.883221      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:46.883697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:47.884124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:48.885166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:49.885454      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:50.885886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:48:51.526037 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5066" for this suite. @ 12/04/24 07:48:51.531
• [84.562 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/04/24 07:48:51.538
  I1204 07:48:51.538545 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replication-controller @ 12/04/24 07:48:51.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:48:51.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:48:51.561
  STEP: Given a ReplicationController is created @ 12/04/24 07:48:51.566
  STEP: When the matched label of one of its pods change @ 12/04/24 07:48:51.573
  I1204 07:48:51.577825 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1204 07:48:51.886576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:52.887406      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:53.888278      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:54.888731      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:55.889291      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:48:56.581947 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/04/24 07:48:56.602
  E1204 07:48:56.889850      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:48:57.611889 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-86" for this suite. @ 12/04/24 07:48:57.617
• [6.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 12/04/24 07:48:57.624
  I1204 07:48:57.624890 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename resourcequota @ 12/04/24 07:48:57.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:48:57.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:48:57.642
  STEP: Counting existing ResourceQuota @ 12/04/24 07:48:57.647
  E1204 07:48:57.890152      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:58.891071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:48:59.891306      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:00.891965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:01.892773      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/04/24 07:49:02.651
  STEP: Ensuring resource quota status is calculated @ 12/04/24 07:49:02.657
  E1204 07:49:02.893770      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:03.894072      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 12/04/24 07:49:04.662
  STEP: Ensuring resource quota status captures replication controller creation @ 12/04/24 07:49:04.677
  E1204 07:49:04.894698      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:05.895099      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 12/04/24 07:49:06.683
  STEP: Ensuring resource quota status released usage @ 12/04/24 07:49:06.69
  E1204 07:49:06.895162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:07.895566      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:49:08.696713 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2459" for this suite. @ 12/04/24 07:49:08.702
• [11.084 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 12/04/24 07:49:08.708
  I1204 07:49:08.708993 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:49:08.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:49:08.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:49:08.733
  STEP: Setting up server cert @ 12/04/24 07:49:08.827
  E1204 07:49:08.895960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:49:09.173
  STEP: Deploying the webhook pod @ 12/04/24 07:49:09.185
  STEP: Wait for the deployment to be ready @ 12/04/24 07:49:09.2
  I1204 07:49:09.207483 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:49:09.896211      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:10.896670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:49:11.222
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:49:11.246
  E1204 07:49:11.897115      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:49:12.247849 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/04/24 07:49:12.256
  STEP: verifying the mutating webhook match conditions @ 12/04/24 07:49:12.265
  STEP: updating the mutating webhook match conditions @ 12/04/24 07:49:12.268
  STEP: verifying the mutating webhook match conditions @ 12/04/24 07:49:12.276
  I1204 07:49:12.319882 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5271" for this suite. @ 12/04/24 07:49:12.325
  STEP: Destroying namespace "webhook-markers-1208" for this suite. @ 12/04/24 07:49:12.33
• [3.627 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 12/04/24 07:49:12.336
  I1204 07:49:12.336075 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename disruption @ 12/04/24 07:49:12.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:49:12.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:49:12.353
  STEP: creating the pdb @ 12/04/24 07:49:12.358
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:49:12.363
  STEP: updating the pdb @ 12/04/24 07:49:12.368
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:49:12.376
  E1204 07:49:12.898288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:13.899062      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 12/04/24 07:49:14.382
  STEP: Waiting for the pdb to be processed @ 12/04/24 07:49:14.392
  E1204 07:49:14.899066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:15.899579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 12/04/24 07:49:16.403
  I1204 07:49:16.406769 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4755" for this suite. @ 12/04/24 07:49:16.412
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 12/04/24 07:49:16.418
  I1204 07:49:16.418789 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:49:16.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:49:16.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:49:16.439
  STEP: creating service in namespace services-2607 @ 12/04/24 07:49:16.444
  STEP: creating service affinity-clusterip-transition in namespace services-2607 @ 12/04/24 07:49:16.444
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2607 @ 12/04/24 07:49:16.46
  I1204 07:49:16.479194      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2607, replica count: 3
  E1204 07:49:16.900017      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:17.900086      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:18.901064      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:49:19.530241      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 07:49:19.538707 23 resource.go:361] Creating new exec pod
  E1204 07:49:19.901141      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:20.901545      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:21.902531      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:49:22.552573 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2607 exec execpod-affinitylf6pz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1204 07:49:22.725869 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1204 07:49:22.725947 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1204 07:49:22.726050 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2607 exec execpod-affinitylf6pz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.126.134 80'
  I1204 07:49:22.893812 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.126.134 80\nConnection to 10.97.126.134 80 port [tcp/http] succeeded!\n"
  I1204 07:49:22.893882 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  E1204 07:49:22.902618      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:49:22.905415 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2607 exec execpod-affinitylf6pz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.126.134:80/ ; done'
  E1204 07:49:23.903673      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:24.903999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:25.904319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:26.904904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:27.905741      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:28.906461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:29.906640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:30.907043      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:31.907319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:49:32.239625 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n"
  I1204 07:49:32.239725 23 builder.go:147] stdout: "\n\n\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-lvkvp\n\n\naffinity-clusterip-transition-kmwbs\naffinity-clusterip-transition-kmwbs\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-kmwbs\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-kmwbs"
  I1204 07:49:32.239758 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:49:32.239781 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:49:32.239801 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  I1204 07:49:32.239820 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  I1204 07:49:32.239840 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:49:32.239859 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  I1204 07:49:32.239881 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:49:32.240025 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:49:32.240056 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:49:32.240075 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:49:32.240092 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:49:32.240111 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  E1204 07:49:32.907587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:33.908456      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:34.908904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:35.909346      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:36.909790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:37.910217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:38.911273      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:39.911760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:40.912129      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:41.912473      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:42.912858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:43.913889      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:44.914263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:45.914659      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:46.915065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:47.915540      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:48.916207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:49.916602      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:50.917023      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:51.917431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:52.918373      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:53.919318      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:54.919723      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:55.920069      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:56.920947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:57.921345      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:58.922071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:49:59.922410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:00.922805      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:01.923210      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:02.241047 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2607 exec execpod-affinitylf6pz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.126.134:80/ ; done'
  I1204 07:50:02.525049 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n"
  I1204 07:50:02.525130 23 builder.go:147] stdout: "\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-kmwbs\naffinity-clusterip-transition-kmwbs\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-kmwbs\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-75ft7\naffinity-clusterip-transition-75ft7"
  I1204 07:50:02.525155 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525184 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525197 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.525210 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525224 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525237 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  I1204 07:50:02.525253 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  I1204 07:50:02.525279 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.525298 23 service.go:242] Received response from host: affinity-clusterip-transition-kmwbs
  I1204 07:50:02.525313 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525326 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525340 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525353 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.525370 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.525383 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.525397 23 service.go:242] Received response from host: affinity-clusterip-transition-75ft7
  I1204 07:50:02.543150 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-2607 exec execpod-affinitylf6pz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.126.134:80/ ; done'
  I1204 07:50:02.845868 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.126.134:80/\n"
  I1204 07:50:02.845969 23 builder.go:147] stdout: "\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp\naffinity-clusterip-transition-lvkvp"
  I1204 07:50:02.846001 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846023 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846041 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846060 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846078 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846095 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846112 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846129 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846146 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846163 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846181 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846197 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846214 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846231 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846249 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846265 23 service.go:242] Received response from host: affinity-clusterip-transition-lvkvp
  I1204 07:50:02.846378 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2607, will wait for the garbage collector to delete the pods @ 12/04/24 07:50:02.862
  I1204 07:50:02.923707 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 6.360229ms
  E1204 07:50:02.923859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:03.024836 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.124145ms
  E1204 07:50:03.924903      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:04.925561      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:05.926018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:06.442091 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2607" for this suite. @ 12/04/24 07:50:06.455
• [50.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/04/24 07:50:06.46
  I1204 07:50:06.461000 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/04/24 07:50:06.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:06.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:06.482
  STEP: creating a target pod @ 12/04/24 07:50:06.486
  E1204 07:50:06.926353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:07.927419      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/04/24 07:50:08.507
  E1204 07:50:08.928412      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:09.928856      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/04/24 07:50:10.529
  I1204 07:50:10.529554 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4555 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:50:10.529591 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:50:10.530654 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:50:10.530767 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-4555/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1204 07:50:10.605717 23 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/04/24 07:50:10.612
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/04/24 07:50:10.618
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/04/24 07:50:10.632
  I1204 07:50:10.636906 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4555" for this suite. @ 12/04/24 07:50:10.641
• [4.188 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/04/24 07:50:10.649
  I1204 07:50:10.649122 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-runtime @ 12/04/24 07:50:10.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:10.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:10.668
  STEP: create the container @ 12/04/24 07:50:10.673
  W1204 07:50:10.680777      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/04/24 07:50:10.68
  E1204 07:50:10.929724      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:11.930727      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/04/24 07:50:12.692
  STEP: the container should be terminated @ 12/04/24 07:50:12.696
  STEP: the termination message should be set @ 12/04/24 07:50:12.696
  I1204 07:50:12.696289 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/04/24 07:50:12.696
  I1204 07:50:12.711160 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4768" for this suite. @ 12/04/24 07:50:12.716
• [2.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/04/24 07:50:12.726
  I1204 07:50:12.726093 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replication-controller @ 12/04/24 07:50:12.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:12.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:12.753
  I1204 07:50:12.758381 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1204 07:50:12.931837      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/04/24 07:50:13.771
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/04/24 07:50:13.778
  E1204 07:50:13.932591      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/04/24 07:50:14.786
  I1204 07:50:14.798933 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/04/24 07:50:14.799
  E1204 07:50:14.933568      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:15.805637 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2886" for this suite. @ 12/04/24 07:50:15.81
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/04/24 07:50:15.816
  I1204 07:50:15.816750 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename container-probe @ 12/04/24 07:50:15.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:15.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:15.886
  E1204 07:50:15.933906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:16.934865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:17.934898      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:18.935583      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:19.936292      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:20.936842      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:21.937289      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:22.937699      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:23.938457      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:24.938874      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:25.939637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:26.940331      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:27.940872      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:28.941911      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:29.942703      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:30.942983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:31.943407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:32.944550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:33.945263      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:34.945704      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:35.946156      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:36.946693      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:37.947126      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:37.971839 23 container_probe.go:92] Container started at 2024-12-04 07:50:16 +0000 UTC, pod became ready at 2024-12-04 07:50:36 +0000 UTC
  I1204 07:50:37.972171 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3867" for this suite. @ 12/04/24 07:50:37.977
• [22.167 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 12/04/24 07:50:37.984
  I1204 07:50:37.984605 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename kubectl-logs @ 12/04/24 07:50:37.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:38.003
  STEP: creating a pod @ 12/04/24 07:50:38.008
  I1204 07:50:38.008298 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1204 07:50:38.105165 23 builder.go:146] stderr: ""
  I1204 07:50:38.105232 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/04/24 07:50:38.105
  I1204 07:50:38.105394 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1204 07:50:38.947178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:39.947637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:40.113737 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/04/24 07:50:40.113
  I1204 07:50:40.113898 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 logs logs-generator logs-generator'
  I1204 07:50:40.206924 23 builder.go:146] stderr: ""
  I1204 07:50:40.207027 23 builder.go:147] stdout: "I1204 07:50:38.690236       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/dt4 479\nI1204 07:50:38.890818       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/5sf4 381\nI1204 07:50:39.091402       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/cts 265\nI1204 07:50:39.290984       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/ks96 584\nI1204 07:50:39.490366       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/pbq 438\nI1204 07:50:39.690935       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/h78 417\nI1204 07:50:39.890368       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/dxt8 585\nI1204 07:50:40.090829       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/mx2 268\n"
  STEP: limiting log lines @ 12/04/24 07:50:40.207
  I1204 07:50:40.207157 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 logs logs-generator logs-generator --tail=1'
  I1204 07:50:40.301792 23 builder.go:146] stderr: ""
  I1204 07:50:40.301874 23 builder.go:147] stdout: "I1204 07:50:40.291407       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b7bx 336\n"
  I1204 07:50:40.301903 23 logs.go:180] got output "I1204 07:50:40.291407       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b7bx 336\n"
  STEP: limiting log bytes @ 12/04/24 07:50:40.301
  I1204 07:50:40.302047 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 logs logs-generator logs-generator --limit-bytes=1'
  I1204 07:50:40.398099 23 builder.go:146] stderr: ""
  I1204 07:50:40.398176 23 builder.go:147] stdout: "I"
  I1204 07:50:40.398202 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 12/04/24 07:50:40.398
  I1204 07:50:40.398369 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 logs logs-generator logs-generator --tail=1 --timestamps'
  I1204 07:50:40.494475 23 builder.go:146] stderr: ""
  I1204 07:50:40.494561 23 builder.go:147] stdout: "2024-12-04T07:50:40.291729457Z I1204 07:50:40.291407       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b7bx 336\n"
  I1204 07:50:40.494594 23 logs.go:192] got output "2024-12-04T07:50:40.291729457Z I1204 07:50:40.291407       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b7bx 336\n"
  STEP: restricting to a time range @ 12/04/24 07:50:40.494
  E1204 07:50:40.947847      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:41.948258      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:42.948717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:42.995180 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 logs logs-generator logs-generator --since=1s'
  I1204 07:50:43.096343 23 builder.go:146] stderr: ""
  I1204 07:50:43.096409 23 builder.go:147] stdout: "I1204 07:50:42.091151       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/txfk 418\nI1204 07:50:42.290462       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/t8dj 540\nI1204 07:50:42.490864       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/zf6l 517\nI1204 07:50:42.691493       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/zvz 427\nI1204 07:50:42.890780       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/vps 207\n"
  I1204 07:50:43.096476 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 logs logs-generator logs-generator --since=24h'
  I1204 07:50:43.205354 23 builder.go:146] stderr: ""
  I1204 07:50:43.205511 23 builder.go:147] stdout: "I1204 07:50:38.690236       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/dt4 479\nI1204 07:50:38.890818       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/5sf4 381\nI1204 07:50:39.091402       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/cts 265\nI1204 07:50:39.290984       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/ks96 584\nI1204 07:50:39.490366       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/pbq 438\nI1204 07:50:39.690935       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/h78 417\nI1204 07:50:39.890368       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/dxt8 585\nI1204 07:50:40.090829       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/mx2 268\nI1204 07:50:40.291407       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/b7bx 336\nI1204 07:50:40.490830       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/fdgb 476\nI1204 07:50:40.691231       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/hk6x 534\nI1204 07:50:40.890603       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/qbs 475\nI1204 07:50:41.091094       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/pxjl 408\nI1204 07:50:41.290425       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/852 215\nI1204 07:50:41.490921       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/t7z 358\nI1204 07:50:41.691271       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/xsp 450\nI1204 07:50:41.890760       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/k24 302\nI1204 07:50:42.091151       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/txfk 418\nI1204 07:50:42.290462       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/t8dj 540\nI1204 07:50:42.490864       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/zf6l 517\nI1204 07:50:42.691493       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/zvz 427\nI1204 07:50:42.890780       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/vps 207\nI1204 07:50:43.091438       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/pw8 583\n"
  I1204 07:50:43.205770 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=kubectl-logs-7474 delete pod logs-generator'
  E1204 07:50:43.949728      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:44.502589 23 builder.go:146] stderr: ""
  I1204 07:50:44.502668 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1204 07:50:44.502861 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7474" for this suite. @ 12/04/24 07:50:44.508
• [6.530 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/04/24 07:50:44.515
  I1204 07:50:44.515139 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/04/24 07:50:44.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:44.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:44.533
  E1204 07:50:44.950066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:45.951041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 12/04/24 07:50:46.568
  STEP: Cleaning up the configmap @ 12/04/24 07:50:46.573
  STEP: Cleaning up the pod @ 12/04/24 07:50:46.58
  I1204 07:50:46.589252 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4686" for this suite. @ 12/04/24 07:50:46.593
• [2.084 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 12/04/24 07:50:46.599
  I1204 07:50:46.599430 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:50:46.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:46.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:46.616
  STEP: creating an Endpoint @ 12/04/24 07:50:46.639
  STEP: waiting for available Endpoint @ 12/04/24 07:50:46.651
  STEP: listing all Endpoints @ 12/04/24 07:50:46.653
  STEP: updating the Endpoint @ 12/04/24 07:50:46.655
  STEP: fetching the Endpoint @ 12/04/24 07:50:46.661
  STEP: patching the Endpoint @ 12/04/24 07:50:46.663
  STEP: fetching the Endpoint @ 12/04/24 07:50:46.673
  STEP: deleting the Endpoint by Collection @ 12/04/24 07:50:46.676
  STEP: waiting for Endpoint deletion @ 12/04/24 07:50:46.683
  STEP: fetching the Endpoint @ 12/04/24 07:50:46.685
  I1204 07:50:46.688224 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7450" for this suite. @ 12/04/24 07:50:46.694
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/04/24 07:50:46.7
  I1204 07:50:46.700777 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/04/24 07:50:46.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:46.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:46.718
  STEP: getting /apis @ 12/04/24 07:50:46.73
  STEP: getting /apis/admissionregistration.k8s.io @ 12/04/24 07:50:46.737
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/04/24 07:50:46.739
  STEP: creating @ 12/04/24 07:50:46.741
  STEP: getting @ 12/04/24 07:50:46.755
  STEP: listing @ 12/04/24 07:50:46.763
  STEP: watching @ 12/04/24 07:50:46.765
  I1204 07:50:46.765564 23 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/04/24 07:50:46.766
  STEP: updating @ 12/04/24 07:50:46.773
  I1204 07:50:46.801887 23 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 12/04/24 07:50:46.802
  STEP: patching /status @ 12/04/24 07:50:46.808
  STEP: updating /status @ 12/04/24 07:50:46.814
  STEP: deleting @ 12/04/24 07:50:46.854
  STEP: deleting a collection @ 12/04/24 07:50:46.866
  I1204 07:50:46.880681 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9278" for this suite. @ 12/04/24 07:50:46.885
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/04/24 07:50:46.891
  I1204 07:50:46.891632 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:50:46.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:46.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:46.909
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/04/24 07:50:46.913
  E1204 07:50:46.952024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:47.952691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:48.953295      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:49.953769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:50:50.938
  I1204 07:50:50.942209 23 output.go:196] Trying to get logs from node nodea17 pod pod-764326cc-da44-44a7-839d-062562e852c2 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:50:50.949
  E1204 07:50:50.954285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:50.966051 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6953" for this suite. @ 12/04/24 07:50:50.97
• [4.084 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/04/24 07:50:50.975
  I1204 07:50:50.975541 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename watch @ 12/04/24 07:50:50.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:50.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:50.993
  STEP: creating a new configmap @ 12/04/24 07:50:50.998
  STEP: modifying the configmap once @ 12/04/24 07:50:51.002
  STEP: modifying the configmap a second time @ 12/04/24 07:50:51.009
  STEP: deleting the configmap @ 12/04/24 07:50:51.019
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/04/24 07:50:51.023
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/04/24 07:50:51.025
  I1204 07:50:51.025904 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9748  cda55d69-5b91-4de9-9f3a-44e01db11a2c 34626 0 2024-12-04 07:50:50 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-04 07:50:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:50:51.026134 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9748  cda55d69-5b91-4de9-9f3a-44e01db11a2c 34627 0 2024-12-04 07:50:50 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-04 07:50:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1204 07:50:51.026273 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9748" for this suite. @ 12/04/24 07:50:51.071
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 12/04/24 07:50:51.077
  I1204 07:50:51.077491 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename crd-webhook @ 12/04/24 07:50:51.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:51.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:51.097
  STEP: Setting up server cert @ 12/04/24 07:50:51.101
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/04/24 07:50:51.706
  STEP: Deploying the custom resource conversion webhook pod @ 12/04/24 07:50:51.72
  STEP: Wait for the deployment to be ready @ 12/04/24 07:50:51.729
  I1204 07:50:51.735859 23 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1204 07:50:51.955372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:52.955840      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:50:53.749
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:50:53.763
  E1204 07:50:53.956514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:54.764619 23 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1204 07:50:54.774965 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:50:54.957498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:55.957948      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:56.959101      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 12/04/24 07:50:57.371
  STEP: Create a v2 custom resource @ 12/04/24 07:50:57.391
  STEP: List CRs in v1 @ 12/04/24 07:50:57.44
  STEP: List CRs in v2 @ 12/04/24 07:50:57.444
  E1204 07:50:57.959579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:50:58.002265 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3724" for this suite. @ 12/04/24 07:50:58.007
• [6.934 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/04/24 07:50:58.013
  I1204 07:50:58.013266 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename downward-api @ 12/04/24 07:50:58.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:50:58.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:50:58.03
  STEP: Creating a pod to test downward api env vars @ 12/04/24 07:50:58.034
  E1204 07:50:58.960005      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:50:59.960722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:00.961348      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:01.961605      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:51:02.056
  I1204 07:51:02.061416 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-0ec985c3-ce94-439b-b824-71f5ec0b6275 container dapi-container: <nil>
  STEP: delete the pod @ 12/04/24 07:51:02.069
  I1204 07:51:02.085349 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4099" for this suite. @ 12/04/24 07:51:02.091
• [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/04/24 07:51:02.099
  I1204 07:51:02.099167 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:51:02.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:02.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:02.12
  STEP: Creating service test in namespace statefulset-2535 @ 12/04/24 07:51:02.124
  I1204 07:51:02.140677 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E1204 07:51:02.961838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:03.962038      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:04.962499      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:05.962954      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:06.963386      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:07.963821      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:08.963978      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:09.964394      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:10.964737      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:11.965173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:12.141534 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/04/24 07:51:12.149
  I1204 07:51:12.167541 23 wait.go:40] Found 1 stateful pods, waiting for 2
  E1204 07:51:12.966565      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:13.966139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:14.966476      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:15.966892      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:16.967638      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:17.967810      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:18.968852      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:19.969235      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:20.969617      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:21.969996      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:22.169007 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:51:22.169078 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/04/24 07:51:22.177
  STEP: Delete all of the StatefulSets @ 12/04/24 07:51:22.181
  STEP: Verify that StatefulSets have been deleted @ 12/04/24 07:51:22.187
  I1204 07:51:22.190888 23 statefulset.go:138] Deleting all statefulset in ns statefulset-2535
  I1204 07:51:22.205319 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2535" for this suite. @ 12/04/24 07:51:22.21
• [20.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/04/24 07:51:22.216
  I1204 07:51:22.216347 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 07:51:22.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:22.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:22.234
  I1204 07:51:22.237722 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: creating the pod @ 12/04/24 07:51:22.238
  STEP: submitting the pod to kubernetes @ 12/04/24 07:51:22.238
  E1204 07:51:22.970772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:23.970983      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:24.350639 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2358" for this suite. @ 12/04/24 07:51:24.356
• [2.146 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/04/24 07:51:24.362
  I1204 07:51:24.363005 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/04/24 07:51:24.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:24.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:24.385
  STEP: creating a policy with variables @ 12/04/24 07:51:24.396
  STEP: waiting until the marker is denied @ 12/04/24 07:51:24.422
  STEP: testing a replicated Deployment to be allowed @ 12/04/24 07:51:24.832
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/04/24 07:51:24.842
  I1204 07:51:24.887250 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3263" for this suite. @ 12/04/24 07:51:24.891
• [0.535 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 12/04/24 07:51:24.897
  I1204 07:51:24.897666 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:51:24.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:24.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:24.913
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-833 @ 12/04/24 07:51:24.917
  STEP: changing the ExternalName service to type=NodePort @ 12/04/24 07:51:24.921
  STEP: creating replication controller externalname-service in namespace services-833 @ 12/04/24 07:51:24.94
  I1204 07:51:24.954306      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-833, replica count: 2
  E1204 07:51:24.971879      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:25.972390      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:26.973047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:27.973701      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:28.006193      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1204 07:51:28.006286 23 resource.go:361] Creating new exec pod
  E1204 07:51:28.974109      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:29.974219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:30.975198      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:31.026870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1204 07:51:31.202425 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1204 07:51:31.202505 23 builder.go:147] stdout: "externalname-service-dj5lr"
  I1204 07:51:31.202622 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.194.188 80'
  I1204 07:51:31.364205 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.194.188 80\nConnection to 10.99.194.188 80 port [tcp/http] succeeded!\n"
  I1204 07:51:31.364314 23 builder.go:147] stdout: ""
  E1204 07:51:31.976105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:32.203363 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.194.188 80'
  I1204 07:51:32.376171 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.194.188 80\nConnection to 10.99.194.188 80 port [tcp/http] succeeded!\n"
  I1204 07:51:32.376251 23 builder.go:147] stdout: ""
  E1204 07:51:32.977189      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:33.202742 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.194.188 80'
  I1204 07:51:33.373272 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.194.188 80\nConnection to 10.99.194.188 80 port [tcp/http] succeeded!\n"
  I1204 07:51:33.373351 23 builder.go:147] stdout: "externalname-service-dj5lr"
  I1204 07:51:33.373476 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 31524'
  I1204 07:51:33.532056 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 31524\nConnection to 192.168.100.37 31524 port [tcp/*] succeeded!\n"
  I1204 07:51:33.532161 23 builder.go:147] stdout: "externalname-service-dj5lr"
  I1204 07:51:33.532279 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31524'
  I1204 07:51:33.701406 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31524\nConnection to 192.168.100.114 31524 port [tcp/*] succeeded!\n"
  I1204 07:51:33.701481 23 builder.go:147] stdout: ""
  E1204 07:51:33.978098      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:34.533481 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31524'
  I1204 07:51:34.693779 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31524\nConnection to 192.168.100.114 31524 port [tcp/*] succeeded!\n"
  I1204 07:51:34.693857 23 builder.go:147] stdout: ""
  E1204 07:51:34.978215      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:35.533289 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=services-833 exec execpod95hth -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31524'
  I1204 07:51:35.699883 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31524\nConnection to 192.168.100.114 31524 port [tcp/*] succeeded!\n"
  I1204 07:51:35.699969 23 builder.go:147] stdout: "externalname-service-dj5lr"
  I1204 07:51:35.700128 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1204 07:51:35.729932 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-833" for this suite. @ 12/04/24 07:51:35.734
• [10.844 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/04/24 07:51:35.742
  I1204 07:51:35.742103 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:51:35.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:35.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:35.76
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/04/24 07:51:35.764
  E1204 07:51:35.979226      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:36.979661      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:37.980314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:38.981078      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:51:39.788
  I1204 07:51:39.791766 23 output.go:196] Trying to get logs from node nodea17 pod pod-56ad982a-add7-4050-9467-0e868c74b82d container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:51:39.799
  I1204 07:51:39.818818 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2483" for this suite. @ 12/04/24 07:51:39.828
• [4.100 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/04/24 07:51:39.842
  I1204 07:51:39.842105 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:51:39.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:39.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:39.859
  STEP: Creating the pod @ 12/04/24 07:51:39.864
  E1204 07:51:39.981121      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:40.981777      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:41.982124      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:42.402883 23 pod_client.go:173] Successfully updated pod "annotationupdate01dbb8e3-8e62-4e9e-a6e3-d6fc2952036e"
  E1204 07:51:42.983030      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:43.984139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:44.984468      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:45.984956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:46.426372 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-168" for this suite. @ 12/04/24 07:51:46.431
• [6.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/04/24 07:51:46.44
  I1204 07:51:46.440317 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename csi-storageclass @ 12/04/24 07:51:46.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:46.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:46.46
  STEP: Creating a StorageClass @ 12/04/24 07:51:46.464
  STEP: Get StorageClass "e2e-x6t5j" @ 12/04/24 07:51:46.469
  STEP: Patching the StorageClass "e2e-x6t5j" @ 12/04/24 07:51:46.473
  STEP: Delete StorageClass "e2e-x6t5j" @ 12/04/24 07:51:46.484
  STEP: Confirm deletion of StorageClass "e2e-x6t5j" @ 12/04/24 07:51:46.489
  STEP: Create a replacement StorageClass @ 12/04/24 07:51:46.492
  STEP: Updating StorageClass "e2e-v2-n9d5c" @ 12/04/24 07:51:46.496
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-n9d5c=updated" @ 12/04/24 07:51:46.503
  STEP: Deleting StorageClass "e2e-v2-n9d5c" via DeleteCollection @ 12/04/24 07:51:46.507
  STEP: Confirm deletion of StorageClass "e2e-v2-n9d5c" @ 12/04/24 07:51:46.513
  I1204 07:51:46.516376 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1867" for this suite. @ 12/04/24 07:51:46.531
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/04/24 07:51:46.539
  I1204 07:51:46.539880 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename volumeattachment @ 12/04/24 07:51:46.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:46.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:46.559
  STEP: Create VolumeAttachment "va-e2e-wlbt5" on node "nodea17" @ 12/04/24 07:51:46.632
  STEP: Get VolumeAttachment "va-e2e-wlbt5" on node "nodea17" @ 12/04/24 07:51:46.638
  STEP: Patch VolumeAttachment "va-e2e-wlbt5" on node "nodea17" @ 12/04/24 07:51:46.641
  STEP: List VolumeAttachments with "va-e2e-wlbt5=patched" label @ 12/04/24 07:51:46.647
  STEP: Delete VolumeAttachment "va-e2e-wlbt5" on node "nodea17" @ 12/04/24 07:51:46.65
  STEP: Confirm deletion of VolumeAttachment "va-e2e-wlbt5" on node "nodea17" @ 12/04/24 07:51:46.655
  STEP: Create VolumeAttachment "va-e2e-jvt9k" on node "nodea17" @ 12/04/24 07:51:46.732
  STEP: Update the VolumeAttachment "va-e2e-jvt9k" on node "nodea17" with label "va-e2e=updated" @ 12/04/24 07:51:46.736
  STEP: Create VolumeAttachment "va-e2e-nnhpd" on node "nodeb14" @ 12/04/24 07:51:46.833
  STEP: Update the VolumeAttachment "va-e2e-nnhpd" on node "nodeb14" with label "va-e2e=updated" @ 12/04/24 07:51:46.839
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/04/24 07:51:46.847
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/04/24 07:51:46.857
  I1204 07:51:46.860851 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3493" for this suite. @ 12/04/24 07:51:46.934
• [0.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/04/24 07:51:46.944
  I1204 07:51:46.944271 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/04/24 07:51:46.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:46.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:46.962
  STEP: getting /apis @ 12/04/24 07:51:46.966
  STEP: getting /apis/storage.k8s.io @ 12/04/24 07:51:46.973
  STEP: getting /apis/storage.k8s.io/v1 @ 12/04/24 07:51:46.975
  STEP: creating @ 12/04/24 07:51:46.977
  E1204 07:51:46.985020      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: watching @ 12/04/24 07:51:46.994
  I1204 07:51:46.994705 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/04/24 07:51:47.001
  STEP: listing in namespace @ 12/04/24 07:51:47.004
  STEP: listing across namespaces @ 12/04/24 07:51:47.008
  STEP: patching @ 12/04/24 07:51:47.011
  STEP: updating @ 12/04/24 07:51:47.017
  I1204 07:51:47.023499 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1204 07:51:47.023655 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/04/24 07:51:47.023
  STEP: deleting a collection @ 12/04/24 07:51:47.035
  I1204 07:51:47.047411 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-501" for this suite. @ 12/04/24 07:51:47.052
• [0.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/04/24 07:51:47.057
  I1204 07:51:47.057658 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/04/24 07:51:47.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:47.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:47.076
  STEP: Setting up the test @ 12/04/24 07:51:47.083
  STEP: Creating hostNetwork=false pod @ 12/04/24 07:51:47.083
  E1204 07:51:47.985186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:48.985576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 12/04/24 07:51:49.108
  E1204 07:51:49.985881      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:50.986327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Running the test @ 12/04/24 07:51:51.128
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/04/24 07:51:51.128
  I1204 07:51:51.128174 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.128209 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.129110 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.129218 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1204 07:51:51.208059 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.208128 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.208145 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.208795 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.208876 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1204 07:51:51.285018 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.285083 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.285100 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.285977 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.286063 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1204 07:51:51.359631 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.359756 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.359796 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.361225 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.361383 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1204 07:51:51.433212 23 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/04/24 07:51:51.433
  I1204 07:51:51.433310 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.433326 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.433946 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.434021 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1204 07:51:51.505764 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.505849 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.505877 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.507135 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.507275 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1204 07:51:51.574087 23 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/04/24 07:51:51.574
  I1204 07:51:51.574210 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.574233 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.575250 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.575366 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1204 07:51:51.683986 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.684067 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.684090 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.684925 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.685036 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1204 07:51:51.788720 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.788811 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.788836 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.789750 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.789867 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1204 07:51:51.896080 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.896163 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1513 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:51:51.896188 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:51:51.897216 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:51:51.897341 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1513/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E1204 07:51:51.986548      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:51.996016 23 exec_util.go:111] Exec stderr: ""
  I1204 07:51:51.996230 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1513" for this suite. @ 12/04/24 07:51:52.001
• [4.952 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/04/24 07:51:52.009
  I1204 07:51:52.009817 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename containers @ 12/04/24 07:51:52.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:52.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:52.031
  STEP: Creating a pod to test override arguments @ 12/04/24 07:51:52.036
  E1204 07:51:52.987629      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:53.987794      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:51:54.076
  I1204 07:51:54.079867 23 output.go:196] Trying to get logs from node nodea17 pod client-containers-c7a3201e-5b10-4540-9ad0-8460ea01f09a container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:51:54.087
  I1204 07:51:54.103038 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5232" for this suite. @ 12/04/24 07:51:54.107
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/04/24 07:51:54.115
  I1204 07:51:54.115265 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename deployment @ 12/04/24 07:51:54.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:54.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:54.157
  I1204 07:51:54.161309 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I1204 07:51:54.172931 23 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E1204 07:51:54.988846      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:55.989229      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 12/04/24 07:51:56.189
  STEP: updating a scale subresource @ 12/04/24 07:51:56.192
  STEP: verifying the deployment Spec.Replicas was modified @ 12/04/24 07:51:56.199
  STEP: Patch a scale subresource @ 12/04/24 07:51:56.202
  I1204 07:51:56.217655 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aeee4180-d3ed-4e54-b055-23357a7d3662",
      ResourceVersion: (string) (len=5) "35358",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868895514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1204 07:51:56.228585 23 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a142c0ee-f98e-48b3-bdea-1ce7ca1c6ce3",
      ResourceVersion: (string) (len=5) "35366",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868895514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "aeee4180-d3ed-4e54-b055-23357a7d3662",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 65 65 65 34 31  38 30 2d 64 33 65 64 2d  |\"aeee4180-d3ed-|
              00000120  34 65 35 34 2d 62 30 35  35 2d 32 33 33 35 37 61  |4e54-b055-23357a|
              00000130  37 64 33 36 36 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7d3662\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1204 07:51:56.234782 23 deployment.go:67] Pod "test-new-deployment-64bcfc6446-cmd88" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-cmd88",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db1b1b99-863a-4190-8fea-290e7fc8d674",
      ResourceVersion: (string) (len=5) "35353",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868895514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "a142c0ee-f98e-48b3-bdea-1ce7ca1c6ce3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  34 32 63 30 65 65 2d 66  |d\":\"a142c0ee-f|
              00000090  39 38 65 2d 34 38 62 33  2d 62 64 65 61 2d 31 63  |98e-48b3-bdea-1c|
              000000a0  65 37 63 61 31 63 36 63  65 33 5c 22 7d 22 3a 7b  |e7ca1c6ce3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 5c 22 7d 22 3a 7b 22  |.244.1.20\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bm4q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bm4q9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868895514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868895514,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f64048c07535af3394f6a88d1a968d9ff9d10b2b55e600f56e0003d47200c310",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bm4q9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 07:51:56.239140 23 deployment.go:67] Pod "test-new-deployment-64bcfc6446-rjwgl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-rjwgl",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ce8e347-bac6-4d24-b214-61fb1204e0a3",
      ResourceVersion: (string) (len=5) "35367",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868895516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "a142c0ee-f98e-48b3-bdea-1ce7ca1c6ce3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 31  34 32 63 30 65 65 2d 66  |d\":\"a142c0ee-f|
              00000090  39 38 65 2d 34 38 62 33  2d 62 64 65 61 2d 31 63  |98e-48b3-bdea-1c|
              000000a0  65 37 63 61 31 63 36 63  65 33 5c 22 7d 22 3a 7b  |e7ca1c6ce3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4zj86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4zj86",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868895516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868895516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4zj86",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1204 07:51:56.243163 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9173" for this suite. @ 12/04/24 07:51:56.251
• [2.148 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/04/24 07:51:56.263
  I1204 07:51:56.263760 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename pods @ 12/04/24 07:51:56.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:51:56.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:51:56.292
  STEP: Create set of pods @ 12/04/24 07:51:56.297
  I1204 07:51:56.304979 23 pods.go:871] created test-pod-1
  I1204 07:51:56.310925 23 pods.go:871] created test-pod-2
  I1204 07:51:56.331370 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/04/24 07:51:56.331
  E1204 07:51:56.989301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:51:57.989895      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 12/04/24 07:51:58.358
  I1204 07:51:58.362010 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1204 07:51:58.990592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:51:59.364069 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1204 07:51:59.990671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:00.364122 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-822" for this suite. @ 12/04/24 07:52:00.369
• [4.112 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/04/24 07:52:00.376
  I1204 07:52:00.376436 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename replicaset @ 12/04/24 07:52:00.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:00.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:00.394
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/04/24 07:52:00.399
  E1204 07:52:00.991685      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:01.992402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 12/04/24 07:52:02.417
  STEP: Then the orphan pod is adopted @ 12/04/24 07:52:02.423
  E1204 07:52:02.992573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 12/04/24 07:52:03.432
  I1204 07:52:03.437733 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/04/24 07:52:03.451
  E1204 07:52:03.993649      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:04.461446 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5941" for this suite. @ 12/04/24 07:52:04.467
• [4.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/04/24 07:52:04.475
  I1204 07:52:04.475289 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:52:04.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:04.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:04.493
  STEP: Creating the pod @ 12/04/24 07:52:04.498
  E1204 07:52:04.993933      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:05.994128      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:06.994955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:07.042156 23 pod_client.go:173] Successfully updated pod "labelsupdate776d0cec-63ea-4efc-9b5f-13943c4005cd"
  E1204 07:52:07.995352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:08.996131      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:09.996243      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:10.996430      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:11.067764 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3868" for this suite. @ 12/04/24 07:52:11.072
• [6.604 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 12/04/24 07:52:11.079
  I1204 07:52:11.079581 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:52:11.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:11.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:11.097
  STEP: Setting up server cert @ 12/04/24 07:52:11.197
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:52:11.507
  STEP: Deploying the webhook pod @ 12/04/24 07:52:11.517
  STEP: Wait for the deployment to be ready @ 12/04/24 07:52:11.528
  I1204 07:52:11.535363 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:52:11.996956      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:12.997640      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:52:13.549
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:52:13.564
  E1204 07:52:13.998097      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:14.564705 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/04/24 07:52:14.642
  STEP: Creating a configMap that should be mutated @ 12/04/24 07:52:14.661
  STEP: Deleting the collection of validation webhooks @ 12/04/24 07:52:14.703
  STEP: Creating a configMap that should not be mutated @ 12/04/24 07:52:14.733
  I1204 07:52:14.776881 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1735" for this suite. @ 12/04/24 07:52:14.783
  STEP: Destroying namespace "webhook-markers-9835" for this suite. @ 12/04/24 07:52:14.788
• [3.714 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/04/24 07:52:14.794
  I1204 07:52:14.794257 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename var-expansion @ 12/04/24 07:52:14.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:14.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:14.812
  STEP: creating the pod @ 12/04/24 07:52:14.817
  STEP: waiting for pod running @ 12/04/24 07:52:14.827
  E1204 07:52:14.998155      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:15.998806      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 12/04/24 07:52:16.836
  I1204 07:52:16.842282 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1410 PodName:var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:52:16.842355 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:52:16.843604 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:52:16.843719 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1410/pods/var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/04/24 07:52:16.916
  I1204 07:52:16.919973 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1410 PodName:var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1204 07:52:16.920031 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  I1204 07:52:16.920915 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I1204 07:52:16.921007 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1410/pods/var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/04/24 07:52:16.989
  E1204 07:52:16.999355      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:17.507114 23 pod_client.go:173] Successfully updated pod "var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c"
  STEP: waiting for annotated pod running @ 12/04/24 07:52:17.507
  STEP: deleting the pod gracefully @ 12/04/24 07:52:17.51
  I1204 07:52:17.510559 23 delete.go:62] Deleting pod "var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c" in namespace "var-expansion-1410"
  I1204 07:52:17.517411 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-9b46b441-573c-45ab-8abc-2fbc8960ea9c" to be fully deleted
  E1204 07:52:18.000416      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:19.001200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:20.001326      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:21.001546      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:22.002562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:23.003239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:24.003484      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:25.003707      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:26.004762      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:27.005194      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:28.005375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:29.006068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:30.006878      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:31.007085      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:32.008202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:33.008650      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:34.009497      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:35.009887      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:36.010720      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:37.010966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:38.011407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:39.012121      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:40.012353      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:41.013134      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:42.013342      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:43.013591      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:44.014764      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:45.015219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:46.015252      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:47.015625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:48.016088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:49.016780      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:49.616599 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1410" for this suite. @ 12/04/24 07:52:49.622
• [34.836 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/04/24 07:52:49.63
  I1204 07:52:49.630200 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:52:49.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:49.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:49.651
  STEP: Creating projection with secret that has name projected-secret-test-13c7aff5-3f9d-4dda-b320-9ea265781409 @ 12/04/24 07:52:49.655
  STEP: Creating a pod to test consume secrets @ 12/04/24 07:52:49.661
  E1204 07:52:50.017587      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:51.017960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:52.018637      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:53.019051      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:52:53.686
  I1204 07:52:53.690154 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-98fedf3a-5e84-463d-9bd6-3a35bdff870d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/04/24 07:52:53.7
  I1204 07:52:53.714259 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2769" for this suite. @ 12/04/24 07:52:53.72
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 12/04/24 07:52:53.726
  I1204 07:52:53.726296 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:52:53.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:53.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:53.744
  STEP: Setting up server cert @ 12/04/24 07:52:53.844
  E1204 07:52:54.019931      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:52:54.177
  STEP: Deploying the webhook pod @ 12/04/24 07:52:54.188
  STEP: Wait for the deployment to be ready @ 12/04/24 07:52:54.201
  I1204 07:52:54.209414 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:52:55.020906      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:56.021510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:52:56.224
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:52:56.241
  E1204 07:52:57.022265      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:52:57.241936 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/04/24 07:52:57.33
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/04/24 07:52:57.371
  STEP: Deleting the collection of validation webhooks @ 12/04/24 07:52:57.397
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/04/24 07:52:57.435
  I1204 07:52:57.478970 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6861" for this suite. @ 12/04/24 07:52:57.484
  STEP: Destroying namespace "webhook-markers-9659" for this suite. @ 12/04/24 07:52:57.489
• [3.767 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/04/24 07:52:57.493
  I1204 07:52:57.493958 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename projected @ 12/04/24 07:52:57.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:52:57.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:52:57.51
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-37622566-cb0c-43d9-9621-d7ca30925595 @ 12/04/24 07:52:57.584
  STEP: Creating the pod @ 12/04/24 07:52:57.59
  E1204 07:52:58.022514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:52:59.023188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-37622566-cb0c-43d9-9621-d7ca30925595 @ 12/04/24 07:52:59.619
  STEP: waiting to observe update in volume @ 12/04/24 07:52:59.625
  E1204 07:53:00.024033      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:01.024495      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:02.025532      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:03.026100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:04.026752      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:05.027164      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:06.028299      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:07.028762      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:08.029784      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:09.030534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:10.031314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:11.031809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:12.032014      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:13.032375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:14.032490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:15.032992      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:16.033039      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:17.033530      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:18.033570      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:19.034267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:20.034745      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:21.035176      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:22.035347      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:23.035772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:24.036107      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:25.036514      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:26.037365      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:27.037735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:28.038101      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:29.038960      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:30.040118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:31.040549      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:32.040769      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:33.041225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:34.041827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:35.042218      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:36.042553      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:37.043024      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:38.043690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:39.044347      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:40.044958      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:41.045436      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:42.046356      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:43.047149      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:44.048148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:45.048544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:46.049397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:47.049907      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:48.050584      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:49.051306      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:50.051779      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:51.052397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:52.052559      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:53.053002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:54.053180      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:55.053602      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:56.054366      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:57.054792      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:58.054845      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:53:59.055740      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:00.056867      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:01.057312      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:02.058341      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:03.059145      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:04.059864      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:05.060294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:06.061267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:07.062177      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:08.062354      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:09.063214      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:10.063632      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:11.064435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:12.064697      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:13.065026      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:14.065167      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:15.074751      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:16.066167      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:17.066606      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:18.066621      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:19.067345      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:20.030509 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4647" for this suite. @ 12/04/24 07:54:20.035
• [82.547 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/04/24 07:54:20.041
  I1204 07:54:20.041521 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename svcaccounts @ 12/04/24 07:54:20.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:54:20.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:54:20.061
  E1204 07:54:20.068360      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:20.082661 23 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1204 07:54:20.082729 23 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1204 07:54:20.087734 23 service_accounts.go:253] created pod pod-service-account-mountsa
  I1204 07:54:20.087794 23 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1204 07:54:20.094045 23 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1204 07:54:20.094101 23 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1204 07:54:20.099020 23 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1204 07:54:20.099076 23 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1204 07:54:20.104772 23 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1204 07:54:20.104823 23 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1204 07:54:20.110553 23 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1204 07:54:20.110631 23 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1204 07:54:20.115151 23 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1204 07:54:20.115203 23 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1204 07:54:20.120831 23 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1204 07:54:20.120886 23 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1204 07:54:20.124514 23 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1204 07:54:20.124603 23 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1204 07:54:20.124846 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9501" for this suite. @ 12/04/24 07:54:20.139
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/04/24 07:54:20.153
  I1204 07:54:20.153485 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename configmap @ 12/04/24 07:54:20.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:54:20.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:54:20.169
  STEP: Creating configMap with name configmap-test-volume-24cc9d28-0bca-4d1d-939d-502883285b5c @ 12/04/24 07:54:20.173
  STEP: Creating a pod to test consume configMaps @ 12/04/24 07:54:20.177
  E1204 07:54:21.068897      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:22.069354      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:23.069420      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:24.070134      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:54:24.199
  I1204 07:54:24.203561 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-7d9e112d-4042-4e7e-b507-6cce791e13e5 container agnhost-container: <nil>
  STEP: delete the pod @ 12/04/24 07:54:24.211
  I1204 07:54:24.228095 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-195" for this suite. @ 12/04/24 07:54:24.233
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/04/24 07:54:24.24
  I1204 07:54:24.240620 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename statefulset @ 12/04/24 07:54:24.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:54:24.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:54:24.257
  STEP: Creating service test in namespace statefulset-3386 @ 12/04/24 07:54:24.262
  STEP: Creating stateful set ss in namespace statefulset-3386 @ 12/04/24 07:54:24.267
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3386 @ 12/04/24 07:54:24.274
  I1204 07:54:24.278234 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E1204 07:54:25.070377      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:26.070827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:27.071077      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:28.071381      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:29.072375      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:30.072859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:31.073038      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:32.073210      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:33.073463      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:34.073705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:34.280561 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/04/24 07:54:34.28
  I1204 07:54:34.283970 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 07:54:34.466312 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 07:54:34.466403 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 07:54:34.466430 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 07:54:34.471283 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1204 07:54:35.073974      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:36.074410      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:37.074735      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:38.074904      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:39.075973      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:40.076856      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:41.077100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:42.077501      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:43.077925      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:44.078169      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:44.473066 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1204 07:54:44.473148 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1204 07:54:44.495330 23 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I1204 07:54:44.495452 23 resource.go:175] ss-0  nodea17  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:24 +0000 UTC  }]
  I1204 07:54:44.495573 23 resource.go:175] ss-1           Pending         []
  I1204 07:54:44.495598 23 resource.go:178] 
  I1204 07:54:44.495623 23 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 2
  E1204 07:54:45.079040      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:45.499965 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.993440116s
  E1204 07:54:46.079294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:46.506094 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988048485s
  E1204 07:54:47.079574      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:47.511219 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.982914914s
  E1204 07:54:48.080625      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:48.516953 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.977583397s
  E1204 07:54:49.081322      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:49.523546 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.970977148s
  E1204 07:54:50.081790      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:50.531011 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.964568328s
  E1204 07:54:51.082655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:51.542557 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.957865861s
  E1204 07:54:52.082908      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:52.550004 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.945422985s
  E1204 07:54:53.083579      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:53.556482 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 938.42787ms
  E1204 07:54:54.083759      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3386 @ 12/04/24 07:54:54.556
  I1204 07:54:54.563714 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 07:54:54.731531 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1204 07:54:54.731640 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 07:54:54.731671 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 07:54:54.731752 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1204 07:54:54.919609 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1204 07:54:54.919699 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 07:54:54.919716 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 07:54:54.919768 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1204 07:54:55.084461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:54:55.091383 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1204 07:54:55.091443 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1204 07:54:55.091487 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1204 07:54:55.095703 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1204 07:54:56.085400      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:57.085838      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:58.086305      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:54:59.087157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:00.087656      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:01.088114      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:02.088576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:03.089031      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:04.089875      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:05.090550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:05.098553 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:55:05.098631 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1204 07:55:05.098655 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/04/24 07:55:05.098
  I1204 07:55:05.102978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 07:55:05.265252 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 07:55:05.265320 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 07:55:05.265374 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 07:55:05.265439 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 07:55:05.445024 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 07:55:05.445106 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 07:55:05.445132 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 07:55:05.445208 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2954561695 --namespace=statefulset-3386 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1204 07:55:05.611412 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1204 07:55:05.611535 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1204 07:55:05.611571 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1204 07:55:05.611598 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1204 07:55:05.615079 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1204 07:55:06.090705      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:07.091296      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:08.091772      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:09.091952      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:10.092178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:11.093084      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:12.093490      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:13.095006      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:14.094148      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:15.094586      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:15.621870 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1204 07:55:15.621965 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1204 07:55:15.621991 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1204 07:55:15.648252 23 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I1204 07:55:15.648364 23 resource.go:175] ss-0  nodea17  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:24 +0000 UTC  }]
  I1204 07:55:15.648416 23 resource.go:175] ss-1  nodeb14  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:44 +0000 UTC  }]
  I1204 07:55:15.648465 23 resource.go:175] ss-2  nodea17  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:55:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-04 07:54:44 +0000 UTC  }]
  I1204 07:55:15.648482 23 resource.go:178] 
  I1204 07:55:15.648500 23 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1204 07:55:16.094696      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:16.654512 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.982074665s
  E1204 07:55:17.095200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:17.659239 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.976680225s
  E1204 07:55:18.096083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:18.663898 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.972333574s
  E1204 07:55:19.096567      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:19.669455 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.967308924s
  E1204 07:55:20.097135      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:20.675183 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.961731769s
  E1204 07:55:21.098101      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:21.681346 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.955719802s
  E1204 07:55:22.098051      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:22.686617 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.949789305s
  E1204 07:55:23.098301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:23.692448 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.943926011s
  E1204 07:55:24.099216      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:24.698037 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 938.60478ms
  E1204 07:55:25.099687      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3386 @ 12/04/24 07:55:25.698
  I1204 07:55:25.704562 23 rest.go:150] Scaling statefulset ss to 0
  I1204 07:55:25.713450 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:55:25.717559 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3386
  I1204 07:55:25.721648 23 rest.go:150] Scaling statefulset ss to 0
  I1204 07:55:25.730330 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1204 07:55:25.734558 23 rest.go:88] Deleting statefulset ss
  I1204 07:55:25.748176 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3386" for this suite. @ 12/04/24 07:55:25.752
• [61.518 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 12/04/24 07:55:25.759
  I1204 07:55:25.759643 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename job @ 12/04/24 07:55:25.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:55:25.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:55:25.778
  STEP: Creating a job @ 12/04/24 07:55:25.782
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/04/24 07:55:25.789
  E1204 07:55:26.099886      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:27.100692      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/04/24 07:55:27.794
  STEP: updating /status @ 12/04/24 07:55:27.803
  STEP: get /status @ 12/04/24 07:55:27.812
  I1204 07:55:27.817279 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4608" for this suite. @ 12/04/24 07:55:27.822
• [2.076 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 12/04/24 07:55:27.835
  I1204 07:55:27.835344 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename services @ 12/04/24 07:55:27.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:55:27.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:55:27.854
  STEP: creating a collection of services @ 12/04/24 07:55:27.858
  I1204 07:55:27.858946 23 service.go:3655] Creating e2e-svc-a-psr2z
  I1204 07:55:27.872979 23 service.go:3655] Creating e2e-svc-b-frnn7
  I1204 07:55:27.888851 23 service.go:3655] Creating e2e-svc-c-t26j5
  STEP: deleting service collection @ 12/04/24 07:55:27.908
  I1204 07:55:27.941145 23 service.go:3690] Collection of services has been deleted
  I1204 07:55:27.941334 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9798" for this suite. @ 12/04/24 07:55:27.945
• [0.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 12/04/24 07:55:27.95
  I1204 07:55:27.950836 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename dns @ 12/04/24 07:55:27.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:55:27.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:55:27.972
  STEP: Creating a test externalName service @ 12/04/24 07:55:27.976
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6849.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local; sleep 1; done
   @ 12/04/24 07:55:27.982
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6849.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local; sleep 1; done
   @ 12/04/24 07:55:27.982
  STEP: creating a pod to probe DNS @ 12/04/24 07:55:27.982
  STEP: submitting the pod to kubernetes @ 12/04/24 07:55:27.982
  E1204 07:55:28.101549      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:29.102513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 07:55:30.002
  STEP: looking for the results for each expected name from probers @ 12/04/24 07:55:30.006
  I1204 07:55:30.018072 23 dns_common.go:552] DNS probes using dns-test-3cecfb03-a7ff-4015-a5b4-254f802e8c5f succeeded

  STEP: changing the externalName to bar.example.com @ 12/04/24 07:55:30.018
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6849.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local; sleep 1; done
   @ 12/04/24 07:55:30.03
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6849.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local; sleep 1; done
   @ 12/04/24 07:55:30.03
  STEP: creating a second pod to probe DNS @ 12/04/24 07:55:30.03
  STEP: submitting the pod to kubernetes @ 12/04/24 07:55:30.03
  E1204 07:55:30.102492      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:31.102898      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 07:55:32.046
  STEP: looking for the results for each expected name from probers @ 12/04/24 07:55:32.05
  I1204 07:55:32.056874 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:32.061615 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:32.061688 23 dns_common.go:489] Lookups using dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e failed for: [wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local]

  I1204 07:55:32.069033 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:55:32.076032 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:55:32.082954 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:55:32.103522      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:33.103776      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:34.104622      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:35.105071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:36.105744      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:37.057588 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:37.062858 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:37.062956 23 dns_common.go:489] Lookups using dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e failed for: [wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local]

  I1204 07:55:37.069999 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:55:37.076391 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:55:37.082361 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:55:37.106847      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:38.107518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:39.108199      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:40.108690      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:41.109147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:42.056584 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:42.061852 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:42.062014 23 dns_common.go:489] Lookups using dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e failed for: [wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local]

  I1204 07:55:42.069371 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:55:42.076587 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:55:42.084434 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:55:42.109798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:43.110288      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:44.111050      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:45.111534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:46.111953      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:47.056685 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:47.061958 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:47.062024 23 dns_common.go:489] Lookups using dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e failed for: [wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local]

  I1204 07:55:47.069738 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:55:47.075627 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:55:47.081747 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:55:47.112108      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:48.112798      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:49.113489      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:50.113994      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:51.114477      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:52.056656 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:52.061867 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:52.061934 23 dns_common.go:489] Lookups using dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e failed for: [wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local]

  I1204 07:55:52.069452 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:55:52.076083 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:55:52.082151 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:55:52.114527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:53.114931      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:54.115959      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:55.116379      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:56.116643      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:55:57.056518 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:57.061709 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local from pod  dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1204 07:55:57.061784 23 dns_common.go:489] Lookups using dns-6849/dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e failed for: [wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local]

  I1204 07:55:57.070332 23 dns_common.go:495] Pod client logs for webserver: 
  I1204 07:55:57.076711 23 dns_common.go:495] Pod client logs for querier: 
  I1204 07:55:57.082902 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E1204 07:55:57.117417      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:58.118150      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:55:59.119009      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:00.119428      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:01.119848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:56:02.061849 23 dns_common.go:552] DNS probes using dns-test-bc9af9bc-f908-4b23-a223-0b9c6706425e succeeded

  STEP: changing the service to type=ClusterIP @ 12/04/24 07:56:02.061
  W1204 07:56:02.087344      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6849.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6849.svc.cluster.local; sleep 1; done
   @ 12/04/24 07:56:02.087
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6849.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6849.svc.cluster.local; sleep 1; done
   @ 12/04/24 07:56:02.087
  STEP: creating a third pod to probe DNS @ 12/04/24 07:56:02.087
  STEP: submitting the pod to kubernetes @ 12/04/24 07:56:02.09
  E1204 07:56:02.120189      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:03.120630      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/04/24 07:56:04.11
  STEP: looking for the results for each expected name from probers @ 12/04/24 07:56:04.114
  E1204 07:56:04.120992      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:56:04.126499 23 dns_common.go:552] DNS probes using dns-test-84f78d4a-036c-4e79-98a2-ea1f99601b7e succeeded

  STEP: deleting the pod @ 12/04/24 07:56:04.126
  STEP: deleting the pod @ 12/04/24 07:56:04.138
  STEP: deleting the pod @ 12/04/24 07:56:04.149
  STEP: deleting the test externalName service @ 12/04/24 07:56:04.163
  I1204 07:56:04.194762 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6849" for this suite. @ 12/04/24 07:56:04.2
• [36.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/04/24 07:56:04.205
  I1204 07:56:04.206018 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename apf @ 12/04/24 07:56:04.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:56:04.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:56:04.231
  STEP: getting /apis @ 12/04/24 07:56:04.236
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/04/24 07:56:04.242
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/04/24 07:56:04.244
  STEP: creating @ 12/04/24 07:56:04.246
  STEP: getting @ 12/04/24 07:56:04.265
  STEP: listing @ 12/04/24 07:56:04.268
  STEP: watching @ 12/04/24 07:56:04.272
  I1204 07:56:04.272173 23 flowcontrol.go:620] starting watch
  STEP: patching @ 12/04/24 07:56:04.274
  STEP: updating @ 12/04/24 07:56:04.28
  I1204 07:56:04.297092 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/04/24 07:56:04.297
  STEP: patching /status @ 12/04/24 07:56:04.301
  STEP: updating /status @ 12/04/24 07:56:04.307
  STEP: deleting @ 12/04/24 07:56:04.32
  STEP: deleting a collection @ 12/04/24 07:56:04.333
  I1204 07:56:04.354023 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1105" for this suite. @ 12/04/24 07:56:04.358
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 12/04/24 07:56:04.366
  I1204 07:56:04.366418 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:56:04.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:56:04.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:56:04.385
  STEP: Setting up server cert @ 12/04/24 07:56:04.486
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:56:04.762
  STEP: Deploying the webhook pod @ 12/04/24 07:56:04.774
  STEP: Wait for the deployment to be ready @ 12/04/24 07:56:04.791
  I1204 07:56:04.798945 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1204 07:56:05.121670      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:06.122118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:56:06.813
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:56:06.83
  E1204 07:56:07.122791      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:56:07.830675 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1204 07:56:07.839342 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  E1204 07:56:08.123855      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/04/24 07:56:08.355
  STEP: Creating a custom resource that should be denied by the webhook @ 12/04/24 07:56:08.384
  E1204 07:56:09.125082      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:10.125590      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/04/24 07:56:10.42
  STEP: Updating the custom resource with disallowed data should be denied @ 12/04/24 07:56:10.429
  STEP: Deleting the custom resource should be denied @ 12/04/24 07:56:10.441
  STEP: Remove the offending key and value from the custom resource data @ 12/04/24 07:56:10.449
  STEP: Deleting the updated custom resource should be successful @ 12/04/24 07:56:10.462
  I1204 07:56:11.024208 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1933" for this suite. @ 12/04/24 07:56:11.03
  STEP: Destroying namespace "webhook-markers-3208" for this suite. @ 12/04/24 07:56:11.039
• [6.680 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/04/24 07:56:11.047
  I1204 07:56:11.047769 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename emptydir @ 12/04/24 07:56:11.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:56:11.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:56:11.066
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/04/24 07:56:11.07
  E1204 07:56:11.126219      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:12.127301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:13.127831      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:14.128575      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/04/24 07:56:15.095
  I1204 07:56:15.099101 23 output.go:196] Trying to get logs from node nodea17 pod pod-1695481c-b94b-4bb5-babf-7fe88905d584 container test-container: <nil>
  STEP: delete the pod @ 12/04/24 07:56:15.107
  I1204 07:56:15.123795 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1204 07:56:15.128617      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-5701" for this suite. @ 12/04/24 07:56:15.128
• [4.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 12/04/24 07:56:15.135
  I1204 07:56:15.135594 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2954561695
  STEP: Building a namespace api object, basename webhook @ 12/04/24 07:56:15.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/04/24 07:56:15.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/04/24 07:56:15.155
  STEP: Setting up server cert @ 12/04/24 07:56:15.252
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/04/24 07:56:15.574
  STEP: Deploying the webhook pod @ 12/04/24 07:56:15.581
  STEP: Wait for the deployment to be ready @ 12/04/24 07:56:15.597
  I1204 07:56:15.611774 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1204 07:56:16.129730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1204 07:56:17.130177      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/04/24 07:56:17.625
  STEP: Verifying the service has paired with the endpoint @ 12/04/24 07:56:17.642
  E1204 07:56:18.130239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1204 07:56:18.643582 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/04/24 07:56:18.652
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/04/24 07:56:18.674
  STEP: Creating a dummy validating-webhook-configuration object @ 12/04/24 07:56:18.695
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/04/24 07:56:18.707
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/04/24 07:56:18.712
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/04/24 07:56:18.723
  I1204 07:56:18.770053 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5766" for this suite. @ 12/04/24 07:56:18.774
  STEP: Destroying namespace "webhook-markers-5951" for this suite. @ 12/04/24 07:56:18.778
• [3.647 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1204 07:56:18.783262 23 suites.go:34] Running AfterSuite actions on node 1
  I1204 07:56:18.783315 23 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.069 seconds]
------------------------------

Ran 404 of 6605 Specs in 6725.187 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h52m6.248908245s
Test Suite Passed
