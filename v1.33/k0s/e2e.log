2025/05/21 15:01:22 warn: calling test with e2e.test is deprecated and will be removed in 1.25, please rely on container manifest to invoke executable
sep is " " args are "--ginkgo.v"split [--ginkgo.v]
2025/05/21 15:01:22 Running command:
Command env: []
Run from directory: 
Executable path: /usr/local/bin/ginkgo
Args (comma-delimited): /usr/local/bin/ginkgo,--focus=\[Conformance\],--skip=,--no-color=true,--timeout=24h,/usr/local/bin/e2e.test,--,--disable-log-dump,--repo-root=/kubernetes,--provider=local,--report-dir=/tmp/sonobuoy/results,--kubeconfig=,--ginkgo.v
2025/05/21 15:01:22 Now listening for interrupts
  I0521 15:01:22.642260      23 e2e.go:109] Starting e2e run "641bc478-7b85-421b-9c45-a93ff3c4f48a" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1747839682 - will randomize all specs

Will run 419 of 6731 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0521 15:01:22.825982 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  I0521 15:01:22.827628 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0521 15:02:11.072050 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0521 15:02:11.074399 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
  I0521 15:02:11.074436 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0521 15:02:11.074447 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
  I0521 15:02:11.074461 23 e2e.go:245] e2e test version: v1.33.1
  I0521 15:02:11.075258 23 e2e.go:254] kube-apiserver version: v1.33.1+k0s
  I0521 15:02:11.075348 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  I0521 15:02:11.077439 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [48.252 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 05/21/25 15:02:11.202
  I0521 15:02:11.203006 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename volumeattachment @ 05/21/25 15:02:11.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:11.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:11.215
  STEP: Create VolumeAttachment "va-e2e-m22m7" on node "worker-0" @ 05/21/25 15:02:11.219
  STEP: Patch VolumeAttachment "va-e2e-m22m7" on node "worker-0" @ 05/21/25 15:02:11.222
  STEP: Reading "va-e2e-m22m7" Status @ 05/21/25 15:02:11.226
  STEP: Patching "va-e2e-m22m7" Status @ 05/21/25 15:02:11.228
  I0521 15:02:11.231431 23 volume_attachment.go:224] "va-e2e-m22m7" Status.Attached: true
  STEP: Updating "va-e2e-m22m7" Status @ 05/21/25 15:02:11.231
  I0521 15:02:11.237806 23 volume_attachment.go:240] "va-e2e-m22m7" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-m22m7" on node "worker-0" @ 05/21/25 15:02:11.237
  STEP: Confirm deletion of VolumeAttachment "va-e2e-m22m7" on node "worker-0" @ 05/21/25 15:02:11.241
  I0521 15:02:11.242996 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9771" for this suite. @ 05/21/25 15:02:11.321
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/21/25 15:02:11.325
  I0521 15:02:11.325500 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replicaset @ 05/21/25 15:02:11.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:11.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:11.334
  I0521 15:02:11.344047 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  I0521 15:02:16.433968 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/21/25 15:02:16.434
  STEP: Scaling up "test-rs" replicaset @ 05/21/25 15:02:16.434
  I0521 15:02:16.440981 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/21/25 15:02:16.441
  I0521 15:02:16.464769 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5055 with ReadyReplicas 1, AvailableReplicas 1
  I0521 15:02:16.471311 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5055 with ReadyReplicas 1, AvailableReplicas 1
  I0521 15:02:16.474688 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5055 with ReadyReplicas 1, AvailableReplicas 1
  I0521 15:02:17.478468 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-5055 with ReadyReplicas 2, AvailableReplicas 2
  I0521 15:02:19.526881 23 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-5055 with ReadyReplicas 3 found true
  I0521 15:02:19.527059 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5055" for this suite. @ 05/21/25 15:02:19.529
• [8.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 05/21/25 15:02:19.533
  I0521 15:02:19.533416 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:02:19.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:19.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:19.542
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:02:19.545
  STEP: Saw pod success @ 05/21/25 15:02:27.566
  I0521 15:02:27.568308 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-20f06a00-a564-4f76-9f94-da79b4b2f38b container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:02:27.581
  I0521 15:02:27.592459 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3344" for this suite. @ 05/21/25 15:02:27.594
• [8.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 05/21/25 15:02:27.6
  I0521 15:02:27.600240 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename namespaces @ 05/21/25 15:02:27.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:27.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:27.613
  STEP: Updating Namespace "namespaces-4106" @ 05/21/25 15:02:27.615
  I0521 15:02:27.622333 23 namespace.go:390] Namespace "namespaces-4106" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"641bc478-7b85-421b-9c45-a93ff3c4f48a", "kubernetes.io/metadata.name":"namespaces-4106", "namespaces-4106":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0521 15:02:27.622489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4106" for this suite. @ 05/21/25 15:02:27.696
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/21/25 15:02:27.7
  I0521 15:02:27.700914 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pod-network-test @ 05/21/25 15:02:27.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:27.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:27.711
  STEP: Performing setup for networking test in namespace pod-network-test-8355 @ 05/21/25 15:02:27.714
  STEP: creating a selector @ 05/21/25 15:02:27.714
  STEP: Creating the service pods in kubernetes @ 05/21/25 15:02:27.714
  I0521 15:02:27.714317 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/21/25 15:02:41.844
  I0521 15:02:43.854103 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0521 15:02:43.854155 23 networking.go:42] Breadth first check of 10.244.0.7 on host 10.0.54.132...
  I0521 15:02:43.855931 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.8:9080/dial?request=hostname&protocol=udp&host=10.244.0.7&port=8081&tries=1'] Namespace:pod-network-test-8355 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:02:43.855955 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:02:43.856001 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8355/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.8%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.7%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0521 15:02:43.900965 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:02:43.901015 23 utils.go:355] Waiting for responses: map[]
  I0521 15:02:43.901025 23 utils.go:359] reached 10.244.0.7 after 0/1 tries
  I0521 15:02:43.901040 23 networking.go:42] Breadth first check of 10.244.1.9 on host 10.0.60.98...
  I0521 15:02:43.902881 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.8:9080/dial?request=hostname&protocol=udp&host=10.244.1.9&port=8081&tries=1'] Namespace:pod-network-test-8355 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:02:43.902908 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:02:43.902955 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8355/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.8%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.9%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0521 15:02:43.945351 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:02:43.945432 23 utils.go:355] Waiting for responses: map[]
  I0521 15:02:43.945443 23 utils.go:359] reached 10.244.1.9 after 0/1 tries
  I0521 15:02:43.945452 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0521 15:02:43.945582 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8355" for this suite. @ 05/21/25 15:02:43.947
• [16.252 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 05/21/25 15:02:43.952
  I0521 15:02:43.952618 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 15:02:43.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:43.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:43.961
  I0521 15:02:43.964012 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/21/25 15:02:45.272
  I0521 15:02:45.272963 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-797 --namespace=crd-publish-openapi-797 create -f -'
  I0521 15:02:45.352356 23 builder.go:146] stderr: ""
  I0521 15:02:45.352409 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7804-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0521 15:02:45.352484 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-797 --namespace=crd-publish-openapi-797 delete e2e-test-crd-publish-openapi-7804-crds test-cr'
  I0521 15:02:45.408257 23 builder.go:146] stderr: ""
  I0521 15:02:45.408298 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7804-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0521 15:02:45.408336 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-797 --namespace=crd-publish-openapi-797 apply -f -'
  I0521 15:02:45.470442 23 builder.go:146] stderr: ""
  I0521 15:02:45.470502 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7804-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0521 15:02:45.470555 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-797 --namespace=crd-publish-openapi-797 delete e2e-test-crd-publish-openapi-7804-crds test-cr'
  I0521 15:02:45.525417 23 builder.go:146] stderr: ""
  I0521 15:02:45.525592 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7804-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/21/25 15:02:45.525
  I0521 15:02:45.525672 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-797 explain e2e-test-crd-publish-openapi-7804-crds'
  I0521 15:02:45.577214 23 builder.go:146] stderr: ""
  I0521 15:02:45.577278 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7804-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0521 15:02:46.841321 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-797" for this suite. @ 05/21/25 15:02:46.847
• [2.898 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 05/21/25 15:02:46.851
  I0521 15:02:46.851390 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 15:02:46.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:46.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:46.86
  STEP: create the deployment @ 05/21/25 15:02:46.864
  I0521 15:02:46.868688      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/21/25 15:02:46.869
  STEP: delete the deployment @ 05/21/25 15:02:47.371
  STEP: wait for all rs to be garbage collected @ 05/21/25 15:02:47.375
  STEP: expected 0 pods, got 2 pods @ 05/21/25 15:02:47.385
  STEP: Gathering metrics @ 05/21/25 15:02:47.882
  W0521 15:02:47.886053      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0521 15:02:47.886093 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0521 15:02:47.886336 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9241" for this suite. @ 05/21/25 15:02:47.888
• [1.043 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 05/21/25 15:02:47.894
  I0521 15:02:47.894508 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:02:47.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:47.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:47.904
  STEP: Creating configMap with name projected-configmap-test-volume-6ab569dd-cabe-4af0-9f4d-5f3f5c40fbed @ 05/21/25 15:02:47.907
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:02:47.912
  STEP: Saw pod success @ 05/21/25 15:02:51.929
  I0521 15:02:51.931431 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-a0d333a1-19ff-46e1-8ec8-689c394e547e container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:02:51.943
  I0521 15:02:51.953413 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3624" for this suite. @ 05/21/25 15:02:51.955
• [4.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 05/21/25 15:02:51.958
  I0521 15:02:51.958789 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:02:51.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:51.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:51.969
  STEP: creating a collection of services @ 05/21/25 15:02:51.971
  I0521 15:02:51.971328 23 service.go:3666] Creating e2e-svc-a-slv8n
  I0521 15:02:51.983516 23 service.go:3666] Creating e2e-svc-b-jghss
  I0521 15:02:51.996720 23 service.go:3666] Creating e2e-svc-c-5b97j
  STEP: deleting service collection @ 05/21/25 15:02:52.01
  I0521 15:02:52.111078 23 service.go:3701] Collection of services has been deleted
  I0521 15:02:52.111224 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6463" for this suite. @ 05/21/25 15:02:52.113
• [0.159 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 05/21/25 15:02:52.117
  I0521 15:02:52.117700 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:02:52.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:02:52.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:02:52.126
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 05/21/25 15:02:52.128
  STEP: Awaiting for the job to fail as there are failed indexes @ 05/21/25 15:02:52.132
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 05/21/25 15:03:10.164
  I0521 15:03:10.165763 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6928" for this suite. @ 05/21/25 15:03:10.168
• [18.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 05/21/25 15:03:10.171
  I0521 15:03:10.171915 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 15:03:10.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:10.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:10.183
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/21/25 15:03:10.185
  I0521 15:03:10.192401 23 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6794  cfa09710-1c7e-4c69-b044-c6c93fa6ddf6 1515 1 2025-05-21 15:03:10 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-05-21 15:03:10 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-798rf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-798rf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/21/25 15:03:12.197
  I0521 15:03:12.197616 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6794 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:03:12.197633 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:03:12.197672 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/dns-6794/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I0521 15:03:12.251982 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 05/21/25 15:03:12.252
  I0521 15:03:12.252055 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6794 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:03:12.252069 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:03:12.252122 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/dns-6794/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0521 15:03:12.308865 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:03:12.309004 23 dns.go:451] Deleting pod test-dns-nameservers...
  I0521 15:03:12.315210 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6794" for this suite. @ 05/21/25 15:03:12.317
• [2.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 05/21/25 15:03:12.323
  I0521 15:03:12.323353 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:03:12.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:12.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:12.332
  STEP: Creating a job @ 05/21/25 15:03:12.334
  STEP: Ensuring active pods == parallelism @ 05/21/25 15:03:12.34
  STEP: delete a job @ 05/21/25 15:03:14.345
  STEP: deleting Job.batch foo in namespace job-3294, will wait for the garbage collector to delete the pods @ 05/21/25 15:03:14.345
  I0521 15:03:14.401622 23 resources.go:139] Deleting Job.batch foo took: 3.725184ms
  I0521 15:03:14.501722 23 resources.go:163] Terminating Job.batch foo pods took: 100.096959ms
  STEP: Ensuring job was deleted @ 05/21/25 15:03:15.702
  I0521 15:03:15.703909 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3294" for this suite. @ 05/21/25 15:03:15.706
• [3.386 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/21/25 15:03:15.709
  I0521 15:03:15.709774 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename init-container @ 05/21/25 15:03:15.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:15.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:15.724
  STEP: creating the pod @ 05/21/25 15:03:15.727
  I0521 15:03:15.727267 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0521 15:03:19.729532 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6524" for this suite. @ 05/21/25 15:03:19.732
• [4.027 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 05/21/25 15:03:19.736
  I0521 15:03:19.736574 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 15:03:19.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:19.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:19.746
  STEP: set up a multi version CRD @ 05/21/25 15:03:19.748
  I0521 15:03:19.748889 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: rename a version @ 05/21/25 15:03:22.942
  STEP: check the new version name is served @ 05/21/25 15:03:22.952
  STEP: check the old version name is removed @ 05/21/25 15:03:23.693
  STEP: check the other version is not changed @ 05/21/25 15:03:24.335
  I0521 15:03:26.838590 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4415" for this suite. @ 05/21/25 15:03:26.844
• [7.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 05/21/25 15:03:26.848
  I0521 15:03:26.848449 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:03:26.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:26.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:26.86
  STEP: Creating configMap with name projected-configmap-test-volume-map-8ba04900-038a-4ad2-ad66-f5dcd8129353 @ 05/21/25 15:03:26.863
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:03:26.866
  STEP: Saw pod success @ 05/21/25 15:03:28.878
  I0521 15:03:28.880255 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-01a09a38-14ca-42d6-ab85-7759140d6385 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:03:28.884
  I0521 15:03:28.898241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-192" for this suite. @ 05/21/25 15:03:28.9
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 05/21/25 15:03:28.906
  I0521 15:03:28.906438 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:03:28.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:28.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:28.915
  STEP: Creating a job @ 05/21/25 15:03:28.917
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/21/25 15:03:28.923
  STEP: patching /status @ 05/21/25 15:03:30.928
  STEP: updating /status @ 05/21/25 15:03:30.934
  STEP: get /status @ 05/21/25 15:03:30.939
  I0521 15:03:30.941345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9312" for this suite. @ 05/21/25 15:03:30.944
• [2.044 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 05/21/25 15:03:30.95
  I0521 15:03:30.950120 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:03:30.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:30.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:30.96
  STEP: Creating configMap with name configmap-test-upd-e0883331-ed4e-4c34-8904-64915d960da6 @ 05/21/25 15:03:31.044
  STEP: Creating the pod @ 05/21/25 15:03:31.049
  STEP: Waiting for pod with text data @ 05/21/25 15:03:33.059
  STEP: Waiting for pod with binary data @ 05/21/25 15:03:33.063
  I0521 15:03:33.067764 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1350" for this suite. @ 05/21/25 15:03:33.069
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/21/25 15:03:33.074
  I0521 15:03:33.074566 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename subpath @ 05/21/25 15:03:33.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:33.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:33.091
  STEP: Setting up data @ 05/21/25 15:03:33.094
  STEP: Creating pod pod-subpath-test-downwardapi-vc9r @ 05/21/25 15:03:33.101
  STEP: Creating a pod to test atomic-volume-subpath @ 05/21/25 15:03:33.101
  STEP: Saw pod success @ 05/21/25 15:03:55.155
  I0521 15:03:55.158162 23 output.go:207] Trying to get logs from node worker-0 pod pod-subpath-test-downwardapi-vc9r container test-container-subpath-downwardapi-vc9r: <nil>
  STEP: delete the pod @ 05/21/25 15:03:55.163
  STEP: Deleting pod pod-subpath-test-downwardapi-vc9r @ 05/21/25 15:03:55.174
  I0521 15:03:55.174085 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-vc9r" in namespace "subpath-4211"
  I0521 15:03:55.175837 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4211" for this suite. @ 05/21/25 15:03:55.178
• [22.107 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 05/21/25 15:03:55.181
  I0521 15:03:55.181864 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename csinodes @ 05/21/25 15:03:55.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:55.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:55.193
  STEP: Creating initial csiNode "e2e-csinode-g9skx" @ 05/21/25 15:03:55.196
  STEP: Getting initial csiNode "e2e-csinode-g9skx" @ 05/21/25 15:03:55.199
  STEP: Patching initial csiNode: "e2e-csinode-g9skx" @ 05/21/25 15:03:55.2
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-g9skx=patched" @ 05/21/25 15:03:55.204
  STEP: Delete initial csiNode: "e2e-csinode-g9skx" @ 05/21/25 15:03:55.205
  STEP: Confirm deletion of csiNode "e2e-csinode-g9skx" @ 05/21/25 15:03:55.208
  STEP: Creating replacement csiNode "e2e-csinode-c7tg6" @ 05/21/25 15:03:55.21
  STEP: Getting replacement csiNode "e2e-csinode-c7tg6" @ 05/21/25 15:03:55.213
  STEP: Updating replacement csiNode "e2e-csinode-c7tg6" @ 05/21/25 15:03:55.219
  STEP: DeleteCollection of CSINodes with "e2e-csinode-c7tg6=updated" label @ 05/21/25 15:03:55.225
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-c7tg6=updated" @ 05/21/25 15:03:55.229
  I0521 15:03:55.231127 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-9375" for this suite. @ 05/21/25 15:03:55.278
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/21/25 15:03:55.285
  I0521 15:03:55.285617 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-runtime @ 05/21/25 15:03:55.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:03:55.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:03:55.295
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/21/25 15:03:55.302
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/21/25 15:04:14.355
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/21/25 15:04:14.357
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/21/25 15:04:14.36
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/21/25 15:04:14.36
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/21/25 15:04:14.374
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/21/25 15:04:17.385
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/21/25 15:04:18.39
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/21/25 15:04:18.394
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/21/25 15:04:18.395
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/21/25 15:04:18.411
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/21/25 15:04:19.416
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/21/25 15:04:21.423
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/21/25 15:04:21.427
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/21/25 15:04:21.427
  I0521 15:04:21.446650 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6000" for this suite. @ 05/21/25 15:04:21.452
• [26.176 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 05/21/25 15:04:21.462
  I0521 15:04:21.462283 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 15:04:21.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:21.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:21.482
  STEP: Creating ServiceAccount "e2e-sa-l4mvq"  @ 05/21/25 15:04:21.484
  I0521 15:04:21.488528 23 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-l4mvq"  @ 05/21/25 15:04:21.488
  I0521 15:04:21.496351 23 service_accounts.go:867] AutomountServiceAccountToken: true
  I0521 15:04:21.496483 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1372" for this suite. @ 05/21/25 15:04:21.552
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/21/25 15:04:21.556
  I0521 15:04:21.556737 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename endpointslice @ 05/21/25 15:04:21.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:21.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:21.565
  STEP: getting /apis @ 05/21/25 15:04:21.568
  STEP: getting /apis/discovery.k8s.io @ 05/21/25 15:04:21.571
  STEP: getting /apis/discovery.k8s.iov1 @ 05/21/25 15:04:21.572
  STEP: creating @ 05/21/25 15:04:21.573
  STEP: getting @ 05/21/25 15:04:21.585
  STEP: listing @ 05/21/25 15:04:21.587
  STEP: watching @ 05/21/25 15:04:21.589
  I0521 15:04:21.589163 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/21/25 15:04:21.589
  STEP: cluster-wide watching @ 05/21/25 15:04:21.591
  I0521 15:04:21.591592 23 endpointslice.go:459] starting watch
  STEP: patching @ 05/21/25 15:04:21.592
  STEP: updating @ 05/21/25 15:04:21.595
  I0521 15:04:21.602737 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0521 15:04:21.602773 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/21/25 15:04:21.602
  STEP: deleting a collection @ 05/21/25 15:04:21.608
  I0521 15:04:21.617650 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-377" for this suite. @ 05/21/25 15:04:21.653
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/21/25 15:04:21.657
  I0521 15:04:21.657812 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename security-context @ 05/21/25 15:04:21.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:21.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:21.669
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/21/25 15:04:21.671
  STEP: Saw pod success @ 05/21/25 15:04:25.685
  I0521 15:04:25.687687 23 output.go:207] Trying to get logs from node worker-0 pod security-context-70de85f2-423e-4ed7-9500-ff297141c3fa container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:04:25.692
  I0521 15:04:25.703644 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6488" for this suite. @ 05/21/25 15:04:25.705
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 05/21/25 15:04:25.71
  I0521 15:04:25.710282 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 15:04:25.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:25.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:25.719
  STEP: Counting existing ResourceQuota @ 05/21/25 15:04:25.722
  STEP: Creating a ResourceQuota @ 05/21/25 15:04:30.724
  STEP: Ensuring resource quota status is calculated @ 05/21/25 15:04:30.728
  I0521 15:04:32.730470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5245" for this suite. @ 05/21/25 15:04:32.732
• [7.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/21/25 15:04:32.736
  I0521 15:04:32.736688 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:04:32.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:32.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:32.75
  STEP: Creating secret with name secret-test-cb1a5bf7-b392-4ea4-82f9-eb2201991896 @ 05/21/25 15:04:32.752
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:04:32.755
  STEP: Saw pod success @ 05/21/25 15:04:36.768
  I0521 15:04:36.770513 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-e8873bc9-f348-45ab-82b4-98915a3eb7d6 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:04:36.775
  I0521 15:04:36.787469 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6464" for this suite. @ 05/21/25 15:04:36.79
• [4.057 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 05/21/25 15:04:36.794
  I0521 15:04:36.794193 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pv @ 05/21/25 15:04:36.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:36.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:36.806
  STEP: Creating initial PV and PVC @ 05/21/25 15:04:36.808
  I0521 15:04:36.808504 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8961" @ 05/21/25 15:04:36.822
  STEP: Listing PVCs in namespace "pv-8961" @ 05/21/25 15:04:36.824
  STEP: Patching the PV "pv-8961-cq4vs" @ 05/21/25 15:04:36.826
  STEP: Patching the PVC "pvc-dhmj7" @ 05/21/25 15:04:36.833
  STEP: Getting PV "pv-8961-cq4vs" @ 05/21/25 15:04:36.841
  STEP: Getting PVC "pvc-dhmj7" @ 05/21/25 15:04:36.842
  STEP: Deleting PVC "pvc-dhmj7" @ 05/21/25 15:04:36.844
  STEP: Confirm deletion of PVC "pvc-dhmj7" @ 05/21/25 15:04:36.847
  STEP: Deleting PV "pv-8961-cq4vs" @ 05/21/25 15:04:38.861
  STEP: Confirm deletion of PV "pv-8961-cq4vs" @ 05/21/25 15:04:38.865
  STEP: Recreating another PV & PVC @ 05/21/25 15:04:40.871
  I0521 15:04:40.871164 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8961-lcfqf" @ 05/21/25 15:04:40.882
  STEP: Updating the PVC "pvc-mhgzs" @ 05/21/25 15:04:40.905
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-mhgzs=updated" @ 05/21/25 15:04:40.91
  STEP: Deleting PVC "pvc-mhgzs" via DeleteCollection @ 05/21/25 15:04:40.911
  STEP: Confirm deletion of PVC "pvc-mhgzs" @ 05/21/25 15:04:40.918
  STEP: Deleting PV "pv-8961-lcfqf" via DeleteCollection @ 05/21/25 15:04:42.922
  STEP: Confirm deletion of PV "pv-8961-lcfqf" @ 05/21/25 15:04:42.928
  I0521 15:04:44.933974 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0521 15:04:44.934006 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-mhgzs"
  I0521 15:04:44.935729 23 pv.go:193] Deleting PersistentVolume "pv-8961-lcfqf"
  I0521 15:04:44.937330 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8961" for this suite. @ 05/21/25 15:04:44.939
• [8.149 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 05/21/25 15:04:44.942
  I0521 15:04:44.943010 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:04:44.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:44.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:44.954
  STEP: creating all guestbook components @ 05/21/25 15:04:44.956
  I0521 15:04:44.956705 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0521 15:04:44.956801 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 create -f -'
  I0521 15:04:45.091110 23 builder.go:146] stderr: ""
  I0521 15:04:45.091158 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0521 15:04:45.091204 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0521 15:04:45.091294 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 create -f -'
  I0521 15:04:45.213086 23 builder.go:146] stderr: ""
  I0521 15:04:45.213132 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0521 15:04:45.213203 23 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0521 15:04:45.213304 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 create -f -'
  I0521 15:04:45.326072 23 builder.go:146] stderr: ""
  I0521 15:04:45.326111 23 builder.go:147] stdout: "service/frontend created\n"
  I0521 15:04:45.326177 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0521 15:04:45.326297 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 create -f -'
  I0521 15:04:45.407980 23 builder.go:146] stderr: ""
  I0521 15:04:45.408016 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0521 15:04:45.408075 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0521 15:04:45.408206 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 create -f -'
  I0521 15:04:45.488868 23 builder.go:146] stderr: ""
  I0521 15:04:45.488953 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0521 15:04:45.489018 23 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0521 15:04:45.489264 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 create -f -'
  I0521 15:04:45.570263 23 builder.go:146] stderr: ""
  I0521 15:04:45.570308 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/21/25 15:04:45.57
  I0521 15:04:45.570363 23 kubectl.go:2275] Waiting for all frontend pods to be Running.
  I0521 15:04:50.623281 23 kubectl.go:2279] Waiting for frontend to serve content.
  I0521 15:04:50.631626 23 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I0521 15:04:50.636289 23 kubectl.go:2289] Verifying that added entry can be retrieved.
  I0521 15:04:50.640351 23 kubectl.go:2302] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  STEP: using delete to clean up resources @ 05/21/25 15:04:55.65
  I0521 15:04:55.651045 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 delete --grace-period=0 --force -f -'
  I0521 15:04:55.719997 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:04:55.720035 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/21/25 15:04:55.72
  I0521 15:04:55.720207 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 delete --grace-period=0 --force -f -'
  I0521 15:04:55.787288 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:04:55.787362 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/21/25 15:04:55.787
  I0521 15:04:55.787491 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 delete --grace-period=0 --force -f -'
  I0521 15:04:55.853637 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:04:55.853672 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/21/25 15:04:55.853
  I0521 15:04:55.853790 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 delete --grace-period=0 --force -f -'
  I0521 15:04:55.903801 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:04:55.903836 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/21/25 15:04:55.903
  I0521 15:04:55.903994 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 delete --grace-period=0 --force -f -'
  I0521 15:04:55.960955 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:04:55.960990 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/21/25 15:04:55.961
  I0521 15:04:55.961167 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1491 delete --grace-period=0 --force -f -'
  I0521 15:04:56.025700 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:04:56.025761 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0521 15:04:56.025877 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1491" for this suite. @ 05/21/25 15:04:56.028
• [11.097 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/21/25 15:04:56.039
  I0521 15:04:56.039529 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:04:56.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:56.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:56.056
  STEP: creating secret secrets-5997/secret-test-9ce83f00-d937-485a-8b0a-64235f657277 @ 05/21/25 15:04:56.059
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:04:56.062
  STEP: Saw pod success @ 05/21/25 15:04:58.075
  I0521 15:04:58.077304 23 output.go:207] Trying to get logs from node worker-1 pod pod-configmaps-ff7e1964-e6f1-4d16-bbcc-06a6f1c4ab5f container env-test: <nil>
  STEP: delete the pod @ 05/21/25 15:04:58.082
  I0521 15:04:58.094790 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5997" for this suite. @ 05/21/25 15:04:58.097
• [2.061 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 05/21/25 15:04:58.101
  I0521 15:04:58.101119 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/21/25 15:04:58.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:58.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:58.113
  STEP: getting /apis @ 05/21/25 15:04:58.12
  STEP: getting /apis/admissionregistration.k8s.io @ 05/21/25 15:04:58.123
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/21/25 15:04:58.124
  STEP: creating @ 05/21/25 15:04:58.124
  STEP: getting @ 05/21/25 15:04:58.133
  STEP: listing @ 05/21/25 15:04:58.134
  STEP: watching @ 05/21/25 15:04:58.136
  I0521 15:04:58.136414 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 05/21/25 15:04:58.137
  STEP: updating @ 05/21/25 15:04:58.142
  I0521 15:04:58.146860 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 05/21/25 15:04:58.146
  STEP: deleting a collection @ 05/21/25 15:04:58.153
  I0521 15:04:58.165410 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9042" for this suite. @ 05/21/25 15:04:58.197
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 05/21/25 15:04:58.201
  I0521 15:04:58.201520 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:04:58.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:58.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:58.213
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/21/25 15:04:58.215
  I0521 15:04:58.215278 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1346 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0521 15:04:58.276856 23 builder.go:146] stderr: ""
  I0521 15:04:58.276896 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/21/25 15:04:58.276
  I0521 15:04:58.277013 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1346 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0521 15:04:58.335902 23 builder.go:146] stderr: ""
  I0521 15:04:58.336059 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/21/25 15:04:58.336
  I0521 15:04:58.337892 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1346 delete pods e2e-test-httpd-pod'
  I0521 15:04:59.913811 23 builder.go:146] stderr: ""
  I0521 15:04:59.913848 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0521 15:04:59.914000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1346" for this suite. @ 05/21/25 15:04:59.916
• [1.719 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 05/21/25 15:04:59.92
  I0521 15:04:59.920508 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:04:59.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:04:59.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:04:59.929
  STEP: Creating an indexed job with successPolicy @ 05/21/25 15:04:59.931
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/21/25 15:04:59.935
  STEP: Ensure that the job reaches completions @ 05/21/25 15:05:03.942
  STEP: Verifying that the job status to ensure correct final state @ 05/21/25 15:05:03.946
  I0521 15:05:03.947853 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4503" for this suite. @ 05/21/25 15:05:03.95
• [4.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/21/25 15:05:03.954
  I0521 15:05:03.954483 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename tables @ 05/21/25 15:05:03.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:03.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:03.968
  I0521 15:05:03.972381 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9287" for this suite. @ 05/21/25 15:05:04.051
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/21/25 15:05:04.056
  I0521 15:05:04.056101 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/21/25 15:05:04.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:04.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:04.072
  STEP: create the container to handle the HTTPGet hook request. @ 05/21/25 15:05:04.151
  STEP: create the pod with lifecycle hook @ 05/21/25 15:05:06.166
  STEP: check poststart hook @ 05/21/25 15:05:08.176
  STEP: delete the pod with lifecycle hook @ 05/21/25 15:05:08.18
  I0521 15:05:10.192109 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4470" for this suite. @ 05/21/25 15:05:10.195
• [6.143 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 05/21/25 15:05:10.198
  I0521 15:05:10.198975 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename namespaces @ 05/21/25 15:05:10.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:10.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:10.211
  STEP: Creating a test namespace @ 05/21/25 15:05:10.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:10.219
  STEP: Creating a service in the namespace @ 05/21/25 15:05:10.222
  STEP: Deleting the namespace @ 05/21/25 15:05:10.235
  STEP: Waiting for the namespace to be removed. @ 05/21/25 15:05:10.243
  STEP: Recreating the namespace @ 05/21/25 15:05:16.246
  STEP: Verifying there is no service in the namespace @ 05/21/25 15:05:16.254
  I0521 15:05:16.256656 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9483" for this suite. @ 05/21/25 15:05:16.258
  STEP: Destroying namespace "nsdeletetest-8204" for this suite. @ 05/21/25 15:05:16.264
  I0521 15:05:16.266383 23 framework.go:370] Namespace nsdeletetest-8204 was already deleted
  STEP: Destroying namespace "nsdeletetest-8110" for this suite. @ 05/21/25 15:05:16.266
• [6.071 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/21/25 15:05:16.27
  I0521 15:05:16.270492 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename events @ 05/21/25 15:05:16.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:16.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:16.279
  STEP: creating a test event @ 05/21/25 15:05:16.282
  STEP: listing events in all namespaces @ 05/21/25 15:05:16.287
  STEP: listing events in test namespace @ 05/21/25 15:05:16.29
  STEP: listing events with field selection filtering on source @ 05/21/25 15:05:16.292
  STEP: listing events with field selection filtering on reportingController @ 05/21/25 15:05:16.293
  STEP: getting the test event @ 05/21/25 15:05:16.295
  STEP: patching the test event @ 05/21/25 15:05:16.296
  STEP: getting the test event @ 05/21/25 15:05:16.302
  STEP: updating the test event @ 05/21/25 15:05:16.303
  STEP: getting the test event @ 05/21/25 15:05:16.307
  STEP: deleting the test event @ 05/21/25 15:05:16.308
  STEP: listing events in all namespaces @ 05/21/25 15:05:16.312
  STEP: listing events in test namespace @ 05/21/25 15:05:16.316
  I0521 15:05:16.317890 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8928" for this suite. @ 05/21/25 15:05:16.359
• [0.093 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 05/21/25 15:05:16.363
  I0521 15:05:16.363567 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename proxy @ 05/21/25 15:05:16.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:16.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:16.374
  I0521 15:05:16.376687 23 proxy.go:430] Creating pod...
  I0521 15:05:18.388495 23 proxy.go:454] Creating service...
  I0521 15:05:18.407147 23 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=DELETE
  I0521 15:05:18.416329 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0521 15:05:18.416359 23 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=OPTIONS
  I0521 15:05:18.418691 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0521 15:05:18.418734 23 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=PATCH
  I0521 15:05:18.421015 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0521 15:05:18.421043 23 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=POST
  I0521 15:05:18.423212 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0521 15:05:18.423244 23 proxy.go:491] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=PUT
  I0521 15:05:18.425442 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0521 15:05:18.425470 23 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=DELETE
  I0521 15:05:18.428260 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0521 15:05:18.428292 23 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0521 15:05:18.430960 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0521 15:05:18.430989 23 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=PATCH
  I0521 15:05:18.433608 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0521 15:05:18.433638 23 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=POST
  I0521 15:05:18.436222 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0521 15:05:18.436245 23 proxy.go:502] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=PUT
  I0521 15:05:18.438866 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0521 15:05:18.438900 23 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=GET
  I0521 15:05:18.440073 23 proxy.go:530] http.Client request:GET StatusCode:301
  I0521 15:05:18.440101 23 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=GET
  I0521 15:05:18.441871 23 proxy.go:530] http.Client request:GET StatusCode:301
  I0521 15:05:18.441893 23 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/pods/agnhost/proxy?method=HEAD
  I0521 15:05:18.443098 23 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0521 15:05:18.443120 23 proxy.go:522] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9728/services/e2e-proxy-test-service/proxy?method=HEAD
  I0521 15:05:18.444840 23 proxy.go:530] http.Client request:HEAD StatusCode:301
  I0521 15:05:18.444977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9728" for this suite. @ 05/21/25 15:05:18.447
• [2.087 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 05/21/25 15:05:18.45
  I0521 15:05:18.450811 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 15:05:18.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:18.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:18.462
  STEP: Creating service test in namespace statefulset-7835 @ 05/21/25 15:05:18.465
  STEP: Creating statefulset ss in namespace statefulset-7835 @ 05/21/25 15:05:18.47
  I0521 15:05:18.478561 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0521 15:05:28.480132 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/21/25 15:05:28.483
  STEP: Getting /status @ 05/21/25 15:05:28.493
  I0521 15:05:28.497927 23 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/21/25 15:05:28.497
  I0521 15:05:28.511245 23 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/21/25 15:05:28.511
  I0521 15:05:28.513174 23 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I0521 15:05:28.513209 23 statefulset.go:1126] Found Statefulset ss in namespace statefulset-7835 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0521 15:05:28.513226 23 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/21/25 15:05:28.513
  I0521 15:05:28.513263 23 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0521 15:05:28.520330 23 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/21/25 15:05:28.52
  I0521 15:05:28.521926 23 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I0521 15:05:28.522003 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7835
  I0521 15:05:28.585420 23 rest.go:153] Scaling statefulset ss to 0
  I0521 15:05:38.595931 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 15:05:38.597679 23 rest.go:91] Deleting statefulset ss
  I0521 15:05:38.605374 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7835" for this suite. @ 05/21/25 15:05:38.607
• [20.161 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/21/25 15:05:38.612
  I0521 15:05:38.612411 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:05:38.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:38.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:38.621
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:05:38.623
  STEP: Saw pod success @ 05/21/25 15:05:42.637
  I0521 15:05:42.639303 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-ce5f0f53-7716-4f56-bf5a-297bb6d1a958 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:05:42.643
  I0521 15:05:42.655779 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2493" for this suite. @ 05/21/25 15:05:42.658
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 05/21/25 15:05:42.664
  I0521 15:05:42.664224 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 15:05:42.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:42.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:42.674
  STEP: Counting existing ResourceQuota @ 05/21/25 15:05:42.676
  STEP: Creating a ResourceQuota @ 05/21/25 15:05:47.68
  STEP: Ensuring resource quota status is calculated @ 05/21/25 15:05:47.684
  STEP: Creating a Service @ 05/21/25 15:05:49.687
  STEP: Creating a NodePort Service @ 05/21/25 15:05:49.709
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/21/25 15:05:49.73
  STEP: Ensuring resource quota status captures service creation @ 05/21/25 15:05:49.762
  STEP: Deleting Services @ 05/21/25 15:05:51.765
  STEP: Ensuring resource quota status released usage @ 05/21/25 15:05:51.803
  I0521 15:05:53.806169 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2791" for this suite. @ 05/21/25 15:05:53.808
• [11.148 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/21/25 15:05:53.813
  I0521 15:05:53.813254 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:05:53.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:53.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:53.822
  STEP: Creating projection with secret that has name projected-secret-test-b456a2ee-8bf3-4c52-b71a-36f9370c6f55 @ 05/21/25 15:05:53.825
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:05:53.828
  STEP: Saw pod success @ 05/21/25 15:05:57.844
  I0521 15:05:57.846332 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-dc0d43cb-7113-4f3e-bf1d-cc63fce3f061 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:05:57.851
  I0521 15:05:57.861370 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9198" for this suite. @ 05/21/25 15:05:57.863
• [4.055 seconds]
------------------------------
S
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 05/21/25 15:05:57.868
  I0521 15:05:57.868564 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:05:57.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:05:57.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:05:57.881
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 05/21/25 15:05:57.883
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 05/21/25 15:05:57.89
  STEP: Ensure that the job reaches completions @ 05/21/25 15:06:01.897
  STEP: Verifying that the only appropriately index succeeded @ 05/21/25 15:06:01.901
  I0521 15:06:01.903128 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6730" for this suite. @ 05/21/25 15:06:01.905
• [4.040 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 05/21/25 15:06:01.909
  I0521 15:06:01.909178 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:06:01.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:06:01.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:06:01.92
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/21/25 15:06:01.922
  STEP: Saw pod success @ 05/21/25 15:06:05.936
  I0521 15:06:05.938286 23 output.go:207] Trying to get logs from node worker-0 pod pod-ab495fa7-1fb0-4fa5-b6a7-c2041e895646 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:06:05.942
  I0521 15:06:05.953756 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6838" for this suite. @ 05/21/25 15:06:05.956
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/21/25 15:06:05.96
  I0521 15:06:05.960589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:06:05.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:06:05.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:06:05.971
  STEP: creating pod @ 05/21/25 15:06:05.974
  I0521 15:06:07.988536 23 pods.go:83] Pod pod-hostip-9225d7b5-00e8-4022-aaa5-e444303c0557 has hostIP: 10.0.54.132
  I0521 15:06:07.988683 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3311" for this suite. @ 05/21/25 15:06:07.991
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:443
  STEP: Creating a kubernetes client @ 05/21/25 15:06:07.997
  I0521 15:06:07.997559 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-pred @ 05/21/25 15:06:07.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:06:08.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:06:08.006
  I0521 15:06:08.009075 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0521 15:06:08.094012 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0521 15:06:08.095837 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0521 15:06:08.098854 23 predicates.go:956] coredns-6c77c7d548-vnnw6 from kube-system started at 2025-05-21 15:00:59 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.098875 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 15:06:08.098884 23 predicates.go:956] konnectivity-agent-p9v68 from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.098893 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 15:06:08.098904 23 predicates.go:956] kube-proxy-jqp49 from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.098913 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 15:06:08.098924 23 predicates.go:956] kube-router-zbf2d from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.098933 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 15:06:08.098943 23 predicates.go:956] pod-hostip-9225d7b5-00e8-4022-aaa5-e444303c0557 from pods-3311 started at 2025-05-21 15:06:05 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.098953 23 predicates.go:958] 	Container test ready: true, restart count 0
  I0521 15:06:08.098965 23 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-21 15:01:05 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.098974 23 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0521 15:06:08.098984 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-t9t5j from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:06:08.098994 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:06:08.099003 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0521 15:06:08.099022 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0521 15:06:08.198975 23 predicates.go:956] coredns-6c77c7d548-xlnk6 from kube-system started at 2025-05-21 15:01:37 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.198999 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 15:06:08.199008 23 predicates.go:956] konnectivity-agent-fn5zg from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.199015 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 15:06:08.199024 23 predicates.go:956] kube-proxy-2phkk from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.199033 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 15:06:08.199043 23 predicates.go:956] kube-router-8kq5b from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.199053 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 15:06:08.199063 23 predicates.go:956] metrics-server-7db8586f5-2prf5 from kube-system started at 2025-05-21 15:00:58 +0000 UTC (1 container statuses recorded)
  I0521 15:06:08.199073 23 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0521 15:06:08.199083 23 predicates.go:956] sonobuoy-e2e-job-29ce0f45b43640ca from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:06:08.199093 23 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0521 15:06:08.199101 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:06:08.199112 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-78s9t from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:06:08.199122 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:06:08.199131 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/21/25 15:06:08.199
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18419330cd6260de], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/21/25 15:06:08.213
  I0521 15:06:09.213126 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8015" for this suite. @ 05/21/25 15:06:09.215
• [1.223 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 05/21/25 15:06:09.221
  I0521 15:06:09.221158 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:06:09.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:06:09.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:06:09.229
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 05/21/25 15:06:09.231
  STEP: Awaiting for the job to fail as all indexes are failed @ 05/21/25 15:06:09.237
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 05/21/25 15:06:13.243
  I0521 15:06:13.245503 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7803" for this suite. @ 05/21/25 15:06:13.247
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 05/21/25 15:06:13.253
  I0521 15:06:13.253811 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 15:06:13.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:06:13.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:06:13.263
  STEP: Creating pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301 @ 05/21/25 15:06:13.265
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 15:06:15.277
  I0521 15:06:15.278942 23 container_probe.go:1748] Initial restart count of pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c is 0
  I0521 15:06:15.280800 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:17.284186 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:19.287296 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:21.290699 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:23.293958 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:25.297159 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:27.300454 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:29.303964 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:31.307241 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:33.310765 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:35.313779 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:37.317178 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:39.320060 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:41.323473 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:43.325740 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:45.329007 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:47.332281 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:49.335579 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:51.339407 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:53.342210 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:55.345336 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:57.348617 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:06:59.351923 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:01.355607 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:03.358121 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:05.361130 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:07.363155 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:09.366442 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:11.370129 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:13.373805 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:15.377312 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:17.380776 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:19.383116 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:21.386914 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:23.390240 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:25.393559 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:27.397083 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:29.399975 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:31.403754 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:33.406263 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:35.410175 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:37.413337 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:39.416547 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:41.420548 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:43.423973 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:45.427410 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:47.430855 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:49.434073 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:51.436691 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:53.440380 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:55.443151 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:57.446552 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:07:59.448894 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:01.452437 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:03.455079 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:05.458233 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:07.460853 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:09.464308 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:11.467251 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:13.470182 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:15.472957 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:17.475452 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:19.477760 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:21.480515 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:23.483578 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:25.486923 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:27.491040 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:29.493510 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:31.496971 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:33.499317 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:35.501587 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:37.503881 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:39.507399 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:41.510109 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:43.512418 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:45.515479 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:47.518037 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:49.520384 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:51.524030 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:53.526699 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:55.529822 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:57.533445 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:08:59.537484 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:01.540390 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:03.543693 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:05.546926 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:07.550309 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:09.553641 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:11.556884 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:13.559943 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:15.563457 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:17.565962 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:19.570318 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:21.573836 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:23.576881 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:25.580491 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:27.584061 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:29.586955 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:31.589564 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:33.592760 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:35.595301 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:37.598786 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:39.602373 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:41.606139 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:43.608952 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:45.611067 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:47.613876 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:49.616508 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:51.620018 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:53.623186 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:55.625989 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:57.628489 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:09:59.632809 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:01.636477 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:03.638922 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:05.642216 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:07.646595 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:09.649007 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:11.651797 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  I0521 15:10:13.655008 23 container_probe.go:1758] Get pod busybox-18899f4d-48c8-45c2-b52c-7f953a58e20c in namespace container-probe-8301
  STEP: deleting the pod @ 05/21/25 15:10:15.656
  I0521 15:10:15.666505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8301" for this suite. @ 05/21/25 15:10:15.671
• [242.421 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 05/21/25 15:10:15.675
  I0521 15:10:15.675103 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 15:10:15.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:10:15.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:10:15.687
  STEP: Creating pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450 @ 05/21/25 15:10:15.69
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 15:10:17.7
  I0521 15:10:17.702594 23 container_probe.go:1748] Initial restart count of pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e is 0
  I0521 15:10:17.704155 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:19.707357 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:21.711389 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:23.714557 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:25.717867 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:27.721290 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:29.725336 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:31.729005 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:33.732337 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:35.734820 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:37.738156 23 container_probe.go:1758] Get pod liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e in namespace container-probe-6450
  I0521 15:10:37.738196 23 container_probe.go:1762] Restart count of pod container-probe-6450/liveness-4926ff4a-3c55-4f02-a311-a092ea2f4d1e is now 1 (20.035569309s elapsed)
  STEP: deleting the pod @ 05/21/25 15:10:37.738
  I0521 15:10:37.748286 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6450" for this suite. @ 05/21/25 15:10:37.751
• [22.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 05/21/25 15:10:37.756
  I0521 15:10:37.756104 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename security-context-test @ 05/21/25 15:10:37.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:10:37.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:10:37.765
  I0521 15:10:39.777847 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3608" for this suite. @ 05/21/25 15:10:39.78
• [2.028 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/21/25 15:10:39.784
  I0521 15:10:39.784223 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:10:39.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:10:39.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:10:39.793
  I0521 15:10:39.884583 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/21/25 15:10:39.888
  I0521 15:10:39.983278 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:10:39.983315 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0521 15:10:40.893632 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:10:40.893667 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/21/25 15:10:40.9
  STEP: Check that daemon pods images are updated. @ 05/21/25 15:10:40.992
  I0521 15:10:40.994513 23 daemon_set.go:1193] Wrong image for pod: daemon-set-9wc99. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0521 15:10:41.995276 23 daemon_set.go:1193] Wrong image for pod: daemon-set-9wc99. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0521 15:10:41.995316 23 daemon_set.go:1198] Pod daemon-set-m8kzb is not available
  I0521 15:10:42.995693 23 daemon_set.go:1198] Pod daemon-set-2r7zl is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/21/25 15:10:42.997
  I0521 15:10:43.001587 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:10:43.001623 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0521 15:10:44.003574 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:10:44.003612 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/21/25 15:10:44.012
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3885, will wait for the garbage collector to delete the pods @ 05/21/25 15:10:44.013
  I0521 15:10:44.068807 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.777981ms
  I0521 15:10:44.169134 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.324773ms
  I0521 15:10:45.471956 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:10:45.471998 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0521 15:10:45.474033 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3975"},"items":null}

  I0521 15:10:45.476090 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3975"},"items":null}

  I0521 15:10:45.481668 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3885" for this suite. @ 05/21/25 15:10:45.483
• [5.703 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 05/21/25 15:10:45.487
  I0521 15:10:45.487350 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename disruption @ 05/21/25 15:10:45.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:10:45.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:10:45.496
  STEP: creating the pdb @ 05/21/25 15:10:45.498
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:10:45.504
  STEP: updating the pdb @ 05/21/25 15:10:47.506
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:10:47.513
  STEP: patching the pdb @ 05/21/25 15:10:49.516
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:10:49.522
  STEP: Waiting for the pdb to be deleted @ 05/21/25 15:10:51.53
  I0521 15:10:51.531777 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-113" for this suite. @ 05/21/25 15:10:51.534
• [6.053 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 05/21/25 15:10:51.54
  I0521 15:10:51.540112 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename security-context-test @ 05/21/25 15:10:51.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:10:51.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:10:51.551
  I0521 15:10:55.568342 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2341" for this suite. @ 05/21/25 15:10:55.571
• [4.035 seconds]
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 05/21/25 15:10:55.574
  I0521 15:10:55.574881 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl-logs @ 05/21/25 15:10:55.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:10:55.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:10:55.583
  STEP: creating a pod @ 05/21/25 15:10:55.586
  I0521 15:10:55.586349 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0521 15:10:55.643170 23 builder.go:146] stderr: ""
  I0521 15:10:55.643200 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/21/25 15:10:55.643
  I0521 15:10:55.643302 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0521 15:10:57.651606 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/21/25 15:10:57.651
  I0521 15:10:57.651696 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 logs logs-generator logs-generator'
  I0521 15:10:57.715792 23 builder.go:146] stderr: ""
  I0521 15:10:57.715975 23 builder.go:147] stdout: "I0521 15:10:56.133319       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/2ns 496\nI0521 15:10:56.334086       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/8vkc 294\nI0521 15:10:56.533332       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/864 282\nI0521 15:10:56.733648       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/77h 491\nI0521 15:10:56.933961       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/cxc2 252\nI0521 15:10:57.134278       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/669 490\nI0521 15:10:57.333519       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/dd5l 521\nI0521 15:10:57.533941       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/cp4g 332\n"
  STEP: limiting log lines @ 05/21/25 15:10:57.716
  I0521 15:10:57.716065 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 logs logs-generator logs-generator --tail=1'
  I0521 15:10:57.771594 23 builder.go:146] stderr: ""
  I0521 15:10:57.771650 23 builder.go:147] stdout: "I0521 15:10:57.734223       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/n7v2 535\n"
  I0521 15:10:57.771665 23 logs.go:180] got output "I0521 15:10:57.734223       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/n7v2 535\n"
  STEP: limiting log bytes @ 05/21/25 15:10:57.771
  I0521 15:10:57.771769 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 logs logs-generator logs-generator --limit-bytes=1'
  I0521 15:10:57.826071 23 builder.go:146] stderr: ""
  I0521 15:10:57.826133 23 builder.go:147] stdout: "I"
  I0521 15:10:57.826149 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 05/21/25 15:10:57.826
  I0521 15:10:57.826261 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 logs logs-generator logs-generator --tail=1 --timestamps'
  I0521 15:10:57.881200 23 builder.go:146] stderr: ""
  I0521 15:10:57.881238 23 builder.go:147] stdout: "2025-05-21T15:10:57.734308450Z I0521 15:10:57.734223       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/n7v2 535\n"
  I0521 15:10:57.881249 23 logs.go:192] got output "2025-05-21T15:10:57.734308450Z I0521 15:10:57.734223       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/n7v2 535\n"
  STEP: restricting to a time range @ 05/21/25 15:10:57.881
  I0521 15:11:00.382942 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 logs logs-generator logs-generator --since=1s'
  I0521 15:11:00.441390 23 builder.go:146] stderr: ""
  I0521 15:11:00.441435 23 builder.go:147] stdout: "I0521 15:10:59.534303       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/dsnb 472\nI0521 15:10:59.733627       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/vdz 372\nI0521 15:10:59.933930       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/mwr9 358\nI0521 15:11:00.134251       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/l5m 470\nI0521 15:11:00.333493       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/25p 373\n"
  I0521 15:11:00.441476 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 logs logs-generator logs-generator --since=24h'
  I0521 15:11:00.501822 23 builder.go:146] stderr: ""
  I0521 15:11:00.501913 23 builder.go:147] stdout: "I0521 15:10:56.133319       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/2ns 496\nI0521 15:10:56.334086       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/8vkc 294\nI0521 15:10:56.533332       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/864 282\nI0521 15:10:56.733648       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/77h 491\nI0521 15:10:56.933961       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/cxc2 252\nI0521 15:10:57.134278       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/669 490\nI0521 15:10:57.333519       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/dd5l 521\nI0521 15:10:57.533941       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/cp4g 332\nI0521 15:10:57.734223       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/n7v2 535\nI0521 15:10:57.933492       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/6t2g 357\nI0521 15:10:58.133810       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/tk9c 200\nI0521 15:10:58.333995       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/tlv 480\nI0521 15:10:58.534302       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/m6n 575\nI0521 15:10:58.733616       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/kcrj 452\nI0521 15:10:58.933930       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/vq59 410\nI0521 15:10:59.134254       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/ks5 233\nI0521 15:10:59.333994       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/ksdg 279\nI0521 15:10:59.534303       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/dsnb 472\nI0521 15:10:59.733627       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/vdz 372\nI0521 15:10:59.933930       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/mwr9 358\nI0521 15:11:00.134251       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/l5m 470\nI0521 15:11:00.333493       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/25p 373\n"
  I0521 15:11:00.502024 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-logs-1161 delete pod logs-generator'
  I0521 15:11:01.581518 23 builder.go:146] stderr: ""
  I0521 15:11:01.581571 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0521 15:11:01.581700 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1161" for this suite. @ 05/21/25 15:11:01.584
• [6.014 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 05/21/25 15:11:01.589
  I0521 15:11:01.589053 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 15:11:01.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:01.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:01.6
  I0521 15:11:01.604132 23 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6908"
  I0521 15:11:01.607624 23 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6908"
  STEP: waiting for a new root ca configmap created @ 05/21/25 15:11:02.107
  I0521 15:11:02.110276 23 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6908"
  I0521 15:11:02.113932 23 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6908"
  STEP: waiting for the root ca configmap reconciled @ 05/21/25 15:11:02.614
  I0521 15:11:02.617028 23 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6908"
  I0521 15:11:02.617173 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6908" for this suite. @ 05/21/25 15:11:02.619
• [1.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 05/21/25 15:11:02.623
  I0521 15:11:02.623866 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 15:11:02.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:02.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:02.636
  STEP: create the rc @ 05/21/25 15:11:02.638
  I0521 15:11:02.642679      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 05/21/25 15:11:07.649
  STEP: wait for all pods to be garbage collected @ 05/21/25 15:11:07.653
  STEP: Gathering metrics @ 05/21/25 15:11:12.658
  W0521 15:11:12.661283      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0521 15:11:12.661321 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0521 15:11:12.661516 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2378" for this suite. @ 05/21/25 15:11:12.663
• [10.044 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 05/21/25 15:11:12.667
  I0521 15:11:12.667656 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename disruption @ 05/21/25 15:11:12.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:12.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:12.679
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/21/25 15:11:12.681
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:11:12.684
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/21/25 15:11:14.692
  STEP: Waiting for all pods to be running @ 05/21/25 15:11:14.692
  I0521 15:11:14.694712 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 05/21/25 15:11:16.695
  STEP: Updating the pdb to allow a pod to be evicted @ 05/21/25 15:11:16.702
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:11:16.707
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/21/25 15:11:18.71
  STEP: Waiting for all pods to be running @ 05/21/25 15:11:18.71
  STEP: Waiting for the pdb to observed all healthy pods @ 05/21/25 15:11:18.712
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/21/25 15:11:18.73
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:11:18.752
  STEP: Waiting for all pods to be running @ 05/21/25 15:11:20.756
  STEP: locating a running pod @ 05/21/25 15:11:20.759
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/21/25 15:11:20.764
  STEP: Waiting for the pdb to be deleted @ 05/21/25 15:11:20.768
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/21/25 15:11:20.769
  STEP: Waiting for all pods to be running @ 05/21/25 15:11:20.769
  I0521 15:11:20.873751 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2290" for this suite. @ 05/21/25 15:11:20.876
• [8.216 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 05/21/25 15:11:20.883
  I0521 15:11:20.883979 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:11:20.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:20.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:20.898
  STEP: Setting up server cert @ 05/21/25 15:11:20.912
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:11:21.341
  STEP: Deploying the webhook pod @ 05/21/25 15:11:21.345
  STEP: Wait for the deployment to be ready @ 05/21/25 15:11:21.356
  I0521 15:11:21.363545 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:11:23.373
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:11:23.387
  I0521 15:11:24.387807 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0521 15:11:24.390666 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-816-crds.webhook.example.com via the AdmissionRegistration API @ 05/21/25 15:11:24.898
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/21/25 15:11:24.913
  I0521 15:11:27.491854 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6810" for this suite. @ 05/21/25 15:11:27.494
  STEP: Destroying namespace "webhook-markers-4166" for this suite. @ 05/21/25 15:11:27.5
• [6.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:466
  STEP: Creating a kubernetes client @ 05/21/25 15:11:27.504
  I0521 15:11:27.504796 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-pred @ 05/21/25 15:11:27.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:27.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:27.514
  I0521 15:11:27.517181 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0521 15:11:27.597948 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0521 15:11:27.600429 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0521 15:11:27.603540 23 predicates.go:956] coredns-6c77c7d548-vnnw6 from kube-system started at 2025-05-21 15:00:59 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.603567 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 15:11:27.603576 23 predicates.go:956] konnectivity-agent-p9v68 from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.603592 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 15:11:27.603603 23 predicates.go:956] kube-proxy-jqp49 from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.603611 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 15:11:27.603618 23 predicates.go:956] kube-router-zbf2d from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.603627 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 15:11:27.603638 23 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-21 15:01:05 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.603649 23 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0521 15:11:27.603660 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-t9t5j from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:11:27.603678 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:11:27.603688 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0521 15:11:27.603704 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0521 15:11:27.606554 23 predicates.go:956] coredns-6c77c7d548-xlnk6 from kube-system started at 2025-05-21 15:01:37 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.606582 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 15:11:27.606595 23 predicates.go:956] konnectivity-agent-fn5zg from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.606605 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 15:11:27.606620 23 predicates.go:956] kube-proxy-2phkk from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.606630 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 15:11:27.606639 23 predicates.go:956] kube-router-8kq5b from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.606650 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 15:11:27.606661 23 predicates.go:956] metrics-server-7db8586f5-2prf5 from kube-system started at 2025-05-21 15:00:58 +0000 UTC (1 container statuses recorded)
  I0521 15:11:27.606675 23 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0521 15:11:27.606686 23 predicates.go:956] sonobuoy-e2e-job-29ce0f45b43640ca from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:11:27.606697 23 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0521 15:11:27.606711 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:11:27.606743 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-78s9t from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:11:27.606753 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:11:27.606765 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/21/25 15:11:27.606
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/21/25 15:11:29.619
  STEP: Trying to apply a random label on the found node. @ 05/21/25 15:11:29.627
  STEP: verifying the node has the label kubernetes.io/e2e-bab06ec5-eece-4a35-9bc3-f4f44cd9a220 42 @ 05/21/25 15:11:29.636
  STEP: Trying to relaunch the pod, now with labels. @ 05/21/25 15:11:29.638
  STEP: removing the label kubernetes.io/e2e-bab06ec5-eece-4a35-9bc3-f4f44cd9a220 off the node worker-0 @ 05/21/25 15:11:31.648
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-bab06ec5-eece-4a35-9bc3-f4f44cd9a220 @ 05/21/25 15:11:31.656
  I0521 15:11:31.659281 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-351" for this suite. @ 05/21/25 15:11:31.661
• [4.160 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/21/25 15:11:31.664
  I0521 15:11:31.664786 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:11:31.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:31.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:31.673
  STEP: Creating secret with name secret-test-54f8e523-0fd0-42f9-8223-a6aaf639c391 @ 05/21/25 15:11:31.676
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:11:31.679
  STEP: Saw pod success @ 05/21/25 15:11:35.694
  I0521 15:11:35.696278 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-2f66a970-9f78-4b57-b98a-fb3ba04b2e2f container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:11:35.7
  I0521 15:11:35.709931 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8838" for this suite. @ 05/21/25 15:11:35.712
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 05/21/25 15:11:35.716
  I0521 15:11:35.716067 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:11:35.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:35.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:35.727
  STEP: creating service in namespace services-5355 @ 05/21/25 15:11:35.729
  STEP: creating service affinity-nodeport in namespace services-5355 @ 05/21/25 15:11:35.729
  I0521 15:11:35.755506 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0521 15:11:37.768043 23 resource.go:361] Creating new exec pod
  I0521 15:11:39.781156 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5355 exec execpod-affinitywqgpj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0521 15:11:39.877842 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.99.41.194) 80 port [tcp/http] succeeded!\n"
  I0521 15:11:39.877893 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:11:39.878056 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5355 exec execpod-affinitywqgpj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.41.194 80'
  I0521 15:11:39.967329 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.41.194 80\nConnection to 10.99.41.194 80 port [tcp/http] succeeded!\n"
  I0521 15:11:39.967371 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:11:39.967444 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5355 exec execpod-affinitywqgpj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.54.132 30542'
  I0521 15:11:40.058607 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.54.132 30542\nConnection to 10.0.54.132 30542 port [tcp/*] succeeded!\n"
  I0521 15:11:40.058650 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:11:40.058737 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5355 exec execpod-affinitywqgpj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.60.98 30542'
  I0521 15:11:40.150232 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.60.98 30542\nConnection to 10.0.60.98 30542 port [tcp/*] succeeded!\n"
  I0521 15:11:40.150403 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:11:40.150495 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5355 exec execpod-affinitywqgpj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/ ; done'
  I0521 15:11:40.301681 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:30542/\n"
  I0521 15:11:40.301791 23 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f\naffinity-nodeport-85dffb5fc7-h5c6f"
  I0521 15:11:40.301825 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301843 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301897 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301911 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301925 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301942 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301953 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301964 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301978 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.301994 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302002 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302010 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302018 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302030 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302040 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302049 23 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-h5c6f
  I0521 15:11:40.302127 23 service.go:4352] Cleaning up the exec pod
  I0521 15:11:40.346552 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5355" for this suite. @ 05/21/25 15:11:40.353
• [4.646 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 05/21/25 15:11:40.363
  I0521 15:11:40.363492 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:11:40.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:40.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:40.375
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/21/25 15:11:40.378
  STEP: Saw pod success @ 05/21/25 15:11:44.396
  I0521 15:11:44.397783 23 output.go:207] Trying to get logs from node worker-0 pod pod-4e99c47c-2e6b-4e54-9804-ef999ee053eb container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:11:44.402
  I0521 15:11:44.413550 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2501" for this suite. @ 05/21/25 15:11:44.415
• [4.059 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/21/25 15:11:44.422
  I0521 15:11:44.422162 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:11:44.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:44.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:44.433
  STEP: Creating secret with name secret-test-map-ecd53d0b-3427-4138-aedd-26ca9074afb8 @ 05/21/25 15:11:44.436
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:11:44.438
  STEP: Saw pod success @ 05/21/25 15:11:48.454
  I0521 15:11:48.455905 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-5b133c9a-2cd0-4575-b387-dd6f5007838c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:11:48.46
  I0521 15:11:48.471691 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3012" for this suite. @ 05/21/25 15:11:48.474
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 05/21/25 15:11:48.478
  I0521 15:11:48.478324 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:11:48.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:48.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:48.487
  STEP: Setting up server cert @ 05/21/25 15:11:48.499
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:11:48.947
  STEP: Deploying the webhook pod @ 05/21/25 15:11:48.951
  STEP: Wait for the deployment to be ready @ 05/21/25 15:11:48.961
  I0521 15:11:48.967552 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:11:50.975
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:11:50.992
  I0521 15:11:51.992665 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/21/25 15:11:51.995
  STEP: create a pod @ 05/21/25 15:11:52.011
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/21/25 15:11:54.022
  I0521 15:11:54.022373 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=webhook-2256 attach --namespace=webhook-2256 to-be-attached-pod -i -c=container1'
  I0521 15:11:54.090694 23 builder.go:135] rc: 1
  I0521 15:11:54.125905 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2256" for this suite. @ 05/21/25 15:11:54.129
  STEP: Destroying namespace "webhook-markers-6549" for this suite. @ 05/21/25 15:11:54.136
• [5.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 05/21/25 15:11:54.14
  I0521 15:11:54.140622 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:11:54.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:54.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:54.151
  STEP: Creating configMap with name configmap-test-volume-b65b99bd-1f1d-45b1-8542-d72d0b7b2507 @ 05/21/25 15:11:54.154
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:11:54.157
  STEP: Saw pod success @ 05/21/25 15:11:56.167
  I0521 15:11:56.169160 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-6a036458-5070-4910-a7ae-2682d3895b36 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:11:56.173
  I0521 15:11:56.186662 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3751" for this suite. @ 05/21/25 15:11:56.189
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 05/21/25 15:11:56.193
  I0521 15:11:56.193914 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 15:11:56.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:11:56.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:11:56.206
  STEP: Creating a test headless service @ 05/21/25 15:11:56.208
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2871.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2871.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2871.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2871.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 57.200.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.200.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.200.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.200.57_tcp@PTR;sleep 1; done
   @ 05/21/25 15:11:56.228
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2871.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2871.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2871.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2871.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2871.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 57.200.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.200.57_udp@PTR;check="$$(dig +tcp +noall +answer +search 57.200.109.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.109.200.57_tcp@PTR;sleep 1; done
   @ 05/21/25 15:11:56.228
  STEP: creating a pod to probe DNS @ 05/21/25 15:11:56.228
  STEP: submitting the pod to kubernetes @ 05/21/25 15:11:56.228
  STEP: retrieving the pod @ 05/21/25 15:12:02.251
  STEP: looking for the results for each expected name from probers @ 05/21/25 15:12:02.253
  I0521 15:12:02.258109 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.260856 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.263789 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.266296 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.278826 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.281362 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.283900 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.286388 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:02.295794 23 dns_common.go:506] Lookups using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f failed for: [agnhost_udp@dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_udp@dns-test-service.dns-2871.svc.cluster.local jessie_tcp@dns-test-service.dns-2871.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local]

  I0521 15:12:02.307358 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:12:02.310701 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:12:02.314123 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0521 15:12:07.257442 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.259994 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.262487 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.265005 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.277109 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.279491 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.281841 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.284176 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:07.293216 23 dns_common.go:506] Lookups using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f failed for: [agnhost_udp@dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_udp@dns-test-service.dns-2871.svc.cluster.local jessie_tcp@dns-test-service.dns-2871.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local]

  I0521 15:12:07.297121 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:12:07.300545 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:12:07.303994 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0521 15:12:12.260497 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.263292 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.265722 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.268119 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.283332 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.285733 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.288126 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.290421 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:12.299903 23 dns_common.go:506] Lookups using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f failed for: [agnhost_udp@dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_udp@dns-test-service.dns-2871.svc.cluster.local jessie_tcp@dns-test-service.dns-2871.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local]

  I0521 15:12:12.303846 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:12:12.307435 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:12:12.311043 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0521 15:12:17.261272 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.263976 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.266528 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.269050 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.281878 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.284346 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.286881 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.289448 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:17.299712 23 dns_common.go:506] Lookups using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f failed for: [agnhost_udp@dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_udp@dns-test-service.dns-2871.svc.cluster.local jessie_tcp@dns-test-service.dns-2871.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local]

  I0521 15:12:17.303806 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:12:17.307709 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:12:17.311403 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0521 15:12:22.259201 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.261907 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.264439 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.266935 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.278819 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.281339 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.283826 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.286324 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:22.296399 23 dns_common.go:506] Lookups using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f failed for: [agnhost_udp@dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_udp@dns-test-service.dns-2871.svc.cluster.local jessie_tcp@dns-test-service.dns-2871.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local]

  I0521 15:12:22.300396 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:12:22.303940 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:12:22.307376 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0521 15:12:27.261349 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.264530 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.267148 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.269673 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.284001 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.286348 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.288693 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.291106 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local from pod dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f: the server could not find the requested resource (get pods dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f)
  I0521 15:12:27.300622 23 dns_common.go:506] Lookups using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f failed for: [agnhost_udp@dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@dns-test-service.dns-2871.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_udp@dns-test-service.dns-2871.svc.cluster.local jessie_tcp@dns-test-service.dns-2871.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2871.svc.cluster.local]

  I0521 15:12:27.304540 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:12:27.307955 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:12:27.311405 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0521 15:12:32.298261 23 dns_common.go:546] DNS probes using dns-2871/dns-test-018b9e2f-46ef-45d9-a5e3-22b0e75f6d7f succeeded

  STEP: deleting the pod @ 05/21/25 15:12:32.298
  STEP: deleting the test service @ 05/21/25 15:12:32.307
  STEP: deleting the test headless service @ 05/21/25 15:12:32.332
  I0521 15:12:32.340528 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2871" for this suite. @ 05/21/25 15:12:32.345
• [36.157 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/21/25 15:12:32.351
  I0521 15:12:32.351413 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:12:32.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:32.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:32.36
  STEP: validating cluster-info @ 05/21/25 15:12:32.362
  I0521 15:12:32.362961 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6826 cluster-info'
  I0521 15:12:32.432572 23 builder.go:146] stderr: ""
  I0521 15:12:32.432814 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0521 15:12:32.432959 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6826" for this suite. @ 05/21/25 15:12:32.444
• [0.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/21/25 15:12:32.448
  I0521 15:12:32.448292 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:12:32.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:32.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:32.458
  STEP: creating the pod @ 05/21/25 15:12:32.461
  STEP: submitting the pod to kubernetes @ 05/21/25 15:12:32.461
  STEP: verifying the pod is in kubernetes @ 05/21/25 15:12:34.475
  STEP: updating the pod @ 05/21/25 15:12:34.477
  I0521 15:12:34.986110 23 pod_client.go:173] Successfully updated pod "pod-update-a8d29c33-b43a-42c3-bdf1-7d70c91a7e6e"
  STEP: verifying the updated pod is in kubernetes @ 05/21/25 15:12:34.988
  I0521 15:12:34.990081 23 pods.go:391] Pod update OK
  I0521 15:12:34.990255 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4937" for this suite. @ 05/21/25 15:12:34.992
• [2.550 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/21/25 15:12:34.998
  I0521 15:12:34.998717 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:12:34.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:35.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:35.007
  STEP: creating a secret @ 05/21/25 15:12:35.009
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/21/25 15:12:35.014
  STEP: patching the secret @ 05/21/25 15:12:35.016
  STEP: deleting the secret using a LabelSelector @ 05/21/25 15:12:35.021
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/21/25 15:12:35.025
  I0521 15:12:35.026958 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5560" for this suite. @ 05/21/25 15:12:35.093
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/21/25 15:12:35.097
  I0521 15:12:35.097786 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:12:35.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:35.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:35.106
  I0521 15:12:35.108676 23 deployment.go:1215] Creating deployment "webserver-deployment"
  I0521 15:12:35.112041 23 deployment.go:1219] Waiting for observed generation 1
  I0521 15:12:37.116876 23 deployment.go:1224] Waiting for all required pods to come up
  I0521 15:12:37.119894 23 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/21/25 15:12:37.119
  I0521 15:12:37.119995 23 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0521 15:12:37.123458 23 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0521 15:12:37.131036 23 deployment.go:314] Updating deployment webserver-deployment
  I0521 15:12:37.131062 23 deployment.go:1243] Waiting for observed generation 2
  I0521 15:12:39.136451 23 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0521 15:12:39.138160 23 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0521 15:12:39.139785 23 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0521 15:12:39.146969 23 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0521 15:12:39.146995 23 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0521 15:12:39.149913 23 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0521 15:12:39.152815 23 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0521 15:12:39.152838 23 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0521 15:12:39.158219 23 deployment.go:314] Updating deployment webserver-deployment
  I0521 15:12:39.158257 23 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0521 15:12:39.164243 23 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0521 15:12:39.165870 23 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0521 15:12:39.175808 23 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5194227d-5140-4e21-948e-1adc9c53bc31",
      ResourceVersion: (string) (len=4) "5234",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:12:39.252531 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
      ResourceVersion: (string) (len=4) "5238",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5194227d-5140-4e21-948e-1adc9c53bc31",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 31 39 34 32 32  37 64 2d 35 31 34 30 2d  |\"5194227d-5140-|
              00000120  34 65 32 31 2d 39 34 38  65 2d 31 61 64 63 39 63  |4e21-948e-1adc9c|
              00000130  35 33 62 63 33 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |53bc31\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:12:39.253612 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0521 15:12:39.254105 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
      ResourceVersion: (string) (len=4) "5235",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5194227d-5140-4e21-948e-1adc9c53bc31",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 31 39 34 32 32  37 64 2d 35 31 34 30 2d  |\"5194227d-5140-|
              00000120  34 65 32 31 2d 39 34 38  65 2d 31 61 64 63 39 63  |4e21-948e-1adc9c|
              00000130  35 33 62 63 33 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |53bc31\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:12:39.272740 23 deployment.go:68] Pod "webserver-deployment-685b768f58-22bfg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-22bfg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c8c7e76-f7cc-4343-970f-2c5196cd78aa",
      ResourceVersion: (string) (len=4) "5266",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vpj8q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vpj8q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.274545 23 deployment.go:68] Pod "webserver-deployment-685b768f58-2spsn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2spsn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc28e842-c727-4637-aa28-78ebfd466fd1",
      ResourceVersion: (string) (len=4) "5291",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b876w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b876w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.276651 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6grsc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6grsc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a3724b3-98cc-4b9f-87ba-12c797306f7d",
      ResourceVersion: (string) (len=4) "5083",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 36  37 5c 22 7d 22 3a 7b 22  |.244.0.67\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8n74j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8n74j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=11) "10.244.0.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3a407d9d265f642d1c25187048741d0289c338658eb2cda2e2f6f322d5ef9d84",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8n74j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.279569 23 deployment.go:68] Pod "webserver-deployment-685b768f58-97djf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-97djf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b432962-4855-424d-af81-9ba4cb1781f9",
      ResourceVersion: (string) (len=4) "5102",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  36 5c 22 7d 22 3a 7b 22  |.244.1.26\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8vrwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8vrwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ee78dfd3709a6f4aff716fffb1b7fe54b574f9053c28b705793e26e157020676",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8vrwr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.282425 23 deployment.go:68] Pod "webserver-deployment-685b768f58-9rbh6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9rbh6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40576c0d-ccad-4c81-bd74-687cb0ee2199",
      ResourceVersion: (string) (len=4) "5281",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rnmqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rnmqz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.284943 23 deployment.go:68] Pod "webserver-deployment-685b768f58-fnpmq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fnpmq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "641dad1a-3753-4832-bc74-df2960d5271b",
      ResourceVersion: (string) (len=4) "5122",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 36  38 5c 22 7d 22 3a 7b 22  |.244.0.68\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hnv2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hnv2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=11) "10.244.0.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://168cd0d680e3c76da5e03d42dcc59aba0466b91dbe86f745386713e60703fc41",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7hnv2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.287409 23 deployment.go:68] Pod "webserver-deployment-685b768f58-gwp76" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gwp76",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b0adf28-e2b7-4a3f-8176-10eb54420adc",
      ResourceVersion: (string) (len=4) "5263",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xfvqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xfvqr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.292213 23 deployment.go:68] Pod "webserver-deployment-685b768f58-hrtm7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hrtm7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dce5f4cb-613c-492a-8ab4-9cf57ce738d9",
      ResourceVersion: (string) (len=4) "5261",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7tkcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7tkcl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7tkcl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.294612 23 deployment.go:68] Pod "webserver-deployment-685b768f58-jn5tw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jn5tw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ad81990-ecbd-4ea9-b37b-cc353c57c4c0",
      ResourceVersion: (string) (len=4) "5287",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dpgv7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dpgv7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.296266 23 deployment.go:68] Pod "webserver-deployment-685b768f58-kjjmm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kjjmm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca55f978-4e03-4511-88bf-20ba81aa23fe",
      ResourceVersion: (string) (len=4) "5284",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7w4w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7w4w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.298281 23 deployment.go:68] Pod "webserver-deployment-685b768f58-krnx4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-krnx4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef832ec7-7711-483d-a2fc-3ce651ddd17d",
      ResourceVersion: (string) (len=4) "5113",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  30 5c 22 7d 22 3a 7b 22  |.244.1.30\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbmrh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbmrh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa66725ed2510931aecb4774bb11a55a83558935988929c5595ab1b3997b59cc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wbmrh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.301266 23 deployment.go:68] Pod "webserver-deployment-685b768f58-kw2jh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kw2jh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4c58fd5-45ad-4955-8c80-2259b801bd38",
      ResourceVersion: (string) (len=4) "5270",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5rplv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5rplv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.303194 23 deployment.go:68] Pod "webserver-deployment-685b768f58-lqbsz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lqbsz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b39254a-6edd-4758-b5c2-0a93113e3ce1",
      ResourceVersion: (string) (len=4) "5301",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5295",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5295",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l5295",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.305903 23 deployment.go:68] Pod "webserver-deployment-685b768f58-nkzk4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nkzk4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "531381be-71d0-4a99-8039-7734067d0038",
      ResourceVersion: (string) (len=4) "5288",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jt7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jt7v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.307956 23 deployment.go:68] Pod "webserver-deployment-685b768f58-nmmmc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nmmmc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "595b668a-82cf-43a6-bd0d-6ec9c2394cf1",
      ResourceVersion: (string) (len=4) "5110",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  39 5c 22 7d 22 3a 7b 22  |.244.1.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kxzvx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kxzvx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://331e39d8850464ecde2e4a9c293b190dcb104080ca470d35705dd4dd61f822eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kxzvx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.311349 23 deployment.go:68] Pod "webserver-deployment-685b768f58-qf2wv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qf2wv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "142f7d4b-a2d8-4b67-aee0-3068630e4ea1",
      ResourceVersion: (string) (len=4) "5286",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4nr2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4nr2w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4nr2w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.319670 23 deployment.go:68] Pod "webserver-deployment-685b768f58-snt2r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-snt2r",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19596ff1-848a-4442-ac74-198864dcd39c",
      ResourceVersion: (string) (len=4) "5119",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 37  31 5c 22 7d 22 3a 7b 22  |.244.0.71\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vbrx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vbrx8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=11) "10.244.0.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cd76ccbdba40640aea1da2b4112da30cdb9a9eec4d2540edfb5471807ac2c39c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vbrx8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.322252 23 deployment.go:68] Pod "webserver-deployment-685b768f58-xhhzh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xhhzh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d9fb7c1-ad59-4164-810f-95548c057954",
      ResourceVersion: (string) (len=4) "5300",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-krcqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-krcqh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-krcqh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.325258 23 deployment.go:68] Pod "webserver-deployment-685b768f58-z5dbp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z5dbp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df933f9d-52af-4863-90b6-d6a40bf67668",
      ResourceVersion: (string) (len=4) "5104",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  37 5c 22 7d 22 3a 7b 22  |.244.1.27\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfzlw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfzlw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e6bff2665b5ecacdca2bcda45bdab6d581c3333917dc90c1c9dc00736ab80834",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jfzlw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.329397 23 deployment.go:68] Pod "webserver-deployment-685b768f58-zvfrw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zvfrw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d7268f2-0a29-4650-bead-fc925b16c42d",
      ResourceVersion: (string) (len=4) "5107",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "ad84fd51-c1b9-4184-bc19-50bb28717791",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 64  38 34 66 64 35 31 2d 63  |d\":\"ad84fd51-c|
              00000090  31 62 39 2d 34 31 38 34  2d 62 63 31 39 2d 35 30  |1b9-4184-bc19-50|
              000000a0  62 62 32 38 37 31 37 37  39 31 5c 22 7d 22 3a 7b  |bb28717791\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  38 5c 22 7d 22 3a 7b 22  |.244.1.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rf469",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rf469",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437155,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437155,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437155,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7bdda5c1165f86b733f3f3cf6cff2fb17976929ddeef84b63d72fe37c2f0e870",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rf469",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.332984 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-28gq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-28gq6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93dc034c-9180-4925-a624-7034ad41cb55",
      ResourceVersion: (string) (len=4) "5228",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 37 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.0.73\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wzkjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wzkjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=11) "10.244.0.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wzkjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.335448 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5rz62" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5rz62",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f253b500-6122-4748-987f-3eba97e87c60",
      ResourceVersion: (string) (len=4) "5259",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htq5r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htq5r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.336952 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7j7kj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7j7kj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f72e5c0-d66b-4ee7-9160-cacad455393d",
      ResourceVersion: (string) (len=4) "5256",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9m7rq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9m7rq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.338525 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-86kmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-86kmk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb8abd45-1743-4505-93d6-10404405dd0a",
      ResourceVersion: (string) (len=4) "5295",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pd29",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pd29",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.339991 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-8x85d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-8x85d",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32f0a930-2df2-4c04-9f44-266c20f059ab",
      ResourceVersion: (string) (len=4) "5299",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj9n5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj9n5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.341832 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9gm7l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9gm7l",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "181144ef-9379-4eda-9395-efe64f0851ae",
      ResourceVersion: (string) (len=4) "5219",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 33 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.31\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-55kx5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-55kx5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-55kx5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.344094 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-j62sl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-j62sl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bdc8afa-d7af-457a-94a0-70a9079d7cc4",
      ResourceVersion: (string) (len=4) "5269",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nz4qw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nz4qw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.346067 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-j82qj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-j82qj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad56e6e1-805d-4278-be2e-8ad220fab96d",
      ResourceVersion: (string) (len=4) "5225",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 37 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.0.72\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8wmqn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8wmqn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=11) "10.244.0.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8wmqn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.350128 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jbv9b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jbv9b",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "067b6979-f897-4d22-96d9-ae46d7600aa8",
      ResourceVersion: (string) (len=4) "5177",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zqlpp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zqlpp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zqlpp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.353509 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mq879" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mq879",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ff0f915-27ad-4752-9ade-996fc0491dee",
      ResourceVersion: (string) (len=4) "5222",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 33 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.32\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lh8m8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lh8m8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lh8m8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.356838 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-svz88" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-svz88",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccb1bac4-f97e-467a-84b7-d9a7993391a1",
      ResourceVersion: (string) (len=4) "5292",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r2rp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r2rp6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.358493 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vcc92" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vcc92",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04fe6c28-24fd-438d-9d89-4bfdb3925136",
      ResourceVersion: (string) (len=4) "5296",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mcxs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mcxs7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.361035 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zbzsm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zbzsm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8092eded-715b-4bb0-b883-e99c15d385cd",
      ResourceVersion: (string) (len=4) "5297",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "13c1c059-e270-4bb4-8790-a19eb589df6f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 31 63 30 35 39 2d 65  |d\":\"13c1c059-e|
              00000090  32 37 30 2d 34 62 62 34  2d 38 37 39 30 2d 61 31  |270-4bb4-8790-a1|
              000000a0  39 65 62 35 38 39 64 66  36 66 5c 22 7d 22 3a 7b  |9eb589df6f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29kzt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29kzt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:12:39.362699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-503" for this suite. @ 05/21/25 15:12:39.366
• [4.279 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 05/21/25 15:12:39.378
  I0521 15:12:39.378413 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:12:39.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:39.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:39.391
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:12:39.405
  STEP: Saw pod success @ 05/21/25 15:12:43.423
  I0521 15:12:43.425271 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-8b0b7f1d-a000-4d06-981c-dd51eb4251c3 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:12:43.429
  I0521 15:12:43.442295 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5103" for this suite. @ 05/21/25 15:12:43.444
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 05/21/25 15:12:43.448
  I0521 15:12:43.448714 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:12:43.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:43.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:43.457
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/21/25 15:12:43.46
  STEP: Saw pod success @ 05/21/25 15:12:47.473
  I0521 15:12:47.474957 23 output.go:207] Trying to get logs from node worker-0 pod pod-910aa440-d377-4507-b1b0-9f96f4bce4d9 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:12:47.48
  I0521 15:12:47.491331 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5913" for this suite. @ 05/21/25 15:12:47.493
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/21/25 15:12:47.499
  I0521 15:12:47.499580 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:12:47.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:47.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:47.508
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/21/25 15:12:47.511
  I0521 15:12:47.511192 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-2779 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0521 15:12:47.576386 23 builder.go:146] stderr: ""
  I0521 15:12:47.576492 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/21/25 15:12:47.576
  I0521 15:12:47.578709 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-2779 delete pods e2e-test-httpd-pod'
  I0521 15:12:48.881442 23 builder.go:146] stderr: ""
  I0521 15:12:48.881482 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0521 15:12:48.881607 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2779" for this suite. @ 05/21/25 15:12:48.884
• [1.388 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 05/21/25 15:12:48.888
  I0521 15:12:48.888330 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:12:48.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:48.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:48.899
  STEP: Creating simple DaemonSet "daemon-set" @ 05/21/25 15:12:48.99
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/21/25 15:12:48.996
  I0521 15:12:49.087248 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:12:49.087284 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0521 15:12:50.002316 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:12:50.002358 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/21/25 15:12:50.004
  I0521 15:12:50.006318 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/21/25 15:12:50.006
  I0521 15:12:50.013965 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/21/25 15:12:50.013
  I0521 15:12:50.015384 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0521 15:12:50.015551 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.015700 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.015863 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.015893 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1963 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0521 15:12:50.015916 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/21/25 15:12:50.015
  STEP: watching for the daemon set status to be patched @ 05/21/25 15:12:50.02
  I0521 15:12:50.021701 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0521 15:12:50.021809 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.021912 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.022080 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.022110 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1963 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0521 15:12:50.022228 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0521 15:12:50.022261 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1963 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0521 15:12:50.022277 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/21/25 15:12:50.027
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1963, will wait for the garbage collector to delete the pods @ 05/21/25 15:12:50.027
  I0521 15:12:50.083018 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.950069ms
  I0521 15:12:50.183610 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.587844ms
  I0521 15:12:51.986367 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:12:51.986400 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0521 15:12:51.988384 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5723"},"items":null}

  I0521 15:12:51.990025 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5723"},"items":null}

  I0521 15:12:51.995179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1963" for this suite. @ 05/21/25 15:12:51.997
• [3.112 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 05/21/25 15:12:52
  I0521 15:12:52.000372 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:12:52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:52.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:52.009
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:12:52.012
  STEP: Saw pod success @ 05/21/25 15:12:54.021
  I0521 15:12:54.023253 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-0dc61913-615c-43c6-876f-c91fd7f1e500 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:12:54.027
  I0521 15:12:54.037922 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9946" for this suite. @ 05/21/25 15:12:54.04
• [2.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:125
  STEP: Creating a kubernetes client @ 05/21/25 15:12:54.045
  I0521 15:12:54.045778 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption @ 05/21/25 15:12:54.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:12:54.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:12:54.055
  I0521 15:12:54.068223 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0521 15:13:54.071965 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/21/25 15:13:54.074
  STEP: Adding a custom resource @ 05/21/25 15:13:54.074
  I0521 15:13:54.085966 23 preemption.go:169] Created pod: pod0-0-sched-preemption-low-priority
  I0521 15:13:54.091620 23 preemption.go:169] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/21/25 15:13:54.091
  I0521 15:13:54.109212 23 preemption.go:169] Created pod: pod1-0-sched-preemption-medium-priority
  I0521 15:13:54.114838 23 preemption.go:169] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/21/25 15:13:54.114
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/21/25 15:13:56.127
  STEP: Removing a custom resource @ 05/21/25 15:13:58.156
  STEP: Removing a custom resource @ 05/21/25 15:13:58.164
  I0521 15:13:58.173666 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-165" for this suite. @ 05/21/25 15:13:58.175
• [64.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 05/21/25 15:13:58.179
  I0521 15:13:58.179593 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:13:58.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:13:58.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:13:58.189
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/21/25 15:13:58.191
  STEP: Saw pod success @ 05/21/25 15:14:00.201
  I0521 15:14:00.203357 23 output.go:207] Trying to get logs from node worker-0 pod pod-363d927a-d72f-4a14-9ebd-c241f71b6587 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:14:00.207
  I0521 15:14:00.218394 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9955" for this suite. @ 05/21/25 15:14:00.22
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 05/21/25 15:14:00.225
  I0521 15:14:00.225784 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:14:00.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:00.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:00.237
  STEP: Creating a pod to test downward api env vars @ 05/21/25 15:14:00.239
  STEP: Saw pod success @ 05/21/25 15:14:02.253
  I0521 15:14:02.254996 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-2223b92e-d0c4-49ae-9045-512e00e0ea7a container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:14:02.259
  I0521 15:14:02.270947 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1047" for this suite. @ 05/21/25 15:14:02.273
• [2.051 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 05/21/25 15:14:02.277
  I0521 15:14:02.277241 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:14:02.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:02.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:02.291
  STEP: Setting up server cert @ 05/21/25 15:14:02.304
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:14:02.476
  STEP: Deploying the webhook pod @ 05/21/25 15:14:02.48
  STEP: Wait for the deployment to be ready @ 05/21/25 15:14:02.49
  I0521 15:14:02.496560 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:14:04.503
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:14:04.516
  I0521 15:14:05.516570 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0521 15:14:05.519392 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5824-crds.webhook.example.com via the AdmissionRegistration API @ 05/21/25 15:14:06.027
  STEP: Creating a custom resource while v1 is storage version @ 05/21/25 15:14:06.042
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/21/25 15:14:08.072
  STEP: Patching the custom resource while v2 is storage version @ 05/21/25 15:14:08.085
  I0521 15:14:08.691271 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8233" for this suite. @ 05/21/25 15:14:08.693
  STEP: Destroying namespace "webhook-markers-6650" for this suite. @ 05/21/25 15:14:08.699
• [6.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/21/25 15:14:08.703
  I0521 15:14:08.703869 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename server-version @ 05/21/25 15:14:08.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:08.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:08.716
  STEP: Request ServerVersion @ 05/21/25 15:14:08.718
  STEP: Confirm major version @ 05/21/25 15:14:08.719
  I0521 15:14:08.719162 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/21/25 15:14:08.719
  I0521 15:14:08.719200 23 server_version.go:58] cleanMinorVersion: 33
  I0521 15:14:08.719215 23 server_version.go:62] Minor version: 33
  I0521 15:14:08.719384 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4775" for this suite. @ 05/21/25 15:14:08.794
• [0.094 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 05/21/25 15:14:08.798
  I0521 15:14:08.798261 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:14:08.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:08.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:08.807
  STEP: Creating simple DaemonSet "daemon-set" @ 05/21/25 15:14:08.898
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/21/25 15:14:08.901
  I0521 15:14:08.998268 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:14:08.998302 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0521 15:14:09.907455 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:14:09.907489 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0521 15:14:10.907142 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:14:10.907175 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/21/25 15:14:10.908
  STEP: DeleteCollection of the DaemonSets @ 05/21/25 15:14:10.91
  STEP: Verify that ReplicaSets have been deleted @ 05/21/25 15:14:10.915
  I0521 15:14:11.012259 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6206"},"items":null}

  I0521 15:14:11.015005 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6206"},"items":[{"metadata":{"name":"daemon-set-jvf9n","generateName":"daemon-set-","namespace":"daemonsets-239","uid":"2d60aaef-e57d-4290-bbfc-6b3cbf6fcc5c","resourceVersion":"6204","generation":2,"creationTimestamp":"2025-05-21T15:14:08Z","deletionTimestamp":"2025-05-21T15:14:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f22e9581-35b2-4f85-8e2d-7860f95239eb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-21T15:14:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f22e9581-35b2-4f85-8e2d-7860f95239eb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-21T15:14:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.42\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vmslm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vmslm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:08Z"}],"hostIP":"10.0.60.98","hostIPs":[{"ip":"10.0.60.98"}],"podIP":"10.244.1.42","podIPs":[{"ip":"10.244.1.42"}],"startTime":"2025-05-21T15:14:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-21T15:14:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://910fab74f83a5f75d5e2e8edc7d6cbe0525624c5a8fdcef64ce2f510f7753ce5","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-vmslm","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vwcjz","generateName":"daemon-set-","namespace":"daemonsets-239","uid":"5ef906f1-64ed-4d8b-9fd4-1e3e42460fb7","resourceVersion":"6205","generation":2,"creationTimestamp":"2025-05-21T15:14:08Z","deletionTimestamp":"2025-05-21T15:14:40Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f22e9581-35b2-4f85-8e2d-7860f95239eb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-05-21T15:14:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f22e9581-35b2-4f85-8e2d-7860f95239eb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-05-21T15:14:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.85\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-pjkdt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-pjkdt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-21T15:14:08Z"}],"hostIP":"10.0.54.132","hostIPs":[{"ip":"10.0.54.132"}],"podIP":"10.244.0.85","podIPs":[{"ip":"10.244.0.85"}],"startTime":"2025-05-21T15:14:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-21T15:14:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8e6572aa15f8cb3497a6b1bfbafa9ddc090a622ed6ac58c191ae71cc8fb1ee28","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-pjkdt","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0521 15:14:11.020952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-239" for this suite. @ 05/21/25 15:14:11.022
• [2.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 05/21/25 15:14:11.027
  I0521 15:14:11.027479 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:14:11.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:11.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:11.039
  STEP: Setting up server cert @ 05/21/25 15:14:11.053
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:14:11.627
  STEP: Deploying the webhook pod @ 05/21/25 15:14:11.631
  STEP: Wait for the deployment to be ready @ 05/21/25 15:14:11.642
  I0521 15:14:11.646556 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:14:13.654
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:14:13.669
  I0521 15:14:14.670021 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0521 15:14:14.673706 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/21/25 15:14:15.18
  STEP: Creating a custom resource that should be denied by the webhook @ 05/21/25 15:14:15.196
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/21/25 15:14:17.214
  STEP: Updating the custom resource with disallowed data should be denied @ 05/21/25 15:14:17.22
  STEP: Deleting the custom resource should be denied @ 05/21/25 15:14:17.226
  STEP: Remove the offending key and value from the custom resource data @ 05/21/25 15:14:17.23
  STEP: Deleting the updated custom resource should be successful @ 05/21/25 15:14:17.236
  I0521 15:14:17.790998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3050" for this suite. @ 05/21/25 15:14:17.793
  STEP: Destroying namespace "webhook-markers-2503" for this suite. @ 05/21/25 15:14:17.799
• [6.776 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 05/21/25 15:14:17.803
  I0521 15:14:17.803674 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:14:17.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:17.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:17.816
  STEP: Setting up server cert @ 05/21/25 15:14:17.828
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:14:17.953
  STEP: Deploying the webhook pod @ 05/21/25 15:14:17.957
  STEP: Wait for the deployment to be ready @ 05/21/25 15:14:17.967
  I0521 15:14:17.973771 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:14:19.981
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:14:19.995
  I0521 15:14:20.995297 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/21/25 15:14:20.998
  STEP: create a namespace for the webhook @ 05/21/25 15:14:21.011
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/21/25 15:14:21.021
  I0521 15:14:21.072135 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5483" for this suite. @ 05/21/25 15:14:21.075
  STEP: Destroying namespace "webhook-markers-8402" for this suite. @ 05/21/25 15:14:21.082
  STEP: Destroying namespace "fail-closed-namespace-6941" for this suite. @ 05/21/25 15:14:21.085
• [3.286 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 05/21/25 15:14:21.089
  I0521 15:14:21.089572 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:14:21.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:21.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:21.102
  STEP: creating a Service @ 05/21/25 15:14:21.109
  STEP: watching for the Service to be added @ 05/21/25 15:14:21.141
  I0521 15:14:21.143465 23 service.go:3456] Found Service test-service-48br7 in namespace services-7427 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31549}]
  I0521 15:14:21.143495 23 service.go:3463] Service test-service-48br7 created
  STEP: Getting /status @ 05/21/25 15:14:21.143
  I0521 15:14:21.146397 23 service.go:3474] Service test-service-48br7 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/21/25 15:14:21.146
  STEP: watching for the Service to be patched @ 05/21/25 15:14:21.156
  I0521 15:14:21.158247 23 service.go:3497] observed Service test-service-48br7 in namespace services-7427 with annotations: map[] & LoadBalancer: {[]}
  I0521 15:14:21.158281 23 service.go:3500] Found Service test-service-48br7 in namespace services-7427 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0039a1b90 []}]}
  I0521 15:14:21.158300 23 service.go:3507] Service test-service-48br7 has service status patched
  STEP: updating the ServiceStatus @ 05/21/25 15:14:21.158
  I0521 15:14:21.164213 23 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/21/25 15:14:21.164
  I0521 15:14:21.165782 23 service.go:3538] Observed Service test-service-48br7 in namespace services-7427 with annotations: map[] & Conditions: []
  I0521 15:14:21.165825 23 service.go:3549] Observed Service test-service-48br7 in namespace services-7427 with annotations: map[patchedstatus:true] & Conditions: []
  I0521 15:14:21.165860 23 service.go:3545] Found Service test-service-48br7 in namespace services-7427 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0521 15:14:21.165878 23 service.go:3556] Service test-service-48br7 has service status updated
  STEP: patching the service @ 05/21/25 15:14:21.165
  STEP: watching for the Service to be patched @ 05/21/25 15:14:21.173
  I0521 15:14:21.174441 23 service.go:3579] observed Service test-service-48br7 in namespace services-7427 with labels: map[test-service-static:true]
  I0521 15:14:21.174481 23 service.go:3579] observed Service test-service-48br7 in namespace services-7427 with labels: map[test-service-static:true]
  I0521 15:14:21.174706 23 service.go:3579] observed Service test-service-48br7 in namespace services-7427 with labels: map[test-service-static:true]
  I0521 15:14:21.174738 23 service.go:3582] Found Service test-service-48br7 in namespace services-7427 with labels: map[test-service:patched test-service-static:true]
  I0521 15:14:21.174754 23 service.go:3589] Service test-service-48br7 patched
  STEP: deleting the service @ 05/21/25 15:14:21.174
  STEP: watching for the Service to be deleted @ 05/21/25 15:14:21.191
  I0521 15:14:21.192494 23 service.go:3613] Observed event: ADDED
  I0521 15:14:21.192520 23 service.go:3613] Observed event: MODIFIED
  I0521 15:14:21.192668 23 service.go:3613] Observed event: MODIFIED
  I0521 15:14:21.192697 23 service.go:3613] Observed event: MODIFIED
  I0521 15:14:21.192831 23 service.go:3609] Found Service test-service-48br7 in namespace services-7427 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0521 15:14:21.192856 23 service.go:3618] Service test-service-48br7 deleted
  I0521 15:14:21.192968 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7427" for this suite. @ 05/21/25 15:14:21.195
• [0.109 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/21/25 15:14:21.198
  I0521 15:14:21.198941 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename init-container @ 05/21/25 15:14:21.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:21.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:21.21
  STEP: creating the pod @ 05/21/25 15:14:21.213
  I0521 15:14:21.213214 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0521 15:14:24.167945 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4925" for this suite. @ 05/21/25 15:14:24.17
• [2.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 05/21/25 15:14:24.174
  I0521 15:14:24.174691 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 15:14:24.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:24.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:24.186
  I0521 15:14:24.198979 23 service_accounts.go:646] created pod
  STEP: Saw pod success @ 05/21/25 15:14:26.204
  I0521 15:14:56.207280 23 service_accounts.go:652] polling logs
  I0521 15:14:56.212460 23 service_accounts.go:662] Pod logs: 
  I0521 15:14:24.696062       1 log.go:245] OK: Got token
  I0521 15:14:24.696232       1 log.go:245] validating with in-cluster discovery
  I0521 15:14:24.697058       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0521 15:14:24.697172       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7255:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002786b8), NotBefore:(*jwt.NumericDate)(0xc000278870), IssuedAt:(*jwt.NumericDate)(0xc0002786c8), ID:"e539c92b-bf79-4dd5-af0c-548493f3d151"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7255", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f8cc9178-6e46-459d-b0f2-4751c0684ab8"}}}
  I0521 15:14:24.703767       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0521 15:14:24.704924       1 log.go:245] OK: Validated signature on JWT
  I0521 15:14:24.705004       1 log.go:245] OK: Got valid claims from token!
  I0521 15:14:24.705035       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-7255:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00058c5b0), NotBefore:(*jwt.NumericDate)(0xc00058c5d8), IssuedAt:(*jwt.NumericDate)(0xc00058c5b8), ID:"e539c92b-bf79-4dd5-af0c-548493f3d151"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7255", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f8cc9178-6e46-459d-b0f2-4751c0684ab8"}}}

  I0521 15:14:56.212510 23 service_accounts.go:666] completed pod
  I0521 15:14:56.215999 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7255" for this suite. @ 05/21/25 15:14:56.218
• [32.047 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/21/25 15:14:56.222
  I0521 15:14:56.222034 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:14:56.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:56.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:56.234
  STEP: Creating projection with secret that has name projected-secret-test-map-1ad50eb1-0935-4fe7-bdb8-568b24713fa5 @ 05/21/25 15:14:56.236
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:14:56.239
  STEP: Saw pod success @ 05/21/25 15:14:58.253
  I0521 15:14:58.255313 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-2a389de8-a029-4027-9d75-4d4726872e0a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:14:58.259
  I0521 15:14:58.272235 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7135" for this suite. @ 05/21/25 15:14:58.274
• [2.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/21/25 15:14:58.281
  I0521 15:14:58.281239 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename watch @ 05/21/25 15:14:58.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:58.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:58.291
  STEP: creating a watch on configmaps @ 05/21/25 15:14:58.293
  STEP: creating a new configmap @ 05/21/25 15:14:58.294
  STEP: modifying the configmap once @ 05/21/25 15:14:58.299
  STEP: closing the watch once it receives two notifications @ 05/21/25 15:14:58.304
  I0521 15:14:58.304689 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7424  c050dedd-4024-4460-8ea7-a6507d15317d 6583 0 2025-05-21 15:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-21 15:14:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:14:58.304834 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7424  c050dedd-4024-4460-8ea7-a6507d15317d 6584 0 2025-05-21 15:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-21 15:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/21/25 15:14:58.304
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/21/25 15:14:58.309
  STEP: deleting the configmap @ 05/21/25 15:14:58.31
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/21/25 15:14:58.314
  I0521 15:14:58.314294 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7424  c050dedd-4024-4460-8ea7-a6507d15317d 6585 0 2025-05-21 15:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-21 15:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:14:58.314404 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7424  c050dedd-4024-4460-8ea7-a6507d15317d 6586 0 2025-05-21 15:14:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-21 15:14:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:14:58.314501 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7424" for this suite. @ 05/21/25 15:14:58.375
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 05/21/25 15:14:58.38
  I0521 15:14:58.380592 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:14:58.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:14:58.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:14:58.39
  STEP: Creating a pod to test downward api env vars @ 05/21/25 15:14:58.392
  STEP: Saw pod success @ 05/21/25 15:15:00.402
  I0521 15:15:00.404389 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-6a6c9116-f315-4aa9-889c-dd7606b5cb5d container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:15:00.409
  I0521 15:15:00.420846 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4023" for this suite. @ 05/21/25 15:15:00.423
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 05/21/25 15:15:00.427
  I0521 15:15:00.427069 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 15:15:00.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:15:00.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:15:00.438
  STEP: apply creating a deployment @ 05/21/25 15:15:00.441
  I0521 15:15:00.448801 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3253" for this suite. @ 05/21/25 15:15:00.524
• [0.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 05/21/25 15:15:00.53
  I0521 15:15:00.530173 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 15:15:00.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:15:00.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:15:00.538
  STEP: Creating resourceQuota "e2e-rq-status-hfb7h" @ 05/21/25 15:15:00.543
  I0521 15:15:00.549486 23 resource_quota.go:1106] Resource quota "e2e-rq-status-hfb7h" reports spec: hard cpu limit of 500m
  I0521 15:15:00.549522 23 resource_quota.go:1108] Resource quota "e2e-rq-status-hfb7h" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-hfb7h" /status @ 05/21/25 15:15:00.549
  STEP: Confirm /status for "e2e-rq-status-hfb7h" resourceQuota via watch @ 05/21/25 15:15:00.554
  I0521 15:15:00.555408 23 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-hfb7h" in namespace "resourcequota-3774" with hard status: v1.ResourceList(nil)
  I0521 15:15:00.555483 23 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-hfb7h" in namespace "resourcequota-3774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0521 15:15:00.555507 23 resource_quota.go:1145] ResourceQuota "e2e-rq-status-hfb7h" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/21/25 15:15:00.556
  I0521 15:15:00.561026 23 resource_quota.go:1156] Resource quota "e2e-rq-status-hfb7h" reports spec: hard cpu limit of 1
  I0521 15:15:00.561048 23 resource_quota.go:1157] Resource quota "e2e-rq-status-hfb7h" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-hfb7h" /status @ 05/21/25 15:15:00.561
  STEP: Confirm /status for "e2e-rq-status-hfb7h" resourceQuota via watch @ 05/21/25 15:15:00.567
  I0521 15:15:00.568595 23 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-hfb7h" in namespace "resourcequota-3774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0521 15:15:00.568637 23 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-hfb7h" in namespace "resourcequota-3774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0521 15:15:00.568663 23 resource_quota.go:1189] ResourceQuota "e2e-rq-status-hfb7h" /status was patched
  STEP: Get "e2e-rq-status-hfb7h" /status @ 05/21/25 15:15:00.568
  I0521 15:15:00.570853 23 resource_quota.go:1200] Resourcequota "e2e-rq-status-hfb7h" reports status: hard cpu of 1
  I0521 15:15:00.570883 23 resource_quota.go:1202] Resourcequota "e2e-rq-status-hfb7h" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-hfb7h" /status before checking Spec is unchanged @ 05/21/25 15:15:00.572
  I0521 15:15:00.577688 23 resource_quota.go:1222] Resourcequota "e2e-rq-status-hfb7h" reports status: hard cpu of 2
  I0521 15:15:00.577713 23 resource_quota.go:1224] Resourcequota "e2e-rq-status-hfb7h" reports status: hard memory of 2Gi
  I0521 15:15:00.578843 23 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-hfb7h" in namespace "resourcequota-3774" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0521 15:15:00.580440 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042a7e78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042a7ea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042a7ed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:05.582901 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16018), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:10.582964 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab4390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab43c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab4408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:15.583778 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b161c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b161f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:20.583926 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:25.583959 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b164c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:30.583038 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab4528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab4558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab45a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:35.582996 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab4678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab46a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ab46d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:40.583951 23 resource_quota.go:1267] ResourceQuota "e2e-rq-status-hfb7h" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hfb7h", GenerateName:"", Namespace:"resourcequota-3774", SelfLink:"", UID:"75ba40df-0f64-4b49-9e21-f92676b7c1c7", ResourceVersion:"6620", Generation:0, CreationTimestamp:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hfb7h"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b165e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 15, 15, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004b16648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0521 15:15:45.583369 23 resource_quota.go:1264] ResourceQuota "e2e-rq-status-hfb7h" Spec was unchanged and /status reset
  I0521 15:15:45.583510 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3774" for this suite. @ 05/21/25 15:15:45.586
• [45.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 05/21/25 15:15:45.59
  I0521 15:15:45.590271 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:15:45.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:15:45.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:15:45.599
  STEP: Setting up server cert @ 05/21/25 15:15:45.611
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:15:45.884
  STEP: Deploying the webhook pod @ 05/21/25 15:15:45.887
  STEP: Wait for the deployment to be ready @ 05/21/25 15:15:45.896
  I0521 15:15:45.903188 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:15:47.91
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:15:47.924
  I0521 15:15:48.924574 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/21/25 15:15:48.926
  STEP: create a pod that should be updated by the webhook @ 05/21/25 15:15:48.941
  I0521 15:15:48.997125 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7573" for this suite. @ 05/21/25 15:15:49.001
  STEP: Destroying namespace "webhook-markers-679" for this suite. @ 05/21/25 15:15:49.005
• [3.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/21/25 15:15:49.009
  I0521 15:15:49.009269 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:15:49.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:15:49.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:15:49.019
  I0521 15:15:49.022070 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: creating the pod @ 05/21/25 15:15:49.022
  STEP: submitting the pod to kubernetes @ 05/21/25 15:15:49.022
  STEP: waiting for the container to be running @ 05/21/25 15:15:51.034
  I0521 15:15:51.044198 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7729" for this suite. @ 05/21/25 15:15:51.046
• [2.041 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/21/25 15:15:51.05
  I0521 15:15:51.050347 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/21/25 15:15:51.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:15:51.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:15:51.062
  STEP: create the container to handle the HTTPGet hook request. @ 05/21/25 15:15:51.146
  STEP: create the pod with lifecycle hook @ 05/21/25 15:15:53.159
  STEP: delete the pod with lifecycle hook @ 05/21/25 15:15:55.171
  STEP: check prestop hook @ 05/21/25 15:15:57.181
  I0521 15:15:57.186121 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-288" for this suite. @ 05/21/25 15:15:57.188
• [6.144 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/21/25 15:15:57.194
  I0521 15:15:57.194191 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:15:57.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:15:57.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:15:57.205
  STEP: Creating secret with name secret-test-map-ab237544-275d-49d9-83ce-ee0c2261249d @ 05/21/25 15:15:57.207
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:15:57.212
  STEP: Saw pod success @ 05/21/25 15:16:01.225
  I0521 15:16:01.226789 23 output.go:207] Trying to get logs from node worker-1 pod pod-secrets-7e975ada-ab4b-48e2-9add-2338415111af container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:16:01.237
  I0521 15:16:01.246225 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9530" for this suite. @ 05/21/25 15:16:01.248
• [4.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 05/21/25 15:16:01.252
  I0521 15:16:01.252610 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/21/25 15:16:01.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:16:01.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:16:01.261
  STEP: Creating 50 configmaps @ 05/21/25 15:16:01.264
  STEP: Creating RC which spawns configmap-volume pods @ 05/21/25 15:16:01.506
  I0521 15:16:01.615941 23 resource.go:81] Pod name wrapped-volume-race-b0215e5a-34f6-4456-8d0e-6104a082561c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/21/25 15:16:01.615
  STEP: Creating RC which spawns configmap-volume pods @ 05/21/25 15:16:03.67
  I0521 15:16:03.680208 23 resource.go:81] Pod name wrapped-volume-race-3b6796af-7191-49c0-9dd7-3369510c1c9d: Found 0 pods out of 5
  I0521 15:16:08.685786 23 resource.go:81] Pod name wrapped-volume-race-3b6796af-7191-49c0-9dd7-3369510c1c9d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/21/25 15:16:08.685
  STEP: Creating RC which spawns configmap-volume pods @ 05/21/25 15:16:08.7
  I0521 15:16:08.720239 23 resource.go:81] Pod name wrapped-volume-race-3c62945f-9b78-469a-b96b-0fb3bf67ce50: Found 1 pods out of 5
  I0521 15:16:13.725577 23 resource.go:81] Pod name wrapped-volume-race-3c62945f-9b78-469a-b96b-0fb3bf67ce50: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/21/25 15:16:13.725
  STEP: deleting ReplicationController wrapped-volume-race-3c62945f-9b78-469a-b96b-0fb3bf67ce50 in namespace emptydir-wrapper-211, will wait for the garbage collector to delete the pods @ 05/21/25 15:16:13.737
  I0521 15:16:13.796805 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-3c62945f-9b78-469a-b96b-0fb3bf67ce50 took: 4.363278ms
  I0521 15:16:13.896953 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-3c62945f-9b78-469a-b96b-0fb3bf67ce50 pods took: 100.146239ms
  STEP: deleting ReplicationController wrapped-volume-race-3b6796af-7191-49c0-9dd7-3369510c1c9d in namespace emptydir-wrapper-211, will wait for the garbage collector to delete the pods @ 05/21/25 15:16:14.497
  I0521 15:16:14.555616 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-3b6796af-7191-49c0-9dd7-3369510c1c9d took: 4.410657ms
  I0521 15:16:14.656462 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-3b6796af-7191-49c0-9dd7-3369510c1c9d pods took: 100.845791ms
  STEP: deleting ReplicationController wrapped-volume-race-b0215e5a-34f6-4456-8d0e-6104a082561c in namespace emptydir-wrapper-211, will wait for the garbage collector to delete the pods @ 05/21/25 15:16:15.556
  I0521 15:16:15.613517 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-b0215e5a-34f6-4456-8d0e-6104a082561c took: 3.859785ms
  I0521 15:16:15.714247 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-b0215e5a-34f6-4456-8d0e-6104a082561c pods took: 100.725354ms
  STEP: Cleaning up the configMaps @ 05/21/25 15:16:16.515
  I0521 15:16:16.683121 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-211" for this suite. @ 05/21/25 15:16:16.685
• [15.438 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:935
  STEP: Creating a kubernetes client @ 05/21/25 15:16:16.69
  I0521 15:16:16.690798 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption @ 05/21/25 15:16:16.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:16:16.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:16:16.699
  I0521 15:16:16.712518 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0521 15:17:16.717426 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/21/25 15:17:16.719
  I0521 15:17:16.719516 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/21/25 15:17:16.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:17:16.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:17:16.729
  I0521 15:17:16.741919 23 preemption.go:941] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0521 15:17:16.743848 23 preemption.go:947] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 05/21/25 15:17:16.769
  STEP: Removing a custom resource @ 05/21/25 15:17:16.774
  I0521 15:17:16.778667 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2537" for this suite. @ 05/21/25 15:17:16.817
  I0521 15:17:16.823392 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2064" for this suite. @ 05/21/25 15:17:16.917
• [60.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 05/21/25 15:17:16.921
  I0521 15:17:16.921777 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:17:16.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:17:16.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:17:16.933
  STEP: Looking for a node to schedule job pod @ 05/21/25 15:17:16.935
  STEP: Creating a job @ 05/21/25 15:17:17.019
  STEP: Ensuring job fails @ 05/21/25 15:17:17.022
  I0521 15:17:21.030925 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3081" for this suite. @ 05/21/25 15:17:21.033
• [4.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/21/25 15:17:21.037
  I0521 15:17:21.037828 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 15:17:21.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:17:21.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:17:21.047
  STEP: creating the pod with failed condition @ 05/21/25 15:17:21.049
  STEP: updating the pod @ 05/21/25 15:19:21.055
  I0521 15:19:21.565380 23 pod_client.go:173] Successfully updated pod "var-expansion-3850e149-8d3b-4bf9-a5f9-38f5384f3467"
  STEP: waiting for pod running @ 05/21/25 15:19:21.565
  STEP: deleting the pod gracefully @ 05/21/25 15:19:23.57
  I0521 15:19:23.570831 23 delete.go:62] Deleting pod "var-expansion-3850e149-8d3b-4bf9-a5f9-38f5384f3467" in namespace "var-expansion-8607"
  I0521 15:19:23.576939 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-3850e149-8d3b-4bf9-a5f9-38f5384f3467" to be fully deleted
  I0521 15:19:55.633451 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8607" for this suite. @ 05/21/25 15:19:55.635
• [154.602 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 05/21/25 15:19:55.639
  I0521 15:19:55.639595 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:19:55.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:19:55.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:19:55.649
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5560 @ 05/21/25 15:19:55.651
  STEP: changing the ExternalName service to type=ClusterIP @ 05/21/25 15:19:55.654
  I0521 15:19:55.679679 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0521 15:19:57.682887 23 resource.go:361] Creating new exec pod
  I0521 15:19:59.694839 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5560 exec execpods27s4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0521 15:19:59.790654 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.100.143.101) 80 port [tcp/http] succeeded!\n"
  I0521 15:19:59.790703 23 builder.go:147] stdout: "externalname-service-55d78b59d-r4pbk"
  I0521 15:19:59.790808 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5560 exec execpods27s4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.143.101 80'
  I0521 15:19:59.880033 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.143.101 80\nConnection to 10.100.143.101 80 port [tcp/http] succeeded!\n"
  I0521 15:19:59.880074 23 builder.go:147] stdout: "externalname-service-55d78b59d-r4pbk"
  I0521 15:19:59.880159 23 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I0521 15:19:59.897483 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5560" for this suite. @ 05/21/25 15:19:59.899
• [4.264 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 05/21/25 15:19:59.903
  I0521 15:19:59.903504 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-webhook @ 05/21/25 15:19:59.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:19:59.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:19:59.915
  STEP: Setting up server cert @ 05/21/25 15:19:59.917
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/21/25 15:20:00.753
  STEP: Deploying the custom resource conversion webhook pod @ 05/21/25 15:20:00.757
  STEP: Wait for the deployment to be ready @ 05/21/25 15:20:00.768
  I0521 15:20:00.774034 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/21/25 15:20:02.781
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:20:02.797
  I0521 15:20:03.797885 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0521 15:20:03.800812 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Creating a v1 custom resource @ 05/21/25 15:20:06.35
  STEP: Create a v2 custom resource @ 05/21/25 15:20:06.361
  STEP: List CRs in v1 @ 05/21/25 15:20:06.386
  STEP: List CRs in v2 @ 05/21/25 15:20:06.387
  I0521 15:20:06.927926 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9964" for this suite. @ 05/21/25 15:20:06.93
• [7.034 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/21/25 15:20:06.937
  I0521 15:20:06.937596 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename endpointslice @ 05/21/25 15:20:06.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:06.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:06.948
  STEP: referencing a single matching pod @ 05/21/25 15:20:09.028
  I0521 15:20:09.032601      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 05/21/25 15:20:09.032
  I0521 15:20:09.035697      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/21/25 15:20:09.035
  I0521 15:20:09.038700      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 05/21/25 15:20:09.038
  I0521 15:20:09.048810 23 endpointslice.go:938] EndpointSlice for Service endpointslice-6120/example-named-port not found
  I0521 15:20:11.052755      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:20:11.052921 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6120" for this suite. @ 05/21/25 15:20:11.055
• [4.124 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/21/25 15:20:11.061
  I0521 15:20:11.061284 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename endpointslice @ 05/21/25 15:20:11.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:11.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:11.07
  I0521 15:20:11.075926      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:20:11.151660 23 endpointslice.go:1045] Endpoints addresses: [10.0.56.161] , ports: [6443]
  I0521 15:20:11.151686 23 endpointslice.go:1075] EndpointSlices addresses: [10.0.56.161] , ports: [6443]
  I0521 15:20:11.151801 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5439" for this suite. @ 05/21/25 15:20:11.156
• [0.101 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 05/21/25 15:20:11.161
  I0521 15:20:11.161930 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replication-controller @ 05/21/25 15:20:11.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:11.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:11.171
  STEP: creating a ReplicationController @ 05/21/25 15:20:11.175
  STEP: waiting for RC to be added @ 05/21/25 15:20:11.18
  STEP: waiting for available Replicas @ 05/21/25 15:20:11.181
  STEP: patching ReplicationController @ 05/21/25 15:20:12.687
  STEP: waiting for RC to be modified @ 05/21/25 15:20:12.695
  STEP: patching ReplicationController status @ 05/21/25 15:20:12.695
  STEP: waiting for RC to be modified @ 05/21/25 15:20:12.699
  STEP: waiting for available Replicas @ 05/21/25 15:20:12.699
  STEP: fetching ReplicationController status @ 05/21/25 15:20:12.702
  STEP: patching ReplicationController scale @ 05/21/25 15:20:12.704
  STEP: waiting for RC to be modified @ 05/21/25 15:20:12.71
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/21/25 15:20:12.71
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/21/25 15:20:13.879
  STEP: updating ReplicationController status @ 05/21/25 15:20:13.881
  STEP: waiting for RC to be modified @ 05/21/25 15:20:13.885
  STEP: listing all ReplicationControllers @ 05/21/25 15:20:13.885
  STEP: checking that ReplicationController has expected values @ 05/21/25 15:20:13.887
  STEP: deleting ReplicationControllers by collection @ 05/21/25 15:20:13.887
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/21/25 15:20:13.894
  I0521 15:20:13.937876 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0521 15:20:13.938004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5130" for this suite. @ 05/21/25 15:20:13.94
• [2.782 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 05/21/25 15:20:13.943
  I0521 15:20:13.943794 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/21/25 15:20:13.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:13.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:13.955
  STEP: Setting up the test @ 05/21/25 15:20:13.957
  STEP: Creating hostNetwork=false pod @ 05/21/25 15:20:13.957
  E0521 15:20:14.938144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:15.938346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/21/25 15:20:15.971
  E0521 15:20:16.938917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:17.939023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/21/25 15:20:17.981
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/21/25 15:20:17.981
  I0521 15:20:17.981342 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:17.981361 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:17.981402 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0521 15:20:18.024975 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.025117 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.025141 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.025153 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.025205 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0521 15:20:18.062899 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.062988 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.063016 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.063028 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.063077 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0521 15:20:18.109059 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.109094 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.109113 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.109125 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.109381 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0521 15:20:18.148713 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.148785 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/21/25 15:20:18.148
  I0521 15:20:18.148874 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.148884 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.148920 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0521 15:20:18.183621 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.183669 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.183711 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.183755 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.183804 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0521 15:20:18.221158 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.221200 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/21/25 15:20:18.221
  I0521 15:20:18.221263 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.221273 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.221313 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0521 15:20:18.258565 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.258619 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.258663 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.258682 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.258759 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0521 15:20:18.298191 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.298248 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.298274 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.298286 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.298321 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0521 15:20:18.336207 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.336265 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.336285 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4532 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:20:18.336297 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:20:18.336350 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4532/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0521 15:20:18.373574 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:20:18.373614 23 exec_util.go:112] Exec stderr: ""
  I0521 15:20:18.373797 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4532" for this suite. @ 05/21/25 15:20:18.376
• [4.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/21/25 15:20:18.38
  I0521 15:20:18.380284 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubelet-test @ 05/21/25 15:20:18.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:18.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:18.389
  STEP: Waiting for pod completion @ 05/21/25 15:20:18.397
  E0521 15:20:18.939821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:19.939949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:20.940912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:21.941097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:20:22.417428 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9078" for this suite. @ 05/21/25 15:20:22.42
• [4.044 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/21/25 15:20:22.424
  I0521 15:20:22.424762 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:20:22.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:22.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:22.433
  STEP: Creating projection with secret that has name projected-secret-test-map-9f0625e0-92c9-4667-83be-32629a0d342b @ 05/21/25 15:20:22.436
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:20:22.439
  E0521 15:20:22.941744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:23.941881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:24.941934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:25.942035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:20:26.45
  I0521 15:20:26.452591 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-0d4e1407-98c9-441c-9e1d-e2b14e6b29bd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:20:26.456
  I0521 15:20:26.470669 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2251" for this suite. @ 05/21/25 15:20:26.473
• [4.052 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 05/21/25 15:20:26.476
  I0521 15:20:26.476926 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:20:26.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:26.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:26.485
  STEP: creating a Deployment @ 05/21/25 15:20:26.49
  I0521 15:20:26.490211 23 deployment.go:506] Creating simple deployment test-deployment-5qm6z
  I0521 15:20:26.497380 23 deployment.go:223] deployment "test-deployment-5qm6z" doesn't have the required revision set
  E0521 15:20:26.942793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:27.942994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/21/25 15:20:28.505
  I0521 15:20:28.507349 23 deployment.go:531] Deployment test-deployment-5qm6z has Conditions: [{Available True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5qm6z-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/21/25 15:20:28.507
  I0521 15:20:28.515017 23 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 20, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 20, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 20, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 20, 26, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-5qm6z-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/21/25 15:20:28.515
  I0521 15:20:28.516457 23 deployment.go:578] Observed &Deployment event: ADDED
  I0521 15:20:28.516495 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5qm6z-6fb4c74686"}
  I0521 15:20:28.516607 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0521 15:20:28.516636 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5qm6z-6fb4c74686"}
  I0521 15:20:28.516698 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0521 15:20:28.516872 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0521 15:20:28.516909 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0521 15:20:28.516925 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5qm6z-6fb4c74686" is progressing.}
  I0521 15:20:28.517030 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0521 15:20:28.517070 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0521 15:20:28.517093 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5qm6z-6fb4c74686" has successfully progressed.}
  I0521 15:20:28.517248 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0521 15:20:28.517284 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0521 15:20:28.517303 23 deployment.go:574] Observed Deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5qm6z-6fb4c74686" has successfully progressed.}
  I0521 15:20:28.517321 23 deployment.go:571] Found Deployment test-deployment-5qm6z in namespace deployment-1262 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0521 15:20:28.517340 23 deployment.go:582] Deployment test-deployment-5qm6z has an updated status
  STEP: patching the Statefulset Status @ 05/21/25 15:20:28.517
  I0521 15:20:28.517380 23 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0521 15:20:28.521645 23 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/21/25 15:20:28.521
  I0521 15:20:28.523083 23 deployment.go:615] Observed &Deployment event: ADDED
  I0521 15:20:28.523151 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5qm6z-6fb4c74686"}
  I0521 15:20:28.523267 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0521 15:20:28.523300 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5qm6z-6fb4c74686"}
  I0521 15:20:28.523315 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0521 15:20:28.523447 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0521 15:20:28.523483 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0521 15:20:28.523533 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:26 +0000 UTC 2025-05-21 15:20:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5qm6z-6fb4c74686" is progressing.}
  I0521 15:20:28.523646 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0521 15:20:28.523672 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0521 15:20:28.523687 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5qm6z-6fb4c74686" has successfully progressed.}
  I0521 15:20:28.523813 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0521 15:20:28.523836 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0521 15:20:28.523852 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-21 15:20:27 +0000 UTC 2025-05-21 15:20:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5qm6z-6fb4c74686" has successfully progressed.}
  I0521 15:20:28.523872 23 deployment.go:611] Observed deployment test-deployment-5qm6z in namespace deployment-1262 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0521 15:20:28.523983 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0521 15:20:28.524010 23 deployment.go:608] Found deployment test-deployment-5qm6z in namespace deployment-1262 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0521 15:20:28.524027 23 deployment.go:619] Deployment test-deployment-5qm6z has a patched status
  I0521 15:20:28.528194 23 deployment.go:632] Deployment "test-deployment-5qm6z":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-5qm6z",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1262",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a06c382-6dc8-44cb-93d6-1387680294a4",
      ResourceVersion: (string) (len=4) "8545",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437628,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-5qm6z-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:20:28.603011 23 deployment.go:40] New ReplicaSet "test-deployment-5qm6z-6fb4c74686" of Deployment "test-deployment-5qm6z":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-5qm6z-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1262",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d46934f-95db-4b2e-9926-6baedca923ab",
      ResourceVersion: (string) (len=4) "8540",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-5qm6z",
          UID: (types.UID) (len=36) "3a06c382-6dc8-44cb-93d6-1387680294a4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 61 30  |k:{\"uid\":\"3a0|
              00000120  36 63 33 38 32 2d 36 64  63 38 2d 34 34 63 62 2d  |6c382-6dc8-44cb-|
              00000130  39 33 64 36 2d 31 33 38  37 36 38 30 32 39 34 61  |93d6-1387680294a|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:20:28.606781 23 deployment.go:68] Pod "test-deployment-5qm6z-6fb4c74686-qdwbt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-5qm6z-6fb4c74686-qdwbt",
      GenerateName: (string) (len=33) "test-deployment-5qm6z-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-1262",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee9423a1-a53c-4b6b-865b-0e3ca09f65fe",
      ResourceVersion: (string) (len=4) "8539",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-5qm6z-6fb4c74686",
          UID: (types.UID) (len=36) "1d46934f-95db-4b2e-9926-6baedca923ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 64 34 36 39 33 34  66 2d 39 35 64 62 2d 34  |"1d46934f-95db-4|
              000000a0  62 32 65 2d 39 39 32 36  2d 36 62 61 65 64 63 61  |b2e-9926-6baedca|
              000000b0  39 32 33 61 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |923ab\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  32 31 5c 22 7d 22 3a 7b  |.244.0.121\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5xm5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5xm5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883437626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883437626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883437626,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c37c925016ffa0f660cefbb95aabfed003c2e3538751ad7fe5183031826c0e8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c5xm5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:20:28.608943 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1262" for this suite. @ 05/21/25 15:20:28.611
• [2.138 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 05/21/25 15:20:28.615
  I0521 15:20:28.615546 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 15:20:28.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:28.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:28.624
  STEP: Creating service test in namespace statefulset-6200 @ 05/21/25 15:20:28.627
  STEP: Looking for a node to schedule stateful set and pod @ 05/21/25 15:20:28.631
  STEP: Creating pod with conflicting port in namespace statefulset-6200 @ 05/21/25 15:20:28.711
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6200 @ 05/21/25 15:20:28.716
  E0521 15:20:28.943625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:29.943941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-6200 @ 05/21/25 15:20:30.72
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6200 @ 05/21/25 15:20:30.726
  I0521 15:20:30.735488 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-6200, name: ss-0, uid: f97c7bbe-a128-406c-8c24-c0b808b62abc, status phase: Pending. Waiting for statefulset controller to delete.
  I0521 15:20:30.748782 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-6200, name: ss-0, uid: f97c7bbe-a128-406c-8c24-c0b808b62abc, status phase: Failed. Waiting for statefulset controller to delete.
  I0521 15:20:30.754881 23 statefulset.go:884] Observed stateful pod in namespace: statefulset-6200, name: ss-0, uid: f97c7bbe-a128-406c-8c24-c0b808b62abc, status phase: Failed. Waiting for statefulset controller to delete.
  I0521 15:20:30.758567 23 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-6200
  STEP: Removing pod with conflicting port in namespace statefulset-6200 @ 05/21/25 15:20:30.758
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6200 and will be in running state @ 05/21/25 15:20:30.771
  E0521 15:20:30.944938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:31.945210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:20:32.776502 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6200
  I0521 15:20:32.778608 23 rest.go:153] Scaling statefulset ss to 0
  E0521 15:20:32.946153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:33.946358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:34.946548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:35.946633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:36.946845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:37.946905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:38.947098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:39.947297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:40.947382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:41.947582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:20:42.787087 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 15:20:42.788941 23 rest.go:91] Deleting statefulset ss
  I0521 15:20:42.807821 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6200" for this suite. @ 05/21/25 15:20:42.812
• [14.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 05/21/25 15:20:42.817
  I0521 15:20:42.817412 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 15:20:42.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:20:42.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:20:42.828
  STEP: Creating a test externalName service @ 05/21/25 15:20:42.831
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 05/21/25 15:20:42.835
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 05/21/25 15:20:42.835
  STEP: creating a pod to probe DNS @ 05/21/25 15:20:42.835
  STEP: submitting the pod to kubernetes @ 05/21/25 15:20:42.836
  E0521 15:20:42.947634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:43.947832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:44.948216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:45.948422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:46.948916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:47.949455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:48.950476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:49.950550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 15:20:50.858
  STEP: looking for the results for each expected name from probers @ 05/21/25 15:20:50.861
  I0521 15:20:50.868560 23 dns_common.go:571] DNS probes using dns-test-de48e556-1cbf-4d33-811e-1c49988c124a succeeded

  STEP: changing the externalName to bar.example.com @ 05/21/25 15:20:50.868
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 05/21/25 15:20:50.873
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 05/21/25 15:20:50.873
  STEP: creating a second pod to probe DNS @ 05/21/25 15:20:50.873
  STEP: submitting the pod to kubernetes @ 05/21/25 15:20:50.873
  E0521 15:20:50.951275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:51.951398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 15:20:52.887
  STEP: looking for the results for each expected name from probers @ 05/21/25 15:20:52.889
  I0521 15:20:52.895012 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:20:52.897881 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:20:52.897912 23 dns_common.go:506] Lookups using dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a failed for: [agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  I0521 15:20:52.909961 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:20:52.913788 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:20:52.917651 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 15:20:52.951790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:53.951944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:54.952138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:55.952317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:56.952513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:20:57.894160 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:20:57.897272 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:20:57.897301 23 dns_common.go:506] Lookups using dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a failed for: [agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  I0521 15:20:57.901862 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:20:57.905843 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:20:57.909960 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 15:20:57.953197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:58.953388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:20:59.953565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:00.953797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:01.953967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:21:02.893721 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:21:02.896457 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:21:02.896489 23 dns_common.go:506] Lookups using dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a failed for: [agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  I0521 15:21:02.904090 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:21:02.908113 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:21:02.911926 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 15:21:02.954135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:03.954308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:04.954413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:05.954623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:06.954828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:21:07.893992 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:21:07.897289 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:21:07.897334 23 dns_common.go:506] Lookups using dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a failed for: [agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  I0521 15:21:07.901904 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:21:07.906523 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:21:07.910373 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 15:21:07.955588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:08.955785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:09.955961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:10.956078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:11.956931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:21:12.893248 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:21:12.896206 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0521 15:21:12.896238 23 dns_common.go:506] Lookups using dns-4684/dns-test-5554aa36-4566-481f-a692-880246e18c2a failed for: [agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  I0521 15:21:12.900248 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 15:21:12.904122 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 15:21:12.907828 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 15:21:12.957124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:13.957335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:14.957518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:15.957742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:16.957847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:21:17.897568 23 dns_common.go:571] DNS probes using dns-test-5554aa36-4566-481f-a692-880246e18c2a succeeded

  STEP: changing the service to type=ClusterIP @ 05/21/25 15:21:17.897
  I0521 15:21:17.917629      23 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 05/21/25 15:21:17.917
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 05/21/25 15:21:17.917
  STEP: creating a third pod to probe DNS @ 05/21/25 15:21:17.917
  STEP: submitting the pod to kubernetes @ 05/21/25 15:21:17.92
  E0521 15:21:17.958414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:18.958901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 15:21:19.933
  STEP: looking for the results for each expected name from probers @ 05/21/25 15:21:19.935
  I0521 15:21:19.943193 23 dns_common.go:571] DNS probes using dns-test-6d7804bf-3f31-4999-83d7-7d3189e6904b succeeded

  STEP: deleting the pod @ 05/21/25 15:21:19.943
  STEP: deleting the pod @ 05/21/25 15:21:19.951
  E0521 15:21:19.959850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/21/25 15:21:19.961
  STEP: deleting the test externalName service @ 05/21/25 15:21:19.974
  I0521 15:21:19.988535 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4684" for this suite. @ 05/21/25 15:21:19.992
• [37.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:470
  STEP: Creating a kubernetes client @ 05/21/25 15:21:19.996
  I0521 15:21:19.996464 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption @ 05/21/25 15:21:19.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:21:20.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:21:20.008
  I0521 15:21:20.025291 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0521 15:21:20.961107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:21.961993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:22.962925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:23.963133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:24.963328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:25.963548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:26.964195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:27.965138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:28.965815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:29.966013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:30.966962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:31.967193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:32.967416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:33.967610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:34.968392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:35.968520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:36.968832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:37.968895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:38.968938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:39.969132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:40.970205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:41.970310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:42.971165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:43.971273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:44.971342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:45.971554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:46.972387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:47.973316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:48.974025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:49.974133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:50.975097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:51.975339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:52.975575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:53.975830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:54.975959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:55.976162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:56.976714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:57.976897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:58.977110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:21:59.977208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:00.977626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:01.977849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:02.978063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:03.978162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:04.978375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:05.978454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:06.978560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:07.978783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:08.979708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:09.979860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:10.980378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:11.980588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:12.980691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:13.980918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:14.981395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:15.981499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:16.981596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:17.981866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:18.982782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:19.982843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:20.028763 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 05/21/25 15:22:20.03
  STEP: Adding a custom resource @ 05/21/25 15:22:20.03
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 05/21/25 15:22:20.037
  I0521 15:22:20.045144 23 preemption.go:504] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 05/21/25 15:22:20.045
  E0521 15:22:20.983089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:21.983310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 05/21/25 15:22:22.049
  I0521 15:22:22.055239 23 preemption.go:522] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 05/21/25 15:22:22.055
  E0521 15:22:22.983508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:23.983638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 05/21/25 15:22:24.06
  I0521 15:22:24.063340 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0521 15:22:24.572242 23 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 05/21/25 15:22:24.582
  STEP: Removing a custom resource @ 05/21/25 15:22:24.59
  I0521 15:22:24.597615 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7157" for this suite. @ 05/21/25 15:22:24.599
• [64.609 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/21/25 15:22:24.605
  I0521 15:22:24.605483 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:22:24.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:22:24.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:22:24.614
  I0521 15:22:24.617010 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: creating the pod @ 05/21/25 15:22:24.617
  STEP: submitting the pod to kubernetes @ 05/21/25 15:22:24.617
  E0521 15:22:24.983846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:25.984039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:26.687669 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1328" for this suite. @ 05/21/25 15:22:26.69
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/21/25 15:22:26.694
  I0521 15:22:26.694187 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:22:26.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:22:26.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:22:26.703
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/21/25 15:22:26.794
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/21/25 15:22:26.8
  I0521 15:22:26.892606 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:22:26.892639 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:22:26.984837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:27.806398 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:22:27.806432 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:22:27.985608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:28.804868 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:22:28.804902 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/21/25 15:22:28.806
  I0521 15:22:28.905778 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:22:28.905809 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:22:28.985911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:29.819654 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:22:29.819690 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:22:29.986953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:30.821000 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:22:30.821031 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/21/25 15:22:30.821
  STEP: Deleting DaemonSet "daemon-set" @ 05/21/25 15:22:30.824
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6667, will wait for the garbage collector to delete the pods @ 05/21/25 15:22:30.824
  I0521 15:22:30.880380 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.652451ms
  I0521 15:22:30.981400 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.016405ms
  E0521 15:22:30.987838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:31.983331 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:22:31.983372 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0521 15:22:31.985728 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9199"},"items":null}

  I0521 15:22:31.987236 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9199"},"items":null}

  E0521 15:22:31.988284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:31.992661 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6667" for this suite. @ 05/21/25 15:22:31.994
• [5.304 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 05/21/25 15:22:31.998
  I0521 15:22:31.998119 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 15:22:31.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:22:32.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:22:32.01
  I0521 15:22:32.013221 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:22:32.988972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:33.989167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:34.540814      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0521 15:22:34.540840      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0521 15:22:34.540852      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0521 15:22:34.540864      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0521 15:22:34.540875      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0521 15:22:34.989678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:22:35.066218 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3018" for this suite. @ 05/21/25 15:22:35.068
• [3.074 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/21/25 15:22:35.072
  I0521 15:22:35.072491 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename podtemplate @ 05/21/25 15:22:35.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:22:35.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:22:35.081
  STEP: Create set of pod templates @ 05/21/25 15:22:35.084
  I0521 15:22:35.087688 23 podtemplates.go:143] created test-podtemplate-1
  I0521 15:22:35.090818 23 podtemplates.go:143] created test-podtemplate-2
  I0521 15:22:35.093788 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/21/25 15:22:35.093
  STEP: delete collection of pod templates @ 05/21/25 15:22:35.095
  I0521 15:22:35.095457 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/21/25 15:22:35.106
  I0521 15:22:35.106192 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0521 15:22:35.107806 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9996" for this suite. @ 05/21/25 15:22:35.17
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 05/21/25 15:22:35.174
  I0521 15:22:35.174165 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:22:35.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:22:35.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:22:35.182
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:22:35.184
  E0521 15:22:35.989935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:36.990129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:37.990824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:38.991508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:22:39.199
  I0521 15:22:39.201102 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-12acd2b8-e543-4efb-8fc9-4220522d6a66 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:22:39.212
  I0521 15:22:39.224562 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-984" for this suite. @ 05/21/25 15:22:39.226
• [4.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/21/25 15:22:39.23
  I0521 15:22:39.230851 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename chunking @ 05/21/25 15:22:39.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:22:39.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:22:39.241
  STEP: creating a large number of resources @ 05/21/25 15:22:39.244
  E0521 15:22:39.992023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:40.992167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:41.992969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:42.994031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:43.994815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:44.995807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:45.995892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:46.996900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:47.997665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:48.998579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:49.999007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:50.999809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:52.000789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:53.001017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:54.001147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:55.001910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:56.002102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 05/21/25 15:22:56.935
  I0521 15:22:56.985528 23 chunking.go:163] Retrieved 40/40 results with rv 9739 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 05/21/25 15:22:56.985
  E0521 15:22:57.002504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:58.002741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:22:59.003001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:00.003961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:01.004919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:02.005048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:03.005930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:04.006954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:05.007012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:06.007087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:07.007299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:08.007709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:09.007916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:10.008094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:11.008279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:12.009001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:13.009928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:14.010119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:15.010324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:16.010773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:23:16.989820 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:23:17.011526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:18.011718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:19.011907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:20.012869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:21.012975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:22.013172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:23.013287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:24.013488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:25.013968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:26.014134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:27.014235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:28.014349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:29.014484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:30.014691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:31.014906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:32.015083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:33.015195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:34.015848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:35.016927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:36.017097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:23:36.989656 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:23:37.017633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:38.017835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:39.018005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:40.018118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:41.018298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:42.018460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:43.018631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:44.018821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:45.018988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:46.019157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:47.019322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:48.019515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:49.019680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:50.019852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:51.020015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:52.020183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:53.020282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:54.020442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:55.020927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:56.021099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:23:56.989630 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:23:57.021523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:58.021704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:23:59.021840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:00.022560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:01.022684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:02.022895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:03.023957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:04.024060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:05.024164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:06.024265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:07.024429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:08.025392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:09.025558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:10.026059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:11.026160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:12.026281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:13.026627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:14.026766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:15.026845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:16.026947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:24:16.989147 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:24:17.026971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:18.027978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:19.028055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:20.028163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:21.028257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:22.028359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:23.028527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:24.028699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:25.028836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:26.029001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:27.029911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:28.030017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:29.030182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:30.030364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:31.031035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:32.031214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:33.031464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:34.031637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:35.031821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:36.032002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:24:36.989621 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:24:37.032536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:38.032678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:39.033595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:40.033785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:41.033952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:42.034135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:43.034461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:44.034551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:45.034828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:46.035004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:47.036028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:48.036162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:49.036218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:50.036393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:51.036555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:52.037264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:53.038033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:54.038211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:55.038312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:56.038482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:24:56.989842 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:24:57.038715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:58.038842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:24:59.039000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:00.039163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:01.039918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:02.040930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:03.041025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:04.041189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:05.041357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:06.041529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:07.041951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:08.042052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:09.042213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:10.042390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:11.043410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:12.043585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:13.043782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:14.043951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:15.044134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:16.044306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:25:16.989637 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:25:17.044539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:18.044746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:19.044826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:20.044998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:21.045929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:22.046113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:23.046237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:24.046430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:25.046612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:26.046749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:27.046941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:28.047045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:29.047234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:30.047869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:31.048873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:32.049059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:33.049363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:34.049553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:35.049715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:36.049905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:25:36.989264 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:25:37.050089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:38.050213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:39.050415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:40.050594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:41.050821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:42.051009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:43.051090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:44.051287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:45.051456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:46.051655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:47.051734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:48.051863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:49.052036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:50.052235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:51.052503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:52.052685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:53.052874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:54.053064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:55.053242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:56.053353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:25:56.990379 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:25:57.054327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:58.054545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:25:59.054746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:00.054845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:01.055015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:02.055226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:03.055953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:04.056163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:05.056351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:06.056517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:07.056600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:08.056787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:09.056961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:10.057909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:11.058072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:12.058236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:13.058359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:14.058525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:15.058693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:16.058812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:26:16.989830 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:26:17.059072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:18.059199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:19.059375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:20.059538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:21.059701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:22.059814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:23.059926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:24.060096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:25.060300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:26.060489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:27.061146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:28.061643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:29.061849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:30.061952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:31.062149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:32.062333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:33.062533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:34.062615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:35.062747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:36.062913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:26:36.990092 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:26:37.063946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:38.064075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:39.064159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:40.064264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:41.064377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:42.064581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:43.065005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:44.065048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:45.065054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:46.065230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:47.065405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:48.066424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:49.066599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:50.066787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:51.067069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:52.067238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:53.067343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:54.067510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:55.067682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:56.067863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:26:56.989412 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:26:57.068331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:58.068454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:26:59.068558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:00.068753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:01.068925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:02.069553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:03.069733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:04.069914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:05.070933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:06.071119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:07.071201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:08.071307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:09.071428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:10.071640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:11.071786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:12.071966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:13.072089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:14.072171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:15.072359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:16.072526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:27:16.990634 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:27:17.073539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:18.074499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:19.074682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:20.074826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:21.075009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:22.075214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:23.075563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:24.075803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:25.075980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:26.076163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:27.076286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:28.076391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:29.076556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:30.076861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:31.077046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:32.077209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:33.077315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:34.078308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:35.078652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:36.078822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:27:36.989496 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:27:37.079416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:38.080393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:39.080497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:40.080664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:41.080833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:42.080994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:43.081102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:44.081266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:45.082226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:46.082395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:47.082494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:48.082661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:49.082835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:50.083003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:51.083176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:52.083336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:53.083831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:54.083995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:55.084174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:56.084337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:27:56.990021 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:27:57.084816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:58.084933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:27:59.085100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:00.085212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:01.085375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:02.085554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:03.085742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:04.085910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:05.086072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:06.086258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:07.086361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:08.086549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:09.087019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:10.087198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:11.087361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:12.087534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:13.087702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:14.087830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:15.088006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:16.088181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:28:16.989823 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:28:17.089186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:18.089542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:19.089732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:20.089903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:21.090282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:22.090384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:23.090567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:24.090689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:25.090849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:26.090952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:27.091061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:28.091172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:29.091270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:30.091406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:31.091503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:32.091617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:33.092484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:34.092654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:35.093200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:36.093315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:28:36.990100 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:28:37.093921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:38.094368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:39.094469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:40.095033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:41.095128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:42.095239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:43.095705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:44.095564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:45.095754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:46.095913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:47.096016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:48.096129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:49.096298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:50.096459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:51.096624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:52.096809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:53.096935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:54.097100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:55.097269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:56.097431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:28:56.989212 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:28:57.098158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:58.098921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:28:59.099109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:00.099533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:01.099706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:02.099892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:03.100011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:04.100184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:05.100923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:06.101038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:07.101225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:08.101338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:09.101516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:10.101688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:11.101875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:12.102045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:13.102149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:14.102324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:15.102492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:16.102931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:29:16.989968 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:29:17.103449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:18.104050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:19.104135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:20.104929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:21.105926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:22.106093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:23.106932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:24.107053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:25.107971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:26.108932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:27.109016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:28.109121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:29.109927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:30.110093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:31.110665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:32.110930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:33.111904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:34.112313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:35.112923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:36.113033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:29:36.989367 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:29:37.113116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:38.113922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:39.114923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:40.115040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:41.115223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:42.115419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:43.115564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:44.115746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:45.115908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:46.116082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:47.116267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:48.116367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:49.116497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:50.116688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:51.116897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:52.117090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:53.117216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:54.117392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:55.117571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:56.117794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:29:56.990105 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:29:57.118009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:58.118929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:29:59.119121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:00.119333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:01.119507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:02.119629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:03.119861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:04.120062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:05.120241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:06.120440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:07.121275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:08.121393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:09.121607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:10.121825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:11.122008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:12.122712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:13.122290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:14.122490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:15.122582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:16.122697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:30:16.990314 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTczOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  E0521 15:30:17.123159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:18.124043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:19.124244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:20.124435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:21.124624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:22.124854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:23.124882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:24.124964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:25.125172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:26.125354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:27.125555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:28.126604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:29.127217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:30.127833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:31.128925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:32.129024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:33.129138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:34.129263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:35.129354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:36.129467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:30:36.988667 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0521 15:30:36.988700 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/21/25 15:30:36.988
  STEP: retrieving all remaining pages @ 05/21/25 15:30:36.992
  I0521 15:30:36.995363 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0521 15:30:36.998333 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0521 15:30:37.001161 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0521 15:30:37.004258 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0521 15:30:37.007036 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0521 15:30:37.009783 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0521 15:30:37.012335 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA3NjEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0521 15:30:37.015419 23 chunking.go:221] Retrieved 40/40 results with rv 10761 and continue 
  I0521 15:30:37.015577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3287" for this suite. @ 05/21/25 15:30:37.017
• [477.791 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 05/21/25 15:30:37.021
  I0521 15:30:37.021940 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:30:37.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:37.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:37.03
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/21/25 15:30:37.033
  E0521 15:30:37.129765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:38.129922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:39.130325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:40.130492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:30:41.046
  I0521 15:30:41.048090 23 output.go:207] Trying to get logs from node worker-0 pod pod-093ffb20-694c-4a88-81b9-79f4f892b19b container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:30:41.059
  I0521 15:30:41.069386 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-632" for this suite. @ 05/21/25 15:30:41.071
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/21/25 15:30:41.077
  I0521 15:30:41.078006 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/21/25 15:30:41.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:41.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:41.087
  STEP: mirroring a new custom Endpoint @ 05/21/25 15:30:41.103
  I0521 15:30:41.107458      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:30:41.109811 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0521 15:30:41.131062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:42.131309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:43.131631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/21/25 15:30:43.182
  I0521 15:30:43.185146      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 05/21/25 15:30:43.188
  I0521 15:30:43.191607      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:30:43.195032 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2166" for this suite. @ 05/21/25 15:30:43.197
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 05/21/25 15:30:43.204
  I0521 15:30:43.204945 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:30:43.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:43.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:43.214
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/21/25 15:30:43.216
  E0521 15:30:44.131950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:45.132052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:30:45.228
  I0521 15:30:45.229858 23 output.go:207] Trying to get logs from node worker-0 pod pod-bb65a48a-63cc-40c8-a335-28b2d0dc8227 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:30:45.234
  I0521 15:30:45.244842 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6709" for this suite. @ 05/21/25 15:30:45.29
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/21/25 15:30:45.297
  I0521 15:30:45.297018 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:30:45.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:45.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:45.306
  I0521 15:30:45.308448 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 create -f -'
  I0521 15:30:45.419953 23 builder.go:146] stderr: ""
  I0521 15:30:45.419990 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0521 15:30:45.420174 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 create -f -'
  I0521 15:30:45.538389 23 builder.go:146] stderr: ""
  I0521 15:30:45.538439 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/21/25 15:30:45.538
  E0521 15:30:46.133122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:30:46.542287 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:30:46.542324 23 framework.go:733] Found 1 / 1
  I0521 15:30:46.542341 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0521 15:30:46.544222 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:30:46.544246 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0521 15:30:46.544289 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 describe pod agnhost-primary-qbxg4'
  I0521 15:30:46.599759 23 builder.go:146] stderr: ""
  I0521 15:30:46.599827 23 builder.go:147] stdout: "Name:             agnhost-primary-qbxg4\nNamespace:        kubectl-6653\nPriority:         0\nService Account:  default\nNode:             worker-0/10.0.54.132\nStart Time:       Wed, 21 May 2025 15:30:45 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.132\nIPs:\n  IP:           10.244.0.132\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://3daa83ea5e419d11de11493365440cc597b2d7eb7e09c99884457bbe589d7476\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 21 May 2025 15:30:45 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-2dxfs (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-2dxfs:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-6653/agnhost-primary-qbxg4 to worker-0\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0521 15:30:46.599884 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 describe rc agnhost-primary'
  I0521 15:30:46.655211 23 builder.go:146] stderr: ""
  I0521 15:30:46.655258 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6653\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-qbxg4\n"
  I0521 15:30:46.655312 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 describe service agnhost-primary'
  I0521 15:30:46.708974 23 builder.go:146] stderr: ""
  I0521 15:30:46.709035 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-6653\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.98.153.0\nIPs:                      10.98.153.0\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.0.132:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0521 15:30:46.711259 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 describe node worker-0'
  I0521 15:30:46.779834 23 builder.go:146] stderr: ""
  I0521 15:30:46.779916 23 builder.go:147] stdout: "Name:               worker-0\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker-0\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 21 May 2025 15:00:44 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker-0\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 21 May 2025 15:30:37 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Wed, 21 May 2025 15:26:24 +0000   Wed, 21 May 2025 15:00:44 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Wed, 21 May 2025 15:26:24 +0000   Wed, 21 May 2025 15:00:44 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Wed, 21 May 2025 15:26:24 +0000   Wed, 21 May 2025 15:00:44 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Wed, 21 May 2025 15:26:24 +0000   Wed, 21 May 2025 15:00:59 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.0.54.132\n  Hostname:    worker-0\nCapacity:\n  cpu:                4\n  ephemeral-storage:  50620216Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7612588Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  46651590989\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7510188Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 376922d23523438e895df7fcedb6c4b6\n  System UUID:                ec203a3a-613e-5adf-75af-7bbdb9ab64fe\n  Boot ID:                    ca03462b-bbb3-43d6-a909-e1a4ad3a5eff\n  Kernel Version:             6.8.0-1029-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.27\n  Kubelet Version:            v1.33.1+k0s\n  Kube-Proxy Version:         \nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-6c77c7d548-vnnw6                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     29m\n  kube-system                 konnectivity-agent-p9v68                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         30m\n  kube-system                 kube-proxy-jqp49                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         30m\n  kube-system                 kube-router-zbf2d                                          250m (6%)     0 (0%)      16Mi (0%)        0 (0%)         30m\n  kubectl-6653                agnhost-primary-qbxg4                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         29m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-t9t5j    0 (0%)        0 (0%)      0 (0%)           0 (0%)         29m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                350m (8%)  0 (0%)\n  memory             86Mi (1%)  170Mi (2%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 29m                kube-proxy       \n  Normal   Starting                 30m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      30m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  30m (x2 over 30m)  kubelet          Node worker-0 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    30m (x2 over 30m)  kubelet          Node worker-0 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     30m (x2 over 30m)  kubelet          Node worker-0 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  30m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           29m                node-controller  Node worker-0 event: Registered Node worker-0 in Controller\n  Normal   NodeReady                29m                kubelet          Node worker-0 status is now: NodeReady\n"
  I0521 15:30:46.779978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6653 describe namespace kubectl-6653'
  I0521 15:30:46.836486 23 builder.go:146] stderr: ""
  I0521 15:30:46.836545 23 builder.go:147] stdout: "Name:         kubectl-6653\nLabels:       e2e-framework=kubectl\n              e2e-run=641bc478-7b85-421b-9c45-a93ff3c4f48a\n              kubernetes.io/metadata.name=kubectl-6653\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0521 15:30:46.836671 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6653" for this suite. @ 05/21/25 15:30:46.838
• [1.545 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/21/25 15:30:46.842
  I0521 15:30:46.842208 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:30:46.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:46.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:46.851
  STEP: Creating configMap configmap-8242/configmap-test-602d5d5e-2c6e-46a5-b098-4042e27ae731 @ 05/21/25 15:30:46.853
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:30:46.856
  E0521 15:30:47.133810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:48.133989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:49.134810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:50.135239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:30:50.948
  I0521 15:30:50.950039 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-9727a3d7-2e3f-4079-93a7-68cd4c337478 container env-test: <nil>
  STEP: delete the pod @ 05/21/25 15:30:50.955
  I0521 15:30:50.967154 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8242" for this suite. @ 05/21/25 15:30:50.969
• [4.131 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/21/25 15:30:50.973
  I0521 15:30:50.973023 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:30:50.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:50.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:50.982
  I0521 15:30:51.007229 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4757" for this suite. @ 05/21/25 15:30:51.07
• [0.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 05/21/25 15:30:51.076
  I0521 15:30:51.076431 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:30:51.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:51.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:51.085
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:30:51.088
  E0521 15:30:51.135336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:52.135389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:30:53.101
  I0521 15:30:53.103772 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-217b5fb3-311e-4b7e-8a5d-95e9135dccd8 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:30:53.115
  I0521 15:30:53.127751 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6244" for this suite. @ 05/21/25 15:30:53.132
  E0521 15:30:53.136207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 05/21/25 15:30:53.137
  I0521 15:30:53.137187 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:30:53.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:53.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:53.149
  STEP: Setting up server cert @ 05/21/25 15:30:53.162
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:30:53.93
  STEP: Deploying the webhook pod @ 05/21/25 15:30:53.934
  STEP: Wait for the deployment to be ready @ 05/21/25 15:30:53.944
  I0521 15:30:53.951176 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:30:54.136362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:55.136552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:30:55.957
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:30:55.984
  E0521 15:30:56.137099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:30:56.984911 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/21/25 15:30:56.987
  STEP: verifying the validating webhook match conditions @ 05/21/25 15:30:56.999
  STEP: updating the validating webhook match conditions @ 05/21/25 15:30:57.001
  STEP: verifying the validating webhook match conditions @ 05/21/25 15:30:57.011
  I0521 15:30:57.048164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9193" for this suite. @ 05/21/25 15:30:57.05
  STEP: Destroying namespace "webhook-markers-9923" for this suite. @ 05/21/25 15:30:57.055
• [3.925 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/21/25 15:30:57.061
  I0521 15:30:57.061946 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename watch @ 05/21/25 15:30:57.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:57.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:57.07
  STEP: getting a starting resourceVersion @ 05/21/25 15:30:57.072
  STEP: starting a background goroutine to produce watch events @ 05/21/25 15:30:57.074
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/21/25 15:30:57.074
  E0521 15:30:57.137596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:58.137940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:30:59.138219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:30:59.866540 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5456" for this suite. @ 05/21/25 15:30:59.916
• [2.906 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/21/25 15:30:59.967
  I0521 15:30:59.967897 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-runtime @ 05/21/25 15:30:59.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:30:59.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:30:59.979
  STEP: create the container @ 05/21/25 15:30:59.981
  I0521 15:30:59.988112      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/21/25 15:30:59.988
  E0521 15:31:00.139225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:01.139729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:02.140140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/21/25 15:31:02.999
  STEP: the container should be terminated @ 05/21/25 15:31:03.001
  STEP: the termination message should be set @ 05/21/25 15:31:03.001
  I0521 15:31:03.001149 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/21/25 15:31:03.001
  I0521 15:31:03.012315 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1675" for this suite. @ 05/21/25 15:31:03.014
• [3.052 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 05/21/25 15:31:03.019
  I0521 15:31:03.019942 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 15:31:03.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:03.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:03.029
  I0521 15:31:03.032155 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:31:03.140689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:04.141218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/21/25 15:31:04.245
  I0521 15:31:04.245275 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6265 --namespace=crd-publish-openapi-6265 create -f -'
  E0521 15:31:05.141544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:06.141636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:06.322912 23 builder.go:146] stderr: ""
  I0521 15:31:06.323112 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2314-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0521 15:31:06.323200 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6265 --namespace=crd-publish-openapi-6265 delete e2e-test-crd-publish-openapi-2314-crds test-cr'
  I0521 15:31:06.379812 23 builder.go:146] stderr: ""
  I0521 15:31:06.379875 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2314-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0521 15:31:06.379928 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6265 --namespace=crd-publish-openapi-6265 apply -f -'
  I0521 15:31:06.444275 23 builder.go:146] stderr: ""
  I0521 15:31:06.444312 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2314-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0521 15:31:06.444354 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6265 --namespace=crd-publish-openapi-6265 delete e2e-test-crd-publish-openapi-2314-crds test-cr'
  I0521 15:31:06.499123 23 builder.go:146] stderr: ""
  I0521 15:31:06.499164 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2314-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/21/25 15:31:06.499
  I0521 15:31:06.499257 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6265 explain e2e-test-crd-publish-openapi-2314-crds'
  I0521 15:31:06.553143 23 builder.go:146] stderr: ""
  I0521 15:31:06.553197 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2314-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0521 15:31:07.141702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:07.776927 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6265" for this suite. @ 05/21/25 15:31:07.782
• [4.771 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 05/21/25 15:31:07.791
  I0521 15:31:07.791186 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 15:31:07.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:07.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:07.8
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2634.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-2634.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 05/21/25 15:31:07.802
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2634.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2634.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/21/25 15:31:07.802
  STEP: creating a pod to probe /etc/hosts @ 05/21/25 15:31:07.802
  STEP: submitting the pod to kubernetes @ 05/21/25 15:31:07.803
  E0521 15:31:08.142404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:09.142587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 15:31:09.814
  STEP: looking for the results for each expected name from probers @ 05/21/25 15:31:09.816
  I0521 15:31:09.829677 23 dns_common.go:546] DNS probes using dns-2634/dns-test-691b81b6-38e6-4b0b-a266-dd4bdb03ad48 succeeded

  STEP: deleting the pod @ 05/21/25 15:31:09.829
  I0521 15:31:09.839500 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2634" for this suite. @ 05/21/25 15:31:09.842
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/21/25 15:31:09.846
  I0521 15:31:09.846196 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/21/25 15:31:09.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:09.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:09.855
  STEP: creating the policy @ 05/21/25 15:31:09.861
  STEP: waiting until the marker is denied @ 05/21/25 15:31:09.873
  E0521 15:31:10.143472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 05/21/25 15:31:10.283
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/21/25 15:31:10.294
  I0521 15:31:10.331825 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7303" for this suite. @ 05/21/25 15:31:10.336
• [0.499 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/21/25 15:31:10.345
  I0521 15:31:10.345460 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:31:10.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:10.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:10.355
  STEP: creating the pod @ 05/21/25 15:31:10.357
  STEP: setting up watch @ 05/21/25 15:31:10.357
  STEP: submitting the pod to kubernetes @ 05/21/25 15:31:10.459
  STEP: verifying the pod is in kubernetes @ 05/21/25 15:31:10.464
  STEP: verifying pod creation was observed @ 05/21/25 15:31:10.466
  E0521 15:31:11.143900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:12.144788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/21/25 15:31:12.476
  STEP: verifying pod deletion was observed @ 05/21/25 15:31:12.481
  E0521 15:31:13.145859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:13.825403 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2160" for this suite. @ 05/21/25 15:31:13.827
• [3.486 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 05/21/25 15:31:13.831
  I0521 15:31:13.831421 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename disruption @ 05/21/25 15:31:13.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:13.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:13.843
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:31:13.848
  E0521 15:31:14.146943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:15.146517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 05/21/25 15:31:15.851
  STEP: Waiting for all pods to be running @ 05/21/25 15:31:15.856
  I0521 15:31:15.859066 23 disruption.go:691] running pods: 0 < 1
  E0521 15:31:16.147481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:17.147979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/21/25 15:31:17.861
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:31:17.869
  STEP: Patching PodDisruptionBudget status @ 05/21/25 15:31:17.873
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:31:17.878
  I0521 15:31:17.880411 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6854" for this suite. @ 05/21/25 15:31:17.882
• [4.057 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 05/21/25 15:31:17.888
  I0521 15:31:17.888088 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:31:17.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:17.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:17.897
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:31:17.899
  E0521 15:31:18.148494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:19.148979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:20.149522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:21.149602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:31:21.913
  I0521 15:31:21.915074 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-07523853-bf57-429f-b030-1255b0265967 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:31:21.919
  I0521 15:31:21.930707 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9655" for this suite. @ 05/21/25 15:31:21.932
• [4.050 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 05/21/25 15:31:21.938
  I0521 15:31:21.938356 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:31:21.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:21.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:21.947
  STEP: Setting up server cert @ 05/21/25 15:31:21.96
  E0521 15:31:22.150529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:31:22.329
  STEP: Deploying the webhook pod @ 05/21/25 15:31:22.334
  STEP: Wait for the deployment to be ready @ 05/21/25 15:31:22.343
  I0521 15:31:22.349347 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:31:23.150964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:24.151067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:31:24.356
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:31:24.373
  E0521 15:31:25.151173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:25.374425 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/21/25 15:31:25.377
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/21/25 15:31:25.378
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/21/25 15:31:25.378
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/21/25 15:31:25.378
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/21/25 15:31:25.379
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/21/25 15:31:25.379
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/21/25 15:31:25.38
  I0521 15:31:25.409355 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3260" for this suite. @ 05/21/25 15:31:25.411
  STEP: Destroying namespace "webhook-markers-2209" for this suite. @ 05/21/25 15:31:25.417
• [3.486 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 05/21/25 15:31:25.424
  I0521 15:31:25.424339 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pv @ 05/21/25 15:31:25.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:25.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:25.434
  STEP: Creating initial PV and PVC @ 05/21/25 15:31:25.436
  I0521 15:31:25.436452 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5898" @ 05/21/25 15:31:25.446
  STEP: Listing PVCs in namespace "pv-5898" @ 05/21/25 15:31:25.448
  STEP: Reading "pvc-tqtmx" Status @ 05/21/25 15:31:25.45
  STEP: Reading "pv-5898-fxwt7" Status @ 05/21/25 15:31:25.452
  STEP: Patching "pvc-tqtmx" Status @ 05/21/25 15:31:25.456
  STEP: Patching "pv-5898-fxwt7" Status @ 05/21/25 15:31:25.467
  STEP: Updating "pvc-tqtmx" Status @ 05/21/25 15:31:25.472
  STEP: Updating "pv-5898-fxwt7" Status @ 05/21/25 15:31:25.478
  I0521 15:31:25.485554 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0521 15:31:25.485575 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-tqtmx"
  I0521 15:31:25.488739 23 pv.go:193] Deleting PersistentVolume "pv-5898-fxwt7"
  I0521 15:31:25.492280 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5898" for this suite. @ 05/21/25 15:31:25.511
• [0.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 05/21/25 15:31:25.515
  I0521 15:31:25.515427 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:31:25.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:25.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:25.524
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6590 @ 05/21/25 15:31:25.526
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/21/25 15:31:25.54
  STEP: creating service externalsvc in namespace services-6590 @ 05/21/25 15:31:25.54
  I0521 15:31:25.562886 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 15:31:26.151406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:27.151578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 05/21/25 15:31:27.572
  I0521 15:31:27.586582 23 resource.go:361] Creating new exec pod
  E0521 15:31:28.152374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:29.152570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:29.596008 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6590 exec execpod7ld9c -- /bin/sh -x -c nslookup clusterip-service.services-6590.svc.cluster.local'
  I0521 15:31:29.714713 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-6590.svc.cluster.local\n"
  I0521 15:31:29.714782 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-6590.svc.cluster.local\tcanonical name = externalsvc.services-6590.svc.cluster.local.\nName:\texternalsvc.services-6590.svc.cluster.local\nAddress: 10.107.161.239\n\n"
  I0521 15:31:29.738893 23 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I0521 15:31:29.752196 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6590" for this suite. @ 05/21/25 15:31:29.755
• [4.248 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 05/21/25 15:31:29.763
  I0521 15:31:29.763083 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 15:31:29.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:29.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:29.772
  STEP: apply creating a deployment @ 05/21/25 15:31:29.774
  I0521 15:31:29.782142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8942" for this suite. @ 05/21/25 15:31:29.855
• [0.096 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/21/25 15:31:29.858
  I0521 15:31:29.859002 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename proxy @ 05/21/25 15:31:29.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:29.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:29.868
  STEP: starting an echo server on multiple ports @ 05/21/25 15:31:29.887
  I0521 15:31:29.898314 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 15:31:30.152707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:31.152800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:31.906634      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:31:31.906713 23 proxy.go:273] setup took 2.036093917s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/21/25 15:31:31.906
  I0521 15:31:31.917677 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 10.48662ms)
  I0521 15:31:31.917690 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 10.821599ms)
  I0521 15:31:31.917723 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 10.758789ms)
  I0521 15:31:31.917736 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 10.819528ms)
  I0521 15:31:31.921143 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 14.131693ms)
  I0521 15:31:31.921382 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 14.442785ms)
  I0521 15:31:31.921617 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 14.592385ms)
  I0521 15:31:31.921657 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 14.537962ms)
  I0521 15:31:31.921759 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 14.768562ms)
  I0521 15:31:31.924477 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 17.65095ms)
  I0521 15:31:31.924899 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 17.674492ms)
  I0521 15:31:31.925345 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 18.282386ms)
  I0521 15:31:31.925388 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 18.309075ms)
  I0521 15:31:31.927830 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 20.567111ms)
  I0521 15:31:31.927894 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 20.66791ms)
  I0521 15:31:31.927920 23 proxy.go:601] (0) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 20.965741ms)
  I0521 15:31:31.934845 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.866536ms)
  I0521 15:31:31.934897 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 6.324583ms)
  I0521 15:31:31.936557 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 8.307895ms)
  I0521 15:31:31.936603 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 8.094644ms)
  I0521 15:31:31.936604 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.269412ms)
  I0521 15:31:31.936606 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 8.246597ms)
  I0521 15:31:31.936634 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 8.22226ms)
  I0521 15:31:31.936641 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 8.679694ms)
  I0521 15:31:31.936638 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 8.578544ms)
  I0521 15:31:31.936611 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.005664ms)
  I0521 15:31:31.936667 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.131046ms)
  I0521 15:31:31.936669 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 8.447062ms)
  I0521 15:31:31.938016 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 9.845577ms)
  I0521 15:31:31.938917 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 10.887154ms)
  I0521 15:31:31.939456 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 11.00267ms)
  I0521 15:31:31.939549 23 proxy.go:601] (1) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 11.344556ms)
  I0521 15:31:31.944742 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 5.134043ms)
  I0521 15:31:31.947152 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.196695ms)
  I0521 15:31:31.947428 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 7.597698ms)
  I0521 15:31:31.947431 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 7.684374ms)
  I0521 15:31:31.947431 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 7.507925ms)
  I0521 15:31:31.947458 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 7.676877ms)
  I0521 15:31:31.947456 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 7.594373ms)
  I0521 15:31:31.948461 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 8.789752ms)
  I0521 15:31:31.948575 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.566566ms)
  I0521 15:31:31.948575 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 8.627266ms)
  I0521 15:31:31.949048 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 9.2276ms)
  I0521 15:31:31.949137 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.438874ms)
  I0521 15:31:31.949179 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.316107ms)
  I0521 15:31:31.949853 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 10.069964ms)
  I0521 15:31:31.950248 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 10.648694ms)
  I0521 15:31:31.950558 23 proxy.go:601] (2) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 10.648447ms)
  I0521 15:31:31.957278 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.607304ms)
  I0521 15:31:31.957375 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.773927ms)
  I0521 15:31:31.958740 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 7.803219ms)
  I0521 15:31:31.959093 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 8.080414ms)
  I0521 15:31:31.959316 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.328651ms)
  I0521 15:31:31.959321 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.596281ms)
  I0521 15:31:31.959352 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 8.569409ms)
  I0521 15:31:31.959321 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 8.457718ms)
  I0521 15:31:31.959668 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.689253ms)
  I0521 15:31:31.959886 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 9.206115ms)
  I0521 15:31:31.960423 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.58192ms)
  I0521 15:31:31.960427 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 9.529949ms)
  I0521 15:31:31.962056 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 11.226218ms)
  I0521 15:31:31.963437 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 12.646632ms)
  I0521 15:31:31.963595 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 12.721491ms)
  I0521 15:31:31.964754 23 proxy.go:601] (3) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 14.030523ms)
  I0521 15:31:31.978369 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 12.959195ms)
  I0521 15:31:31.978420 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 13.182762ms)
  I0521 15:31:31.984448 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 19.433253ms)
  I0521 15:31:31.985823 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 20.701342ms)
  I0521 15:31:31.985834 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 20.486643ms)
  I0521 15:31:31.986445 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 21.354449ms)
  I0521 15:31:31.986538 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 21.549305ms)
  I0521 15:31:31.986784 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 21.976555ms)
  I0521 15:31:31.986784 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 21.509211ms)
  I0521 15:31:31.986812 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 21.893969ms)
  I0521 15:31:31.988720 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 23.339915ms)
  I0521 15:31:31.989251 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 23.762427ms)
  I0521 15:31:31.989311 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 24.122811ms)
  I0521 15:31:31.989368 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 24.568323ms)
  I0521 15:31:31.989692 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 24.231865ms)
  I0521 15:31:31.989896 23 proxy.go:601] (4) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 25.014052ms)
  I0521 15:31:31.999308 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.305144ms)
  I0521 15:31:32.004135 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 14.20133ms)
  I0521 15:31:32.007461 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 17.067242ms)
  I0521 15:31:32.007667 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 17.610399ms)
  I0521 15:31:32.009082 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 19.050313ms)
  I0521 15:31:32.009224 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 19.107466ms)
  I0521 15:31:32.009257 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 18.910091ms)
  I0521 15:31:32.009394 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 19.20687ms)
  I0521 15:31:32.011622 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 21.41257ms)
  I0521 15:31:32.012802 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 22.546272ms)
  I0521 15:31:32.013223 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 22.938667ms)
  I0521 15:31:32.013231 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 22.814108ms)
  I0521 15:31:32.013240 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 22.911481ms)
  I0521 15:31:32.013248 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 23.103946ms)
  I0521 15:31:32.013223 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 23.273092ms)
  I0521 15:31:32.013597 23 proxy.go:601] (5) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 23.136682ms)
  I0521 15:31:32.019766 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.127535ms)
  I0521 15:31:32.027633 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 13.773311ms)
  I0521 15:31:32.028225 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 14.508395ms)
  I0521 15:31:32.028499 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 14.667511ms)
  I0521 15:31:32.028790 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 15.028512ms)
  I0521 15:31:32.028796 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 14.969586ms)
  I0521 15:31:32.028807 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 15.009809ms)
  I0521 15:31:32.029967 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 16.312076ms)
  I0521 15:31:32.032467 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 18.482542ms)
  I0521 15:31:32.033485 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 19.521952ms)
  I0521 15:31:32.036154 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 22.512628ms)
  I0521 15:31:32.036494 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 22.588765ms)
  I0521 15:31:32.036534 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 22.489372ms)
  I0521 15:31:32.036557 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 22.630494ms)
  I0521 15:31:32.038539 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 24.662592ms)
  I0521 15:31:32.038904 23 proxy.go:601] (6) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 24.878203ms)
  I0521 15:31:32.045303 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.347887ms)
  I0521 15:31:32.046353 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 7.065543ms)
  I0521 15:31:32.046430 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.178666ms)
  I0521 15:31:32.046669 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 7.653171ms)
  I0521 15:31:32.046696 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 7.647512ms)
  I0521 15:31:32.048407 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 9.175746ms)
  I0521 15:31:32.048421 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.223866ms)
  I0521 15:31:32.048413 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 9.36957ms)
  I0521 15:31:32.048730 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.513671ms)
  I0521 15:31:32.050796 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 11.692643ms)
  I0521 15:31:32.050816 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 11.677621ms)
  I0521 15:31:32.050778 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 11.630315ms)
  I0521 15:31:32.051070 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 11.900399ms)
  I0521 15:31:32.051261 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 12.289698ms)
  I0521 15:31:32.051468 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 12.522361ms)
  I0521 15:31:32.051499 23 proxy.go:601] (7) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 12.416728ms)
  I0521 15:31:32.054909 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 3.378388ms)
  I0521 15:31:32.057458 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 5.827697ms)
  I0521 15:31:32.058120 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.229864ms)
  I0521 15:31:32.059237 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 7.418296ms)
  I0521 15:31:32.059548 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.688383ms)
  I0521 15:31:32.059881 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 8.121712ms)
  I0521 15:31:32.059881 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.100207ms)
  I0521 15:31:32.060487 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 8.591096ms)
  I0521 15:31:32.060523 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.749505ms)
  I0521 15:31:32.060569 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.686198ms)
  I0521 15:31:32.060581 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 8.724678ms)
  I0521 15:31:32.061294 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.429029ms)
  I0521 15:31:32.061329 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.392529ms)
  I0521 15:31:32.061683 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 9.986167ms)
  I0521 15:31:32.062053 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 10.217036ms)
  I0521 15:31:32.062089 23 proxy.go:601] (8) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 10.160976ms)
  I0521 15:31:32.067214 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 4.751776ms)
  I0521 15:31:32.067333 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 5.213657ms)
  I0521 15:31:32.067606 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 5.390887ms)
  I0521 15:31:32.069804 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 7.328936ms)
  I0521 15:31:32.070044 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 7.449509ms)
  I0521 15:31:32.070096 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 7.905742ms)
  I0521 15:31:32.070293 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.050876ms)
  I0521 15:31:32.070329 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 7.788298ms)
  I0521 15:31:32.070366 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 8.064529ms)
  I0521 15:31:32.071998 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 9.391138ms)
  I0521 15:31:32.072009 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 9.525643ms)
  I0521 15:31:32.072319 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 9.782971ms)
  I0521 15:31:32.072340 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 10.066508ms)
  I0521 15:31:32.072349 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 9.746935ms)
  I0521 15:31:32.072365 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.688236ms)
  I0521 15:31:32.072871 23 proxy.go:601] (9) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 10.224612ms)
  I0521 15:31:32.078638 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 5.295619ms)
  I0521 15:31:32.078645 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 5.635233ms)
  I0521 15:31:32.078648 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 5.399377ms)
  I0521 15:31:32.078656 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 5.374176ms)
  I0521 15:31:32.078835 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 5.858077ms)
  I0521 15:31:32.079036 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 5.751104ms)
  I0521 15:31:32.079497 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 6.578933ms)
  I0521 15:31:32.081096 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 8.100028ms)
  I0521 15:31:32.081124 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 8.145149ms)
  I0521 15:31:32.081326 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 7.944565ms)
  I0521 15:31:32.081339 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 8.404551ms)
  I0521 15:31:32.081713 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 8.286825ms)
  I0521 15:31:32.082463 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 9.069555ms)
  I0521 15:31:32.082582 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.221807ms)
  I0521 15:31:32.083052 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 9.735621ms)
  I0521 15:31:32.083062 23 proxy.go:601] (10) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 9.739437ms)
  I0521 15:31:32.089547 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 6.440692ms)
  I0521 15:31:32.089824 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.492734ms)
  I0521 15:31:32.089790 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.482402ms)
  I0521 15:31:32.089862 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.487563ms)
  I0521 15:31:32.089870 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 6.706845ms)
  I0521 15:31:32.089904 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.799731ms)
  I0521 15:31:32.089943 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.589399ms)
  I0521 15:31:32.089950 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 6.505885ms)
  I0521 15:31:32.090182 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 6.746265ms)
  I0521 15:31:32.090323 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.199531ms)
  I0521 15:31:32.091854 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 8.568062ms)
  I0521 15:31:32.091857 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 8.658347ms)
  I0521 15:31:32.092148 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.715451ms)
  I0521 15:31:32.092155 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 8.936726ms)
  I0521 15:31:32.092178 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 8.94274ms)
  I0521 15:31:32.092155 23 proxy.go:601] (11) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 8.897473ms)
  I0521 15:31:32.098480 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 6.261185ms)
  I0521 15:31:32.099111 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.715598ms)
  I0521 15:31:32.099149 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 6.636366ms)
  I0521 15:31:32.099160 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.829579ms)
  I0521 15:31:32.099179 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.515916ms)
  I0521 15:31:32.099186 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.644683ms)
  I0521 15:31:32.099450 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 6.653466ms)
  I0521 15:31:32.099472 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 7.022582ms)
  I0521 15:31:32.099857 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.246617ms)
  I0521 15:31:32.100053 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 7.828891ms)
  I0521 15:31:32.101043 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.331512ms)
  I0521 15:31:32.101047 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 8.748189ms)
  I0521 15:31:32.101092 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 8.188744ms)
  I0521 15:31:32.101492 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 9.014951ms)
  I0521 15:31:32.101769 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 9.508369ms)
  I0521 15:31:32.101805 23 proxy.go:601] (12) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.960357ms)
  I0521 15:31:32.107495 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 5.221335ms)
  I0521 15:31:32.108484 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.091124ms)
  I0521 15:31:32.108558 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 6.206606ms)
  I0521 15:31:32.108558 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 6.129125ms)
  I0521 15:31:32.108662 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.364663ms)
  I0521 15:31:32.108779 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.41584ms)
  I0521 15:31:32.108804 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 6.374127ms)
  I0521 15:31:32.109045 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.760661ms)
  I0521 15:31:32.109059 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.857819ms)
  I0521 15:31:32.109836 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 7.440623ms)
  I0521 15:31:32.110335 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 8.280408ms)
  I0521 15:31:32.110701 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 8.872862ms)
  I0521 15:31:32.110712 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 8.354716ms)
  I0521 15:31:32.110739 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 8.33561ms)
  I0521 15:31:32.111139 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.824454ms)
  I0521 15:31:32.111234 23 proxy.go:601] (13) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 9.264722ms)
  I0521 15:31:32.118321 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.896818ms)
  I0521 15:31:32.119226 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.60596ms)
  I0521 15:31:32.119400 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 7.933789ms)
  I0521 15:31:32.119413 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.090023ms)
  I0521 15:31:32.119442 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 7.941254ms)
  I0521 15:31:32.119457 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 7.938635ms)
  I0521 15:31:32.119467 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 8.187598ms)
  I0521 15:31:32.119489 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.208823ms)
  I0521 15:31:32.119927 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 8.341956ms)
  I0521 15:31:32.120344 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 8.777959ms)
  I0521 15:31:32.120399 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.946453ms)
  I0521 15:31:32.120675 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 9.265025ms)
  I0521 15:31:32.120947 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.555712ms)
  I0521 15:31:32.121033 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 9.456353ms)
  I0521 15:31:32.121076 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 9.715168ms)
  I0521 15:31:32.121486 23 proxy.go:601] (14) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 10.127181ms)
  I0521 15:31:32.124796 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 3.234849ms)
  I0521 15:31:32.128980 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.988855ms)
  I0521 15:31:32.129315 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 7.382401ms)
  I0521 15:31:32.130042 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 8.209618ms)
  I0521 15:31:32.130118 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 8.222519ms)
  I0521 15:31:32.130288 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.392182ms)
  I0521 15:31:32.130687 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 9.00064ms)
  I0521 15:31:32.130738 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 8.953606ms)
  I0521 15:31:32.131259 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 9.283792ms)
  I0521 15:31:32.131262 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.40071ms)
  I0521 15:31:32.131307 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 9.349317ms)
  I0521 15:31:32.131316 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 9.507551ms)
  I0521 15:31:32.131524 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.533083ms)
  I0521 15:31:32.131884 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 10.022513ms)
  I0521 15:31:32.132170 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 10.243802ms)
  I0521 15:31:32.132443 23 proxy.go:601] (15) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 10.623255ms)
  I0521 15:31:32.138240 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 4.84027ms)
  I0521 15:31:32.138844 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 6.223636ms)
  I0521 15:31:32.140450 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 7.957734ms)
  I0521 15:31:32.142279 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.302152ms)
  I0521 15:31:32.142288 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.848333ms)
  I0521 15:31:32.142293 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 8.819082ms)
  I0521 15:31:32.142309 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 9.54893ms)
  I0521 15:31:32.142319 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 9.096205ms)
  I0521 15:31:32.142328 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 9.020528ms)
  I0521 15:31:32.143103 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 9.636879ms)
  I0521 15:31:32.143206 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 10.328717ms)
  I0521 15:31:32.143263 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.903126ms)
  I0521 15:31:32.143291 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 10.149303ms)
  I0521 15:31:32.143313 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 10.253604ms)
  I0521 15:31:32.143446 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 10.066119ms)
  I0521 15:31:32.143754 23 proxy.go:601] (16) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 10.349456ms)
  I0521 15:31:32.150482 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 6.695014ms)
  I0521 15:31:32.150484 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 6.689806ms)
  I0521 15:31:32.150817 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 6.705193ms)
  I0521 15:31:32.150896 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 6.837405ms)
  I0521 15:31:32.151836 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 7.956683ms)
  I0521 15:31:32.151842 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 7.704748ms)
  I0521 15:31:32.152176 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 8.33928ms)
  I0521 15:31:32.152185 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 7.971037ms)
  I0521 15:31:32.152844 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 8.605666ms)
  I0521 15:31:32.152844 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 8.592244ms)
  E0521 15:31:32.152874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:32.154209 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 10.247611ms)
  I0521 15:31:32.154248 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 10.162021ms)
  I0521 15:31:32.154671 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 10.717403ms)
  I0521 15:31:32.154701 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 10.65482ms)
  I0521 15:31:32.154954 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 11.041401ms)
  I0521 15:31:32.154983 23 proxy.go:601] (17) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 11.100344ms)
  I0521 15:31:32.161944 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 6.814347ms)
  I0521 15:31:32.161984 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 6.550623ms)
  I0521 15:31:32.162768 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 7.74973ms)
  I0521 15:31:32.162768 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 7.755353ms)
  I0521 15:31:32.163119 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.017293ms)
  I0521 15:31:32.163136 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 7.910514ms)
  I0521 15:31:32.163594 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 8.403533ms)
  I0521 15:31:32.163649 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 8.38701ms)
  I0521 15:31:32.163676 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 8.168025ms)
  I0521 15:31:32.164536 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 9.454157ms)
  I0521 15:31:32.164566 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 9.21883ms)
  I0521 15:31:32.164591 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 9.531812ms)
  I0521 15:31:32.164594 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 9.132949ms)
  I0521 15:31:32.165275 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 9.784617ms)
  I0521 15:31:32.165407 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 10.115884ms)
  I0521 15:31:32.165996 23 proxy.go:601] (18) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 10.623532ms)
  I0521 15:31:32.171299 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 5.261329ms)
  I0521 15:31:32.171550 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:460/proxy/: tls baz (200; 5.512013ms)
  I0521 15:31:32.171561 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb/proxy/rewriteme">... (200; 5.482228ms)
  I0521 15:31:32.171828 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 5.62522ms)
  I0521 15:31:32.174468 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/rewrit... (200; 8.286759ms)
  I0521 15:31:32.174477 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname2/proxy/: bar (200; 8.364465ms)
  I0521 15:31:32.175405 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname1/proxy/: tls baz (200; 9.280915ms)
  I0521 15:31:32.175643 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:160/proxy/: foo (200; 9.264106ms)
  I0521 15:31:32.176246 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:443/proxy/t... (200; 9.853253ms)
  I0521 15:31:32.176516 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/: <a href="/api/v1/namespaces/proxy-649/pods/http:proxy-service-tgxhs-6f46f99849-8djbb:1080/proxy/r... (200; 10.113921ms)
  I0521 15:31:32.176596 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/proxy-service-tgxhs-6f46f99849-8djbb:162/proxy/: bar (200; 10.280961ms)
  I0521 15:31:32.176916 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/pods/https:proxy-service-tgxhs-6f46f99849-8djbb:462/proxy/: tls qux (200; 10.60855ms)
  I0521 15:31:32.176902 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname1/proxy/: foo (200; 10.541608ms)
  I0521 15:31:32.176946 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/services/https:proxy-service-tgxhs:tlsportname2/proxy/: tls qux (200; 10.601936ms)
  I0521 15:31:32.176958 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/services/http:proxy-service-tgxhs:portname1/proxy/: foo (200; 10.73164ms)
  I0521 15:31:32.177470 23 proxy.go:601] (19) /api/v1/namespaces/proxy-649/services/proxy-service-tgxhs:portname2/proxy/: bar (200; 11.172896ms)
  I0521 15:31:32.181654 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-649" for this suite. @ 05/21/25 15:31:32.184
• [2.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 05/21/25 15:31:32.191
  I0521 15:31:32.191079 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename containers @ 05/21/25 15:31:32.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:32.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:32.208
  STEP: Creating a pod to test override arguments @ 05/21/25 15:31:32.21
  E0521 15:31:33.153062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:34.153309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:35.153347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:36.153429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:31:36.225
  I0521 15:31:36.227582 23 output.go:207] Trying to get logs from node worker-0 pod client-containers-f7c82ca1-c747-46e4-bfd0-1ebf6f27fb27 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:31:36.232
  I0521 15:31:36.245327 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1257" for this suite. @ 05/21/25 15:31:36.248
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 05/21/25 15:31:36.253
  I0521 15:31:36.253290 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 15:31:36.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:36.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:36.263
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/21/25 15:31:36.266
  I0521 15:31:36.266477 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:31:37.153941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:37.531027 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:31:38.154021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:39.154121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:40.154962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:41.155692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:42.155783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:42.463063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2627" for this suite. @ 05/21/25 15:31:42.469
• [6.220 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/21/25 15:31:42.473
  I0521 15:31:42.473612 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:31:42.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:42.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:42.485
  STEP: creating Agnhost RC @ 05/21/25 15:31:42.487
  I0521 15:31:42.487942 23 kubectl.go:1540] namespace kubectl-1240
  I0521 15:31:42.487983 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1240 create -f -'
  I0521 15:31:42.599756 23 builder.go:146] stderr: ""
  I0521 15:31:42.599798 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/21/25 15:31:42.599
  E0521 15:31:43.155857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:43.602330 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:31:43.602366 23 framework.go:733] Found 1 / 1
  I0521 15:31:43.602385 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0521 15:31:43.604608 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:31:43.604635 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0521 15:31:43.604647 23 kubectl.go:1547] wait on agnhost-primary startup in kubectl-1240 
  I0521 15:31:43.604709 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1240 logs agnhost-primary-6g5qc agnhost-primary'
  I0521 15:31:43.660022 23 builder.go:146] stderr: ""
  I0521 15:31:43.660065 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/21/25 15:31:43.66
  I0521 15:31:43.660130 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1240 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0521 15:31:43.725432 23 builder.go:146] stderr: ""
  I0521 15:31:43.725638 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0521 15:31:43.728440 23 utils.go:1115] Service rm2 in namespace kubectl-1240 found.
  E0521 15:31:44.155917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:45.156154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/21/25 15:31:45.733
  I0521 15:31:45.733255 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-1240 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0521 15:31:45.801205 23 builder.go:146] stderr: ""
  I0521 15:31:45.801271 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0521 15:31:45.805330 23 utils.go:1115] Service rm3 in namespace kubectl-1240 found.
  E0521 15:31:46.156823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:47.157048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:47.810415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1240" for this suite. @ 05/21/25 15:31:47.812
• [5.343 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 05/21/25 15:31:47.817
  I0521 15:31:47.817303 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:31:47.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:47.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:47.826
  STEP: Creating configMap with name projected-configmap-test-volume-c88c754b-1d63-4442-b325-a34477e5bfc4 @ 05/21/25 15:31:47.829
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:31:47.833
  E0521 15:31:48.157852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:49.158036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:50.158169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:51.158346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:31:51.848
  I0521 15:31:51.851187 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-badfffa4-224b-4a10-899e-b1059a48eb70 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:31:51.855
  I0521 15:31:51.866480 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2926" for this suite. @ 05/21/25 15:31:51.868
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 05/21/25 15:31:51.872
  I0521 15:31:51.872800 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 15:31:51.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:51.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:51.884
  I0521 15:31:51.886545 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:31:52.158588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:53.158905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:54.159109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:31:54.417915      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0521 15:31:54.417937      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0521 15:31:54.417945      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0521 15:31:54.417953      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0521 15:31:54.417963      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0521 15:31:54.941801 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5525" for this suite. @ 05/21/25 15:31:54.944
• [3.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 05/21/25 15:31:54.948
  I0521 15:31:54.948193 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:31:54.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:54.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:54.959
  STEP: Creating configMap with name configmap-test-volume-map-2416edec-2a07-43f1-9feb-e85525100155 @ 05/21/25 15:31:54.961
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:31:54.964
  E0521 15:31:55.160107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:56.160274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:57.161236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:31:58.161347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:31:58.978
  I0521 15:31:58.980270 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-fac2e65e-023e-4c81-8ac6-bfbd3499dd3b container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:31:58.984
  I0521 15:31:58.997882 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7944" for this suite. @ 05/21/25 15:31:59
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/21/25 15:31:59.006
  I0521 15:31:59.006445 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:31:59.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:31:59.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:31:59.016
  I0521 15:31:59.018978 23 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0521 15:31:59.024209 23 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0521 15:31:59.028222 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0521 15:31:59.162440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:00.162554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:32:01.033215 23 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0521 15:32:01.034993 23 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0521 15:32:01.040849 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0521 15:32:01.040878 23 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0521 15:32:01.104251 23 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa7581ce-34ef-48a7-a092-75b151e4eec4",
      ResourceVersion: (string) (len=5) "12465",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:32:01.134589 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b244e5cb-8097-4ee1-b9da-9ff6a9c801b7",
      ResourceVersion: (string) (len=5) "12461",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "aa7581ce-34ef-48a7-a092-75b151e4eec4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 61 37 35 38 31  63 65 2d 33 34 65 66 2d  |\"aa7581ce-34ef-|
              00000120  34 38 61 37 2d 61 30 39  32 2d 37 35 62 31 35 31  |48a7-a092-75b151|
              00000130  65 34 65 65 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e4eec4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:32:01.135480 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0521 15:32:01.135651 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "087813e0-79f0-4098-a70b-f33250f9a1d4",
      ResourceVersion: (string) (len=5) "12453",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438319,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "aa7581ce-34ef-48a7-a092-75b151e4eec4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 61 37 35 38 31  63 65 2d 33 34 65 66 2d  |\"aa7581ce-34ef-|
              00000120  34 38 61 37 2d 61 30 39  32 2d 37 35 62 31 35 31  |48a7-a092-75b151|
              00000130  65 34 65 65 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e4eec4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:32:01.138981 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-tg5tj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-tg5tj",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-4695",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcdf5ceb-ac55-4d44-9da0-4e537ec241b6",
      ResourceVersion: (string) (len=5) "12464",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "b244e5cb-8097-4ee1-b9da-9ff6a9c801b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 32  34 34 65 35 63 62 2d 38  |d\":\"b244e5cb-8|
              00000090  30 39 37 2d 34 65 65 31  2d 62 39 64 61 2d 39 66  |097-4ee1-b9da-9f|
              000000a0  66 36 61 39 63 38 30 31  62 37 5c 22 7d 22 3a 7b  |f6a9c801b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pkqp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pkqp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438321,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2pkqp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:32:01.141015 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4695" for this suite. @ 05/21/25 15:32:01.143
• [2.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/21/25 15:32:01.147
  I0521 15:32:01.147485 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-runtime @ 05/21/25 15:32:01.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:01.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:01.158
  STEP: create the container @ 05/21/25 15:32:01.161
  E0521 15:32:01.163316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:32:01.167817      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/21/25 15:32:01.167
  E0521 15:32:02.163828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:03.164744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:04.165508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/21/25 15:32:04.177
  STEP: the container should be terminated @ 05/21/25 15:32:04.178
  STEP: the termination message should be set @ 05/21/25 15:32:04.178
  I0521 15:32:04.178962 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/21/25 15:32:04.178
  I0521 15:32:04.189749 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6604" for this suite. @ 05/21/25 15:32:04.191
• [3.048 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 05/21/25 15:32:04.195
  I0521 15:32:04.195448 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:32:04.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:04.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:04.207
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/21/25 15:32:04.209
  E0521 15:32:05.165589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:06.166042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:07.166906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:08.167003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:32:08.222
  I0521 15:32:08.224285 23 output.go:207] Trying to get logs from node worker-0 pod pod-e93c6043-cb70-453d-898f-ca4267614c99 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:32:08.228
  I0521 15:32:08.240132 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5892" for this suite. @ 05/21/25 15:32:08.242
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 05/21/25 15:32:08.246
  I0521 15:32:08.246022 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:32:08.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:08.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:08.257
  STEP: Starting the proxy @ 05/21/25 15:32:08.259
  I0521 15:32:08.259556 23 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-3705 proxy --unix-socket=/tmp/kubectl-proxy-unix4258227483/test'
  STEP: retrieving proxy /api/ output @ 05/21/25 15:32:08.304
  I0521 15:32:08.305271 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3705" for this suite. @ 05/21/25 15:32:08.343
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 05/21/25 15:32:08.347
  I0521 15:32:08.347304 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename security-context-test @ 05/21/25 15:32:08.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:08.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:08.359
  E0521 15:32:09.167320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:10.167372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:11.167832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:12.168274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:32:12.380973 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3783" for this suite. @ 05/21/25 15:32:12.383
• [4.040 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/21/25 15:32:12.387
  I0521 15:32:12.387686 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:32:12.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:12.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:12.4
  STEP: Creating a pod to test downward api env vars @ 05/21/25 15:32:12.402
  E0521 15:32:13.168341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:14.168976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:32:14.414
  I0521 15:32:14.415964 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-ec276709-066c-4d90-804a-755162760c8e container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:32:14.421
  I0521 15:32:14.431694 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3048" for this suite. @ 05/21/25 15:32:14.433
• [2.052 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/21/25 15:32:14.439
  I0521 15:32:14.439488 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename ingressclass @ 05/21/25 15:32:14.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:14.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:14.449
  STEP: getting /apis @ 05/21/25 15:32:14.451
  STEP: getting /apis/networking.k8s.io @ 05/21/25 15:32:14.455
  STEP: getting /apis/networking.k8s.iov1 @ 05/21/25 15:32:14.455
  STEP: creating @ 05/21/25 15:32:14.456
  STEP: getting @ 05/21/25 15:32:14.467
  STEP: listing @ 05/21/25 15:32:14.468
  STEP: watching @ 05/21/25 15:32:14.47
  I0521 15:32:14.470384 23 ingressclass.go:348] starting watch
  STEP: patching @ 05/21/25 15:32:14.471
  STEP: updating @ 05/21/25 15:32:14.474
  I0521 15:32:14.477670 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0521 15:32:14.477703 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/21/25 15:32:14.477
  STEP: deleting a collection @ 05/21/25 15:32:14.483
  I0521 15:32:14.493618 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-27" for this suite. @ 05/21/25 15:32:14.534
• [0.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/21/25 15:32:14.537
  I0521 15:32:14.537832 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename endpointslice @ 05/21/25 15:32:14.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:14.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:14.546
  I0521 15:32:14.563787      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E0521 15:32:15.169071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:16.169263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:32:16.566591      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:16.587928      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:16.668996 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9685" for this suite. @ 05/21/25 15:32:16.671
• [2.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/21/25 15:32:16.675
  I0521 15:32:16.675338 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:32:16.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:16.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:16.684
  I0521 15:32:16.687006 23 deployment.go:1664] Creating simple deployment test-new-deployment
  I0521 15:32:16.696117 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  E0521 15:32:17.169516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:18.169675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/21/25 15:32:18.705
  STEP: updating a scale subresource @ 05/21/25 15:32:18.707
  STEP: verifying the deployment Spec.Replicas was modified @ 05/21/25 15:32:18.712
  STEP: Patch a scale subresource @ 05/21/25 15:32:18.714
  I0521 15:32:18.730771 23 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6308a859-6bb8-47c0-a31a-33f1f6a7f929",
      ResourceVersion: (string) (len=5) "12683",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:32:18.740042 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d13d2f5-de13-4dc1-be2e-740e452fa100",
      ResourceVersion: (string) (len=5) "12690",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "6308a859-6bb8-47c0-a31a-33f1f6a7f929",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 30 38 61 38  35 39 2d 36 62 62 38 2d  |\"6308a859-6bb8-|
              00000120  34 37 63 30 2d 61 33 31  61 2d 33 33 66 31 66 36  |47c0-a31a-33f1f6|
              00000130  61 37 66 39 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a7f929\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:32:18.747351 23 deployment.go:68] Pod "test-new-deployment-685b768f58-kmz5n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-kmz5n",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bebe85d-fc6d-4984-8487-382f6d4a27f0",
      ResourceVersion: (string) (len=5) "12691",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4d13d2f5-de13-4dc1-be2e-740e452fa100",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 64  31 33 64 32 66 35 2d 64  |d\":\"4d13d2f5-d|
              00000090  65 31 33 2d 34 64 63 31  2d 62 65 32 65 2d 37 34  |e13-4dc1-be2e-74|
              000000a0  30 65 34 35 32 66 61 31  30 30 5c 22 7d 22 3a 7b  |0e452fa100\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4r8ml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4r8ml",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438338,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438338,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4r8ml",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:32:18.751313 23 deployment.go:68] Pod "test-new-deployment-685b768f58-snpqv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-snpqv",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-1119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81a37b70-fb24-499d-9915-3894cac2ded2",
      ResourceVersion: (string) (len=5) "12664",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "4d13d2f5-de13-4dc1-be2e-740e452fa100",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 64  31 33 64 32 66 35 2d 64  |d\":\"4d13d2f5-d|
              00000090  65 31 33 2d 34 64 63 31  2d 62 65 32 65 2d 37 34  |e13-4dc1-be2e-74|
              000000a0  30 65 34 35 32 66 61 31  30 30 5c 22 7d 22 3a 7b  |0e452fa100\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 32 5c 22 7d 22 3a 7b  |.244.0.152\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9xv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9xv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883438337,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b176091edd9d44aafc7e25915219a5eb8b3254e8d159bd97a6f83ecb1856be9b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r9xv4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:32:18.753576 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1119" for this suite. @ 05/21/25 15:32:18.758
• [2.094 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 05/21/25 15:32:18.769
  I0521 15:32:18.769669 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:32:18.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:18.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:18.784
  STEP: creating service multi-endpoint-test in namespace services-4677 @ 05/21/25 15:32:18.786
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4677 to expose endpoints map[] @ 05/21/25 15:32:18.801
  I0521 15:32:18.804896      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:18.807747 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4677 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4677 @ 05/21/25 15:32:18.807
  E0521 15:32:19.170860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:20.170928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4677 to expose endpoints map[pod1:[100]] @ 05/21/25 15:32:20.82
  I0521 15:32:20.823944      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:20.826748 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4677 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4677 @ 05/21/25 15:32:20.826
  E0521 15:32:21.171201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:22.171252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4677 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/21/25 15:32:22.835
  I0521 15:32:22.839893      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:22.844464 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4677 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/21/25 15:32:22.844
  I0521 15:32:22.844513 23 resource.go:361] Creating new exec pod
  E0521 15:32:23.171810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:24.172008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:32:24.854033 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-4677 exec execpodm6pz5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0521 15:32:24.950621 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.111.4.36) 80 port [tcp/http] succeeded!\n"
  I0521 15:32:24.950685 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:32:24.950785 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-4677 exec execpodm6pz5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.4.36 80'
  I0521 15:32:25.044427 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.4.36 80\nConnection to 10.111.4.36 80 port [tcp/http] succeeded!\n"
  I0521 15:32:25.044463 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:32:25.044522 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-4677 exec execpodm6pz5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0521 15:32:25.138072 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.111.4.36) 81 port [tcp/*] succeeded!\n"
  I0521 15:32:25.138124 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:32:25.138194 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-4677 exec execpodm6pz5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.4.36 81'
  E0521 15:32:25.172535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:32:25.225581 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.4.36 81\nConnection to 10.111.4.36 81 port [tcp/*] succeeded!\n"
  I0521 15:32:25.225625 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4677 @ 05/21/25 15:32:25.225
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4677 to expose endpoints map[pod2:[101]] @ 05/21/25 15:32:25.234
  I0521 15:32:25.241311      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:25.244859 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4677 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4677 @ 05/21/25 15:32:25.244
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4677 to expose endpoints map[] @ 05/21/25 15:32:25.252
  I0521 15:32:25.256898      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:32:25.261969 23 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-4677 exposes endpoints map[]
  I0521 15:32:25.281174 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4677" for this suite. @ 05/21/25 15:32:25.292
• [6.528 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:215
  STEP: Creating a kubernetes client @ 05/21/25 15:32:25.297
  I0521 15:32:25.297502 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption @ 05/21/25 15:32:25.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:32:25.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:32:25.309
  I0521 15:32:25.321161 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0521 15:32:26.172863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:27.172947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:28.174004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:29.174422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:30.174508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:31.175056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:32.176107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:33.176198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:34.176491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:35.176668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:36.177674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:37.177870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:38.178851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:39.179031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:40.179419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:41.179603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:42.179909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:43.180216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:44.180821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:45.180985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:46.181477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:47.181655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:48.181764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:49.181949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:50.182786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:51.184045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:52.184148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:53.185103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:54.185205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:55.185379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:56.186123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:57.186289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:58.186798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:32:59.186884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:00.187524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:01.187638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:02.187703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:03.187898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:04.188291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:05.188410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:06.188842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:07.188931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:08.189726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:09.189912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:10.190308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:11.190426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:12.191181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:13.192096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:14.193164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:15.193340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:16.193957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:17.194143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:18.195483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:19.195656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:20.196528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:21.196656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:22.196949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:23.197049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:24.197904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:25.198010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:33:25.324473 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/21/25 15:33:25.326
  STEP: Adding a custom resource @ 05/21/25 15:33:25.326
  I0521 15:33:25.341321 23 preemption.go:256] Created pod: pod0-0-sched-preemption-low-priority
  I0521 15:33:25.344876 23 preemption.go:256] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 05/21/25 15:33:25.344
  I0521 15:33:25.359370 23 preemption.go:256] Created pod: pod1-0-sched-preemption-medium-priority
  I0521 15:33:25.365983 23 preemption.go:256] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/21/25 15:33:25.366
  E0521 15:33:26.198182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:27.198298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/21/25 15:33:27.377
  E0521 15:33:28.199279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:29.199387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/21/25 15:33:29.423
  STEP: Removing a custom resource @ 05/21/25 15:33:29.432
  I0521 15:33:29.441837 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2241" for this suite. @ 05/21/25 15:33:29.444
• [64.154 seconds]
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 05/21/25 15:33:29.45
  I0521 15:33:29.450988 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:33:29.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:33:29.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:33:29.46
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e9aba9e3-165e-4aec-8392-1dd5342e266e @ 05/21/25 15:33:29.464
  STEP: Creating the pod @ 05/21/25 15:33:29.47
  E0521 15:33:30.200299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:31.200936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-e9aba9e3-165e-4aec-8392-1dd5342e266e @ 05/21/25 15:33:31.488
  STEP: waiting to observe update in volume @ 05/21/25 15:33:31.491
  E0521 15:33:32.201927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:33.202080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:34.202361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:35.202573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:36.202976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:37.203174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:38.204234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:39.204336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:40.205043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:41.205907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:42.206414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:43.206684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:44.207396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:45.207590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:46.208293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:47.209007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:48.208952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:49.209120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:50.209834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:51.209919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:52.210050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:53.210132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:54.210723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:55.210899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:56.212027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:57.212105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:58.212820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:33:59.213009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:00.213165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:01.213341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:02.213507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:03.213750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:04.213874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:05.214173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:06.214923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:07.215119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:08.215592      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:09.215794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:10.216251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:11.216371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:12.216567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:13.216850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:14.217416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:15.217853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:16.218679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:17.218865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:18.219001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:19.219190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:20.219937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:21.220037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:22.220823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:23.221019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:24.221963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:25.222153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:26.222951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:27.223155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:28.223325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:29.223522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:30.223537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:31.223714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:32.224632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:33.224817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:34.225699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:35.225891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:36.226753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:37.226921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:38.227897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:39.228089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:40.228800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:41.228891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:42.228919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:43.229021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:44.229285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:45.229375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:46.229473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:47.229671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:48.230218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:49.230394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:50.230818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:51.231570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:34:51.742920 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-945" for this suite. @ 05/21/25 15:34:51.745
• [82.298 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/21/25 15:34:51.749
  I0521 15:34:51.749279 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:34:51.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:34:51.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:34:51.761
  STEP: Creating secret with name secret-test-b8fa62ac-277f-4787-b5fa-b6b6b9810187 @ 05/21/25 15:34:51.763
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:34:51.766
  E0521 15:34:52.232921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:53.233021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:34:53.777
  I0521 15:34:53.779358 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-ca10c063-ff5a-4de2-bc51-f65f4af3b22d container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:34:53.783
  I0521 15:34:53.794699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-216" for this suite. @ 05/21/25 15:34:53.797
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 05/21/25 15:34:53.802
  I0521 15:34:53.802893 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:34:53.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:34:53.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:34:53.814
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/21/25 15:34:53.816
  E0521 15:34:54.233547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:55.233661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:34:55.827
  I0521 15:34:55.829451 23 output.go:207] Trying to get logs from node worker-0 pod pod-52a7d643-a5ea-49e9-890d-d64c87d2f15d container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:34:55.833
  I0521 15:34:55.847074 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4565" for this suite. @ 05/21/25 15:34:55.849
• [2.050 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/21/25 15:34:55.853
  I0521 15:34:55.853120 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 15:34:55.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:34:55.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:34:55.862
  STEP: Creating a pod to test env composition @ 05/21/25 15:34:55.864
  E0521 15:34:56.233920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:57.234055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:34:57.874
  I0521 15:34:57.876383 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-916608b6-20f6-413a-af43-26d310dd44bf container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:34:57.881
  I0521 15:34:57.892260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1629" for this suite. @ 05/21/25 15:34:57.894
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 05/21/25 15:34:57.9
  I0521 15:34:57.900906 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:34:57.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:34:57.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:34:57.91
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/21/25 15:34:57.912
  E0521 15:34:58.235033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:34:59.235245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:34:59.924
  I0521 15:34:59.926063 23 output.go:207] Trying to get logs from node worker-0 pod pod-db73f103-7ee3-4964-b756-86890ab5b084 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:34:59.93
  I0521 15:34:59.940241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2347" for this suite. @ 05/21/25 15:34:59.942
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 05/21/25 15:34:59.946
  I0521 15:34:59.946701 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:34:59.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:34:59.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:34:59.958
  STEP: creating a Pod with a static label @ 05/21/25 15:34:59.963
  STEP: watching for Pod to be ready @ 05/21/25 15:34:59.968
  I0521 15:34:59.969497 23 pods.go:947] observed Pod pod-test in namespace pods-8266 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0521 15:34:59.971845 23 pods.go:947] observed Pod pod-test in namespace pods-8266 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC  }]
  I0521 15:34:59.983257 23 pods.go:947] observed Pod pod-test in namespace pods-8266 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC  }]
  E0521 15:35:00.235431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:00.608063 23 pods.go:950] Found Pod pod-test in namespace pods-8266 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:35:00 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:35:00 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:35:00 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 15:34:59 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/21/25 15:35:00.609
  STEP: getting the Pod and ensuring that it's patched @ 05/21/25 15:35:00.618
  STEP: replacing the Pod's status Ready condition to False @ 05/21/25 15:35:00.62
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/21/25 15:35:00.626
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/21/25 15:35:00.626
  STEP: watching for the Pod to be deleted @ 05/21/25 15:35:00.634
  I0521 15:35:00.635610 23 pods.go:1060] observed event type MODIFIED
  E0521 15:35:01.236316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:02.236620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:02.611581 23 pods.go:1060] observed event type MODIFIED
  I0521 15:35:02.739205 23 pods.go:1060] observed event type MODIFIED
  E0521 15:35:03.236746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:03.619266 23 pods.go:1060] observed event type MODIFIED
  I0521 15:35:03.625952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8266" for this suite. @ 05/21/25 15:35:03.628
• [3.685 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 05/21/25 15:35:03.631
  I0521 15:35:03.632018 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:35:03.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:03.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:03.644
  STEP: validating api versions @ 05/21/25 15:35:03.646
  I0521 15:35:03.646418 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-2013 api-versions'
  I0521 15:35:03.702357 23 builder.go:146] stderr: ""
  I0521 15:35:03.702417 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautopilot.k0sproject.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\netcd.k0sproject.io/v1beta1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nhelm.k0sproject.io/v1beta1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0521 15:35:03.702563 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2013" for this suite. @ 05/21/25 15:35:03.729
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 05/21/25 15:35:03.734
  I0521 15:35:03.734025 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 15:35:03.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:03.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:03.743
  STEP: Creating service test in namespace statefulset-3414 @ 05/21/25 15:35:03.745
  STEP: Creating statefulset ss in namespace statefulset-3414 @ 05/21/25 15:35:03.748
  I0521 15:35:03.757484 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0521 15:35:04.236786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:05.237011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:06.237556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:07.237667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:08.237838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:09.238053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:10.238282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:11.238465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:12.238652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:13.238850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:13.759175 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/21/25 15:35:13.762
  STEP: updating a scale subresource @ 05/21/25 15:35:13.764
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/21/25 15:35:13.767
  STEP: Patch a scale subresource @ 05/21/25 15:35:13.769
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/21/25 15:35:13.776
  I0521 15:35:13.781367 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3414
  I0521 15:35:13.783764 23 rest.go:153] Scaling statefulset ss to 0
  E0521 15:35:14.239479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:15.239554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:16.239953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:17.240929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:18.241882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:19.242928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:20.243071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:21.243265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:22.243962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:23.244012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:23.795068 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 15:35:23.796823 23 rest.go:91] Deleting statefulset ss
  I0521 15:35:23.804476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3414" for this suite. @ 05/21/25 15:35:23.806
• [20.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 05/21/25 15:35:23.812
  I0521 15:35:23.812083 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename runtimeclass @ 05/21/25 15:35:23.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:23.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:23.82
  E0521 15:35:24.244391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:25.244591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:25.849957 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6766" for this suite. @ 05/21/25 15:35:25.855
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 05/21/25 15:35:25.861
  I0521 15:35:25.861501 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:35:25.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:25.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:25.877
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 05/21/25 15:35:25.881
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 05/21/25 15:35:25.888
  E0521 15:35:26.245348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:27.245757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:28.246702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:29.246871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 05/21/25 15:35:29.898
  STEP: Verifying that the job status to ensure correct final state @ 05/21/25 15:35:29.901
  I0521 15:35:29.903520 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5109" for this suite. @ 05/21/25 15:35:29.906
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 05/21/25 15:35:29.913
  I0521 15:35:29.913927 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replication-controller @ 05/21/25 15:35:29.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:29.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:29.926
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/21/25 15:35:29.928
  E0521 15:35:30.247854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:31.248930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/21/25 15:35:31.941
  STEP: Then the orphan pod is adopted @ 05/21/25 15:35:31.945
  E0521 15:35:32.249921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:32.950231 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-691" for this suite. @ 05/21/25 15:35:32.952
• [3.043 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 05/21/25 15:35:32.956
  I0521 15:35:32.957018 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:35:32.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:32.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:32.972
  I0521 15:35:32.997664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1743" for this suite. @ 05/21/25 15:35:33.052
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/21/25 15:35:33.057
  I0521 15:35:33.057459 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:35:33.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:33.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:33.065
  STEP: Creating secret with name projected-secret-test-33c7ca24-278e-44a5-894e-7296814ec0ac @ 05/21/25 15:35:33.068
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:35:33.071
  E0521 15:35:33.250270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:34.250452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:35:35.08
  I0521 15:35:35.082576 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-f4a79fd7-2bc5-40cb-8d34-bdd16b36d5c5 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:35:35.09
  I0521 15:35:35.102108 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9887" for this suite. @ 05/21/25 15:35:35.105
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 05/21/25 15:35:35.112
  I0521 15:35:35.112155 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-webhook @ 05/21/25 15:35:35.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:35.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:35.122
  STEP: Setting up server cert @ 05/21/25 15:35:35.124
  E0521 15:35:35.251226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/21/25 15:35:35.875
  STEP: Deploying the custom resource conversion webhook pod @ 05/21/25 15:35:35.879
  STEP: Wait for the deployment to be ready @ 05/21/25 15:35:35.89
  I0521 15:35:35.898147 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0521 15:35:36.251893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:37.252063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:35:37.905
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:35:37.92
  E0521 15:35:38.252813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:38.920448 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0521 15:35:38.922855 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:35:39.253452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:40.254262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:41.254328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/21/25 15:35:41.47
  STEP: v2 custom resource should be converted @ 05/21/25 15:35:41.474
  I0521 15:35:42.017149 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7728" for this suite. @ 05/21/25 15:35:42.019
• [6.914 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 05/21/25 15:35:42.026
  I0521 15:35:42.026469 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename cronjob @ 05/21/25 15:35:42.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:42.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:42.039
  STEP: Creating a cronjob @ 05/21/25 15:35:42.041
  STEP: creating @ 05/21/25 15:35:42.041
  STEP: getting @ 05/21/25 15:35:42.045
  STEP: listing @ 05/21/25 15:35:42.047
  STEP: watching @ 05/21/25 15:35:42.048
  I0521 15:35:42.048798 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 05/21/25 15:35:42.049
  STEP: cluster-wide watching @ 05/21/25 15:35:42.052
  I0521 15:35:42.052307 23 cronjob.go:407] starting watch
  STEP: patching @ 05/21/25 15:35:42.053
  STEP: updating @ 05/21/25 15:35:42.059
  I0521 15:35:42.064024 23 cronjob.go:431] waiting for watch events with expected annotations
  I0521 15:35:42.064048 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 05/21/25 15:35:42.064
  STEP: updating /status @ 05/21/25 15:35:42.067
  STEP: get /status @ 05/21/25 15:35:42.071
  STEP: deleting @ 05/21/25 15:35:42.073
  STEP: deleting a collection @ 05/21/25 15:35:42.083
  I0521 15:35:42.089312 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6695" for this suite. @ 05/21/25 15:35:42.12
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/21/25 15:35:42.124
  I0521 15:35:42.124510 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 15:35:42.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:42.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:42.135
  E0521 15:35:42.255313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:43.255971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:44.153145 23 delete.go:62] Deleting pod "var-expansion-7f3e9d21-185c-4e87-b2ee-0378fea65501" in namespace "var-expansion-5247"
  I0521 15:35:44.164215 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-7f3e9d21-185c-4e87-b2ee-0378fea65501" to be fully deleted
  E0521 15:35:44.256171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:45.256352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:46.173848 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5247" for this suite. @ 05/21/25 15:35:46.176
• [4.056 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/21/25 15:35:46.18
  I0521 15:35:46.180825 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sysctl @ 05/21/25 15:35:46.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:46.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:46.193
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/21/25 15:35:46.196
  STEP: Watching for error events or started pod @ 05/21/25 15:35:46.202
  E0521 15:35:46.257319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:47.257427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/21/25 15:35:48.205
  E0521 15:35:48.258209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:49.258339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 05/21/25 15:35:50.211
  STEP: Getting logs from the pod @ 05/21/25 15:35:50.211
  STEP: Checking that the sysctl is actually updated @ 05/21/25 15:35:50.217
  I0521 15:35:50.217628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1974" for this suite. @ 05/21/25 15:35:50.22
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/21/25 15:35:50.224
  I0521 15:35:50.224526 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubelet-test @ 05/21/25 15:35:50.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:50.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:50.237
  E0521 15:35:50.258373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:51.258515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:52.258631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:53.258832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:54.251234 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1197" for this suite. @ 05/21/25 15:35:54.253
• [4.033 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/21/25 15:35:54.257
  I0521 15:35:54.257677 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/21/25 15:35:54.258
  E0521 15:35:54.259580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:54.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:54.268
  STEP: creating a policy with variables @ 05/21/25 15:35:54.274
  STEP: waiting until the marker is denied @ 05/21/25 15:35:54.292
  STEP: testing a replicated Deployment to be allowed @ 05/21/25 15:35:54.498
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/21/25 15:35:54.508
  I0521 15:35:54.549681 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-483" for this suite. @ 05/21/25 15:35:54.555
• [0.305 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/21/25 15:35:54.563
  I0521 15:35:54.563266 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-runtime @ 05/21/25 15:35:54.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:54.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:54.576
  STEP: create the container @ 05/21/25 15:35:54.578
  I0521 15:35:54.583680      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 05/21/25 15:35:54.583
  E0521 15:35:55.259993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:56.260348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:35:57.261198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/21/25 15:35:57.595
  STEP: the container should be terminated @ 05/21/25 15:35:57.597
  STEP: the termination message should be set @ 05/21/25 15:35:57.597
  I0521 15:35:57.597487 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/21/25 15:35:57.597
  I0521 15:35:57.606786 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8446" for this suite. @ 05/21/25 15:35:57.609
• [3.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/21/25 15:35:57.614
  I0521 15:35:57.614772 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename apf @ 05/21/25 15:35:57.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:57.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:57.624
  STEP: getting /apis @ 05/21/25 15:35:57.627
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/21/25 15:35:57.63
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/21/25 15:35:57.631
  STEP: creating @ 05/21/25 15:35:57.632
  STEP: getting @ 05/21/25 15:35:57.643
  STEP: listing @ 05/21/25 15:35:57.644
  STEP: watching @ 05/21/25 15:35:57.646
  I0521 15:35:57.646671 23 flowcontrol.go:620] starting watch
  STEP: patching @ 05/21/25 15:35:57.647
  STEP: updating @ 05/21/25 15:35:57.651
  I0521 15:35:57.656228 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/21/25 15:35:57.656
  STEP: patching /status @ 05/21/25 15:35:57.66
  STEP: updating /status @ 05/21/25 15:35:57.666
  STEP: deleting @ 05/21/25 15:35:57.671
  STEP: deleting a collection @ 05/21/25 15:35:57.677
  I0521 15:35:57.688269 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9103" for this suite. @ 05/21/25 15:35:57.71
• [0.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/21/25 15:35:57.714
  I0521 15:35:57.714861 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename events @ 05/21/25 15:35:57.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:57.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:57.726
  STEP: Create set of events @ 05/21/25 15:35:57.728
  I0521 15:35:57.732047 23 core_events.go:198] created test-event-1
  I0521 15:35:57.735152 23 core_events.go:198] created test-event-2
  I0521 15:35:57.740176 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/21/25 15:35:57.74
  STEP: delete collection of events @ 05/21/25 15:35:57.741
  I0521 15:35:57.741988 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/21/25 15:35:57.751
  I0521 15:35:57.751438 23 core_events.go:230] requesting list of events to confirm quantity
  I0521 15:35:57.753197 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2772" for this suite. @ 05/21/25 15:35:57.81
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 05/21/25 15:35:57.815
  I0521 15:35:57.815224 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replication-controller @ 05/21/25 15:35:57.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:57.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:57.825
  STEP: Creating ReplicationController "e2e-rc-sbw8f" @ 05/21/25 15:35:57.827
  I0521 15:35:57.831050 23 rc.go:795] Get Replication Controller "e2e-rc-sbw8f" to confirm replicas
  E0521 15:35:58.261395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:58.832010 23 rc.go:795] Get Replication Controller "e2e-rc-sbw8f" to confirm replicas
  I0521 15:35:58.834437 23 rc.go:804] Found 1 replicas for "e2e-rc-sbw8f" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-sbw8f" @ 05/21/25 15:35:58.834
  STEP: Updating a scale subresource @ 05/21/25 15:35:58.836
  STEP: Verifying replicas where modified for replication controller "e2e-rc-sbw8f" @ 05/21/25 15:35:58.84
  I0521 15:35:58.840335 23 rc.go:795] Get Replication Controller "e2e-rc-sbw8f" to confirm replicas
  E0521 15:35:59.261521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:35:59.841120 23 rc.go:795] Get Replication Controller "e2e-rc-sbw8f" to confirm replicas
  I0521 15:35:59.843152 23 rc.go:804] Found 2 replicas for "e2e-rc-sbw8f" replication controller
  I0521 15:35:59.843302 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4310" for this suite. @ 05/21/25 15:35:59.845
• [2.034 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 05/21/25 15:35:59.849
  I0521 15:35:59.849486 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:35:59.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:35:59.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:35:59.859
  STEP: Creating the pod @ 05/21/25 15:35:59.861
  E0521 15:36:00.261581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:01.261776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:02.262114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:02.389388 23 pod_client.go:173] Successfully updated pod "annotationupdatee7a7c977-787e-4bd7-8bbd-4cc820365836"
  E0521 15:36:03.262951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:04.263116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:04.399589 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8284" for this suite. @ 05/21/25 15:36:04.404
• [4.560 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/21/25 15:36:04.409
  I0521 15:36:04.409394 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubelet-test @ 05/21/25 15:36:04.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:04.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:04.421
  E0521 15:36:05.264138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:06.264245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:06.447478 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9050" for this suite. @ 05/21/25 15:36:06.449
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 05/21/25 15:36:06.456
  I0521 15:36:06.456928 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:36:06.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:06.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:06.468
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:36:06.47
  E0521 15:36:07.264373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:08.264553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:09.264644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:10.264862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:36:10.486
  I0521 15:36:10.488413 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-5c6f41fd-76c6-44d4-a85b-38df6795e4d3 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:36:10.492
  I0521 15:36:10.503575 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4043" for this suite. @ 05/21/25 15:36:10.505
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/21/25 15:36:10.51
  I0521 15:36:10.510111 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/21/25 15:36:10.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:10.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:10.519
  STEP: fetching the /apis discovery document @ 05/21/25 15:36:10.522
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/21/25 15:36:10.523
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/21/25 15:36:10.523
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/21/25 15:36:10.523
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/21/25 15:36:10.524
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/21/25 15:36:10.524
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/21/25 15:36:10.524
  I0521 15:36:10.525043 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7272" for this suite. @ 05/21/25 15:36:10.606
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 05/21/25 15:36:10.611
  I0521 15:36:10.611067 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:36:10.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:10.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:10.623
  STEP: Create a pod @ 05/21/25 15:36:10.626
  E0521 15:36:11.265206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:12.265394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/21/25 15:36:12.636
  I0521 15:36:12.643075 23 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0521 15:36:12.643397 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4257" for this suite. @ 05/21/25 15:36:12.645
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 05/21/25 15:36:12.65
  I0521 15:36:12.650228 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename runtimeclass @ 05/21/25 15:36:12.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:12.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:12.663
  STEP: getting /apis @ 05/21/25 15:36:12.665
  STEP: getting /apis/node.k8s.io @ 05/21/25 15:36:12.668
  STEP: getting /apis/node.k8s.io/v1 @ 05/21/25 15:36:12.669
  STEP: creating @ 05/21/25 15:36:12.67
  STEP: watching @ 05/21/25 15:36:12.679
  I0521 15:36:12.679957 23 runtimeclass.go:278] starting watch
  STEP: getting @ 05/21/25 15:36:12.685
  STEP: listing @ 05/21/25 15:36:12.687
  STEP: patching @ 05/21/25 15:36:12.689
  STEP: updating @ 05/21/25 15:36:12.692
  I0521 15:36:12.696084 23 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 05/21/25 15:36:12.696
  STEP: deleting a collection @ 05/21/25 15:36:12.702
  I0521 15:36:12.710422 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-979" for this suite. @ 05/21/25 15:36:12.747
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 05/21/25 15:36:12.751
  I0521 15:36:12.751665 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/21/25 15:36:12.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:12.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:12.763
  E0521 15:36:13.265788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:14.265847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 05/21/25 15:36:14.786
  STEP: Cleaning up the configmap @ 05/21/25 15:36:14.789
  STEP: Cleaning up the pod @ 05/21/25 15:36:14.793
  I0521 15:36:14.802346 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5125" for this suite. @ 05/21/25 15:36:14.804
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/21/25 15:36:14.81
  I0521 15:36:14.810359 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/21/25 15:36:14.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:14.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:14.82
  STEP: create the container to handle the HTTPGet hook request. @ 05/21/25 15:36:14.905
  E0521 15:36:15.265959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:16.266166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/21/25 15:36:16.919
  E0521 15:36:17.266241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:18.266346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/21/25 15:36:18.933
  E0521 15:36:19.266847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:20.266913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/21/25 15:36:20.943
  I0521 15:36:20.948445 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2931" for this suite. @ 05/21/25 15:36:20.95
• [6.144 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 05/21/25 15:36:20.954
  I0521 15:36:20.954672 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename namespaces @ 05/21/25 15:36:20.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:20.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:20.967
  STEP: Creating namespace "e2e-ns-kn2n7" @ 05/21/25 15:36:20.969
  I0521 15:36:20.975746 23 namespace.go:412] Namespace "e2e-ns-kn2n7-5707" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kn2n7-5707" @ 05/21/25 15:36:20.975
  I0521 15:36:20.982427 23 namespace.go:435] Namespace "e2e-ns-kn2n7-5707" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kn2n7-5707" @ 05/21/25 15:36:20.982
  I0521 15:36:20.987952 23 namespace.go:464] Namespace "e2e-ns-kn2n7-5707" has []v1.FinalizerName{"kubernetes"}
  I0521 15:36:20.988045 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6438" for this suite. @ 05/21/25 15:36:21.052
  STEP: Destroying namespace "e2e-ns-kn2n7-5707" for this suite. @ 05/21/25 15:36:21.058
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 05/21/25 15:36:21.063
  I0521 15:36:21.063703 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:36:21.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:21.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:21.073
  STEP: Creating a pod to test downward api env vars @ 05/21/25 15:36:21.076
  E0521 15:36:21.267698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:22.267804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:23.268762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:24.268964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:36:25.089
  I0521 15:36:25.090932 23 output.go:207] Trying to get logs from node worker-1 pod downward-api-7301c023-f9ba-46f1-a5c5-cc2ab969e471 container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:36:25.095
  I0521 15:36:25.108008 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8211" for this suite. @ 05/21/25 15:36:25.11
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 05/21/25 15:36:25.114
  I0521 15:36:25.114442 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:36:25.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:25.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:25.126
  I0521 15:36:25.130047 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6084" for this suite. @ 05/21/25 15:36:25.211
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/21/25 15:36:25.215
  I0521 15:36:25.215835 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:36:25.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:25.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:25.227
  E0521 15:36:25.269010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 05/21/25 15:36:25.315
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/21/25 15:36:25.32
  I0521 15:36:25.414116 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:36:25.414152 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:36:26.269973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:26.326468 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:36:26.326500 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:36:27.270073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:27.326387 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:36:27.326419 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/21/25 15:36:27.328
  I0521 15:36:27.427554 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:36:27.427587 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:36:28.270653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:28.342354 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:36:28.342394 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:36:29.270783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:29.341886 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:36:29.341916 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/21/25 15:36:29.343
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8258, will wait for the garbage collector to delete the pods @ 05/21/25 15:36:29.343
  I0521 15:36:29.403060 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.291453ms
  I0521 15:36:29.504120 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.055675ms
  E0521 15:36:30.271606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:30.507187 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:36:30.507221 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0521 15:36:30.509347 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14515"},"items":null}

  I0521 15:36:30.511070 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14515"},"items":null}

  I0521 15:36:30.516917 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8258" for this suite. @ 05/21/25 15:36:30.518
• [5.307 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 05/21/25 15:36:30.522
  I0521 15:36:30.522987 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:36:30.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:30.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:30.534
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:36:30.537
  E0521 15:36:31.272189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:32.272387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:33.273174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:34.273257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:36:34.549
  I0521 15:36:34.551815 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-3eb31749-572f-4a84-9c61-8abec984f31f container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:36:34.555
  I0521 15:36:34.567607 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2815" for this suite. @ 05/21/25 15:36:34.57
• [4.051 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/21/25 15:36:34.573
  I0521 15:36:34.573992 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 15:36:34.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:34.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:34.585
  STEP: Creating a pod to test substitution in container's command @ 05/21/25 15:36:34.587
  E0521 15:36:35.273372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:36.273971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:37.274143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:38.274141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:36:38.601
  I0521 15:36:38.603067 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-f9174870-65f7-4e54-939a-d7b098648d6d container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:36:38.607
  I0521 15:36:38.619952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3367" for this suite. @ 05/21/25 15:36:38.622
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/21/25 15:36:38.626
  I0521 15:36:38.626434 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svc-latency @ 05/21/25 15:36:38.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:38.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:38.637
  I0521 15:36:38.640378 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  I0521 15:36:38.648149 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 15:36:39.274789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:40.274992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:40.651928      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:36:40.652955      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:36:40.765908 23 service_latency.go:351] Created: latency-svc-f486n
  I0521 15:36:40.771580 23 service_latency.go:358] Got endpoints: latency-svc-f486n [20.445319ms]
  I0521 15:36:40.791152 23 service_latency.go:351] Created: latency-svc-bwtxs
  I0521 15:36:40.795279 23 service_latency.go:358] Got endpoints: latency-svc-bwtxs [23.559528ms]
  I0521 15:36:40.806474 23 service_latency.go:351] Created: latency-svc-zndcl
  I0521 15:36:40.810652 23 service_latency.go:358] Got endpoints: latency-svc-zndcl [38.772346ms]
  I0521 15:36:40.816021 23 service_latency.go:351] Created: latency-svc-rmflz
  I0521 15:36:40.819904 23 service_latency.go:358] Got endpoints: latency-svc-rmflz [47.651191ms]
  I0521 15:36:40.824645 23 service_latency.go:351] Created: latency-svc-bh4tw
  I0521 15:36:40.833836 23 service_latency.go:358] Got endpoints: latency-svc-bh4tw [61.869701ms]
  I0521 15:36:40.835567 23 service_latency.go:351] Created: latency-svc-qwv4m
  I0521 15:36:40.839710 23 service_latency.go:358] Got endpoints: latency-svc-qwv4m [67.68381ms]
  I0521 15:36:40.848655 23 service_latency.go:351] Created: latency-svc-qsfmv
  I0521 15:36:40.857369 23 service_latency.go:358] Got endpoints: latency-svc-qsfmv [85.185665ms]
  I0521 15:36:40.858827 23 service_latency.go:351] Created: latency-svc-mcbkv
  I0521 15:36:40.866288 23 service_latency.go:358] Got endpoints: latency-svc-mcbkv [93.571145ms]
  I0521 15:36:40.870780 23 service_latency.go:351] Created: latency-svc-lvf2t
  I0521 15:36:40.879749 23 service_latency.go:358] Got endpoints: latency-svc-lvf2t [107.135265ms]
  I0521 15:36:40.883156 23 service_latency.go:351] Created: latency-svc-z97dp
  I0521 15:36:40.898471 23 service_latency.go:358] Got endpoints: latency-svc-z97dp [126.15083ms]
  I0521 15:36:40.899292 23 service_latency.go:351] Created: latency-svc-ktt5z
  I0521 15:36:40.905015 23 service_latency.go:351] Created: latency-svc-vfmft
  I0521 15:36:40.908562 23 service_latency.go:358] Got endpoints: latency-svc-ktt5z [136.120557ms]
  I0521 15:36:40.912129 23 service_latency.go:358] Got endpoints: latency-svc-vfmft [139.583292ms]
  I0521 15:36:40.915921 23 service_latency.go:351] Created: latency-svc-bmvcl
  I0521 15:36:40.921725 23 service_latency.go:358] Got endpoints: latency-svc-bmvcl [149.622577ms]
  I0521 15:36:40.926036 23 service_latency.go:351] Created: latency-svc-5d48l
  I0521 15:36:40.930772 23 service_latency.go:358] Got endpoints: latency-svc-5d48l [158.1441ms]
  I0521 15:36:40.936870 23 service_latency.go:351] Created: latency-svc-hlfct
  I0521 15:36:40.942616 23 service_latency.go:358] Got endpoints: latency-svc-hlfct [170.231125ms]
  I0521 15:36:40.953158 23 service_latency.go:351] Created: latency-svc-cvnzz
  I0521 15:36:40.956546 23 service_latency.go:358] Got endpoints: latency-svc-cvnzz [184.335189ms]
  I0521 15:36:40.961833 23 service_latency.go:351] Created: latency-svc-nthrx
  I0521 15:36:40.968394 23 service_latency.go:358] Got endpoints: latency-svc-nthrx [173.078223ms]
  I0521 15:36:40.973614 23 service_latency.go:351] Created: latency-svc-wnslg
  I0521 15:36:40.982808 23 service_latency.go:358] Got endpoints: latency-svc-wnslg [172.120901ms]
  I0521 15:36:40.984825 23 service_latency.go:351] Created: latency-svc-xm892
  I0521 15:36:40.994140 23 service_latency.go:358] Got endpoints: latency-svc-xm892 [174.20307ms]
  I0521 15:36:41.005679 23 service_latency.go:351] Created: latency-svc-zfx2f
  I0521 15:36:41.007983 23 service_latency.go:351] Created: latency-svc-lkv96
  I0521 15:36:41.016298 23 service_latency.go:358] Got endpoints: latency-svc-zfx2f [182.432062ms]
  I0521 15:36:41.016343 23 service_latency.go:358] Got endpoints: latency-svc-lkv96 [176.521019ms]
  I0521 15:36:41.020252 23 service_latency.go:351] Created: latency-svc-sctbw
  I0521 15:36:41.026118 23 service_latency.go:358] Got endpoints: latency-svc-sctbw [168.717738ms]
  I0521 15:36:41.030603 23 service_latency.go:351] Created: latency-svc-pztgm
  I0521 15:36:41.035934 23 service_latency.go:358] Got endpoints: latency-svc-pztgm [169.612588ms]
  I0521 15:36:41.040528 23 service_latency.go:351] Created: latency-svc-j8mvh
  I0521 15:36:41.046753 23 service_latency.go:358] Got endpoints: latency-svc-j8mvh [166.873535ms]
  I0521 15:36:41.055244 23 service_latency.go:351] Created: latency-svc-2ghrl
  I0521 15:36:41.066894 23 service_latency.go:358] Got endpoints: latency-svc-2ghrl [168.385553ms]
  I0521 15:36:41.068285 23 service_latency.go:351] Created: latency-svc-9xfmz
  I0521 15:36:41.072735 23 service_latency.go:351] Created: latency-svc-v4v84
  I0521 15:36:41.074269 23 service_latency.go:358] Got endpoints: latency-svc-9xfmz [165.66591ms]
  I0521 15:36:41.081095 23 service_latency.go:358] Got endpoints: latency-svc-v4v84 [168.921635ms]
  I0521 15:36:41.086003 23 service_latency.go:351] Created: latency-svc-dx4sn
  I0521 15:36:41.092873 23 service_latency.go:358] Got endpoints: latency-svc-dx4sn [171.09757ms]
  I0521 15:36:41.097153 23 service_latency.go:351] Created: latency-svc-vrrtx
  I0521 15:36:41.104173 23 service_latency.go:358] Got endpoints: latency-svc-vrrtx [173.369953ms]
  I0521 15:36:41.117790 23 service_latency.go:351] Created: latency-svc-mf7jv
  I0521 15:36:41.128217 23 service_latency.go:351] Created: latency-svc-8zwwt
  I0521 15:36:41.128867 23 service_latency.go:358] Got endpoints: latency-svc-mf7jv [186.189768ms]
  I0521 15:36:41.137647 23 service_latency.go:351] Created: latency-svc-hmfsf
  I0521 15:36:41.138435 23 service_latency.go:358] Got endpoints: latency-svc-8zwwt [181.863937ms]
  I0521 15:36:41.143535 23 service_latency.go:351] Created: latency-svc-w2j5b
  I0521 15:36:41.150594 23 service_latency.go:358] Got endpoints: latency-svc-hmfsf [182.174459ms]
  I0521 15:36:41.150658 23 service_latency.go:358] Got endpoints: latency-svc-w2j5b [167.809353ms]
  I0521 15:36:41.154903 23 service_latency.go:351] Created: latency-svc-gj7xw
  I0521 15:36:41.161890 23 service_latency.go:358] Got endpoints: latency-svc-gj7xw [167.716594ms]
  I0521 15:36:41.166172 23 service_latency.go:351] Created: latency-svc-jxbpt
  I0521 15:36:41.173816 23 service_latency.go:358] Got endpoints: latency-svc-jxbpt [157.435138ms]
  I0521 15:36:41.183819 23 service_latency.go:351] Created: latency-svc-sz6rw
  I0521 15:36:41.194048 23 service_latency.go:358] Got endpoints: latency-svc-sz6rw [177.687036ms]
  I0521 15:36:41.199078 23 service_latency.go:351] Created: latency-svc-r5j5h
  I0521 15:36:41.206405 23 service_latency.go:358] Got endpoints: latency-svc-r5j5h [180.208593ms]
  I0521 15:36:41.238669 23 service_latency.go:351] Created: latency-svc-6b484
  I0521 15:36:41.249486 23 service_latency.go:351] Created: latency-svc-f66wg
  I0521 15:36:41.251744 23 service_latency.go:358] Got endpoints: latency-svc-6b484 [215.766177ms]
  I0521 15:36:41.260721 23 service_latency.go:358] Got endpoints: latency-svc-f66wg [213.862176ms]
  I0521 15:36:41.268545 23 service_latency.go:351] Created: latency-svc-95vs2
  E0521 15:36:41.275763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:41.277799 23 service_latency.go:358] Got endpoints: latency-svc-95vs2 [210.877242ms]
  I0521 15:36:41.281610 23 service_latency.go:351] Created: latency-svc-9rj57
  I0521 15:36:41.289089 23 service_latency.go:351] Created: latency-svc-ndsnq
  I0521 15:36:41.297565 23 service_latency.go:351] Created: latency-svc-wq8hj
  I0521 15:36:41.305043 23 service_latency.go:351] Created: latency-svc-j7f65
  I0521 15:36:41.314956 23 service_latency.go:351] Created: latency-svc-8p4jd
  I0521 15:36:41.324661 23 service_latency.go:358] Got endpoints: latency-svc-9rj57 [250.35871ms]
  I0521 15:36:41.325009 23 service_latency.go:351] Created: latency-svc-fdf8p
  I0521 15:36:41.338592 23 service_latency.go:351] Created: latency-svc-dvstb
  I0521 15:36:41.350522 23 service_latency.go:351] Created: latency-svc-s9f2l
  I0521 15:36:41.360963 23 service_latency.go:351] Created: latency-svc-2khbf
  I0521 15:36:41.369848 23 service_latency.go:351] Created: latency-svc-wcrl9
  I0521 15:36:41.371162 23 service_latency.go:358] Got endpoints: latency-svc-ndsnq [290.008383ms]
  I0521 15:36:41.381983 23 service_latency.go:351] Created: latency-svc-66xxs
  I0521 15:36:41.389376 23 service_latency.go:351] Created: latency-svc-n6lz8
  I0521 15:36:41.397552 23 service_latency.go:351] Created: latency-svc-84msv
  I0521 15:36:41.407984 23 service_latency.go:351] Created: latency-svc-6z9l8
  I0521 15:36:41.414201 23 service_latency.go:351] Created: latency-svc-xcd7k
  I0521 15:36:41.424076 23 service_latency.go:358] Got endpoints: latency-svc-wq8hj [331.174627ms]
  I0521 15:36:41.424233 23 service_latency.go:351] Created: latency-svc-qnmxq
  I0521 15:36:41.428397 23 service_latency.go:351] Created: latency-svc-d48qm
  I0521 15:36:41.447503 23 service_latency.go:351] Created: latency-svc-5q99l
  I0521 15:36:41.470319 23 service_latency.go:358] Got endpoints: latency-svc-j7f65 [366.104683ms]
  I0521 15:36:41.481993 23 service_latency.go:351] Created: latency-svc-jvh7k
  I0521 15:36:41.521641 23 service_latency.go:358] Got endpoints: latency-svc-8p4jd [392.736774ms]
  I0521 15:36:41.535742 23 service_latency.go:351] Created: latency-svc-fv9bw
  I0521 15:36:41.571336 23 service_latency.go:358] Got endpoints: latency-svc-fdf8p [432.874719ms]
  I0521 15:36:41.586188 23 service_latency.go:351] Created: latency-svc-wn9js
  I0521 15:36:41.620788 23 service_latency.go:358] Got endpoints: latency-svc-dvstb [470.134333ms]
  I0521 15:36:41.635951 23 service_latency.go:351] Created: latency-svc-9c7wf
  I0521 15:36:41.672071 23 service_latency.go:358] Got endpoints: latency-svc-s9f2l [521.370381ms]
  I0521 15:36:41.686206 23 service_latency.go:351] Created: latency-svc-njwt4
  I0521 15:36:41.722636 23 service_latency.go:358] Got endpoints: latency-svc-2khbf [560.717501ms]
  I0521 15:36:41.736965 23 service_latency.go:351] Created: latency-svc-8cr5n
  I0521 15:36:41.773194 23 service_latency.go:358] Got endpoints: latency-svc-wcrl9 [599.343256ms]
  I0521 15:36:41.789008 23 service_latency.go:351] Created: latency-svc-xk2tv
  I0521 15:36:41.820482 23 service_latency.go:358] Got endpoints: latency-svc-66xxs [626.404432ms]
  I0521 15:36:41.837028 23 service_latency.go:351] Created: latency-svc-957xd
  I0521 15:36:41.870449 23 service_latency.go:358] Got endpoints: latency-svc-n6lz8 [664.014837ms]
  I0521 15:36:41.884802 23 service_latency.go:351] Created: latency-svc-9shl7
  I0521 15:36:41.922948 23 service_latency.go:358] Got endpoints: latency-svc-84msv [671.128381ms]
  I0521 15:36:41.937519 23 service_latency.go:351] Created: latency-svc-csp6m
  I0521 15:36:41.976179 23 service_latency.go:358] Got endpoints: latency-svc-6z9l8 [715.410473ms]
  I0521 15:36:41.996986 23 service_latency.go:351] Created: latency-svc-rm58j
  I0521 15:36:42.020641 23 service_latency.go:358] Got endpoints: latency-svc-xcd7k [742.806229ms]
  I0521 15:36:42.037684 23 service_latency.go:351] Created: latency-svc-kjrvc
  I0521 15:36:42.070909 23 service_latency.go:358] Got endpoints: latency-svc-qnmxq [746.221138ms]
  I0521 15:36:42.088700 23 service_latency.go:351] Created: latency-svc-882fg
  I0521 15:36:42.122851 23 service_latency.go:358] Got endpoints: latency-svc-d48qm [751.655067ms]
  I0521 15:36:42.139613 23 service_latency.go:351] Created: latency-svc-qrfpx
  I0521 15:36:42.172261 23 service_latency.go:358] Got endpoints: latency-svc-5q99l [748.153083ms]
  I0521 15:36:42.190499 23 service_latency.go:351] Created: latency-svc-r7vm2
  I0521 15:36:42.220177 23 service_latency.go:358] Got endpoints: latency-svc-jvh7k [749.834833ms]
  I0521 15:36:42.234744 23 service_latency.go:351] Created: latency-svc-mh5qq
  I0521 15:36:42.273410 23 service_latency.go:358] Got endpoints: latency-svc-fv9bw [751.724842ms]
  E0521 15:36:42.276476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:42.288241 23 service_latency.go:351] Created: latency-svc-5t9q6
  I0521 15:36:42.322280 23 service_latency.go:358] Got endpoints: latency-svc-wn9js [750.839541ms]
  I0521 15:36:42.338580 23 service_latency.go:351] Created: latency-svc-gvnwf
  I0521 15:36:42.370149 23 service_latency.go:358] Got endpoints: latency-svc-9c7wf [749.327142ms]
  I0521 15:36:42.388025 23 service_latency.go:351] Created: latency-svc-q5vr9
  I0521 15:36:42.421567 23 service_latency.go:358] Got endpoints: latency-svc-njwt4 [749.416752ms]
  I0521 15:36:42.438114 23 service_latency.go:351] Created: latency-svc-ld55d
  I0521 15:36:42.471533 23 service_latency.go:358] Got endpoints: latency-svc-8cr5n [748.85005ms]
  I0521 15:36:42.486419 23 service_latency.go:351] Created: latency-svc-gfq79
  I0521 15:36:42.523294 23 service_latency.go:358] Got endpoints: latency-svc-xk2tv [750.067606ms]
  I0521 15:36:42.537704 23 service_latency.go:351] Created: latency-svc-8s5mj
  I0521 15:36:42.573062 23 service_latency.go:358] Got endpoints: latency-svc-957xd [752.547633ms]
  I0521 15:36:42.590338 23 service_latency.go:351] Created: latency-svc-kr9sn
  I0521 15:36:42.620843 23 service_latency.go:358] Got endpoints: latency-svc-9shl7 [750.36007ms]
  I0521 15:36:42.637788 23 service_latency.go:351] Created: latency-svc-lrp6w
  I0521 15:36:42.672010 23 service_latency.go:358] Got endpoints: latency-svc-csp6m [749.035393ms]
  I0521 15:36:42.686189 23 service_latency.go:351] Created: latency-svc-5l2t2
  I0521 15:36:42.723840 23 service_latency.go:358] Got endpoints: latency-svc-rm58j [747.607026ms]
  I0521 15:36:42.738628 23 service_latency.go:351] Created: latency-svc-t7fwg
  I0521 15:36:42.772239 23 service_latency.go:358] Got endpoints: latency-svc-kjrvc [751.551547ms]
  I0521 15:36:42.790008 23 service_latency.go:351] Created: latency-svc-v5v7x
  I0521 15:36:42.828090 23 service_latency.go:358] Got endpoints: latency-svc-882fg [757.146816ms]
  I0521 15:36:42.842617 23 service_latency.go:351] Created: latency-svc-p7r4n
  I0521 15:36:42.870674 23 service_latency.go:358] Got endpoints: latency-svc-qrfpx [747.785951ms]
  I0521 15:36:42.886491 23 service_latency.go:351] Created: latency-svc-7nsm8
  I0521 15:36:42.920937 23 service_latency.go:358] Got endpoints: latency-svc-r7vm2 [748.644711ms]
  I0521 15:36:42.943039 23 service_latency.go:351] Created: latency-svc-52wx6
  I0521 15:36:42.970309 23 service_latency.go:358] Got endpoints: latency-svc-mh5qq [750.075618ms]
  I0521 15:36:42.987794 23 service_latency.go:351] Created: latency-svc-xwgrv
  I0521 15:36:43.026888 23 service_latency.go:358] Got endpoints: latency-svc-5t9q6 [753.445278ms]
  I0521 15:36:43.052298 23 service_latency.go:351] Created: latency-svc-x8llz
  I0521 15:36:43.074746 23 service_latency.go:358] Got endpoints: latency-svc-gvnwf [752.436807ms]
  I0521 15:36:43.088891 23 service_latency.go:351] Created: latency-svc-vqmk8
  I0521 15:36:43.122357 23 service_latency.go:358] Got endpoints: latency-svc-q5vr9 [752.170974ms]
  I0521 15:36:43.138204 23 service_latency.go:351] Created: latency-svc-dftbs
  I0521 15:36:43.171326 23 service_latency.go:358] Got endpoints: latency-svc-ld55d [749.725054ms]
  I0521 15:36:43.184937 23 service_latency.go:351] Created: latency-svc-skl4t
  I0521 15:36:43.220678 23 service_latency.go:358] Got endpoints: latency-svc-gfq79 [749.104404ms]
  I0521 15:36:43.235107 23 service_latency.go:351] Created: latency-svc-zhv4d
  I0521 15:36:43.272008 23 service_latency.go:358] Got endpoints: latency-svc-8s5mj [748.683974ms]
  E0521 15:36:43.277156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:43.289081 23 service_latency.go:351] Created: latency-svc-wmpj4
  I0521 15:36:43.321703 23 service_latency.go:358] Got endpoints: latency-svc-kr9sn [748.605885ms]
  I0521 15:36:43.337977 23 service_latency.go:351] Created: latency-svc-j9tgm
  I0521 15:36:43.369772 23 service_latency.go:358] Got endpoints: latency-svc-lrp6w [748.867097ms]
  I0521 15:36:43.384128 23 service_latency.go:351] Created: latency-svc-7w26h
  I0521 15:36:43.420462 23 service_latency.go:358] Got endpoints: latency-svc-5l2t2 [748.389156ms]
  I0521 15:36:43.435712 23 service_latency.go:351] Created: latency-svc-267kz
  I0521 15:36:43.473283 23 service_latency.go:358] Got endpoints: latency-svc-t7fwg [749.410281ms]
  I0521 15:36:43.490263 23 service_latency.go:351] Created: latency-svc-fz9k2
  I0521 15:36:43.519875 23 service_latency.go:358] Got endpoints: latency-svc-v5v7x [747.608339ms]
  I0521 15:36:43.534473 23 service_latency.go:351] Created: latency-svc-zh2b6
  I0521 15:36:43.575650 23 service_latency.go:358] Got endpoints: latency-svc-p7r4n [747.415332ms]
  I0521 15:36:43.590068 23 service_latency.go:351] Created: latency-svc-sn7wh
  I0521 15:36:43.623963 23 service_latency.go:358] Got endpoints: latency-svc-7nsm8 [753.216778ms]
  I0521 15:36:43.638297 23 service_latency.go:351] Created: latency-svc-sw7ll
  I0521 15:36:43.672701 23 service_latency.go:358] Got endpoints: latency-svc-52wx6 [751.729612ms]
  I0521 15:36:43.695239 23 service_latency.go:351] Created: latency-svc-lkw58
  I0521 15:36:43.721087 23 service_latency.go:358] Got endpoints: latency-svc-xwgrv [750.744839ms]
  I0521 15:36:43.738413 23 service_latency.go:351] Created: latency-svc-slkph
  I0521 15:36:43.770681 23 service_latency.go:358] Got endpoints: latency-svc-x8llz [743.742027ms]
  I0521 15:36:43.790253 23 service_latency.go:351] Created: latency-svc-qsxbk
  I0521 15:36:43.823767 23 service_latency.go:358] Got endpoints: latency-svc-vqmk8 [748.961011ms]
  I0521 15:36:43.838532 23 service_latency.go:351] Created: latency-svc-9w7tz
  I0521 15:36:43.873237 23 service_latency.go:358] Got endpoints: latency-svc-dftbs [750.8424ms]
  I0521 15:36:43.894483 23 service_latency.go:351] Created: latency-svc-cx46j
  I0521 15:36:43.921398 23 service_latency.go:358] Got endpoints: latency-svc-skl4t [750.013779ms]
  I0521 15:36:43.936842 23 service_latency.go:351] Created: latency-svc-5h277
  I0521 15:36:43.971219 23 service_latency.go:358] Got endpoints: latency-svc-zhv4d [750.460978ms]
  I0521 15:36:43.991150 23 service_latency.go:351] Created: latency-svc-56l2j
  I0521 15:36:44.022956 23 service_latency.go:358] Got endpoints: latency-svc-wmpj4 [750.89921ms]
  I0521 15:36:44.039077 23 service_latency.go:351] Created: latency-svc-sq2ts
  I0521 15:36:44.073327 23 service_latency.go:358] Got endpoints: latency-svc-j9tgm [751.56703ms]
  I0521 15:36:44.087211 23 service_latency.go:351] Created: latency-svc-9lm49
  I0521 15:36:44.120515 23 service_latency.go:358] Got endpoints: latency-svc-7w26h [750.672908ms]
  I0521 15:36:44.135299 23 service_latency.go:351] Created: latency-svc-mtbhk
  I0521 15:36:44.173392 23 service_latency.go:358] Got endpoints: latency-svc-267kz [752.87347ms]
  I0521 15:36:44.189685 23 service_latency.go:351] Created: latency-svc-lwk4g
  I0521 15:36:44.221342 23 service_latency.go:358] Got endpoints: latency-svc-fz9k2 [748.019595ms]
  I0521 15:36:44.235285 23 service_latency.go:351] Created: latency-svc-v6c84
  I0521 15:36:44.270359 23 service_latency.go:358] Got endpoints: latency-svc-zh2b6 [750.450228ms]
  E0521 15:36:44.277566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:44.286011 23 service_latency.go:351] Created: latency-svc-xrk6h
  I0521 15:36:44.320959 23 service_latency.go:358] Got endpoints: latency-svc-sn7wh [745.250657ms]
  I0521 15:36:44.335621 23 service_latency.go:351] Created: latency-svc-22hh2
  I0521 15:36:44.373891 23 service_latency.go:358] Got endpoints: latency-svc-sw7ll [749.884391ms]
  I0521 15:36:44.390483 23 service_latency.go:351] Created: latency-svc-ktcqt
  I0521 15:36:44.426075 23 service_latency.go:358] Got endpoints: latency-svc-lkw58 [753.306465ms]
  I0521 15:36:44.440299 23 service_latency.go:351] Created: latency-svc-g9vc2
  I0521 15:36:44.470578 23 service_latency.go:358] Got endpoints: latency-svc-slkph [749.450947ms]
  I0521 15:36:44.485937 23 service_latency.go:351] Created: latency-svc-cg8dw
  I0521 15:36:44.521274 23 service_latency.go:358] Got endpoints: latency-svc-qsxbk [750.559573ms]
  I0521 15:36:44.538666 23 service_latency.go:351] Created: latency-svc-vd4z6
  I0521 15:36:44.570917 23 service_latency.go:358] Got endpoints: latency-svc-9w7tz [747.101046ms]
  I0521 15:36:44.586537 23 service_latency.go:351] Created: latency-svc-q7r62
  I0521 15:36:44.623566 23 service_latency.go:358] Got endpoints: latency-svc-cx46j [750.240385ms]
  I0521 15:36:44.642131 23 service_latency.go:351] Created: latency-svc-8gpdh
  I0521 15:36:44.673705 23 service_latency.go:358] Got endpoints: latency-svc-5h277 [752.246038ms]
  I0521 15:36:44.687152 23 service_latency.go:351] Created: latency-svc-2db7q
  I0521 15:36:44.724140 23 service_latency.go:358] Got endpoints: latency-svc-56l2j [752.873998ms]
  I0521 15:36:44.738548 23 service_latency.go:351] Created: latency-svc-42x8r
  I0521 15:36:44.773986 23 service_latency.go:358] Got endpoints: latency-svc-sq2ts [750.987668ms]
  I0521 15:36:44.788914 23 service_latency.go:351] Created: latency-svc-drf7p
  I0521 15:36:44.823381 23 service_latency.go:358] Got endpoints: latency-svc-9lm49 [750.006649ms]
  I0521 15:36:44.837859 23 service_latency.go:351] Created: latency-svc-2nbmc
  I0521 15:36:44.872499 23 service_latency.go:358] Got endpoints: latency-svc-mtbhk [751.923826ms]
  I0521 15:36:44.889073 23 service_latency.go:351] Created: latency-svc-rv2h2
  I0521 15:36:44.921894 23 service_latency.go:358] Got endpoints: latency-svc-lwk4g [748.448029ms]
  I0521 15:36:44.940268 23 service_latency.go:351] Created: latency-svc-n92qg
  I0521 15:36:44.972160 23 service_latency.go:358] Got endpoints: latency-svc-v6c84 [750.762219ms]
  I0521 15:36:44.988270 23 service_latency.go:351] Created: latency-svc-958qt
  I0521 15:36:45.019929 23 service_latency.go:358] Got endpoints: latency-svc-xrk6h [749.514426ms]
  I0521 15:36:45.036370 23 service_latency.go:351] Created: latency-svc-sdtzk
  I0521 15:36:45.071712 23 service_latency.go:358] Got endpoints: latency-svc-22hh2 [750.70095ms]
  I0521 15:36:45.088178 23 service_latency.go:351] Created: latency-svc-zqq25
  I0521 15:36:45.120634 23 service_latency.go:358] Got endpoints: latency-svc-ktcqt [746.679614ms]
  I0521 15:36:45.136475 23 service_latency.go:351] Created: latency-svc-pnsdc
  I0521 15:36:45.172895 23 service_latency.go:358] Got endpoints: latency-svc-g9vc2 [746.760004ms]
  I0521 15:36:45.187757 23 service_latency.go:351] Created: latency-svc-6gfkt
  I0521 15:36:45.226026 23 service_latency.go:358] Got endpoints: latency-svc-cg8dw [755.397557ms]
  I0521 15:36:45.247368 23 service_latency.go:351] Created: latency-svc-69m9s
  I0521 15:36:45.271258 23 service_latency.go:358] Got endpoints: latency-svc-vd4z6 [749.940632ms]
  E0521 15:36:45.278502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:45.292802 23 service_latency.go:351] Created: latency-svc-dx6cg
  I0521 15:36:45.321704 23 service_latency.go:358] Got endpoints: latency-svc-q7r62 [750.740847ms]
  I0521 15:36:45.337524 23 service_latency.go:351] Created: latency-svc-rwxvc
  I0521 15:36:45.372083 23 service_latency.go:358] Got endpoints: latency-svc-8gpdh [748.451147ms]
  I0521 15:36:45.392223 23 service_latency.go:351] Created: latency-svc-2nf76
  I0521 15:36:45.420048 23 service_latency.go:358] Got endpoints: latency-svc-2db7q [746.252187ms]
  I0521 15:36:45.436488 23 service_latency.go:351] Created: latency-svc-bj9vb
  I0521 15:36:45.470557 23 service_latency.go:358] Got endpoints: latency-svc-42x8r [746.35851ms]
  I0521 15:36:45.491198 23 service_latency.go:351] Created: latency-svc-fnlpt
  I0521 15:36:45.521750 23 service_latency.go:358] Got endpoints: latency-svc-drf7p [747.70159ms]
  I0521 15:36:45.537521 23 service_latency.go:351] Created: latency-svc-jb8f9
  I0521 15:36:45.570862 23 service_latency.go:358] Got endpoints: latency-svc-2nbmc [747.429564ms]
  I0521 15:36:45.587220 23 service_latency.go:351] Created: latency-svc-dh5p9
  I0521 15:36:45.621934 23 service_latency.go:358] Got endpoints: latency-svc-rv2h2 [749.374938ms]
  I0521 15:36:45.637617 23 service_latency.go:351] Created: latency-svc-lrprz
  I0521 15:36:45.671414 23 service_latency.go:358] Got endpoints: latency-svc-n92qg [749.460922ms]
  I0521 15:36:45.685842 23 service_latency.go:351] Created: latency-svc-7lcs7
  I0521 15:36:45.722184 23 service_latency.go:358] Got endpoints: latency-svc-958qt [749.96645ms]
  I0521 15:36:45.736358 23 service_latency.go:351] Created: latency-svc-x54fx
  I0521 15:36:45.772106 23 service_latency.go:358] Got endpoints: latency-svc-sdtzk [752.115783ms]
  I0521 15:36:45.785765 23 service_latency.go:351] Created: latency-svc-9sfrx
  I0521 15:36:45.823509 23 service_latency.go:358] Got endpoints: latency-svc-zqq25 [751.717077ms]
  I0521 15:36:45.837192 23 service_latency.go:351] Created: latency-svc-57gnw
  I0521 15:36:45.873437 23 service_latency.go:358] Got endpoints: latency-svc-pnsdc [752.738428ms]
  I0521 15:36:45.888000 23 service_latency.go:351] Created: latency-svc-7nh4d
  I0521 15:36:45.923710 23 service_latency.go:358] Got endpoints: latency-svc-6gfkt [750.755624ms]
  I0521 15:36:45.937902 23 service_latency.go:351] Created: latency-svc-xpf6w
  I0521 15:36:45.970423 23 service_latency.go:358] Got endpoints: latency-svc-69m9s [744.346683ms]
  I0521 15:36:45.986541 23 service_latency.go:351] Created: latency-svc-g5zg7
  I0521 15:36:46.023234 23 service_latency.go:358] Got endpoints: latency-svc-dx6cg [751.919457ms]
  I0521 15:36:46.038374 23 service_latency.go:351] Created: latency-svc-qpgkw
  I0521 15:36:46.072977 23 service_latency.go:358] Got endpoints: latency-svc-rwxvc [751.194368ms]
  I0521 15:36:46.088122 23 service_latency.go:351] Created: latency-svc-kn9s8
  I0521 15:36:46.123085 23 service_latency.go:358] Got endpoints: latency-svc-2nf76 [750.936619ms]
  I0521 15:36:46.143266 23 service_latency.go:351] Created: latency-svc-q95ws
  I0521 15:36:46.173232 23 service_latency.go:358] Got endpoints: latency-svc-bj9vb [753.117164ms]
  I0521 15:36:46.188345 23 service_latency.go:351] Created: latency-svc-7rfkm
  I0521 15:36:46.222394 23 service_latency.go:358] Got endpoints: latency-svc-fnlpt [751.766443ms]
  I0521 15:36:46.241165 23 service_latency.go:351] Created: latency-svc-hg5g5
  I0521 15:36:46.273437 23 service_latency.go:358] Got endpoints: latency-svc-jb8f9 [751.629579ms]
  E0521 15:36:46.279560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:46.288614 23 service_latency.go:351] Created: latency-svc-7k867
  I0521 15:36:46.323381 23 service_latency.go:358] Got endpoints: latency-svc-dh5p9 [752.456028ms]
  I0521 15:36:46.342692 23 service_latency.go:351] Created: latency-svc-tmc5h
  I0521 15:36:46.370444 23 service_latency.go:358] Got endpoints: latency-svc-lrprz [748.46359ms]
  I0521 15:36:46.387851 23 service_latency.go:351] Created: latency-svc-tcmpw
  I0521 15:36:46.424058 23 service_latency.go:358] Got endpoints: latency-svc-7lcs7 [752.584088ms]
  I0521 15:36:46.438149 23 service_latency.go:351] Created: latency-svc-v8zg8
  I0521 15:36:46.472783 23 service_latency.go:358] Got endpoints: latency-svc-x54fx [750.558062ms]
  I0521 15:36:46.486412 23 service_latency.go:351] Created: latency-svc-q292d
  I0521 15:36:46.520470 23 service_latency.go:358] Got endpoints: latency-svc-9sfrx [748.289764ms]
  I0521 15:36:46.535140 23 service_latency.go:351] Created: latency-svc-zvw4f
  I0521 15:36:46.573611 23 service_latency.go:358] Got endpoints: latency-svc-57gnw [750.036877ms]
  I0521 15:36:46.588362 23 service_latency.go:351] Created: latency-svc-h4ndd
  I0521 15:36:46.620785 23 service_latency.go:358] Got endpoints: latency-svc-7nh4d [747.276475ms]
  I0521 15:36:46.635196 23 service_latency.go:351] Created: latency-svc-fznp8
  I0521 15:36:46.669764 23 service_latency.go:358] Got endpoints: latency-svc-xpf6w [745.986355ms]
  I0521 15:36:46.684676 23 service_latency.go:351] Created: latency-svc-49v47
  I0521 15:36:46.722803 23 service_latency.go:358] Got endpoints: latency-svc-g5zg7 [752.334228ms]
  I0521 15:36:46.737897 23 service_latency.go:351] Created: latency-svc-wzdhp
  I0521 15:36:46.773346 23 service_latency.go:358] Got endpoints: latency-svc-qpgkw [750.060526ms]
  I0521 15:36:46.787227 23 service_latency.go:351] Created: latency-svc-nmwmw
  I0521 15:36:46.823114 23 service_latency.go:358] Got endpoints: latency-svc-kn9s8 [750.078648ms]
  I0521 15:36:46.837052 23 service_latency.go:351] Created: latency-svc-8qkcw
  I0521 15:36:46.870261 23 service_latency.go:358] Got endpoints: latency-svc-q95ws [746.974559ms]
  I0521 15:36:46.888438 23 service_latency.go:351] Created: latency-svc-78lxw
  I0521 15:36:46.923666 23 service_latency.go:358] Got endpoints: latency-svc-7rfkm [750.373635ms]
  I0521 15:36:46.937876 23 service_latency.go:351] Created: latency-svc-gv4cs
  I0521 15:36:46.969955 23 service_latency.go:358] Got endpoints: latency-svc-hg5g5 [747.504677ms]
  I0521 15:36:46.988176 23 service_latency.go:351] Created: latency-svc-hjqqn
  I0521 15:36:47.020579 23 service_latency.go:358] Got endpoints: latency-svc-7k867 [747.081415ms]
  I0521 15:36:47.035764 23 service_latency.go:351] Created: latency-svc-ggvps
  I0521 15:36:47.070513 23 service_latency.go:358] Got endpoints: latency-svc-tmc5h [747.061182ms]
  I0521 15:36:47.091743 23 service_latency.go:351] Created: latency-svc-t8vgq
  I0521 15:36:47.120033 23 service_latency.go:358] Got endpoints: latency-svc-tcmpw [749.539681ms]
  I0521 15:36:47.134625 23 service_latency.go:351] Created: latency-svc-grk94
  I0521 15:36:47.172894 23 service_latency.go:358] Got endpoints: latency-svc-v8zg8 [748.782444ms]
  I0521 15:36:47.186941 23 service_latency.go:351] Created: latency-svc-qmkc9
  I0521 15:36:47.223003 23 service_latency.go:358] Got endpoints: latency-svc-q292d [750.163313ms]
  I0521 15:36:47.237171 23 service_latency.go:351] Created: latency-svc-h95ml
  I0521 15:36:47.272884 23 service_latency.go:358] Got endpoints: latency-svc-zvw4f [752.349194ms]
  E0521 15:36:47.280039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:47.287241 23 service_latency.go:351] Created: latency-svc-xkcmt
  I0521 15:36:47.323201 23 service_latency.go:358] Got endpoints: latency-svc-h4ndd [749.530867ms]
  I0521 15:36:47.338100 23 service_latency.go:351] Created: latency-svc-lvhkq
  I0521 15:36:47.373217 23 service_latency.go:358] Got endpoints: latency-svc-fznp8 [752.383911ms]
  I0521 15:36:47.387370 23 service_latency.go:351] Created: latency-svc-55wrn
  I0521 15:36:47.422385 23 service_latency.go:358] Got endpoints: latency-svc-49v47 [752.56664ms]
  I0521 15:36:47.437318 23 service_latency.go:351] Created: latency-svc-ft7gw
  I0521 15:36:47.473898 23 service_latency.go:358] Got endpoints: latency-svc-wzdhp [751.041752ms]
  I0521 15:36:47.487653 23 service_latency.go:351] Created: latency-svc-r5m6z
  I0521 15:36:47.524051 23 service_latency.go:358] Got endpoints: latency-svc-nmwmw [750.646442ms]
  I0521 15:36:47.544516 23 service_latency.go:351] Created: latency-svc-bjplb
  I0521 15:36:47.577255 23 service_latency.go:358] Got endpoints: latency-svc-8qkcw [754.057326ms]
  I0521 15:36:47.594053 23 service_latency.go:351] Created: latency-svc-7572x
  I0521 15:36:47.623611 23 service_latency.go:358] Got endpoints: latency-svc-78lxw [753.290215ms]
  I0521 15:36:47.638018 23 service_latency.go:351] Created: latency-svc-h454t
  I0521 15:36:47.672952 23 service_latency.go:358] Got endpoints: latency-svc-gv4cs [749.232699ms]
  I0521 15:36:47.688121 23 service_latency.go:351] Created: latency-svc-9tw2l
  I0521 15:36:47.720372 23 service_latency.go:358] Got endpoints: latency-svc-hjqqn [750.361557ms]
  I0521 15:36:47.743076 23 service_latency.go:351] Created: latency-svc-4gq6l
  I0521 15:36:47.772865 23 service_latency.go:358] Got endpoints: latency-svc-ggvps [752.235429ms]
  I0521 15:36:47.787910 23 service_latency.go:351] Created: latency-svc-hjpjg
  I0521 15:36:47.820450 23 service_latency.go:358] Got endpoints: latency-svc-t8vgq [749.87942ms]
  I0521 15:36:47.841935 23 service_latency.go:351] Created: latency-svc-f2jvf
  I0521 15:36:47.873367 23 service_latency.go:358] Got endpoints: latency-svc-grk94 [753.284954ms]
  I0521 15:36:47.888105 23 service_latency.go:351] Created: latency-svc-fq9sk
  I0521 15:36:47.923528 23 service_latency.go:358] Got endpoints: latency-svc-qmkc9 [750.577577ms]
  I0521 15:36:47.945549 23 service_latency.go:351] Created: latency-svc-mjmn8
  I0521 15:36:47.970092 23 service_latency.go:358] Got endpoints: latency-svc-h95ml [747.033758ms]
  I0521 15:36:47.985103 23 service_latency.go:351] Created: latency-svc-k2v65
  I0521 15:36:48.020628 23 service_latency.go:358] Got endpoints: latency-svc-xkcmt [747.68234ms]
  I0521 15:36:48.035418 23 service_latency.go:351] Created: latency-svc-m65tl
  I0521 15:36:48.070664 23 service_latency.go:358] Got endpoints: latency-svc-lvhkq [747.391803ms]
  I0521 15:36:48.085431 23 service_latency.go:351] Created: latency-svc-dh6ld
  I0521 15:36:48.120861 23 service_latency.go:358] Got endpoints: latency-svc-55wrn [747.587557ms]
  I0521 15:36:48.135931 23 service_latency.go:351] Created: latency-svc-47m8c
  I0521 15:36:48.172757 23 service_latency.go:358] Got endpoints: latency-svc-ft7gw [750.31958ms]
  I0521 15:36:48.187647 23 service_latency.go:351] Created: latency-svc-2zcxz
  I0521 15:36:48.220063 23 service_latency.go:358] Got endpoints: latency-svc-r5m6z [746.102018ms]
  I0521 15:36:48.234884 23 service_latency.go:351] Created: latency-svc-lbxqz
  I0521 15:36:48.270249 23 service_latency.go:358] Got endpoints: latency-svc-bjplb [746.142519ms]
  E0521 15:36:48.280449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:48.285289 23 service_latency.go:351] Created: latency-svc-cwz8f
  I0521 15:36:48.323222 23 service_latency.go:358] Got endpoints: latency-svc-7572x [745.910233ms]
  I0521 15:36:48.337150 23 service_latency.go:351] Created: latency-svc-q6dqx
  I0521 15:36:48.370617 23 service_latency.go:358] Got endpoints: latency-svc-h454t [746.956266ms]
  I0521 15:36:48.385446 23 service_latency.go:351] Created: latency-svc-9rc8v
  I0521 15:36:48.423594 23 service_latency.go:358] Got endpoints: latency-svc-9tw2l [750.595678ms]
  I0521 15:36:48.437300 23 service_latency.go:351] Created: latency-svc-qhcp2
  I0521 15:36:48.476349 23 service_latency.go:358] Got endpoints: latency-svc-4gq6l [755.88558ms]
  I0521 15:36:48.490324 23 service_latency.go:351] Created: latency-svc-x8tld
  I0521 15:36:48.520444 23 service_latency.go:358] Got endpoints: latency-svc-hjpjg [747.527196ms]
  I0521 15:36:48.536637 23 service_latency.go:351] Created: latency-svc-x4qtv
  I0521 15:36:48.570892 23 service_latency.go:358] Got endpoints: latency-svc-f2jvf [750.384429ms]
  I0521 15:36:48.590574 23 service_latency.go:351] Created: latency-svc-7dl5z
  I0521 15:36:48.621325 23 service_latency.go:358] Got endpoints: latency-svc-fq9sk [747.879454ms]
  I0521 15:36:48.673336 23 service_latency.go:358] Got endpoints: latency-svc-mjmn8 [749.755036ms]
  I0521 15:36:48.721096 23 service_latency.go:358] Got endpoints: latency-svc-k2v65 [750.94597ms]
  I0521 15:36:48.770741 23 service_latency.go:358] Got endpoints: latency-svc-m65tl [750.018852ms]
  I0521 15:36:48.820983 23 service_latency.go:358] Got endpoints: latency-svc-dh6ld [750.228439ms]
  I0521 15:36:48.872953 23 service_latency.go:358] Got endpoints: latency-svc-47m8c [752.041691ms]
  I0521 15:36:48.920849 23 service_latency.go:358] Got endpoints: latency-svc-2zcxz [748.024013ms]
  I0521 15:36:48.973474 23 service_latency.go:358] Got endpoints: latency-svc-lbxqz [753.357252ms]
  I0521 15:36:49.021476 23 service_latency.go:358] Got endpoints: latency-svc-cwz8f [751.172282ms]
  I0521 15:36:49.073937 23 service_latency.go:358] Got endpoints: latency-svc-q6dqx [750.656678ms]
  I0521 15:36:49.124106 23 service_latency.go:358] Got endpoints: latency-svc-9rc8v [753.430822ms]
  I0521 15:36:49.171328 23 service_latency.go:358] Got endpoints: latency-svc-qhcp2 [747.673024ms]
  I0521 15:36:49.223331 23 service_latency.go:358] Got endpoints: latency-svc-x8tld [746.915461ms]
  I0521 15:36:49.270993 23 service_latency.go:358] Got endpoints: latency-svc-x4qtv [750.482213ms]
  E0521 15:36:49.281244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:49.324031 23 service_latency.go:358] Got endpoints: latency-svc-7dl5z [753.091241ms]
  I0521 15:36:49.324174 23 service_latency.go:114] Latencies: [23.559528ms 38.772346ms 47.651191ms 61.869701ms 67.68381ms 85.185665ms 93.571145ms 107.135265ms 126.15083ms 136.120557ms 139.583292ms 149.622577ms 157.435138ms 158.1441ms 165.66591ms 166.873535ms 167.716594ms 167.809353ms 168.385553ms 168.717738ms 168.921635ms 169.612588ms 170.231125ms 171.09757ms 172.120901ms 173.078223ms 173.369953ms 174.20307ms 176.521019ms 177.687036ms 180.208593ms 181.863937ms 182.174459ms 182.432062ms 184.335189ms 186.189768ms 210.877242ms 213.862176ms 215.766177ms 250.35871ms 290.008383ms 331.174627ms 366.104683ms 392.736774ms 432.874719ms 470.134333ms 521.370381ms 560.717501ms 599.343256ms 626.404432ms 664.014837ms 671.128381ms 715.410473ms 742.806229ms 743.742027ms 744.346683ms 745.250657ms 745.910233ms 745.986355ms 746.102018ms 746.142519ms 746.221138ms 746.252187ms 746.35851ms 746.679614ms 746.760004ms 746.915461ms 746.956266ms 746.974559ms 747.033758ms 747.061182ms 747.081415ms 747.101046ms 747.276475ms 747.391803ms 747.415332ms 747.429564ms 747.504677ms 747.527196ms 747.587557ms 747.607026ms 747.608339ms 747.673024ms 747.68234ms 747.70159ms 747.785951ms 747.879454ms 748.019595ms 748.024013ms 748.153083ms 748.289764ms 748.389156ms 748.448029ms 748.451147ms 748.46359ms 748.605885ms 748.644711ms 748.683974ms 748.782444ms 748.85005ms 748.867097ms 748.961011ms 749.035393ms 749.104404ms 749.232699ms 749.327142ms 749.374938ms 749.410281ms 749.416752ms 749.450947ms 749.460922ms 749.514426ms 749.530867ms 749.539681ms 749.725054ms 749.755036ms 749.834833ms 749.87942ms 749.884391ms 749.940632ms 749.96645ms 750.006649ms 750.013779ms 750.018852ms 750.036877ms 750.060526ms 750.067606ms 750.075618ms 750.078648ms 750.163313ms 750.228439ms 750.240385ms 750.31958ms 750.36007ms 750.361557ms 750.373635ms 750.384429ms 750.450228ms 750.460978ms 750.482213ms 750.558062ms 750.559573ms 750.577577ms 750.595678ms 750.646442ms 750.656678ms 750.672908ms 750.70095ms 750.740847ms 750.744839ms 750.755624ms 750.762219ms 750.839541ms 750.8424ms 750.89921ms 750.936619ms 750.94597ms 750.987668ms 751.041752ms 751.172282ms 751.194368ms 751.551547ms 751.56703ms 751.629579ms 751.655067ms 751.717077ms 751.724842ms 751.729612ms 751.766443ms 751.919457ms 751.923826ms 752.041691ms 752.115783ms 752.170974ms 752.235429ms 752.246038ms 752.334228ms 752.349194ms 752.383911ms 752.436807ms 752.456028ms 752.547633ms 752.56664ms 752.584088ms 752.738428ms 752.87347ms 752.873998ms 753.091241ms 753.117164ms 753.216778ms 753.284954ms 753.290215ms 753.306465ms 753.357252ms 753.430822ms 753.445278ms 754.057326ms 755.397557ms 755.88558ms 757.146816ms]
  I0521 15:36:49.324205 23 service_latency.go:118] 50 %ile: 748.867097ms
  I0521 15:36:49.324217 23 service_latency.go:119] 90 %ile: 752.456028ms
  I0521 15:36:49.324227 23 service_latency.go:120] 99 %ile: 755.88558ms
  I0521 15:36:49.324238 23 service_latency.go:121] Total sample count: 200
  I0521 15:36:49.324398 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6683" for this suite. @ 05/21/25 15:36:49.327
• [10.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 05/21/25 15:36:49.331
  I0521 15:36:49.331691 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 15:36:49.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:36:49.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:36:49.344
  STEP: Creating service test in namespace statefulset-4585 @ 05/21/25 15:36:49.347
  STEP: Creating a new StatefulSet @ 05/21/25 15:36:49.35
  I0521 15:36:49.356566 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0521 15:36:50.281940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:51.283108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:52.283298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:53.283413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:54.283520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:55.283745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:56.283855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:57.283944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:58.284044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:36:59.284936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:36:59.357393 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 15:36:59.357429 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0521 15:36:59.357438 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/21/25 15:36:59.362
  I0521 15:36:59.370363 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/21/25 15:36:59.37
  E0521 15:37:00.285846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:01.286040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:02.286237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:03.286338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:04.286548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:05.286758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:06.286942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:07.287130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:08.287220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:09.287335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/21/25 15:37:09.376
  STEP: Performing a canary update @ 05/21/25 15:37:09.376
  I0521 15:37:09.381783 23 statefulset.go:2542] Updating stateful set ss2
  I0521 15:37:09.389085 23 wait.go:74] Waiting for Pod statefulset-4585/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0521 15:37:10.287861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:11.288689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:12.288850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:13.289110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:14.289927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:15.290127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:16.290303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:17.290952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:18.291034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:19.291208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/21/25 15:37:19.387
  I0521 15:37:19.427989 23 wait.go:44] Found 2 stateful pods, waiting for 3
  E0521 15:37:20.291320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:21.291514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:22.291702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:23.291883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:24.292058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:25.292254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:26.292431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:27.292601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:28.292939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:29.293137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:37:29.423783 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 15:37:29.423833 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0521 15:37:29.423848 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/21/25 15:37:29.427
  I0521 15:37:29.434668 23 statefulset.go:2542] Updating stateful set ss2
  I0521 15:37:29.442083 23 wait.go:74] Waiting for Pod statefulset-4585/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0521 15:37:30.293887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:31.294087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:32.294189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:33.294335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:34.294419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:35.294627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:36.294702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:37.294898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:38.295103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:39.295296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:37:39.448565 23 statefulset.go:2542] Updating stateful set ss2
  I0521 15:37:39.455531 23 wait.go:56] Waiting for StatefulSet statefulset-4585/ss2 to complete update
  I0521 15:37:39.455571 23 wait.go:63] Waiting for Pod statefulset-4585/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0521 15:37:40.296412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:41.296528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:42.296777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:43.296973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:44.297182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:45.297388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:46.297577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:47.297817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:48.297968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:49.298080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:37:49.454591 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4585
  I0521 15:37:49.456672 23 rest.go:153] Scaling statefulset ss2 to 0
  E0521 15:37:50.298956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:51.299083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:52.299176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:53.300256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:54.300479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:55.301226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:56.301308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:57.301520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:58.301760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:37:59.301841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:37:59.468510 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 15:37:59.470622 23 rest.go:91] Deleting statefulset ss2
  I0521 15:37:59.479040 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4585" for this suite. @ 05/21/25 15:37:59.481
• [70.157 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 05/21/25 15:37:59.489
  I0521 15:37:59.489069 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:37:59.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:37:59.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:37:59.498
  STEP: Creating a suspended job @ 05/21/25 15:37:59.502
  STEP: Patching the Job @ 05/21/25 15:37:59.508
  STEP: Watching for Job to be patched @ 05/21/25 15:37:59.524
  I0521 15:37:59.526348 23 job.go:1369] Event ADDED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-job-label:e2e-9ps59] and annotations: map[]
  I0521 15:37:59.526414 23 job.go:1369] Event MODIFIED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-job-label:e2e-9ps59] and annotations: map[]
  I0521 15:37:59.526471 23 job.go:1372] Event MODIFIED found for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[]
  STEP: Updating the job @ 05/21/25 15:37:59.526
  STEP: Watching for Job to be updated @ 05/21/25 15:37:59.533
  I0521 15:37:59.535155 23 job.go:1372] Event MODIFIED found for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  I0521 15:37:59.535189 23 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/21/25 15:37:59.535
  I0521 15:37:59.536986 23 job.go:1247] Job: e2e-9ps59 as labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59]
  STEP: Waiting for job to complete @ 05/21/25 15:37:59.537
  E0521 15:38:00.302800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:01.302852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:02.303398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:03.303587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:04.304804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:05.304982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:06.305505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:07.305704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 05/21/25 15:38:07.559
  STEP: Watching for Job to be deleted @ 05/21/25 15:38:07.564
  I0521 15:38:07.565672 23 job.go:1369] Event MODIFIED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  I0521 15:38:07.565711 23 job.go:1369] Event MODIFIED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  I0521 15:38:07.565738 23 job.go:1369] Event MODIFIED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  I0521 15:38:07.565858 23 job.go:1369] Event MODIFIED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  I0521 15:38:07.565917 23 job.go:1369] Event MODIFIED observed for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  I0521 15:38:07.565953 23 job.go:1372] Event DELETED found for Job e2e-9ps59 in namespace job-9052 with labels: map[e2e-9ps59:patched e2e-job-label:e2e-9ps59] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/21/25 15:38:07.565
  I0521 15:38:07.567989 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9052" for this suite. @ 05/21/25 15:38:07.574
• [8.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/21/25 15:38:07.584
  I0521 15:38:07.584436 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename subpath @ 05/21/25 15:38:07.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:38:07.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:38:07.6
  STEP: Setting up data @ 05/21/25 15:38:07.602
  STEP: Creating pod pod-subpath-test-projected-hbhc @ 05/21/25 15:38:07.608
  STEP: Creating a pod to test atomic-volume-subpath @ 05/21/25 15:38:07.608
  E0521 15:38:08.306779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:09.306952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:10.307800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:11.308023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:12.308379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:13.308538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:14.308956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:15.309134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:16.309529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:17.309709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:18.310032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:19.310148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:20.310246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:21.310634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:22.310857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:23.310931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:24.311202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:25.311323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:26.311693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:27.311918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:28.312354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:29.312555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:30.312849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:31.313930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:38:31.648
  I0521 15:38:31.650686 23 output.go:207] Trying to get logs from node worker-0 pod pod-subpath-test-projected-hbhc container test-container-subpath-projected-hbhc: <nil>
  STEP: delete the pod @ 05/21/25 15:38:31.662
  STEP: Deleting pod pod-subpath-test-projected-hbhc @ 05/21/25 15:38:31.677
  I0521 15:38:31.678028 23 delete.go:62] Deleting pod "pod-subpath-test-projected-hbhc" in namespace "subpath-7057"
  I0521 15:38:31.679824 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7057" for this suite. @ 05/21/25 15:38:31.682
• [24.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 05/21/25 15:38:31.686
  I0521 15:38:31.686029 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename namespaces @ 05/21/25 15:38:31.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:38:31.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:38:31.697
  STEP: Read namespace status @ 05/21/25 15:38:31.7
  I0521 15:38:31.702308 23 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/21/25 15:38:31.702
  I0521 15:38:31.708411 23 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/21/25 15:38:31.708
  I0521 15:38:31.713814 23 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0521 15:38:31.713971 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4132" for this suite. @ 05/21/25 15:38:31.783
• [0.102 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/21/25 15:38:31.787
  I0521 15:38:31.787628 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:38:31.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:38:31.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:38:31.799
  STEP: creating a Deployment @ 05/21/25 15:38:31.803
  STEP: waiting for Deployment to be created @ 05/21/25 15:38:31.808
  STEP: waiting for all Replicas to be Ready @ 05/21/25 15:38:31.81
  I0521 15:38:31.811238 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.811271 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.818541 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.818571 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.831764 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.831802 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.853810 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0521 15:38:31.853843 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0521 15:38:32.315001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:38:32.639291 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0521 15:38:32.639329 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0521 15:38:33.133425 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/21/25 15:38:33.133
  I0521 15:38:33.143167 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/21/25 15:38:33.143
  I0521 15:38:33.144499 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144568 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144587 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144598 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144615 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144639 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144827 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144889 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 0
  I0521 15:38:33.144904 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:33.144916 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:33.144930 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.144940 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.145077 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.145095 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.152334 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.152358 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.168962 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.168985 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:33.175813 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:33.175834 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:33.182428 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:33.182447 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  E0521 15:38:33.315707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:38:34.147625 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:34.147667 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:34.165412 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  STEP: listing Deployments @ 05/21/25 15:38:34.165
  I0521 15:38:34.167366 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/21/25 15:38:34.167
  I0521 15:38:34.178466 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/21/25 15:38:34.178
  I0521 15:38:34.185599 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0521 15:38:34.189183 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0521 15:38:34.203450 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0521 15:38:34.214480 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0521 15:38:34.222104 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0521 15:38:34.316350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:38:35.149587 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0521 15:38:35.177663 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0521 15:38:35.186810 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0521 15:38:35.317081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:36.318030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:38:36.667988 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/21/25 15:38:36.686
  STEP: fetching the DeploymentStatus @ 05/21/25 15:38:36.693
  I0521 15:38:36.699052 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:36.699723 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:36.699762 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:36.699780 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:36.699906 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 1
  I0521 15:38:36.699939 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:36.700062 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:36.700081 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 2
  I0521 15:38:36.700095 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-9312 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/21/25 15:38:36.7
  I0521 15:38:36.706562 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.706601 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.706646 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707067 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707251 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707356 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707379 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707392 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707472 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707481 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707492 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.707641 23 deployment.go:474] observed event type MODIFIED
  I0521 15:38:36.709301 23 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0521 15:38:36.711826 23 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31719b77-a305-4a8a-b518-1db6ddd63498",
      ResourceVersion: (string) (len=5) "17513",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "62e0a002-e9ef-4ae1-894e-e15b122c6000",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 32 65 30  61 30 30 32 2d 65 39 65  |":\"62e0a002-e9e|
              00000130  66 2d 34 61 65 31 2d 38  39 34 65 2d 65 31 35 62  |f-4ae1-894e-e15b|
              00000140  31 32 32 63 36 30 30 30  5c 22 7d 22 3a 7b 7d 7d  |122c6000\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0521 15:38:36.722951 23 deployment.go:656] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd572b86-b135-466d-9df4-23292c038b2e",
      ResourceVersion: (string) (len=5) "17581",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "62e0a002-e9ef-4ae1-894e-e15b122c6000",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 32 65 30  61 30 30 32 2d 65 39 65  |":\"62e0a002-e9e|
              00000130  66 2d 34 61 65 31 2d 38  39 34 65 2d 65 31 35 62  |f-4ae1-894e-e15b|
              00000140  31 32 32 63 36 30 30 30  5c 22 7d 22 3a 7b 7d 7d  |122c6000\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0521 15:38:36.766624 23 deployment.go:668] pod: "test-deployment-79899bcfcc-9n2xl":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-9n2xl",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a9bcef6-cbc5-44a3-9e80-d2baa080c5c0",
      ResourceVersion: (string) (len=5) "17598",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "fd572b86-b135-466d-9df4-23292c038b2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 64 35 37 32 62 38 36  |uid\":\"fd572b86|
              000000a0  2d 62 31 33 35 2d 34 36  36 64 2d 39 64 66 34 2d  |-b135-466d-9df4-|
              000000b0  32 33 32 39 32 63 30 33  38 62 32 65 5c 22 7d 22  |23292c038b2e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 36  38 5c 22 7d 22 3a 7b 22  |.244.1.68\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dsvs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dsvs7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438715,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883438715,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3520a43d7be60c55a958e023553cc1ea4c76c1a9e4e8ee0e1f16ceb942c7e03b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dsvs7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0521 15:38:36.769784 23 deployment.go:668] pod: "test-deployment-79899bcfcc-qzxtt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-qzxtt",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58439c77-f3fc-4f60-8608-d4f358d09e94",
      ResourceVersion: (string) (len=5) "17597",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "fd572b86-b135-466d-9df4-23292c038b2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 64 35 37 32 62 38 36  |uid\":\"fd572b86|
              000000a0  2d 62 31 33 35 2d 34 36  36 64 2d 39 64 66 34 2d  |-b135-466d-9df4-|
              000000b0  32 33 32 39 32 63 30 33  38 62 32 65 5c 22 7d 22  |23292c038b2e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 37 5c 22 7d 22 3a 7b  |.244.0.197\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h465c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h465c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883438714,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d30f535e24d6892319580f7ceb973cea0620f9b74857d4b3b0cb09d5619358f0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-h465c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0521 15:38:36.772118 23 deployment.go:656] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f1240eb-f817-4f93-ada0-ccf165f67365",
      ResourceVersion: (string) (len=5) "17589",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "62e0a002-e9ef-4ae1-894e-e15b122c6000",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 32 65 30  61 30 30 32 2d 65 39 65  |":\"62e0a002-e9e|
              00000130  66 2d 34 61 65 31 2d 38  39 34 65 2d 65 31 35 62  |f-4ae1-894e-e15b|
              00000140  31 32 32 63 36 30 30 30  5c 22 7d 22 3a 7b 7d 7d  |122c6000\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0521 15:38:36.775706 23 deployment.go:668] pod: "test-deployment-f78d658f9-v7k8n":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-v7k8n",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "630e039e-3e59-488b-80a7-c7e9d45cfbc0",
      ResourceVersion: (string) (len=5) "17584",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438718,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "0f1240eb-f817-4f93-ada0-ccf165f67365",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 66 31 32 34 30 65 62  |uid\":\"0f1240eb|
              000000a0  2d 66 38 31 37 2d 34 66  39 33 2d 61 64 61 30 2d  |-f817-4f93-ada0-|
              000000b0  63 63 66 31 36 35 66 36  37 33 36 35 5c 22 7d 22  |ccf165f67365\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 36 5c 22 7d 22 3a 7b  |.244.0.196\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fjbqk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fjbqk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438713,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438713,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883438713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://f214b9f7db4f938263368d6a030200b54f2a0e400514910aa532ae5ba7db6f47",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fjbqk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0521 15:38:36.779994 23 deployment.go:668] pod: "test-deployment-f78d658f9-zxk6x":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-zxk6x",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-9312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c47b3dc8-920c-454a-bf7d-2c1abd30cbf8",
      ResourceVersion: (string) (len=5) "17600",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "0f1240eb-f817-4f93-ada0-ccf165f67365",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 66 31 32 34 30 65 62  |uid\":\"0f1240eb|
              000000a0  2d 66 38 31 37 2d 34 66  39 33 2d 61 64 61 30 2d  |-f817-4f93-ada0-|
              000000b0  63 63 66 31 36 35 66 36  37 33 36 35 5c 22 7d 22  |ccf165f67365\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=702) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 30 2e 32 34 34 2e 31  |"ip\":\"10.244.1|
              00000290  2e 36 37 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |.67\"}":{".":{},|
              000002a0  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              000002b0  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xw6x2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xw6x2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883438714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=10) "10.0.60.98",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=10) "10.0.60.98"
        }
      },
      PodIP: (string) (len=11) "10.244.1.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883438714,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883438714,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883438716,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://2b7447436cc9a0ae5e4c68233fee71fc1546d1b84bf7e5994f8d7c953551d7c6"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://2b7447436cc9a0ae5e4c68233fee71fc1546d1b84bf7e5994f8d7c953551d7c6",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xw6x2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0521 15:38:36.782083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9312" for this suite. @ 05/21/25 15:38:36.784
• [5.001 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/21/25 15:38:36.788
  I0521 15:38:36.788902 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sysctl @ 05/21/25 15:38:36.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:38:36.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:38:36.803
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/21/25 15:38:36.806
  I0521 15:38:36.809478 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3389" for this suite. @ 05/21/25 15:38:36.884
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/21/25 15:38:36.888
  I0521 15:38:36.888731 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 15:38:36.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:38:36.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:38:36.902
  STEP: Creating a pod to test substitution in volume subpath @ 05/21/25 15:38:36.904
  E0521 15:38:37.319031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:38.319615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:39.319666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:40.319754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:38:40.922
  I0521 15:38:40.924429 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-8418fbf4-95a3-42ad-bb11-7253b850fbd8 container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:38:40.928
  I0521 15:38:40.940241 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7564" for this suite. @ 05/21/25 15:38:40.942
• [4.058 seconds]
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 05/21/25 15:38:40.946
  I0521 15:38:40.946523 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 15:38:40.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:38:40.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:38:40.958
  E0521 15:38:41.319844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:42.319963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:43.320582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:44.320942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:45.321558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:46.322615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:47.322935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:48.323914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:49.324413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:50.324664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:51.325445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:52.326206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:53.327193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:54.327833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:55.328197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:56.328754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:57.329362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:58.329945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:38:59.330527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:00.331558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:01.332264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:02.332569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:03.333228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:04.333922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:05.334949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:06.335423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:07.336304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:08.336827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:09.337153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:10.338131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:11.338825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:12.339111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:13.339843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:14.340790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:15.341400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:16.341936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:17.342254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:18.342844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:19.343380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:20.344075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:21.344652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:22.345359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:23.345988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:24.346624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:25.346843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:26.347470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:27.347913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:28.348475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:29.348981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:30.349516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:31.350370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:32.350846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:33.351510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:34.351921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:35.352671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:36.353049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:37.353585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:38.354115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:39.354520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:40.354941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:39:40.970997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2057" for this suite. @ 05/21/25 15:39:40.973
• [60.031 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/21/25 15:39:40.977
  I0521 15:39:40.977515 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/21/25 15:39:40.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:39:40.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:39:40.989
  I0521 15:39:40.991381 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:39:41.355586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:42.355690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:43.356009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:44.356326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:45.357039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:46.357525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:39:47.113545 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9948" for this suite. @ 05/21/25 15:39:47.116
• [6.143 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/21/25 15:39:47.12
  I0521 15:39:47.120512 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/21/25 15:39:47.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:39:47.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:39:47.131
  STEP: creating @ 05/21/25 15:39:47.134
  STEP: getting @ 05/21/25 15:39:47.147
  STEP: listing in namespace @ 05/21/25 15:39:47.149
  STEP: patching @ 05/21/25 15:39:47.151
  STEP: deleting @ 05/21/25 15:39:47.156
  I0521 15:39:47.163778 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9909" for this suite. @ 05/21/25 15:39:47.217
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 05/21/25 15:39:47.221
  I0521 15:39:47.221510 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 15:39:47.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:39:47.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:39:47.23
  STEP: Creating a ResourceQuota with best effort scope @ 05/21/25 15:39:47.233
  STEP: Ensuring ResourceQuota status is calculated @ 05/21/25 15:39:47.236
  E0521 15:39:47.358456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:48.358585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 05/21/25 15:39:49.238
  STEP: Ensuring ResourceQuota status is calculated @ 05/21/25 15:39:49.242
  E0521 15:39:49.358828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:50.358992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 05/21/25 15:39:51.244
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/21/25 15:39:51.253
  E0521 15:39:51.360533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:52.360025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/21/25 15:39:53.256
  E0521 15:39:53.360974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:54.361158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/21/25 15:39:55.26
  STEP: Ensuring resource quota status released the pod usage @ 05/21/25 15:39:55.27
  E0521 15:39:55.361561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:56.361676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 05/21/25 15:39:57.272
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/21/25 15:39:57.28
  E0521 15:39:57.362588      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:39:58.362782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/21/25 15:39:59.282
  E0521 15:39:59.363084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:00.363271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/21/25 15:40:01.285
  STEP: Ensuring resource quota status released the pod usage @ 05/21/25 15:40:01.293
  E0521 15:40:01.364128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:02.364334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:40:03.296519 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4020" for this suite. @ 05/21/25 15:40:03.299
• [16.084 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/21/25 15:40:03.305
  I0521 15:40:03.305465 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename cronjob @ 05/21/25 15:40:03.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:40:03.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:40:03.315
  STEP: Creating a suspended cronjob @ 05/21/25 15:40:03.317
  STEP: Ensuring no jobs are scheduled @ 05/21/25 15:40:03.323
  E0521 15:40:03.365231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:04.365398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:05.365825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:06.366027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:07.366447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:08.366618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:09.366936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:10.367939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:11.369009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:12.369205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:13.370076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:14.370267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:15.370505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:16.370667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:17.371239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:18.372284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:19.372557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:20.372745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:21.373181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:22.373305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:23.374021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:24.374142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:25.374363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:26.374520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:27.374902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:28.375038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:29.375366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:30.375525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:31.375566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:32.375745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:33.376571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:34.376771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:35.377245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:36.377414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:37.377901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:38.378932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:39.379295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:40.379825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:41.380660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:42.380924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:43.381310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:44.381488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:45.382012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:46.382292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:47.382479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:48.383065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:49.383258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:50.383684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:51.383853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:52.383950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:53.384115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:54.384542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:55.384703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:56.384902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:57.385091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:58.385958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:40:59.386162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:00.386342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:01.386447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:02.386960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:03.387123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:04.387622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:05.387816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:06.388031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:07.388215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:08.389265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:09.389460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:10.389593      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:11.389848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:12.389956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:13.390142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:14.390347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:15.390574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:16.390964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:17.391156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:18.391910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:19.392082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:20.392942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:21.393119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:22.393547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:23.393770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:24.393828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:25.393937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:26.394658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:27.394828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:28.395035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:29.395242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:30.395419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:31.395627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:32.395709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:33.395915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:34.396690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:35.396271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:36.397236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:37.397431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:38.397914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:39.398020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:40.398127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:41.398333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:42.398552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:43.398804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:44.399140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:45.399236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:46.399783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:47.400042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:48.400145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:49.400335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:50.400619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:51.400822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:52.401051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:53.401245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:54.401635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:55.401824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:56.402122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:57.402232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:58.402452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:41:59.402877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:00.403308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:01.403490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:02.403595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:03.403813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:04.404442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:05.405156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:06.405448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:07.405637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:08.405830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:09.406012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:10.406124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:11.406332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:12.406880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:13.407074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:14.407677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:15.407854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:16.408269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:17.408440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:18.409089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:19.409276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:20.409379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:21.409758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:22.409740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:23.410256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:24.410357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:25.410526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:26.410821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:27.410984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:28.411190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:29.411355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:30.411446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:31.411616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:32.411977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:33.412121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:34.412580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:35.413601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:36.413918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:37.414018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:38.414927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:39.415026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:40.415420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:41.415587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:42.415895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:43.416052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:44.416441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:45.416612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:46.417169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:47.417330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:48.417433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:49.417594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:50.417902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:51.418065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:52.418849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:53.419005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:54.419116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:55.419234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:56.419550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:57.419653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:58.419835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:42:59.419941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:00.420831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:01.420961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:02.421928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:03.422095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:04.422628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:05.422755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:06.422836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:07.422946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:08.423766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:09.424109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:10.424528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:11.424636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:12.424800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:13.425828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:14.426371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:15.426476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:16.427500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:17.427602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:18.428086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:19.428284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:20.428927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:21.429095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:22.429403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:23.429578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:24.430235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:25.430940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:26.431045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:27.431923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:28.432383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:29.432929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:30.433005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:31.433120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:32.433218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:33.433927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:34.434992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:35.435160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:36.435505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:37.435931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:38.436008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:39.436926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:40.437924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:41.438028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:42.438453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:43.438618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:44.438743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:45.438914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:46.439237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:47.439406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:48.439866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:49.440920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:50.441098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:51.441280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:52.441837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:53.441995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:54.442121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:55.442931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:56.443322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:57.443507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:58.443841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:43:59.444964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:00.445233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:01.445416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:02.445547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:03.445667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:04.446395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:05.446590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:06.447107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:07.447282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:08.447688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:09.447877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:10.447983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:11.448083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:12.448369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:13.448555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:14.449045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:15.449152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:16.449263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:17.449440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:18.449894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:19.450003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:20.450115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:21.450447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:22.450818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:23.450957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:24.451601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:25.451780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:26.451872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:27.452044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:28.452174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:29.452345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:30.452758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:31.452847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:32.453030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:33.453141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:34.453672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:35.453852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:36.454831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:37.454932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:38.455403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:39.455484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:40.455589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:41.455698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:42.456615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:43.456767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:44.457645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:45.457833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:46.458171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:47.458362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:48.459008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:49.459191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:50.459613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:51.459842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:52.460210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:53.460301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:54.460860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:55.461053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:56.461346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:57.461516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:58.461601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:44:59.461820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:00.462191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:01.462361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:02.463026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/21/25 15:45:03.324
  STEP: Removing cronjob @ 05/21/25 15:45:03.327
  I0521 15:45:03.331023 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4286" for this suite. @ 05/21/25 15:45:03.333
• [300.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 05/21/25 15:45:03.337
  I0521 15:45:03.337931 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:45:03.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:45:03.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:45:03.35
  STEP: Setting up server cert @ 05/21/25 15:45:03.366
  E0521 15:45:03.463935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:45:03.653
  STEP: Deploying the webhook pod @ 05/21/25 15:45:03.657
  STEP: Wait for the deployment to be ready @ 05/21/25 15:45:03.668
  I0521 15:45:03.672888 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:45:04.464678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:05.464844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:45:05.679
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:45:05.695
  E0521 15:45:06.464860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:45:06.696142 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/21/25 15:45:06.7
  STEP: create a pod that should be denied by the webhook @ 05/21/25 15:45:06.714
  STEP: create a pod that causes the webhook to hang @ 05/21/25 15:45:06.726
  E0521 15:45:07.464895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:08.465080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:09.465267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:10.465437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:11.465635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:12.465836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:13.466024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:14.466108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:15.466306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:16.466484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/21/25 15:45:16.732
  STEP: create a configmap that should be admitted by the webhook @ 05/21/25 15:45:16.743
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/21/25 15:45:16.753
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/21/25 15:45:16.759
  STEP: create a namespace that bypass the webhook @ 05/21/25 15:45:16.763
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/21/25 15:45:16.771
  I0521 15:45:16.819943 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1377" for this suite. @ 05/21/25 15:45:16.823
  STEP: Destroying namespace "webhook-markers-2007" for this suite. @ 05/21/25 15:45:16.828
  STEP: Destroying namespace "exempted-namespace-3663" for this suite. @ 05/21/25 15:45:16.832
• [13.500 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/21/25 15:45:16.837
  I0521 15:45:16.838000 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename watch @ 05/21/25 15:45:16.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:45:16.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:45:16.846
  STEP: creating a watch on configmaps with label A @ 05/21/25 15:45:16.849
  STEP: creating a watch on configmaps with label B @ 05/21/25 15:45:16.85
  STEP: creating a watch on configmaps with label A or B @ 05/21/25 15:45:16.851
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/21/25 15:45:16.851
  I0521 15:45:16.857090 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18800 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:45:16.857211 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18800 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/21/25 15:45:16.857
  I0521 15:45:16.861925 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18801 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:45:16.862053 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18801 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/21/25 15:45:16.862
  I0521 15:45:16.866752 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18802 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:45:16.866841 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18802 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/21/25 15:45:16.866
  I0521 15:45:16.870106 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18803 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:45:16.870151 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7772  a43145ca-2b9e-483d-b88b-6279c61ae111 18803 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/21/25 15:45:16.87
  I0521 15:45:16.873189 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7772  92cc9f0c-c0fa-449e-9acc-80f65c8821ab 18804 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:45:16.873271 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7772  92cc9f0c-c0fa-449e-9acc-80f65c8821ab 18804 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0521 15:45:17.466790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:18.467235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:19.467433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:20.467632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:21.467822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:22.467948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:23.468708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:24.468898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:25.469111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:26.469314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/21/25 15:45:26.873
  I0521 15:45:26.878070 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7772  92cc9f0c-c0fa-449e-9acc-80f65c8821ab 18848 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 15:45:26.878114 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7772  92cc9f0c-c0fa-449e-9acc-80f65c8821ab 18848 0 2025-05-21 15:45:16 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-21 15:45:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0521 15:45:27.469385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:28.469925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:29.470978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:30.471060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:31.471191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:32.471379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:33.471949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:34.472110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:35.472950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:36.473119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:45:36.878637 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7772" for this suite. @ 05/21/25 15:45:36.882
• [20.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/21/25 15:45:36.886
  I0521 15:45:36.886073 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:45:36.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:45:36.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:45:36.897
  STEP: Creating a pod to test downward api env vars @ 05/21/25 15:45:36.899
  E0521 15:45:37.473215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:38.473931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:39.474399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:40.474570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:45:40.914
  I0521 15:45:40.916327 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-a1b4b37d-ed34-4bf6-b6d7-972da50ae027 container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:45:40.929
  I0521 15:45:40.940076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5027" for this suite. @ 05/21/25 15:45:40.942
• [4.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 05/21/25 15:45:40.948
  I0521 15:45:40.948262 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:45:40.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:45:40.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:45:40.957
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1992 @ 05/21/25 15:45:40.959
  STEP: changing the ExternalName service to type=NodePort @ 05/21/25 15:45:40.965
  I0521 15:45:40.996173 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 15:45:41.474768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:42.474850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:45:42.998833 23 resource.go:361] Creating new exec pod
  E0521 15:45:43.476066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:44.476182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:45:45.012819 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-1992 exec execpodvcmmc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0521 15:45:45.112369 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.110.203.39) 80 port [tcp/http] succeeded!\n"
  I0521 15:45:45.112404 23 builder.go:147] stdout: ""
  E0521 15:45:45.476926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:45:46.013594 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-1992 exec execpodvcmmc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0521 15:45:46.109887 23 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 externalname-service 80\n hostName\nConnection to externalname-service (10.110.203.39) 80 port [tcp/http] succeeded!\n"
  I0521 15:45:46.109938 23 builder.go:147] stdout: "externalname-service-5c56f95d8-b9pgn"
  I0521 15:45:46.110024 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-1992 exec execpodvcmmc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.203.39 80'
  I0521 15:45:46.204328 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.203.39 80\nConnection to 10.110.203.39 80 port [tcp/http] succeeded!\n"
  I0521 15:45:46.204365 23 builder.go:147] stdout: "externalname-service-5c56f95d8-42527"
  I0521 15:45:46.204444 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-1992 exec execpodvcmmc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.54.132 31474'
  I0521 15:45:46.295679 23 builder.go:146] stderr: "+ + nc -v -t -w 2 10.0.54.132 31474\necho hostName\nConnection to 10.0.54.132 31474 port [tcp/*] succeeded!\n"
  I0521 15:45:46.295735 23 builder.go:147] stdout: "externalname-service-5c56f95d8-42527"
  I0521 15:45:46.295798 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-1992 exec execpodvcmmc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.60.98 31474'
  I0521 15:45:46.390816 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.60.98 31474\nConnection to 10.0.60.98 31474 port [tcp/*] succeeded!\n"
  I0521 15:45:46.390857 23 builder.go:147] stdout: "externalname-service-5c56f95d8-b9pgn"
  I0521 15:45:46.391097 23 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I0521 15:45:46.412852 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1992" for this suite. @ 05/21/25 15:45:46.415
• [5.471 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/21/25 15:45:46.419
  I0521 15:45:46.419148 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/21/25 15:45:46.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:45:46.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:45:46.431
  I0521 15:45:46.433383 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:45:46.477068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:47.477845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:48.477994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:45:49.470268 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6577" for this suite. @ 05/21/25 15:45:49.473
• [3.058 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/21/25 15:45:49.476
  I0521 15:45:49.476922 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:45:49.477
  E0521 15:45:49.478933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:45:49.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:45:49.486
  STEP: Creating secret with name s-test-opt-del-2c30bc82-faba-4391-b489-07ad26efb6c2 @ 05/21/25 15:45:49.573
  STEP: Creating secret with name s-test-opt-upd-5bbbaac6-bee8-4322-b082-ecd02e0fa9f1 @ 05/21/25 15:45:49.577
  STEP: Creating the pod @ 05/21/25 15:45:49.582
  E0521 15:45:50.479245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:51.479929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-2c30bc82-faba-4391-b489-07ad26efb6c2 @ 05/21/25 15:45:51.612
  STEP: Updating secret s-test-opt-upd-5bbbaac6-bee8-4322-b082-ecd02e0fa9f1 @ 05/21/25 15:45:51.616
  STEP: Creating secret with name s-test-opt-create-2f53ab10-5ff0-4927-9be9-602da70ff04a @ 05/21/25 15:45:51.621
  STEP: waiting to observe update in volume @ 05/21/25 15:45:51.625
  E0521 15:45:52.480772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:53.480883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:54.481034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:55.481246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:56.481874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:57.482080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:58.482174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:45:59.482357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:00.482388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:01.482584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:02.482966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:03.483132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:04.484209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:05.484400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:06.484620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:07.484836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:08.485248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:09.485350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:10.485912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:11.486118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:12.486452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:13.487003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:14.487126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:15.487297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:16.488401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:17.488595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:18.489005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:19.489202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:20.489287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:21.489692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:22.489808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:23.489967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:24.490011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:25.490184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:26.490553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:27.490735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:28.490831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:29.490991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:30.492009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:31.492148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:32.492170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:33.492283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:34.492591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:35.492782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:36.493215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:37.493386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:38.493631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:39.493827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:40.494651      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:41.494824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:42.495258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:43.495368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:44.496389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:45.496566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:46.497186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:47.497373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:48.497929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:49.498024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:50.498239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:51.498348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:52.498548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:53.498654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:54.499084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:55.499182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:56.499594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:57.499772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:58.499834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:46:59.499993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:00.500255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:01.500922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:02.501031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:03.501093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:04.502046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:05.502229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:06.503196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:07.503352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:07.882992 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4708" for this suite. @ 05/21/25 15:47:07.885
• [78.412 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 05/21/25 15:47:07.889
  I0521 15:47:07.889546 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:47:07.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:07.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:07.901
  STEP: Create set of pods @ 05/21/25 15:47:07.903
  I0521 15:47:07.909001 23 pods.go:874] created test-pod-1
  I0521 15:47:07.915056 23 pods.go:874] created test-pod-2
  I0521 15:47:07.921410 23 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/21/25 15:47:07.921
  E0521 15:47:08.504005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:09.504076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/21/25 15:47:09.943
  I0521 15:47:09.945785 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0521 15:47:10.504287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:10.947665 23 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0521 15:47:11.505332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:11.947287 23 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0521 15:47:12.505835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:12.998577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9512" for this suite. @ 05/21/25 15:47:13.001
• [5.116 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 05/21/25 15:47:13.005
  I0521 15:47:13.006207 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:47:13.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:13.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:13.018
  STEP: Setting up server cert @ 05/21/25 15:47:13.044
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:47:13.295
  STEP: Deploying the webhook pod @ 05/21/25 15:47:13.3
  STEP: Wait for the deployment to be ready @ 05/21/25 15:47:13.309
  I0521 15:47:13.315931 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:47:13.506167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:14.506249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:47:15.322
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:47:15.335
  E0521 15:47:15.506895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:16.336108 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/21/25 15:47:16.339
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/21/25 15:47:16.354
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/21/25 15:47:16.363
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/21/25 15:47:16.371
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/21/25 15:47:16.377
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/21/25 15:47:16.383
  I0521 15:47:16.422882 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5595" for this suite. @ 05/21/25 15:47:16.425
  STEP: Destroying namespace "webhook-markers-1801" for this suite. @ 05/21/25 15:47:16.433
• [3.431 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 05/21/25 15:47:16.437
  I0521 15:47:16.437417 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:47:16.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:16.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:16.449
  STEP: creating a replication controller @ 05/21/25 15:47:16.451
  I0521 15:47:16.451615 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 create -f -'
  E0521 15:47:16.509108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:16.563854 23 builder.go:146] stderr: ""
  I0521 15:47:16.563887 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/21/25 15:47:16.563
  I0521 15:47:16.563983 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0521 15:47:16.622949 23 builder.go:146] stderr: ""
  I0521 15:47:16.622987 23 builder.go:147] stdout: "update-demo-nautilus-nfpcn update-demo-nautilus-z6bnv "
  I0521 15:47:16.623031 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-nfpcn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:47:16.677489 23 builder.go:146] stderr: ""
  I0521 15:47:16.677534 23 builder.go:147] stdout: ""
  I0521 15:47:16.677550 23 kubectl.go:2505] update-demo-nautilus-nfpcn is created but not running
  E0521 15:47:17.510153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:18.510128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:19.510257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:20.510344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:21.510477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:21.677709 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0521 15:47:21.736099 23 builder.go:146] stderr: ""
  I0521 15:47:21.736146 23 builder.go:147] stdout: "update-demo-nautilus-nfpcn update-demo-nautilus-z6bnv "
  I0521 15:47:21.736197 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-nfpcn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:47:21.790191 23 builder.go:146] stderr: ""
  I0521 15:47:21.790230 23 builder.go:147] stdout: "true"
  I0521 15:47:21.790277 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-nfpcn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:47:21.840742 23 builder.go:146] stderr: ""
  I0521 15:47:21.840778 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:47:21.840793 23 kubectl.go:2396] validating pod update-demo-nautilus-nfpcn
  I0521 15:47:21.847569 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:47:21.847624 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:47:21.847640 23 kubectl.go:2523] update-demo-nautilus-nfpcn is verified up and running
  I0521 15:47:21.847684 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-z6bnv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:47:21.905733 23 builder.go:146] stderr: ""
  I0521 15:47:21.905769 23 builder.go:147] stdout: "true"
  I0521 15:47:21.905806 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-z6bnv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:47:21.957099 23 builder.go:146] stderr: ""
  I0521 15:47:21.957184 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:47:21.957200 23 kubectl.go:2396] validating pod update-demo-nautilus-z6bnv
  I0521 15:47:21.962041 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:47:21.962093 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:47:21.962110 23 kubectl.go:2523] update-demo-nautilus-z6bnv is verified up and running
  STEP: scaling down the replication controller @ 05/21/25 15:47:21.962
  I0521 15:47:21.963311 23 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0521 15:47:21.963364 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0521 15:47:22.510954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:23.023906 23 builder.go:146] stderr: ""
  I0521 15:47:23.023958 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/21/25 15:47:23.023
  I0521 15:47:23.024040 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0521 15:47:23.077350 23 builder.go:146] stderr: ""
  I0521 15:47:23.077410 23 builder.go:147] stdout: "update-demo-nautilus-z6bnv "
  I0521 15:47:23.077466 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-z6bnv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:47:23.132257 23 builder.go:146] stderr: ""
  I0521 15:47:23.132329 23 builder.go:147] stdout: "true"
  I0521 15:47:23.132403 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-z6bnv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:47:23.185084 23 builder.go:146] stderr: ""
  I0521 15:47:23.185280 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:47:23.185308 23 kubectl.go:2396] validating pod update-demo-nautilus-z6bnv
  I0521 15:47:23.188163 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:47:23.188204 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:47:23.188218 23 kubectl.go:2523] update-demo-nautilus-z6bnv is verified up and running
  STEP: scaling up the replication controller @ 05/21/25 15:47:23.188
  I0521 15:47:23.189328 23 kubectl.go:320] scanned /root for discovery docs: <nil>
  I0521 15:47:23.189368 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0521 15:47:23.511949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:24.248995 23 builder.go:146] stderr: ""
  I0521 15:47:24.249034 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/21/25 15:47:24.249
  I0521 15:47:24.249135 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0521 15:47:24.303258 23 builder.go:146] stderr: ""
  I0521 15:47:24.303309 23 builder.go:147] stdout: "update-demo-nautilus-k7h7s update-demo-nautilus-z6bnv "
  I0521 15:47:24.303374 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-k7h7s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:47:24.354749 23 builder.go:146] stderr: ""
  I0521 15:47:24.354787 23 builder.go:147] stdout: "true"
  I0521 15:47:24.354822 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-k7h7s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:47:24.406451 23 builder.go:146] stderr: ""
  I0521 15:47:24.406488 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:47:24.406499 23 kubectl.go:2396] validating pod update-demo-nautilus-k7h7s
  I0521 15:47:24.411562 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:47:24.411603 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:47:24.411618 23 kubectl.go:2523] update-demo-nautilus-k7h7s is verified up and running
  I0521 15:47:24.411664 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-z6bnv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:47:24.460971 23 builder.go:146] stderr: ""
  I0521 15:47:24.461008 23 builder.go:147] stdout: "true"
  I0521 15:47:24.461228 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods update-demo-nautilus-z6bnv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:47:24.511030 23 builder.go:146] stderr: ""
  I0521 15:47:24.511062 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:47:24.511073 23 kubectl.go:2396] validating pod update-demo-nautilus-z6bnv
  E0521 15:47:24.512176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:24.513980 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:47:24.514024 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:47:24.514039 23 kubectl.go:2523] update-demo-nautilus-z6bnv is verified up and running
  STEP: using delete to clean up resources @ 05/21/25 15:47:24.514
  I0521 15:47:24.514114 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 delete --grace-period=0 --force -f -'
  I0521 15:47:24.566379 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:47:24.566456 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0521 15:47:24.566502 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get rc,svc -l name=update-demo --no-headers'
  I0521 15:47:24.637914 23 builder.go:146] stderr: "No resources found in kubectl-6070 namespace.\n"
  I0521 15:47:24.637961 23 builder.go:147] stdout: ""
  I0521 15:47:24.638009 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-6070 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0521 15:47:24.696081 23 builder.go:146] stderr: ""
  I0521 15:47:24.696155 23 builder.go:147] stdout: ""
  I0521 15:47:24.696351 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6070" for this suite. @ 05/21/25 15:47:24.699
• [8.266 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/21/25 15:47:24.703
  I0521 15:47:24.703563 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename discovery @ 05/21/25 15:47:24.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:24.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:24.716
  STEP: Setting up server cert @ 05/21/25 15:47:24.719
  I0521 15:47:25.400750 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0521 15:47:25.401639 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0521 15:47:25.401664 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0521 15:47:25.401672 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0521 15:47:25.401679 23 discovery.go:139] Checking APIGroup: apps
  I0521 15:47:25.402483 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0521 15:47:25.402503 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0521 15:47:25.402510 23 discovery.go:154] apps/v1 matches apps/v1
  I0521 15:47:25.402518 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0521 15:47:25.403353 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0521 15:47:25.403376 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0521 15:47:25.403388 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0521 15:47:25.403398 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0521 15:47:25.404146 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0521 15:47:25.404165 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0521 15:47:25.404173 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0521 15:47:25.404180 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0521 15:47:25.404966 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0521 15:47:25.404984 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0521 15:47:25.404991 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0521 15:47:25.405001 23 discovery.go:139] Checking APIGroup: autoscaling
  I0521 15:47:25.405805 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0521 15:47:25.405828 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0521 15:47:25.405838 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0521 15:47:25.405849 23 discovery.go:139] Checking APIGroup: batch
  I0521 15:47:25.406578 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0521 15:47:25.406597 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0521 15:47:25.406605 23 discovery.go:154] batch/v1 matches batch/v1
  I0521 15:47:25.406614 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0521 15:47:25.407343 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0521 15:47:25.407363 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0521 15:47:25.407371 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0521 15:47:25.407382 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0521 15:47:25.408132 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0521 15:47:25.408151 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0521 15:47:25.408159 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0521 15:47:25.408169 23 discovery.go:139] Checking APIGroup: policy
  I0521 15:47:25.408923 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0521 15:47:25.408945 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0521 15:47:25.408953 23 discovery.go:154] policy/v1 matches policy/v1
  I0521 15:47:25.408960 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0521 15:47:25.409894 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0521 15:47:25.409912 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0521 15:47:25.409922 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0521 15:47:25.409929 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0521 15:47:25.410643 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0521 15:47:25.410660 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0521 15:47:25.410667 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0521 15:47:25.410676 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0521 15:47:25.411423 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0521 15:47:25.411440 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0521 15:47:25.411447 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0521 15:47:25.411454 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0521 15:47:25.412192 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0521 15:47:25.412211 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0521 15:47:25.412221 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0521 15:47:25.412230 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0521 15:47:25.412985 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0521 15:47:25.413004 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0521 15:47:25.413012 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0521 15:47:25.413019 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0521 15:47:25.413801 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0521 15:47:25.413820 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0521 15:47:25.413827 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0521 15:47:25.413834 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0521 15:47:25.414523 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0521 15:47:25.414543 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0521 15:47:25.414555 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0521 15:47:25.414565 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0521 15:47:25.415306 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0521 15:47:25.415326 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0521 15:47:25.415337 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0521 15:47:25.415347 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0521 15:47:25.416085 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0521 15:47:25.416109 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0521 15:47:25.416117 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0521 15:47:25.416124 23 discovery.go:139] Checking APIGroup: etcd.k0sproject.io
  I0521 15:47:25.416900 23 discovery.go:147] PreferredVersion.GroupVersion: etcd.k0sproject.io/v1beta1
  I0521 15:47:25.416919 23 discovery.go:148] Versions found [{etcd.k0sproject.io/v1beta1 v1beta1}]
  I0521 15:47:25.416926 23 discovery.go:154] etcd.k0sproject.io/v1beta1 matches etcd.k0sproject.io/v1beta1
  I0521 15:47:25.416936 23 discovery.go:139] Checking APIGroup: helm.k0sproject.io
  I0521 15:47:25.417663 23 discovery.go:147] PreferredVersion.GroupVersion: helm.k0sproject.io/v1beta1
  I0521 15:47:25.417680 23 discovery.go:148] Versions found [{helm.k0sproject.io/v1beta1 v1beta1}]
  I0521 15:47:25.417687 23 discovery.go:154] helm.k0sproject.io/v1beta1 matches helm.k0sproject.io/v1beta1
  I0521 15:47:25.417695 23 discovery.go:139] Checking APIGroup: autopilot.k0sproject.io
  I0521 15:47:25.418438 23 discovery.go:147] PreferredVersion.GroupVersion: autopilot.k0sproject.io/v1beta2
  I0521 15:47:25.418458 23 discovery.go:148] Versions found [{autopilot.k0sproject.io/v1beta2 v1beta2}]
  I0521 15:47:25.418470 23 discovery.go:154] autopilot.k0sproject.io/v1beta2 matches autopilot.k0sproject.io/v1beta2
  I0521 15:47:25.418479 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0521 15:47:25.419229 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0521 15:47:25.419250 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0521 15:47:25.419258 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0521 15:47:25.419363 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6083" for this suite. @ 05/21/25 15:47:25.421
• [0.722 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 05/21/25 15:47:25.425
  I0521 15:47:25.425756 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:47:25.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:25.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:25.435
  STEP: starting the proxy server @ 05/21/25 15:47:25.437
  I0521 15:47:25.437703 23 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9715 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/21/25 15:47:25.482
  I0521 15:47:25.489211 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0521 15:47:25.490518 23 kubectl.go:2232] kubectl proxy stderr: W0521 15:47:25.482599     624 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0521 15:47:25.490516 23 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:32921

  STEP: Destroying namespace "kubectl-9715" for this suite. @ 05/21/25 15:47:25.492
• [0.070 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 05/21/25 15:47:25.496
  I0521 15:47:25.496134 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:47:25.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:25.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:25.505
  E0521 15:47:25.512585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 05/21/25 15:47:25.517
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:47:26.332
  STEP: Deploying the webhook pod @ 05/21/25 15:47:26.336
  STEP: Wait for the deployment to be ready @ 05/21/25 15:47:26.347
  I0521 15:47:26.352185 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:47:26.513341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:27.513428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:47:28.358
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:47:28.372
  E0521 15:47:28.513932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:29.372773 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/21/25 15:47:29.432
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/21/25 15:47:29.465
  STEP: Deleting the collection of validation webhooks @ 05/21/25 15:47:29.495
  E0521 15:47:29.514438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/21/25 15:47:29.528
  I0521 15:47:29.570073 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9803" for this suite. @ 05/21/25 15:47:29.572
  STEP: Destroying namespace "webhook-markers-4399" for this suite. @ 05/21/25 15:47:29.578
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/21/25 15:47:29.583
  I0521 15:47:29.583741 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 15:47:29.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:29.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:29.594
  STEP: Creating projection with secret that has name secret-emptykey-test-5a0c0aa1-a6d8-46a2-b646-eb5991f96f5f @ 05/21/25 15:47:29.597
  I0521 15:47:29.599061 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7513" for this suite. @ 05/21/25 15:47:29.673
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 05/21/25 15:47:29.681
  I0521 15:47:29.681405 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:47:29.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:29.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:29.692
  STEP: Creating the pod @ 05/21/25 15:47:29.695
  E0521 15:47:30.515054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:31.515146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:32.223866 23 pod_client.go:173] Successfully updated pod "labelsupdate4aee4889-446d-409a-92ca-4fd60f1ddc77"
  E0521 15:47:32.516118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:33.516311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:34.516412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:35.516611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:36.239548 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5156" for this suite. @ 05/21/25 15:47:36.241
• [6.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/21/25 15:47:36.246
  I0521 15:47:36.246492 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename runtimeclass @ 05/21/25 15:47:36.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:36.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:36.259
  I0521 15:47:36.265561 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2185" for this suite. @ 05/21/25 15:47:36.343
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 05/21/25 15:47:36.349
  I0521 15:47:36.349506 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:47:36.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:36.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:36.359
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/21/25 15:47:36.362
  E0521 15:47:36.516669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:37.516872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:47:38.374
  I0521 15:47:38.376272 23 output.go:207] Trying to get logs from node worker-0 pod pod-78bf4354-09a4-4f84-b903-3dbaf3c88876 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:47:38.38
  I0521 15:47:38.390903 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2160" for this suite. @ 05/21/25 15:47:38.393
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 05/21/25 15:47:38.397
  I0521 15:47:38.398043 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:47:38.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:38.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:38.407
  STEP: creating service in namespace services-7912 @ 05/21/25 15:47:38.409
  STEP: creating service affinity-clusterip in namespace services-7912 @ 05/21/25 15:47:38.409
  I0521 15:47:38.436447 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 15:47:38.518120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:39.518318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:40.446890 23 resource.go:361] Creating new exec pod
  E0521 15:47:40.518510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:41.518949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:42.460100 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7912 exec execpod-affinity89zw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0521 15:47:42.519458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:42.558082 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.105.200.44) 80 port [tcp/http] succeeded!\n"
  I0521 15:47:42.558117 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:47:42.558189 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7912 exec execpod-affinity89zw4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.200.44 80'
  I0521 15:47:42.649511 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.105.200.44+  80\necho hostName\nConnection to 10.105.200.44 80 port [tcp/http] succeeded!\n"
  I0521 15:47:42.649574 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:47:42.649642 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7912 exec execpod-affinity89zw4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/ ; done'
  I0521 15:47:42.798698 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.105.200.44:80/\n"
  I0521 15:47:42.798761 23 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr\naffinity-clusterip-6dd57cf8dc-hndzr"
  I0521 15:47:42.798778 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798791 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798801 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798809 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798820 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798832 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798865 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798876 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798889 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798901 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798931 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798939 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798950 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798967 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798978 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.798989 23 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-hndzr
  I0521 15:47:42.799070 23 service.go:4352] Cleaning up the exec pod
  I0521 15:47:42.832794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7912" for this suite. @ 05/21/25 15:47:42.842
• [4.456 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 05/21/25 15:47:42.854
  I0521 15:47:42.854057 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:47:42.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:42.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:42.864
  STEP: Creating configMap with name configmap-test-volume-3569b258-0961-4da2-9a9c-a1bdd3d18a80 @ 05/21/25 15:47:42.867
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:47:42.87
  E0521 15:47:43.520077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:44.520269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:45.520438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:46.520940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:47:46.882
  I0521 15:47:46.885230 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-d38d60f1-a511-4a70-a362-821a36baec68 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:47:46.889
  I0521 15:47:46.903183 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3990" for this suite. @ 05/21/25 15:47:46.905
• [4.055 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/21/25 15:47:46.909
  I0521 15:47:46.909280 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:47:46.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:46.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:46.921
  I0521 15:47:47.010274 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/21/25 15:47:47.014
  I0521 15:47:47.016676 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:47:47.016699 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/21/25 15:47:47.016
  I0521 15:47:47.117947 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:47:47.117979 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:47:47.521959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:48.119578 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:47:48.119615 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/21/25 15:47:48.121
  I0521 15:47:48.139101 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:47:48.139140 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/21/25 15:47:48.139
  I0521 15:47:48.220082 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:47:48.220115 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:47:48.522423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:49.155365 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:47:49.155397 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:47:49.522704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:50.156168 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:47:50.156206 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/21/25 15:47:50.16
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7751, will wait for the garbage collector to delete the pods @ 05/21/25 15:47:50.16
  I0521 15:47:50.215987 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.830521ms
  I0521 15:47:50.316126 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.134345ms
  E0521 15:47:50.522756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:51.523726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:51.719502 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:47:51.719535 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0521 15:47:51.721573 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19909"},"items":null}

  I0521 15:47:51.723197 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19909"},"items":null}

  I0521 15:47:51.735253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7751" for this suite. @ 05/21/25 15:47:51.737
• [4.835 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/21/25 15:47:51.744
  I0521 15:47:51.744182 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename controllerrevisions @ 05/21/25 15:47:51.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:51.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:51.754
  STEP: Creating DaemonSet "e2e-rg5t7-daemon-set" @ 05/21/25 15:47:51.829
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/21/25 15:47:51.834
  I0521 15:47:51.928296 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rg5t7-daemon-set: 0
  I0521 15:47:51.928330 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:47:52.523830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:52.840792 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rg5t7-daemon-set: 1
  I0521 15:47:52.840816 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:47:53.523900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:53.841174 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rg5t7-daemon-set: 2
  I0521 15:47:53.841211 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-rg5t7-daemon-set
  STEP: Confirm DaemonSet "e2e-rg5t7-daemon-set" successfully created with "daemonset-name=e2e-rg5t7-daemon-set" label @ 05/21/25 15:47:53.843
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-rg5t7-daemon-set" @ 05/21/25 15:47:53.846
  I0521 15:47:53.848646 23 controller_revision.go:162] Located ControllerRevision: "e2e-rg5t7-daemon-set-67856fcb89"
  STEP: Patching ControllerRevision "e2e-rg5t7-daemon-set-67856fcb89" @ 05/21/25 15:47:53.85
  I0521 15:47:53.854910 23 controller_revision.go:173] e2e-rg5t7-daemon-set-67856fcb89 has been patched
  STEP: Create a new ControllerRevision @ 05/21/25 15:47:53.854
  I0521 15:47:53.860593 23 controller_revision.go:191] Created ControllerRevision: e2e-rg5t7-daemon-set-65d87d9cdf
  STEP: Confirm that there are two ControllerRevisions @ 05/21/25 15:47:53.86
  I0521 15:47:53.860659 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0521 15:47:53.862310 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-rg5t7-daemon-set-67856fcb89" @ 05/21/25 15:47:53.862
  STEP: Confirm that there is only one ControllerRevision @ 05/21/25 15:47:53.866
  I0521 15:47:53.866961 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0521 15:47:53.868527 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-rg5t7-daemon-set-65d87d9cdf" @ 05/21/25 15:47:53.869
  I0521 15:47:53.875022 23 controller_revision.go:220] e2e-rg5t7-daemon-set-65d87d9cdf has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/21/25 15:47:53.875
  I0521 15:47:53.881170      23 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 05/21/25 15:47:53.881
  I0521 15:47:53.881250 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0521 15:47:53.897257 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-rg5t7-daemon-set-65d87d9cdf=updated" @ 05/21/25 15:47:53.897
  STEP: Confirm that there is only one ControllerRevision @ 05/21/25 15:47:53.906
  I0521 15:47:53.906580 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0521 15:47:53.949828 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0521 15:47:53.951588 23 controller_revision.go:246] ControllerRevision "e2e-rg5t7-daemon-set-5464fffd48" has revision 3
  STEP: Deleting DaemonSet "e2e-rg5t7-daemon-set" @ 05/21/25 15:47:53.953
  STEP: deleting DaemonSet.extensions e2e-rg5t7-daemon-set in namespace controllerrevisions-3101, will wait for the garbage collector to delete the pods @ 05/21/25 15:47:53.953
  I0521 15:47:54.010253 23 resources.go:139] Deleting DaemonSet.extensions e2e-rg5t7-daemon-set took: 4.863847ms
  I0521 15:47:54.110651 23 resources.go:163] Terminating DaemonSet.extensions e2e-rg5t7-daemon-set pods took: 100.396342ms
  E0521 15:47:54.524243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:47:55.213239 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-rg5t7-daemon-set: 0
  I0521 15:47:55.213272 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-rg5t7-daemon-set
  I0521 15:47:55.215245 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19976"},"items":null}

  I0521 15:47:55.216822 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19976"},"items":null}

  I0521 15:47:55.226270 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3101" for this suite. @ 05/21/25 15:47:55.231
• [3.492 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:331
  STEP: Creating a kubernetes client @ 05/21/25 15:47:55.236
  I0521 15:47:55.236215 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-pred @ 05/21/25 15:47:55.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:55.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:55.248
  I0521 15:47:55.251144 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0521 15:47:55.294215 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0521 15:47:55.296297 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0521 15:47:55.299300 23 predicates.go:956] coredns-6c77c7d548-vnnw6 from kube-system started at 2025-05-21 15:00:59 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.299324 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 15:47:55.299336 23 predicates.go:956] konnectivity-agent-p9v68 from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.299347 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 15:47:55.299359 23 predicates.go:956] kube-proxy-jqp49 from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.299368 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 15:47:55.299380 23 predicates.go:956] kube-router-zbf2d from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.299392 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 15:47:55.299404 23 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-21 15:01:05 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.299413 23 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0521 15:47:55.299424 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-t9t5j from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:47:55.299434 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:47:55.299443 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0521 15:47:55.299454 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0521 15:47:55.302027 23 predicates.go:956] coredns-6c77c7d548-xlnk6 from kube-system started at 2025-05-21 15:01:37 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.302053 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 15:47:55.302062 23 predicates.go:956] konnectivity-agent-fn5zg from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.302071 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 15:47:55.302082 23 predicates.go:956] kube-proxy-2phkk from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.302116 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 15:47:55.302126 23 predicates.go:956] kube-router-8kq5b from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.302135 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 15:47:55.302146 23 predicates.go:956] metrics-server-7db8586f5-2prf5 from kube-system started at 2025-05-21 15:00:58 +0000 UTC (1 container statuses recorded)
  I0521 15:47:55.302160 23 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0521 15:47:55.302172 23 predicates.go:956] sonobuoy-e2e-job-29ce0f45b43640ca from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:47:55.302182 23 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0521 15:47:55.302193 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:47:55.302203 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-78s9t from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 15:47:55.302214 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 15:47:55.302224 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node worker-0 @ 05/21/25 15:47:55.312
  STEP: verifying the node has the label node worker-1 @ 05/21/25 15:47:55.32
  I0521 15:47:55.401060 23 predicates.go:371] Pod coredns-6c77c7d548-vnnw6 requesting resource cpu=100m on Node worker-0
  I0521 15:47:55.401087 23 predicates.go:371] Pod coredns-6c77c7d548-xlnk6 requesting resource cpu=100m on Node worker-1
  I0521 15:47:55.401095 23 predicates.go:371] Pod konnectivity-agent-fn5zg requesting resource cpu=0m on Node worker-1
  I0521 15:47:55.401107 23 predicates.go:371] Pod konnectivity-agent-p9v68 requesting resource cpu=0m on Node worker-0
  I0521 15:47:55.401117 23 predicates.go:371] Pod kube-proxy-2phkk requesting resource cpu=0m on Node worker-1
  I0521 15:47:55.401128 23 predicates.go:371] Pod kube-proxy-jqp49 requesting resource cpu=0m on Node worker-0
  I0521 15:47:55.401137 23 predicates.go:371] Pod kube-router-8kq5b requesting resource cpu=250m on Node worker-1
  I0521 15:47:55.401147 23 predicates.go:371] Pod kube-router-zbf2d requesting resource cpu=250m on Node worker-0
  I0521 15:47:55.401157 23 predicates.go:371] Pod metrics-server-7db8586f5-2prf5 requesting resource cpu=10m on Node worker-1
  I0521 15:47:55.401167 23 predicates.go:371] Pod sonobuoy requesting resource cpu=0m on Node worker-0
  I0521 15:47:55.401178 23 predicates.go:371] Pod sonobuoy-e2e-job-29ce0f45b43640ca requesting resource cpu=0m on Node worker-1
  I0521 15:47:55.401193 23 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-78s9t requesting resource cpu=0m on Node worker-1
  I0521 15:47:55.401212 23 predicates.go:371] Pod sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-t9t5j requesting resource cpu=0m on Node worker-0
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/21/25 15:47:55.401
  I0521 15:47:55.401254 23 predicates.go:381] Creating a pod which consumes cpu=2555m on Node worker-0
  I0521 15:47:55.409195 23 predicates.go:381] Creating a pod which consumes cpu=2548m on Node worker-1
  E0521 15:47:55.525156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:56.525235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/21/25 15:47:57.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad.184195788edc700c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7748/filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad to worker-1] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad.18419578a79de02b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad.18419578a91776c5], Reason = [Created], Message = [Created container: filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad.18419578ac8cf5aa], Reason = [Started], Message = [Started container filler-pod-47700907-c5ab-40b6-8d6a-299141edf4ad] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9.184195788e56f567], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7748/filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9 to worker-0] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9.18419578a6f64efd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9.18419578a858aa6a], Reason = [Created], Message = [Created container: filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9.18419578abb0af79], Reason = [Started], Message = [Started container filler-pod-b1fa71b9-9f09-4170-a946-35b7ac7844d9] @ 05/21/25 15:47:57.425
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18419579069a5b27], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/21/25 15:47:57.436
  E0521 15:47:57.525313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node worker-0 @ 05/21/25 15:47:58.434
  STEP: verifying the node doesn't have the label node @ 05/21/25 15:47:58.445
  STEP: removing the label node off the node worker-1 @ 05/21/25 15:47:58.447
  STEP: verifying the node doesn't have the label node @ 05/21/25 15:47:58.455
  I0521 15:47:58.458045 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7748" for this suite. @ 05/21/25 15:47:58.46
• [3.228 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/21/25 15:47:58.464
  I0521 15:47:58.464289 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replicaset @ 05/21/25 15:47:58.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:47:58.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:47:58.477
  I0521 15:47:58.479660 23 replica_set.go:192] Creating ReplicaSet my-hostname-basic-c55f7294-be90-480d-87ab-220a72633351
  I0521 15:47:58.491127 23 resource.go:81] Pod name my-hostname-basic-c55f7294-be90-480d-87ab-220a72633351: Found 1 pods out of 1
  I0521 15:47:58.491226 23 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-c55f7294-be90-480d-87ab-220a72633351" is running
  E0521 15:47:58.525589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:47:59.525710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:00.500621 23 replica_set.go:221] Pod "my-hostname-basic-c55f7294-be90-480d-87ab-220a72633351-rrkxg" is running (conditions: [])
  I0521 15:48:00.500659 23 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/21/25 15:48:00.5
  I0521 15:48:00.509921 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3095" for this suite. @ 05/21/25 15:48:00.512
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 05/21/25 15:48:00.516
  I0521 15:48:00.516632 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 15:48:00.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:00.523
  E0521 15:48:00.525938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:00.525
  I0521 15:48:00.528909 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:48:01.526600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/21/25 15:48:01.74
  I0521 15:48:01.740405 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-8233 --namespace=crd-publish-openapi-8233 create -f -'
  E0521 15:48:02.526969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:03.528070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:03.820638 23 builder.go:146] stderr: ""
  I0521 15:48:03.820686 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0521 15:48:03.820761 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-8233 --namespace=crd-publish-openapi-8233 delete e2e-test-crd-publish-openapi-3244-crds test-cr'
  I0521 15:48:03.878928 23 builder.go:146] stderr: ""
  I0521 15:48:03.879146 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0521 15:48:03.879198 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-8233 --namespace=crd-publish-openapi-8233 apply -f -'
  I0521 15:48:03.936084 23 builder.go:146] stderr: ""
  I0521 15:48:03.936138 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0521 15:48:03.936180 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-8233 --namespace=crd-publish-openapi-8233 delete e2e-test-crd-publish-openapi-3244-crds test-cr'
  I0521 15:48:03.993287 23 builder.go:146] stderr: ""
  I0521 15:48:03.993326 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3244-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/21/25 15:48:03.993
  I0521 15:48:03.993409 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-8233 explain e2e-test-crd-publish-openapi-3244-crds'
  I0521 15:48:04.044982 23 builder.go:146] stderr: ""
  I0521 15:48:04.045040 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3244-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0521 15:48:04.528953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:05.307290 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8233" for this suite. @ 05/21/25 15:48:05.313
• [4.800 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 05/21/25 15:48:05.317
  I0521 15:48:05.317165 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:48:05.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:05.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:05.328
  STEP: Setting up server cert @ 05/21/25 15:48:05.343
  E0521 15:48:05.529365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:48:05.597
  STEP: Deploying the webhook pod @ 05/21/25 15:48:05.601
  STEP: Wait for the deployment to be ready @ 05/21/25 15:48:05.611
  I0521 15:48:05.616457 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:48:06.529409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:07.529488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:48:07.622
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:48:07.636
  E0521 15:48:08.530196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:08.637306 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/21/25 15:48:08.64
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/21/25 15:48:08.656
  STEP: Creating a dummy validating-webhook-configuration object @ 05/21/25 15:48:08.67
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/21/25 15:48:08.678
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/21/25 15:48:08.682
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/21/25 15:48:08.692
  I0521 15:48:08.739839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2334" for this suite. @ 05/21/25 15:48:08.742
  STEP: Destroying namespace "webhook-markers-2424" for this suite. @ 05/21/25 15:48:08.746
• [3.433 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 05/21/25 15:48:08.75
  I0521 15:48:08.750535 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:48:08.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:08.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:08.762
  STEP: creating a replication controller @ 05/21/25 15:48:08.765
  I0521 15:48:08.765248 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 create -f -'
  I0521 15:48:08.872983 23 builder.go:146] stderr: ""
  I0521 15:48:08.873022 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/21/25 15:48:08.873
  I0521 15:48:08.873261 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0521 15:48:08.932343 23 builder.go:146] stderr: ""
  I0521 15:48:08.932387 23 builder.go:147] stdout: "update-demo-nautilus-gmklf update-demo-nautilus-z4t76 "
  I0521 15:48:08.932462 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods update-demo-nautilus-gmklf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:48:08.987514 23 builder.go:146] stderr: ""
  I0521 15:48:08.987555 23 builder.go:147] stdout: ""
  I0521 15:48:08.987568 23 kubectl.go:2505] update-demo-nautilus-gmklf is created but not running
  E0521 15:48:09.531252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:10.532188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:11.532359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:12.532563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:13.532707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:13.987831 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0521 15:48:14.048040 23 builder.go:146] stderr: ""
  I0521 15:48:14.048104 23 builder.go:147] stdout: "update-demo-nautilus-gmklf update-demo-nautilus-z4t76 "
  I0521 15:48:14.048152 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods update-demo-nautilus-gmklf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:48:14.098745 23 builder.go:146] stderr: ""
  I0521 15:48:14.098781 23 builder.go:147] stdout: "true"
  I0521 15:48:14.098980 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods update-demo-nautilus-gmklf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:48:14.156325 23 builder.go:146] stderr: ""
  I0521 15:48:14.156363 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:48:14.156378 23 kubectl.go:2396] validating pod update-demo-nautilus-gmklf
  I0521 15:48:14.162057 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:48:14.162105 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:48:14.162119 23 kubectl.go:2523] update-demo-nautilus-gmklf is verified up and running
  I0521 15:48:14.162164 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods update-demo-nautilus-z4t76 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0521 15:48:14.214755 23 builder.go:146] stderr: ""
  I0521 15:48:14.214792 23 builder.go:147] stdout: "true"
  I0521 15:48:14.214966 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods update-demo-nautilus-z4t76 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0521 15:48:14.265476 23 builder.go:146] stderr: ""
  I0521 15:48:14.265516 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0521 15:48:14.265554 23 kubectl.go:2396] validating pod update-demo-nautilus-z4t76
  I0521 15:48:14.270141 23 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I0521 15:48:14.270183 23 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0521 15:48:14.270197 23 kubectl.go:2523] update-demo-nautilus-z4t76 is verified up and running
  STEP: using delete to clean up resources @ 05/21/25 15:48:14.27
  I0521 15:48:14.270268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 delete --grace-period=0 --force -f -'
  I0521 15:48:14.322487 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 15:48:14.322520 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0521 15:48:14.322574 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get rc,svc -l name=update-demo --no-headers'
  I0521 15:48:14.388256 23 builder.go:146] stderr: "No resources found in kubectl-9295 namespace.\n"
  I0521 15:48:14.388300 23 builder.go:147] stdout: ""
  I0521 15:48:14.388378 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-9295 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0521 15:48:14.455973 23 builder.go:146] stderr: ""
  I0521 15:48:14.456036 23 builder.go:147] stdout: ""
  I0521 15:48:14.456199 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9295" for this suite. @ 05/21/25 15:48:14.46
• [5.714 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 05/21/25 15:48:14.464
  I0521 15:48:14.465068 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:48:14.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:14.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:14.477
  STEP: creating service nodeport-test with type=NodePort in namespace services-6409 @ 05/21/25 15:48:14.479
  I0521 15:48:14.506170 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 15:48:14.533393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:15.533680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:16.508869 23 resource.go:361] Creating new exec pod
  E0521 15:48:16.534155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:17.534359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:18.524677 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6409 exec execpod67hs4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0521 15:48:18.535062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:18.619978 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.99.85.225) 80 port [tcp/http] succeeded!\n"
  I0521 15:48:18.620176 23 builder.go:147] stdout: ""
  I0521 15:48:19.524889 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6409 exec execpod67hs4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0521 15:48:19.535166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:19.620265 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.99.85.225) 80 port [tcp/http] succeeded!\n"
  I0521 15:48:19.620303 23 builder.go:147] stdout: "nodeport-test-558c699fb7-fxgsd"
  I0521 15:48:19.620377 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6409 exec execpod67hs4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.85.225 80'
  I0521 15:48:19.717468 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.85.225 80\nConnection to 10.99.85.225 80 port [tcp/http] succeeded!\n"
  I0521 15:48:19.717503 23 builder.go:147] stdout: "nodeport-test-558c699fb7-fxgsd"
  I0521 15:48:19.717749 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6409 exec execpod67hs4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.54.132 31996'
  I0521 15:48:19.814445 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.0.54.132 31996\nConnection to 10.0.54.132 31996 port [tcp/*] succeeded!\n"
  I0521 15:48:19.814491 23 builder.go:147] stdout: "nodeport-test-558c699fb7-fxgsd"
  I0521 15:48:19.814759 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6409 exec execpod67hs4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.60.98 31996'
  I0521 15:48:19.908973 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.60.98 31996\nConnection to 10.0.60.98 31996 port [tcp/*] succeeded!\n"
  I0521 15:48:19.909008 23 builder.go:147] stdout: "nodeport-test-558c699fb7-fxgsd"
  I0521 15:48:19.909206 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6409" for this suite. @ 05/21/25 15:48:19.911
• [5.451 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 05/21/25 15:48:19.915
  I0521 15:48:19.915951 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename disruption @ 05/21/25 15:48:19.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:19.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:19.928
  STEP: Creating a kubernetes client @ 05/21/25 15:48:19.93
  I0521 15:48:19.930985 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename disruption-2 @ 05/21/25 15:48:19.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:19.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:19.942
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:48:19.947
  E0521 15:48:20.536022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:21.536128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:48:21.954
  E0521 15:48:22.536387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:23.536556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:48:23.961
  E0521 15:48:24.537404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:25.537504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/21/25 15:48:25.964
  STEP: listing a collection of PDBs in namespace disruption-2926 @ 05/21/25 15:48:25.966
  STEP: deleting a collection of PDBs @ 05/21/25 15:48:25.968
  STEP: Waiting for the PDB collection to be deleted @ 05/21/25 15:48:25.975
  I0521 15:48:25.976804 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4034" for this suite. @ 05/21/25 15:48:25.979
  I0521 15:48:25.982529 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2926" for this suite. @ 05/21/25 15:48:26.079
• [6.168 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/21/25 15:48:26.084
  I0521 15:48:26.084077 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pod-network-test @ 05/21/25 15:48:26.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:26.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:26.097
  STEP: Performing setup for networking test in namespace pod-network-test-1681 @ 05/21/25 15:48:26.1
  STEP: creating a selector @ 05/21/25 15:48:26.1
  STEP: Creating the service pods in kubernetes @ 05/21/25 15:48:26.1
  I0521 15:48:26.100106 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0521 15:48:26.537715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:27.537822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:28.538420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:29.538605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:30.538926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:31.539110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:32.539227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:33.539334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:34.539403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:35.539611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:36.540344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:37.540519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:38.541277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:39.541454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/21/25 15:48:40.224
  E0521 15:48:40.542312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:41.542505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:42.243797 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0521 15:48:42.243832 23 utils.go:495] Going to poll 10.244.0.221 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0521 15:48:42.245362 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.221 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:48:42.245384 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:48:42.245429 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.221+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0521 15:48:42.542682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:43.288543 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:48:43.288591 23 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0521 15:48:43.288610 23 utils.go:495] Going to poll 10.244.1.82 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0521 15:48:43.290867 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.82 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1681 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:48:43.290889 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:48:43.290936 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1681/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.82+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0521 15:48:43.543134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:48:44.333025 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:48:44.333073 23 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0521 15:48:44.333213 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1681" for this suite. @ 05/21/25 15:48:44.336
• [18.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 05/21/25 15:48:44.34
  I0521 15:48:44.340193 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:48:44.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:48:44.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:48:44.357
  STEP: Creating configMap with name cm-test-opt-del-e4fb2415-e3f4-4dc6-bb93-8700b3a99783 @ 05/21/25 15:48:44.436
  STEP: Creating configMap with name cm-test-opt-upd-561087d8-b104-4aa1-83aa-cb37a91ea093 @ 05/21/25 15:48:44.44
  STEP: Creating the pod @ 05/21/25 15:48:44.443
  E0521 15:48:44.543570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:45.543780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-e4fb2415-e3f4-4dc6-bb93-8700b3a99783 @ 05/21/25 15:48:46.469
  STEP: Updating configmap cm-test-opt-upd-561087d8-b104-4aa1-83aa-cb37a91ea093 @ 05/21/25 15:48:46.472
  STEP: Creating configMap with name cm-test-opt-create-f5526fd8-ca7b-4796-987b-ee2abe8494d6 @ 05/21/25 15:48:46.476
  STEP: waiting to observe update in volume @ 05/21/25 15:48:46.479
  E0521 15:48:46.544682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:47.544873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:48.545067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:49.545210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:50.546085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:51.546194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:52.547088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:53.547720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:54.548578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:55.548830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:56.548939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:57.549137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:58.549301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:48:59.549501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:00.549741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:01.549937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:02.550293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:03.550392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:04.550567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:05.550791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:06.550946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:07.551156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:08.551378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:09.551556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:10.551729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:11.552052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:12.552248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:13.553147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:14.553332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:15.553443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:16.553539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:17.554475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:18.554868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:19.555625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:20.555853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:21.556377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:22.556567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:23.557395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:24.557478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:25.557601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:26.557834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:27.558680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:28.558811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:29.559109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:30.559195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:31.559271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:32.559442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:33.559630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:34.559757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:35.559979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:36.560197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:37.560776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:38.560915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:39.561860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:40.562061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:41.562154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:42.562345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:43.563177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:44.563366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:45.564117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:46.564308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:47.565129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:48.565801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:49.565396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:50.565601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:51.566373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:52.566545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:53.567281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:54.567461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:55.567820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:56.567905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:57.568926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:49:58.569121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:49:58.719322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6941" for this suite. @ 05/21/25 15:49:58.721
• [74.385 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 05/21/25 15:49:58.725
  I0521 15:49:58.725601 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 15:49:58.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:49:58.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:49:58.734
  E0521 15:49:59.570157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:00.570337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:01.570876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:02.571060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:03.571920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:04.572088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:05.572450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:06.572819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:07.572855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:08.573046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:09.573265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:10.573425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:11.573777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:12.573940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:13.575037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:14.575205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:15.575672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:16.575852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:17.576304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:18.576892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:19.577477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:20.577642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:21.578107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:22.578280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:22.779893 23 container_probe.go:91] Container started at 2025-05-21 15:49:59 +0000 UTC, pod became ready at 2025-05-21 15:50:20 +0000 UTC
  I0521 15:50:22.780026 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7472" for this suite. @ 05/21/25 15:50:22.782
• [24.061 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 05/21/25 15:50:22.786
  I0521 15:50:22.786360 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 15:50:22.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:22.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:22.795
  STEP: Creating a job @ 05/21/25 15:50:22.797
  STEP: Ensuring job reaches completions @ 05/21/25 15:50:22.803
  E0521 15:50:23.578842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:24.579950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:25.580996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:26.581068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:27.581607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:28.582141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:29.582970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:30.583029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:30.821037 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3104" for this suite. @ 05/21/25 15:50:30.823
• [8.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/21/25 15:50:30.827
  I0521 15:50:30.827671 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:50:30.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:30.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:30.84
  STEP: Creating configMap that has name configmap-test-emptyKey-ed14b36b-528c-4556-9c8d-044fbf56422e @ 05/21/25 15:50:30.843
  I0521 15:50:30.844883 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2885" for this suite. @ 05/21/25 15:50:30.923
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 05/21/25 15:50:30.928
  I0521 15:50:30.928585 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 15:50:30.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:30.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:30.941
  I0521 15:50:30.956163 23 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0521 15:50:30.956200 23 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0521 15:50:30.959655 23 service_accounts.go:281] created pod pod-service-account-mountsa
  I0521 15:50:30.959678 23 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0521 15:50:30.964360 23 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0521 15:50:30.964383 23 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0521 15:50:30.970249 23 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0521 15:50:30.970276 23 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0521 15:50:30.976734 23 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0521 15:50:30.976758 23 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0521 15:50:30.984557 23 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0521 15:50:30.984590 23 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0521 15:50:30.988727 23 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0521 15:50:30.988754 23 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0521 15:50:30.995675 23 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0521 15:50:30.995886 23 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0521 15:50:31.004316 23 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0521 15:50:31.004342 23 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0521 15:50:31.004456 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6865" for this suite. @ 05/21/25 15:50:31.025
• [0.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 05/21/25 15:50:31.035
  I0521 15:50:31.035188 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-selectable-fields @ 05/21/25 15:50:31.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:31.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:31.049
  STEP: Setting up server cert @ 05/21/25 15:50:31.054
  E0521 15:50:31.583826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/21/25 15:50:31.948
  STEP: Deploying the custom resource conversion webhook pod @ 05/21/25 15:50:31.953
  STEP: Wait for the deployment to be ready @ 05/21/25 15:50:31.962
  I0521 15:50:31.966760 23 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0521 15:50:32.584443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:33.584622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:50:33.973
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:50:33.986
  E0521 15:50:34.585456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:34.986842 23 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 05/21/25 15:50:34.99
  I0521 15:50:34.990222 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Creating a custom resource conversion webhook @ 05/21/25 15:50:35.5
  E0521 15:50:35.586341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:36.586924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 05/21/25 15:50:37.546
  STEP: Registering informers with field selectors @ 05/21/25 15:50:37.549
  STEP: Creating custom resources @ 05/21/25 15:50:37.549
  STEP: Listing v2 custom resources with field selector host=host1 @ 05/21/25 15:50:37.575
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 05/21/25 15:50:37.577
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 05/21/25 15:50:37.578
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 05/21/25 15:50:37.58
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 05/21/25 15:50:37.582
  E0521 15:50:37.587462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 05/21/25 15:50:37.587
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 05/21/25 15:50:37.587
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 05/21/25 15:50:37.587
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 05/21/25 15:50:37.587
  STEP: Deleting one custom resources to ensure that deletions are observed @ 05/21/25 15:50:37.587
  STEP: Updating one custom resources to ensure that deletions are observed @ 05/21/25 15:50:37.603
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 05/21/25 15:50:37.615
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 05/21/25 15:50:37.617
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 05/21/25 15:50:37.619
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 05/21/25 15:50:37.624
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 05/21/25 15:50:37.624
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 05/21/25 15:50:37.624
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 05/21/25 15:50:37.624
  I0521 15:50:38.167557 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-536" for this suite. @ 05/21/25 15:50:38.169
• [7.144 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 05/21/25 15:50:38.18
  I0521 15:50:38.180285 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replication-controller @ 05/21/25 15:50:38.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:38.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:38.193
  I0521 15:50:38.195951 23 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0521 15:50:38.588561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/21/25 15:50:39.203
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/21/25 15:50:39.207
  E0521 15:50:39.588868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/21/25 15:50:40.212
  I0521 15:50:40.217897 23 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/21/25 15:50:40.217
  E0521 15:50:40.589942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:41.222476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3075" for this suite. @ 05/21/25 15:50:41.224
• [3.048 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/21/25 15:50:41.228
  I0521 15:50:41.228818 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 15:50:41.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:41.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:41.24
  E0521 15:50:41.590752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:42.590922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:43.591984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:44.592198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:50:45.281
  I0521 15:50:45.283493 23 output.go:207] Trying to get logs from node worker-1 pod client-envvars-d5f78988-bc15-4f7f-84c7-54ac2b1f50d6 container env3cont: <nil>
  STEP: delete the pod @ 05/21/25 15:50:45.296
  I0521 15:50:45.306994 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4681" for this suite. @ 05/21/25 15:50:45.309
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/21/25 15:50:45.315
  I0521 15:50:45.315250 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename security-context-test @ 05/21/25 15:50:45.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:45.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:45.324
  E0521 15:50:45.593102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:46.593378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:47.342655 23 security_context.go:619] Got logs for pod "busybox-privileged-false-090da1a6-367d-41cd-802a-ffa05a470426": "ip: RTNETLINK answers: Operation not permitted\n"
  I0521 15:50:47.342813 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4032" for this suite. @ 05/21/25 15:50:47.345
• [2.036 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 05/21/25 15:50:47.35
  I0521 15:50:47.350911 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 15:50:47.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:50:47.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:50:47.36
  STEP: Creating pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351 @ 05/21/25 15:50:47.362
  E0521 15:50:47.593988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:48.594161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 15:50:49.374
  I0521 15:50:49.376135 23 container_probe.go:1748] Initial restart count of pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c is 0
  I0521 15:50:49.377901 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:50:49.595178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:50.595343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:51.380496 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:50:51.596071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:52.596268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:53.383072 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:50:53.596354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:54.596532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:55.385356 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:50:55.596647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:56.596828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:57.388037 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:50:57.597237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:50:58.597428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:50:59.390593 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:50:59.597928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:00.598129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:01.393136 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:01.598239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:02.598445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:03.395657 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:03.598845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:04.599027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:05.398426 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:05.599686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:06.599898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:07.401106 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:07.600328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:08.600822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:09.404011 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  I0521 15:51:09.404050 23 container_probe.go:1762] Restart count of pod container-probe-7351/liveness-edc186e5-de45-4219-a35c-2dff4fedf08c is now 1 (20.027881473s elapsed)
  E0521 15:51:09.601219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:10.601427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:11.406455 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:11.601798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:12.601945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:13.409163 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:13.602421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:14.602601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:15.412025 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:15.603338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:16.603551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:17.415443 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:17.603620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:18.603834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:19.418126 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:19.604137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:20.604204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:21.421451 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:21.604745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:22.604847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:23.424352 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:23.605576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:24.605795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:25.427936 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:25.606292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:26.606463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:27.431022 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:27.607276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:28.607399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:29.434846 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  I0521 15:51:29.434882 23 container_probe.go:1762] Restart count of pod container-probe-7351/liveness-edc186e5-de45-4219-a35c-2dff4fedf08c is now 2 (40.058712225s elapsed)
  E0521 15:51:29.607541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:30.607743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:31.437997 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:31.608196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:32.608369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:33.440793 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:33.608979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:34.609164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:35.443955 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:35.610152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:36.610347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:37.446606 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:37.610859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:38.611023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:39.449258 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:39.611400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:40.611527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:41.451793 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:41.611951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:42.612157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:43.454389 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:43.612618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:44.612903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:45.457212 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:45.613431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:46.613687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:47.459744 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:47.613949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:48.614134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:49.462301 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  I0521 15:51:49.462336 23 container_probe.go:1762] Restart count of pod container-probe-7351/liveness-edc186e5-de45-4219-a35c-2dff4fedf08c is now 3 (1m0.086167506s elapsed)
  E0521 15:51:49.614669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:50.614780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:51.464996 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:51.615163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:52.615349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:53.468120 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:53.616311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:54.616508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:55.471217 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:55.617506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:56.617675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:57.473979 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:57.618104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:51:58.618325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:51:59.476495 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:51:59.618726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:00.618833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:01.479257 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:01.619418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:02.619589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:03.482270 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:03.620414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:04.620604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:05.484888 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:05.620959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:06.621338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:07.487922 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:07.622076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:08.622276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:09.490217 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  I0521 15:52:09.490255 23 container_probe.go:1762] Restart count of pod container-probe-7351/liveness-edc186e5-de45-4219-a35c-2dff4fedf08c is now 4 (1m20.114085848s elapsed)
  E0521 15:52:09.622334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:10.622511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:11.492530 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:11.622787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:12.622954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:13.495901 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:13.624020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:14.624200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:15.498748 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:15.624817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:16.624938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:17.502173 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:17.625371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:18.625571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:19.504632 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:19.625746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:20.625909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:21.506943 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:21.626221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:22.626387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:23.509803 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:23.626938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:24.627104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:25.512442 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:25.627739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:26.627920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:27.515277 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:27.628547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:28.629233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:29.517801 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:29.629926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:30.630090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:31.520683 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:31.630916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:32.631093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:33.523537 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:33.631659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:34.631834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:35.526459 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:35.632575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:36.632766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:37.529078 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:37.633152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:38.633276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:39.531484 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:39.634110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:40.634277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:41.534536 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:41.634799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:42.634982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:43.537134 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:43.635272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:44.635444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:45.539922 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:45.636070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:46.636245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:47.542415 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:47.636577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:48.637087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:49.545278 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:49.637749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:50.637940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:51.548699 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:51.638926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:52.639098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:53.551931 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:53.640133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:54.640308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:55.555403 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:55.640660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:56.640834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:57.558044 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:57.641194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:52:58.641409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:52:59.561376 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:52:59.642468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:00.642634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:01.563936 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:53:01.643127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:02.643191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:03.566522 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:53:03.643626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:04.643823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:05.569225 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:53:05.644318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:06.644481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:07.571700 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  E0521 15:53:07.645066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:08.645239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:09.574489 23 container_probe.go:1758] Get pod liveness-edc186e5-de45-4219-a35c-2dff4fedf08c in namespace container-probe-7351
  I0521 15:53:09.574525 23 container_probe.go:1762] Restart count of pod container-probe-7351/liveness-edc186e5-de45-4219-a35c-2dff4fedf08c is now 5 (2m20.198356429s elapsed)
  STEP: deleting the pod @ 05/21/25 15:53:09.574
  I0521 15:53:09.584703 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7351" for this suite. @ 05/21/25 15:53:09.587
• [142.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 05/21/25 15:53:09.591
  I0521 15:53:09.591616 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:53:09.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:09.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:09.604
  STEP: Creating a pod to test downward api env vars @ 05/21/25 15:53:09.607
  E0521 15:53:09.645909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:10.646079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:11.646408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:12.646622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:53:13.621
  I0521 15:53:13.623875 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-149d3cf3-a09c-4766-a020-d3a54b262488 container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 15:53:13.636
  E0521 15:53:13.646970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:13.647540 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4228" for this suite. @ 05/21/25 15:53:13.649
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 05/21/25 15:53:13.653
  I0521 15:53:13.653805 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:53:13.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:13.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:13.664
  STEP: Creating the pod @ 05/21/25 15:53:13.666
  E0521 15:53:14.647213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:15.647403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:16.195533 23 pod_client.go:173] Successfully updated pod "annotationupdated255907c-47c2-47ac-803b-e408803c9f87"
  E0521 15:53:16.648032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:17.647561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:18.206783 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3372" for this suite. @ 05/21/25 15:53:18.209
• [4.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 05/21/25 15:53:18.213
  I0521 15:53:18.213466 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename containers @ 05/21/25 15:53:18.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:18.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:18.224
  STEP: Creating a pod to test override all @ 05/21/25 15:53:18.227
  E0521 15:53:18.648058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:19.648267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:53:20.239
  I0521 15:53:20.240927 23 output.go:207] Trying to get logs from node worker-0 pod client-containers-c165a49a-1af8-45b2-8ffe-c21320f1123d container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:53:20.245
  I0521 15:53:20.255462 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8860" for this suite. @ 05/21/25 15:53:20.257
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 05/21/25 15:53:20.261
  I0521 15:53:20.261896 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:53:20.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:20.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:20.271
  STEP: Setting up server cert @ 05/21/25 15:53:20.283
  E0521 15:53:20.648962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:53:20.82
  STEP: Deploying the webhook pod @ 05/21/25 15:53:20.823
  STEP: Wait for the deployment to be ready @ 05/21/25 15:53:20.833
  I0521 15:53:20.840449 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:53:21.649250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:22.649495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:53:22.846
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:53:22.86
  E0521 15:53:23.650407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:23.862082 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/21/25 15:53:23.864
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/21/25 15:53:23.879
  I0521 15:53:23.879604 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  I0521 15:53:23.925262 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5003" for this suite. @ 05/21/25 15:53:23.928
  STEP: Destroying namespace "webhook-markers-3149" for this suite. @ 05/21/25 15:53:23.934
• [3.676 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 05/21/25 15:53:23.938
  I0521 15:53:23.938228 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:53:23.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:23.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:23.947
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:53:23.949
  E0521 15:53:24.651224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:25.651424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:53:25.959
  I0521 15:53:25.961227 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-cfac6b74-fec5-4a45-85ae-d50b9b805159 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:53:25.965
  I0521 15:53:25.976450 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6549" for this suite. @ 05/21/25 15:53:25.978
• [2.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/21/25 15:53:25.984
  I0521 15:53:25.984470 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:53:25.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:25.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:25.993
  STEP: Setting up server cert @ 05/21/25 15:53:26.009
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:53:26.5
  STEP: Deploying the webhook pod @ 05/21/25 15:53:26.504
  STEP: Wait for the deployment to be ready @ 05/21/25 15:53:26.515
  I0521 15:53:26.521986 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:53:26.652140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:27.652610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:53:28.529
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:53:28.544
  E0521 15:53:28.653254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:29.545139 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/21/25 15:53:29.547
  I0521 15:53:29.580336 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-354" for this suite. @ 05/21/25 15:53:29.583
  STEP: Destroying namespace "webhook-markers-4335" for this suite. @ 05/21/25 15:53:29.589
• [3.609 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 05/21/25 15:53:29.593
  I0521 15:53:29.593816 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:53:29.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:29.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:29.602
  STEP: Setting up server cert @ 05/21/25 15:53:29.619
  E0521 15:53:29.653927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:53:30.125
  STEP: Deploying the webhook pod @ 05/21/25 15:53:30.129
  STEP: Wait for the deployment to be ready @ 05/21/25 15:53:30.139
  I0521 15:53:30.145821 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:53:30.654256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:31.654430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:53:32.152
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:53:32.165
  E0521 15:53:32.654584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:33.166088 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/21/25 15:53:33.168
  E0521 15:53:33.654814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:34.654990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:35.655096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:36.655293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:37.655461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:38.186900 23 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/21/25 15:53:38.299
  STEP: Creating a configMap that should not be mutated @ 05/21/25 15:53:38.305
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/21/25 15:53:38.312
  STEP: Creating a configMap that should be mutated @ 05/21/25 15:53:38.318
  I0521 15:53:38.366063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4389" for this suite. @ 05/21/25 15:53:38.368
  STEP: Destroying namespace "webhook-markers-2803" for this suite. @ 05/21/25 15:53:38.377
• [8.787 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 05/21/25 15:53:38.38
  I0521 15:53:38.381008 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename runtimeclass @ 05/21/25 15:53:38.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:38.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:38.396
  E0521 15:53:38.656439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:39.656544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:40.414999 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8949" for this suite. @ 05/21/25 15:53:40.417
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 05/21/25 15:53:40.421
  I0521 15:53:40.421471 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:53:40.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:40.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:40.433
  STEP: Creating configMap with name projected-configmap-test-volume-1a071fe7-8b40-4add-b648-28bcfec3f55d @ 05/21/25 15:53:40.435
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:53:40.438
  E0521 15:53:40.656621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:41.656751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:42.657363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:43.657470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:53:44.452
  I0521 15:53:44.455107 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-e32b3d03-941f-42af-bfac-e3d0ee2bf9d6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:53:44.459
  I0521 15:53:44.471092 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2734" for this suite. @ 05/21/25 15:53:44.473
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 05/21/25 15:53:44.479
  I0521 15:53:44.479541 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 15:53:44.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:53:44.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:53:44.489
  STEP: Creating pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548 @ 05/21/25 15:53:44.491
  E0521 15:53:44.658343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:45.658466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 15:53:46.503
  I0521 15:53:46.505773 23 container_probe.go:1748] Initial restart count of pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 is 0
  I0521 15:53:46.507415 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:46.658601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:47.659344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:48.510864 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:48.659990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:49.660113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:50.513934 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:50.661153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:51.661317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:52.516472 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:52.661954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:53.662153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:54.519283 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:54.662464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:55.662582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:56.521678 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:56.662854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:57.662995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:53:58.524973 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:53:58.663146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:53:59.663218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:00.527866 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:00.664160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:01.664597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:02.531427 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:02.664757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:03.664876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:04.534139 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:04.665378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:05.665802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:06.536807 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:06.666438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:07.666622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:08.540065 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:08.667207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:09.667369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:10.542507 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:10.667715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:11.667896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:12.545125 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:12.668417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:13.668578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:14.547841 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:14.668991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:15.669174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:16.550369 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:16.670107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:17.670312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:18.553843 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:18.670974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:19.671152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:20.556489 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:20.671642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:21.671834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:22.559048 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:22.672374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:23.672540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:24.561953 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:24.673158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:25.673347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:26.564688 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:26.673826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:27.674016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:28.568541 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:28.674766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:29.674980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:30.571311 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:30.675473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:31.675661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:32.574381 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:32.676633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:33.676837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:34.577065 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:34.677286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:35.677479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:36.580027 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:36.678207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:37.678418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:38.583490 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:38.678676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:39.678930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:40.586178 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:40.679303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:41.679484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:42.588990 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:42.680350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:43.680526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:44.591770 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:44.680828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:45.680998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:46.594301 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:46.681489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:47.681699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:48.597094 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:48.682238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:49.682411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:50.599797 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:50.682821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:51.682939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:52.603181 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:52.683448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:53.683619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:54.605921 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:54.684036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:55.684208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:56.608435 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:56.684590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:57.684792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:54:58.611304 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:54:58.685471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:54:59.685637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:00.614000 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:00.686061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:01.686686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:02.617048 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:02.687264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:03.687398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:04.619519 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:04.687619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:05.687804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:06.622210 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:06.688316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:07.688510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:08.625608 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:08.688748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:09.688925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:10.628149 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:10.689262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:11.689433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:12.630846 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:12.689974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:13.690159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:14.633566 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:14.690927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:15.691106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:16.636371 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:16.692067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:17.691739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:18.640358 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:18.692393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:19.692562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:20.643067 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:20.693143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:21.693316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:22.646281 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:22.693362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:23.693534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:24.648991 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:24.694217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:25.694396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:26.651983 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:26.695062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:27.695278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:28.654978 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:28.696114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:29.696300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:30.657666 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:30.696720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:31.696831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:32.660345 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:32.697367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:33.697540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:34.662973 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:34.698056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:35.698215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:36.665656 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:36.698706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:37.698932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:38.668615 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:38.699613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:39.699795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:40.671068 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:40.700122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:41.700276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:42.673832 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:42.700906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:43.701937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:44.676325 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:44.702391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:45.702926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:46.679197 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:46.703259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:47.703451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:48.682049 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:48.704215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:49.704389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:50.685150 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:50.704686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:51.704948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:52.687923 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:52.705986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:53.706159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:54.691290 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:54.706336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:55.706462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:56.694035 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:56.707038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:57.707621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:55:58.697210 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:55:58.708268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:55:59.708432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:00.700361 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:00.709409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:01.709565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:02.702970 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:02.710002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:03.710173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:04.705525 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:04.710643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:05.711067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:06.709116 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:06.711146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:07.712069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:08.712267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:08.712828 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:09.712849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:10.713035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:10.715445 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:11.713464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:12.713575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:12.717972 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:13.713957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:14.714111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:14.720829 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:15.714773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:16.714876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:16.723376 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:17.715515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:18.715700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:18.726453 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:19.716454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:20.716670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:20.729384 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:21.717359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:22.717605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:22.732079 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:23.718193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:24.718323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:24.734924 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:25.718865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:26.719939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:26.737537 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:27.720706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:28.720841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:28.740586 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:29.721958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:30.722159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:30.743658 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:31.722959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:32.723039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:32.746506 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:33.723562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:34.723762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:34.749396 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:35.724432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:36.724461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:36.752012 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:37.725077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:38.725990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:38.756190 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:39.726188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:40.726343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:40.759311 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:41.726446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:42.726548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:42.762083 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:43.727115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:44.727296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:44.764963 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:45.727868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:46.728046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:46.767362 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:47.728687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:48.728890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:48.770526 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:49.729495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:50.729666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:50.773140 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:51.730088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:52.730192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:52.775504 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:53.730490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:54.730658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:54.778337 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:55.731297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:56.731476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:56.781056 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:57.732069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:56:58.732254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:56:58.783871 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:56:59.732851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:00.733258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:00.786908 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:01.733802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:02.733884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:02.790348 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:03.734341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:04.734514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:04.793055 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:05.735093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:06.735307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:06.795807 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:07.735822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:08.736013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:08.798692 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:09.736584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:10.736922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:10.801398 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:11.737962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:12.738069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:12.804566 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:13.738560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:14.738770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:14.807286 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:15.738838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:16.739036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:16.810531 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:17.739622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:18.739829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:18.813533 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:19.740545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:20.740760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:20.816264 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:21.741155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:22.741657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:22.819049 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:23.741774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:24.741967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:24.822617 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:25.742079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:26.742181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:26.825634 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:27.743141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:28.743333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:28.828995 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:29.743953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:30.744125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:30.831601 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:31.744496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:32.744570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:32.835261 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:33.744685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:34.744886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:34.838389 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:35.745045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:36.745236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:36.841943 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:37.745995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:38.746205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:38.846066 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:39.746845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:40.747920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:40.849470 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:41.748409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:42.748686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:42.851985 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:43.748967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:44.749927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:44.855594 23 container_probe.go:1758] Get pod test-grpc-87dde281-e4be-4ac5-af50-9d5142a4ea85 in namespace container-probe-5548
  E0521 15:57:45.750453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:46.750625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/21/25 15:57:46.855
  I0521 15:57:46.867084 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5548" for this suite. @ 05/21/25 15:57:46.872
• [242.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 05/21/25 15:57:46.876
  I0521 15:57:46.876325 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 15:57:46.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:57:46.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:57:46.889
  STEP: creating service endpoint-test2 in namespace services-3324 @ 05/21/25 15:57:46.891
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3324 to expose endpoints map[] @ 05/21/25 15:57:46.904
  I0521 15:57:46.907515      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:57:46.907555 23 service.go:4613] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0521 15:57:47.751989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:47.910678      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:57:47.913906 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3324 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3324 @ 05/21/25 15:57:47.913
  E0521 15:57:48.752289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:49.752465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3324 to expose endpoints map[pod1:[80]] @ 05/21/25 15:57:49.928
  I0521 15:57:49.931245      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:57:49.934164 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3324 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/21/25 15:57:49.934
  I0521 15:57:49.934222 23 resource.go:361] Creating new exec pod
  E0521 15:57:50.752561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:51.752784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:57:52.000294 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-3324 exec execpodbzhnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0521 15:57:52.105404 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.110.139.82) 80 port [tcp/http] succeeded!\n"
  I0521 15:57:52.105443 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:57:52.105508 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-3324 exec execpodbzhnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.139.82 80'
  I0521 15:57:52.198251 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.139.82 80\nConnection to 10.110.139.82 80 port [tcp/http] succeeded!\n"
  I0521 15:57:52.198300 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3324 @ 05/21/25 15:57:52.198
  E0521 15:57:52.753221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:53.753420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3324 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/21/25 15:57:54.211
  I0521 15:57:54.215827      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:57:54.218623 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3324 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/21/25 15:57:54.218
  I0521 15:57:54.220495 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-3324 exec execpodbzhnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0521 15:57:54.315618 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.110.139.82) 80 port [tcp/http] succeeded!\n"
  I0521 15:57:54.315685 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:57:54.315772 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-3324 exec execpodbzhnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.139.82 80'
  I0521 15:57:54.405649 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.139.82 80\nConnection to 10.110.139.82 80 port [tcp/http] succeeded!\n"
  I0521 15:57:54.405688 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3324 @ 05/21/25 15:57:54.405
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3324 to expose endpoints map[pod2:[80]] @ 05/21/25 15:57:54.416
  I0521 15:57:54.421129      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:57:54.425377 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3324 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/21/25 15:57:54.425
  I0521 15:57:54.427835 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-3324 exec execpodbzhnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0521 15:57:54.530595 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.110.139.82) 80 port [tcp/http] succeeded!\n"
  I0521 15:57:54.530640 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 15:57:54.530714 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-3324 exec execpodbzhnj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.139.82 80'
  I0521 15:57:54.622272 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.139.82 80\nConnection to 10.110.139.82 80 port [tcp/http] succeeded!\n"
  I0521 15:57:54.622313 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3324 @ 05/21/25 15:57:54.622
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3324 to expose endpoints map[] @ 05/21/25 15:57:54.635
  I0521 15:57:54.637343      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 15:57:54.641987 23 service.go:4645] successfully validated that service endpoint-test2 in namespace services-3324 exposes endpoints map[]
  I0521 15:57:54.659144 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3324" for this suite. @ 05/21/25 15:57:54.661
• [7.791 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 05/21/25 15:57:54.667
  I0521 15:57:54.667544 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 15:57:54.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:57:54.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:57:54.676
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/21/25 15:57:54.679
  E0521 15:57:54.753937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:55.754049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:57:56.689
  I0521 15:57:56.691342 23 output.go:207] Trying to get logs from node worker-0 pod pod-d4f0f2bd-9fff-418e-8822-34b190a0310c container test-container: <nil>
  STEP: delete the pod @ 05/21/25 15:57:56.701
  I0521 15:57:56.712970 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5377" for this suite. @ 05/21/25 15:57:56.715
• [2.051 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/21/25 15:57:56.719
  I0521 15:57:56.719041 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replicaset @ 05/21/25 15:57:56.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:57:56.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:57:56.731
  STEP: Create a Replicaset @ 05/21/25 15:57:56.735
  STEP: Verify that the required pods have come up. @ 05/21/25 15:57:56.739
  I0521 15:57:56.741376 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0521 15:57:56.754518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:57.755600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:58.755817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:57:59.756050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:00.756161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:01.744669 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/21/25 15:58:01.744
  STEP: Getting /status @ 05/21/25 15:58:01.744
  I0521 15:58:01.746997 23 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/21/25 15:58:01.747
  I0521 15:58:01.755034 23 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/21/25 15:58:01.755
  E0521 15:58:01.756220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:01.756781 23 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0521 15:58:01.756889 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.756981 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.757223 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.757288 23 replica_set.go:688] Found replicaset test-rs in namespace replicaset-488 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0521 15:58:01.757307 23 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/21/25 15:58:01.757
  I0521 15:58:01.757361 23 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0521 15:58:01.762135 23 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/21/25 15:58:01.762
  I0521 15:58:01.763632 23 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0521 15:58:01.763757 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.763839 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.764100 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.764132 23 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-488 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0521 15:58:01.764230 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0521 15:58:01.764255 23 replica_set.go:724] Found replicaset test-rs in namespace replicaset-488 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0521 15:58:01.764272 23 replica_set.go:735] Replicaset test-rs has a patched status
  I0521 15:58:01.764409 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-488" for this suite. @ 05/21/25 15:58:01.766
• [5.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 05/21/25 15:58:01.771
  I0521 15:58:01.771577 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:58:01.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:01.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:01.784
  STEP: Creating configMap with name configmap-test-volume-map-2d3bce60-c277-469f-bb7c-872eb280eebc @ 05/21/25 15:58:01.786
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:58:01.79
  E0521 15:58:02.756353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:03.756580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:04.756766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:05.757129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:58:05.843
  I0521 15:58:05.846251 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-14ab8537-eba4-49b0-8a78-efa190e33e76 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:58:05.85
  I0521 15:58:05.862681 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2459" for this suite. @ 05/21/25 15:58:05.866
• [4.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 05/21/25 15:58:05.871
  I0521 15:58:05.871303 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 15:58:05.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:05.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:05.883
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 15:58:05.885
  E0521 15:58:06.757819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:07.757924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:08.758515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:09.758696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:58:09.901
  I0521 15:58:09.903365 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-2e224203-0ce2-411a-869b-b42d2d530402 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 15:58:09.907
  I0521 15:58:09.920807 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8818" for this suite. @ 05/21/25 15:58:09.923
• [4.056 seconds]
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 05/21/25 15:58:09.927
  I0521 15:58:09.927166 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 15:58:09.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:09.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:09.938
  STEP: creating a ServiceAccount @ 05/21/25 15:58:09.941
  STEP: watching for the ServiceAccount to be added @ 05/21/25 15:58:09.946
  STEP: patching the ServiceAccount @ 05/21/25 15:58:09.947
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/21/25 15:58:09.951
  STEP: deleting the ServiceAccount @ 05/21/25 15:58:09.953
  I0521 15:58:09.960214 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4070" for this suite. @ 05/21/25 15:58:10.023
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/21/25 15:58:10.027
  I0521 15:58:10.027958 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename hostport @ 05/21/25 15:58:10.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:10.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:10.037
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/21/25 15:58:10.126
  E0521 15:58:10.759059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:11.759271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.60.98 on the node which pod1 resides and expect scheduled @ 05/21/25 15:58:12.138
  E0521 15:58:12.759744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:13.759949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.60.98 but use UDP protocol on the node which pod2 resides @ 05/21/25 15:58:14.148
  E0521 15:58:14.761542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:15.761823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:16.762757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:17.763295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/21/25 15:58:18.169
  I0521 15:58:18.169626 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.60.98 http://127.0.0.1:54323/hostname] Namespace:hostport-5987 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:58:18.169651 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:58:18.169709 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-5987/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.60.98+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0521 15:58:18.218133 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.60.98, port: 54323 @ 05/21/25 15:58:18.218
  I0521 15:58:18.218248 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.60.98:54323/hostname] Namespace:hostport-5987 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:58:18.218262 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:58:18.218317 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-5987/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.60.98%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I0521 15:58:18.263636 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.60.98, port: 54323 UDP @ 05/21/25 15:58:18.263
  I0521 15:58:18.263786 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.60.98 54323] Namespace:hostport-5987 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:58:18.263800 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:58:18.263883 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/hostport-5987/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.60.98+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0521 15:58:18.764327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:19.764529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:20.764777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:21.765000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:22.765109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:23.313319 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:58:23.313595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5987" for this suite. @ 05/21/25 15:58:23.316
• [13.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 05/21/25 15:58:23.321
  I0521 15:58:23.321970 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 15:58:23.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:23.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:23.333
  I0521 15:58:23.362796 23 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"63a7705d-2314-45f6-ba37-a551e93bfa02", Controller:(*bool)(0xc0055caf3e), BlockOwnerDeletion:(*bool)(0xc0055caf3f)}}
  I0521 15:58:23.366927 23 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a97e92c2-8011-44c8-841c-a35735b3b313", Controller:(*bool)(0xc003de4c6e), BlockOwnerDeletion:(*bool)(0xc003de4c6f)}}
  I0521 15:58:23.371803 23 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"8d0ca011-1df8-4f5a-b383-e65e31577408", Controller:(*bool)(0xc003de4e16), BlockOwnerDeletion:(*bool)(0xc003de4e17)}}
  E0521 15:58:23.765532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:24.765631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:25.765946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:26.766953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:27.767104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:28.429671 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9617" for this suite. @ 05/21/25 15:58:28.432
• [5.117 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 05/21/25 15:58:28.438
  I0521 15:58:28.438782 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:58:28.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:28.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:28.451
  STEP: Setting up server cert @ 05/21/25 15:58:28.475
  E0521 15:58:28.767312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:58:29.218
  STEP: Deploying the webhook pod @ 05/21/25 15:58:29.224
  STEP: Wait for the deployment to be ready @ 05/21/25 15:58:29.234
  I0521 15:58:29.241010 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:58:29.767399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:30.767499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:58:31.248
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:58:31.262
  E0521 15:58:31.768023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:32.263557 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/21/25 15:58:32.321
  STEP: Creating a configMap that should be mutated @ 05/21/25 15:58:32.334
  STEP: Deleting the collection of validation webhooks @ 05/21/25 15:58:32.363
  STEP: Creating a configMap that should not be mutated @ 05/21/25 15:58:32.39
  I0521 15:58:32.433942 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7253" for this suite. @ 05/21/25 15:58:32.436
  STEP: Destroying namespace "webhook-markers-8484" for this suite. @ 05/21/25 15:58:32.44
• [4.009 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/21/25 15:58:32.448
  I0521 15:58:32.448260 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:58:32.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:32.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:32.457
  I0521 15:58:32.467294 23 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E0521 15:58:32.768715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:33.768919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:34.769124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:35.769242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:36.769450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:37.470254 23 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/21/25 15:58:37.47
  I0521 15:58:37.470323 23 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0521 15:58:37.770160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:38.770342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:39.472833 23 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0521 15:58:39.480576 23 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0521 15:58:39.770565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:40.770791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:41.485121 23 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0521 15:58:41.488951 23 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0521 15:58:41.492101 23 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0521 15:58:41.497491 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0521 15:58:41.497516 23 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0521 15:58:41.771502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:42.772133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:43.501408 23 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0521 15:58:43.505383 23 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0521 15:58:43.508641 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0521 15:58:43.508691 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 15:58:43.771882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:44.772057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:45.513643 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0521 15:58:45.513703 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 15:58:45.772956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:46.773160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:47.513926 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0521 15:58:47.513986 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 15:58:47.774211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:48.774411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:49.513966 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0521 15:58:49.514026 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 15:58:49.775200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:50.775373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:51.513772 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0521 15:58:51.513824 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 15, 58, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 15, 58, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 15:58:51.776067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:52.776147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:53.513342 23 deployment.go:95] 
  I0521 15:58:53.513388 23 deployment.go:993] Ensure that both old replica sets have no replicas
  I0521 15:58:53.518686 23 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffa237ef-aa70-4110-a269-f2455464b8f3",
      ResourceVersion: (string) (len=5) "23284",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:58:53.521950 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e6edf13-2bf9-45a1-8f2c-c00c53d269c6",
      ResourceVersion: (string) (len=5) "23274",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ffa237ef-aa70-4110-a269-f2455464b8f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 66 61 32 33 37  65 66 2d 61 61 37 30 2d  |\"ffa237ef-aa70-|
              00000120  34 31 31 30 2d 61 32 36  39 2d 66 32 34 35 35 34  |4110-a269-f24554|
              00000130  36 34 62 38 66 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |64b8f3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:58:53.523037 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0521 15:58:53.523287 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b346ec0f-9547-46f2-98ec-601bfe04a34a",
      ResourceVersion: (string) (len=5) "23283",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ffa237ef-aa70-4110-a269-f2455464b8f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 66 61 32 33 37 65 66  2d 61 61 37 30 2d 34 31  |ffa237ef-aa70-41|
              000000c0  31 30 2d 61 32 36 39 2d  66 32 34 35 35 34 36 34  |10-a269-f2455464|
              000000d0  62 38 66 33 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |b8f3\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:58:53.524562 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86425972-caf9-4dd6-aac4-a3e9a9d701dd",
      ResourceVersion: (string) (len=5) "23236",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439919,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "ffa237ef-aa70-4110-a269-f2455464b8f3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 66 61 32 33 37  65 66 2d 61 61 37 30 2d  |\"ffa237ef-aa70-|
              00000120  34 31 31 30 2d 61 32 36  39 2d 66 32 34 35 35 34  |4110-a269-f24554|
              00000130  36 34 62 38 66 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |64b8f3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:58:53.528550 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-kgdn9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-kgdn9",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-6531",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2508a63d-6fdf-4a0c-a371-537fde738937",
      ResourceVersion: (string) (len=5) "23249",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "5e6edf13-2bf9-45a1-8f2c-c00c53d269c6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  36 65 64 66 31 33 2d 32  |d\":\"5e6edf13-2|
              00000090  62 66 39 2d 34 35 61 31  2d 38 66 32 63 2d 63 30  |bf9-45a1-8f2c-c0|
              000000a0  30 63 35 33 64 32 36 39  63 36 5c 22 7d 22 3a 7b  |0c53d269c6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 32  35 30 5c 22 7d 22 3a 7b  |.244.0.250\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8mck",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8mck",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.250",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.250"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883439922,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://24a0eb7d3a6b00e2a73e2664d6a6c17c85632e4faacfe62c71f0f3ed8fe2d15a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n8mck",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:58:53.530813 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6531" for this suite. @ 05/21/25 15:58:53.533
• [21.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/21/25 15:58:53.537
  I0521 15:58:53.537182 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/21/25 15:58:53.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:53.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:53.546
  I0521 15:58:53.552260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4913" for this suite. @ 05/21/25 15:58:53.633
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/21/25 15:58:53.637
  I0521 15:58:53.637928 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:58:53.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:53.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:53.647
  I0521 15:58:53.655023 23 resource.go:81] Pod name cleanup-pod: Found 0 pods out of 1
  E0521 15:58:53.776194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:54.776290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:55.776510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:56.776707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:58:57.776832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:58.746671 23 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/21/25 15:58:58.746
  I0521 15:58:58.746768 23 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/21/25 15:58:58.754
  I0521 15:58:58.764047 23 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8c681d7-6630-4958-88d9-ec863fa283c1",
      ResourceVersion: (string) (len=5) "23330",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439938,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:58:58.767329 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b60c18e-e13b-4613-8f8b-19a5a3e60293",
      ResourceVersion: (string) (len=5) "23335",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439938,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b8c681d7-6630-4958-88d9-ec863fa283c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 63 36 38 31  64 37 2d 36 36 33 30 2d  |\"b8c681d7-6630-|
              00000120  34 39 35 38 2d 38 38 64  39 2d 65 63 38 36 33 66  |4958-88d9-ec863f|
              00000130  61 32 38 33 63 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a283c1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:58:58.768303 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0521 15:58:58.768629 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6618f908-9041-453e-80e5-82c073139eba",
      ResourceVersion: (string) (len=5) "23333",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439933,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b8c681d7-6630-4958-88d9-ec863fa283c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 38 63 36 38 31 64  |"uid\":\"b8c681d|
              00000040  37 2d 36 36 33 30 2d 34  39 35 38 2d 38 38 64 39  |7-6630-4958-88d9|
              00000050  2d 65 63 38 36 33 66 61  32 38 33 63 31 5c 22 7d  |-ec863fa283c1\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0521 15:58:58.777140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:58:58.783307 23 deployment.go:68] Pod "test-cleanup-controller-bsp8c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-bsp8c",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "280f5739-5612-4ae8-af27-f6d03d805f9c",
      ResourceVersion: (string) (len=5) "23310",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439933,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "6618f908-9041-453e-80e5-82c073139eba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  36 36 31 38 66 39 30 38  |uid\":\"6618f908|
              00000080  2d 39 30 34 31 2d 34 35  33 65 2d 38 30 65 35 2d  |-9041-453e-80e5-|
              00000090  38 32 63 30 37 33 31 33  39 65 62 61 5c 22 7d 22  |82c073139eba\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 32  35 31 5c 22 7d 22 3a 7b  |.244.0.251\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-798hx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-798hx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439933,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.251",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.251"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439933,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883439934,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://07c56af242b3b632fe577d4b1dce2fd802d192c185ccf66ae185397dcb1ee651",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-798hx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:58:58.785564 23 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-tgjnf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-tgjnf",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-6987",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df3d462a-2d3c-44cc-bd2b-432636800d7e",
      ResourceVersion: (string) (len=5) "23342",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439938,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "6b60c18e-e13b-4613-8f8b-19a5a3e60293",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  36 30 63 31 38 65 2d 65  |d\":\"6b60c18e-e|
              00000090  31 33 62 2d 34 36 31 33  2d 38 66 38 62 2d 31 39  |13b-4613-8f8b-19|
              000000a0  61 35 61 33 65 36 30 32  39 33 5c 22 7d 22 3a 7b  |a5a3e60293\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhr9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhr9g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439938,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:58:58.786961 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6987" for this suite. @ 05/21/25 15:58:58.792
• [5.161 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 05/21/25 15:58:58.798
  I0521 15:58:58.798926 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replication-controller @ 05/21/25 15:58:58.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:58:58.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:58:58.813
  STEP: Given a ReplicationController is created @ 05/21/25 15:58:58.815
  STEP: When the matched label of one of its pods change @ 05/21/25 15:58:58.823
  I0521 15:58:58.829484 23 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  E0521 15:58:59.777271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Then the pod is released @ 05/21/25 15:58:59.848
  E0521 15:59:00.778067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:00.853406 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3622" for this suite. @ 05/21/25 15:59:00.858
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/21/25 15:59:00.862
  I0521 15:59:00.862520 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 15:59:00.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:00.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:00.878
  STEP: Setting up server cert @ 05/21/25 15:59:00.891
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 15:59:01.549
  STEP: Deploying the webhook pod @ 05/21/25 15:59:01.553
  STEP: Wait for the deployment to be ready @ 05/21/25 15:59:01.563
  I0521 15:59:01.570172 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 15:59:01.778281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:02.778708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 15:59:03.576
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 15:59:03.59
  E0521 15:59:03.779647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:04.590452 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/21/25 15:59:04.593
  STEP: create the configmap with a random name @ 05/21/25 15:59:04.611
  STEP: verify the configmap is mutated @ 05/21/25 15:59:04.622
  STEP: create the configmap with 'skip-me' name @ 05/21/25 15:59:04.622
  I0521 15:59:04.662595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6006" for this suite. @ 05/21/25 15:59:04.668
  STEP: Destroying namespace "webhook-markers-82" for this suite. @ 05/21/25 15:59:04.672
• [3.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/21/25 15:59:04.679
  I0521 15:59:04.679037 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename podtemplate @ 05/21/25 15:59:04.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:04.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:04.688
  STEP: Create a pod template @ 05/21/25 15:59:04.69
  STEP: Replace a pod template @ 05/21/25 15:59:04.695
  I0521 15:59:04.700691 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0521 15:59:04.700894 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8532" for this suite. @ 05/21/25 15:59:04.768
• [0.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/21/25 15:59:04.773
  I0521 15:59:04.773105 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename deployment @ 05/21/25 15:59:04.773
  E0521 15:59:04.779704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:04.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:04.782
  I0521 15:59:04.785144 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0521 15:59:04.791200 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0521 15:59:05.780282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:06.780462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:07.780628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:08.780842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:09.781033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:09.881057 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/21/25 15:59:09.881
  I0521 15:59:09.881129 23 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0521 15:59:09.886533 23 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0521 15:59:09.890347 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0521 15:59:10.781128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:11.781350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:11.895359 23 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0521 15:59:11.896992 23 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0521 15:59:11.902454 23 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65c417ba-b638-46a7-804d-fbb905e66af5",
      ResourceVersion: (string) (len=5) "23597",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0521 15:59:11.906252 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "750dde3c-6e34-47bd-9bdc-1c3d98764874",
      ResourceVersion: (string) (len=5) "23587",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "65c417ba-b638-46a7-804d-fbb905e66af5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 35 63 34 31 37  62 61 2d 62 36 33 38 2d  |\"65c417ba-b638-|
              00000120  34 36 61 37 2d 38 30 34  64 2d 66 62 62 39 30 35  |46a7-804d-fbb905|
              00000130  65 36 36 61 66 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e66af5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:59:11.907400 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0521 15:59:11.907808 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4807ba05-b5a2-4a7e-bd9e-29af9984f5df",
      ResourceVersion: (string) (len=5) "23596",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439944,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "65c417ba-b638-46a7-804d-fbb905e66af5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 35 63 34 31 37 62  |"uid\":\"65c417b|
              000000b0  61 2d 62 36 33 38 2d 34  36 61 37 2d 38 30 34 64  |a-b638-46a7-804d|
              000000c0  2d 66 62 62 39 30 35 65  36 36 61 66 35 5c 22 7d  |-fbb905e66af5\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0521 15:59:11.911463 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-2cttw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-2cttw",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-1698",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e3632c8-7571-4743-94d1-4ef3fea1f88e",
      ResourceVersion: (string) (len=5) "23586",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "750dde3c-6e34-47bd-9bdc-1c3d98764874",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 35  30 64 64 65 33 63 2d 36  |d\":\"750dde3c-6|
              00000090  65 33 34 2d 34 37 62 64  2d 39 62 64 63 2d 31 63  |e34-47bd-9bdc-1c|
              000000a0  33 64 39 38 37 36 34 38  37 34 5c 22 7d 22 3a 7b  |3d98764874\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 32  35 34 5c 22 7d 22 3a 7b  |.244.0.254\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbm99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbm99",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63883439949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.54.132",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.54.132"
        }
      },
      PodIP: (string) (len=12) "10.244.0.254",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.254"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63883439949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63883439950,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://590b52e201a3e0163a5f5a2b4b1bc49b75d2f2d499f0a4940393614aa8a24ba2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tbm99",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0521 15:59:11.914123 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1698" for this suite. @ 05/21/25 15:59:11.918
• [7.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 05/21/25 15:59:11.922
  I0521 15:59:11.922934 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename disruption @ 05/21/25 15:59:11.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:11.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:11.934
  STEP: Waiting for the pdb to be processed @ 05/21/25 15:59:11.94
  E0521 15:59:12.782246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:13.782331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 05/21/25 15:59:13.96
  I0521 15:59:13.970915 23 disruption.go:691] running pods: 0 < 3
  E0521 15:59:14.782764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:15.782863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:15.966098 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8660" for this suite. @ 05/21/25 15:59:15.968
• [4.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/21/25 15:59:15.972
  I0521 15:59:15.972336 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 15:59:15.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:15.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:15.981
  STEP: creating Agnhost RC @ 05/21/25 15:59:15.984
  I0521 15:59:15.984207 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4852 create -f -'
  I0521 15:59:16.090182 23 builder.go:146] stderr: ""
  I0521 15:59:16.090220 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/21/25 15:59:16.09
  E0521 15:59:16.783009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:17.131122 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:59:17.131162 23 framework.go:733] Found 0 / 1
  E0521 15:59:17.784004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:18.094211 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:59:18.094251 23 framework.go:733] Found 1 / 1
  I0521 15:59:18.094266 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/21/25 15:59:18.094
  I0521 15:59:18.096263 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:59:18.096290 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0521 15:59:18.096337 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4852 patch pod agnhost-primary-lfbfn -p {"metadata":{"annotations":{"x":"y"}}}'
  I0521 15:59:18.154997 23 builder.go:146] stderr: ""
  I0521 15:59:18.155033 23 builder.go:147] stdout: "pod/agnhost-primary-lfbfn patched\n"
  STEP: checking annotations @ 05/21/25 15:59:18.155
  I0521 15:59:18.157052 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0521 15:59:18.157076 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0521 15:59:18.157202 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4852" for this suite. @ 05/21/25 15:59:18.159
• [2.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 05/21/25 15:59:18.163
  I0521 15:59:18.163691 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 15:59:18.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:18.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:18.175
  STEP: Creating configMap with name configmap-test-volume-map-5d3a5677-711a-4164-a91e-9693ae8e72c1 @ 05/21/25 15:59:18.177
  STEP: Creating a pod to test consume configMaps @ 05/21/25 15:59:18.18
  E0521 15:59:18.784951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:19.785101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:20.785822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:21.786012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:59:22.196
  I0521 15:59:22.198009 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-b0299384-d375-4985-8358-7740fc9a800d container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 15:59:22.204
  I0521 15:59:22.215686 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3227" for this suite. @ 05/21/25 15:59:22.218
• [4.058 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/21/25 15:59:22.221
  I0521 15:59:22.221787 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pod-network-test @ 05/21/25 15:59:22.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:22.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:22.233
  STEP: Performing setup for networking test in namespace pod-network-test-4571 @ 05/21/25 15:59:22.236
  STEP: creating a selector @ 05/21/25 15:59:22.236
  STEP: Creating the service pods in kubernetes @ 05/21/25 15:59:22.236
  I0521 15:59:22.236269 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0521 15:59:22.786742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:23.786943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:24.787011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:25.787176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:26.788262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:27.788338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:28.788455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:29.788677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:30.788940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:31.789134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:32.790191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:33.790410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:34.791202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:35.791318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:36.791887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:37.792277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:38.792866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:39.793036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:40.793851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:41.793935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/21/25 15:59:42.37
  E0521 15:59:42.794331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:43.794514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:44.380602 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0521 15:59:44.380634 23 networking.go:42] Breadth first check of 10.244.0.8 on host 10.0.54.132...
  I0521 15:59:44.382260 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.9:9080/dial?request=hostname&protocol=http&host=10.244.0.8&port=8083&tries=1'] Namespace:pod-network-test-4571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:59:44.382286 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:59:44.382335 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.9%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.8%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0521 15:59:44.426597 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:59:44.426666 23 utils.go:355] Waiting for responses: map[]
  I0521 15:59:44.426682 23 utils.go:359] reached 10.244.0.8 after 0/1 tries
  I0521 15:59:44.426697 23 networking.go:42] Breadth first check of 10.244.1.99 on host 10.0.60.98...
  I0521 15:59:44.428901 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.0.9:9080/dial?request=hostname&protocol=http&host=10.244.1.99&port=8083&tries=1'] Namespace:pod-network-test-4571 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 15:59:44.428922 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 15:59:44.428970 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4571/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.0.9%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.99%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0521 15:59:44.480352 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 15:59:44.480418 23 utils.go:355] Waiting for responses: map[]
  I0521 15:59:44.480441 23 utils.go:359] reached 10.244.1.99 after 0/1 tries
  I0521 15:59:44.480453 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0521 15:59:44.480576 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4571" for this suite. @ 05/21/25 15:59:44.483
• [22.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/21/25 15:59:44.491
  I0521 15:59:44.491131 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename daemonsets @ 05/21/25 15:59:44.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:44.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:44.503
  I0521 15:59:44.590203 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0521 15:59:44.593965 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0521 15:59:44.687387 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:59:44.687423 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  E0521 15:59:44.795607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:45.599610 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0521 15:59:45.599642 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  E0521 15:59:45.796662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:46.599236 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0521 15:59:46.599269 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0521 15:59:46.599287 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0521 15:59:46.605159 23 daemon_set.go:102] Updating DaemonSet daemon-set
  E0521 15:59:46.797033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:47.613155 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0521 15:59:47.618808 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0521 15:59:47.618850 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0521 15:59:47.621556 23 daemon_set.go:1193] Wrong image for pod: daemon-set-4wv7p. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0521 15:59:47.621596 23 daemon_set.go:1198] Pod daemon-set-4wv7p is not available
  E0521 15:59:47.797822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:48.798772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:49.622582 23 daemon_set.go:1198] Pod daemon-set-8qpt7 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/21/25 15:59:49.631
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9202, will wait for the garbage collector to delete the pods @ 05/21/25 15:59:49.631
  I0521 15:59:49.687331 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.812783ms
  I0521 15:59:49.788070 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.737335ms
  E0521 15:59:49.799327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:50.800332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:51.691969 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0521 15:59:51.692000 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0521 15:59:51.694088 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23965"},"items":null}

  I0521 15:59:51.695801 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23965"},"items":null}

  I0521 15:59:51.701351 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9202" for this suite. @ 05/21/25 15:59:51.703
• [7.219 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/21/25 15:59:51.71
  I0521 15:59:51.710450 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubelet-test @ 05/21/25 15:59:51.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:51.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:51.72
  I0521 15:59:51.745567 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7086" for this suite. @ 05/21/25 15:59:51.799
  E0521 15:59:51.801015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [0.093 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/21/25 15:59:51.803
  I0521 15:59:51.803738 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 15:59:51.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:51.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:51.814
  STEP: Creating projection with secret that has name projected-secret-test-3acde160-05d8-4edf-9d1f-da229908c96c @ 05/21/25 15:59:51.816
  STEP: Creating a pod to test consume secrets @ 05/21/25 15:59:51.819
  E0521 15:59:52.801715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:53.801911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 15:59:53.834
  I0521 15:59:53.836835 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-93080e29-a104-4f62-9077-0480dd0c6026 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 15:59:53.841
  I0521 15:59:53.852117 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2060" for this suite. @ 05/21/25 15:59:53.854
• [2.054 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 05/21/25 15:59:53.858
  I0521 15:59:53.858353 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/21/25 15:59:53.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:53.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:53.87
  STEP: getting /apis @ 05/21/25 15:59:53.876
  STEP: getting /apis/admissionregistration.k8s.io @ 05/21/25 15:59:53.879
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/21/25 15:59:53.88
  STEP: creating @ 05/21/25 15:59:53.881
  STEP: getting @ 05/21/25 15:59:53.895
  STEP: listing @ 05/21/25 15:59:53.897
  STEP: watching @ 05/21/25 15:59:53.898
  I0521 15:59:53.898828 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 05/21/25 15:59:53.899
  STEP: updating @ 05/21/25 15:59:53.903
  I0521 15:59:53.928496 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0521 15:59:53.928534 23 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/21/25 15:59:53.928
  STEP: patching /status @ 05/21/25 15:59:53.93
  STEP: updating /status @ 05/21/25 15:59:53.935
  STEP: deleting @ 05/21/25 15:59:53.944
  STEP: deleting a collection @ 05/21/25 15:59:53.952
  I0521 15:59:53.964840 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3430" for this suite. @ 05/21/25 15:59:53.967
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 05/21/25 15:59:53.98
  I0521 15:59:53.980272 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 15:59:53.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:53.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:53.992
  I0521 15:59:53.994484 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 15:59:54.802759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:55.802958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:56.525645      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0521 15:59:56.525668      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0521 15:59:56.525676      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0521 15:59:56.525684      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0521 15:59:56.525692      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0521 15:59:56.802985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 15:59:57.050640 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5293" for this suite. @ 05/21/25 15:59:57.052
• [3.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 05/21/25 15:59:57.056
  I0521 15:59:57.056487 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename containers @ 05/21/25 15:59:57.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 15:59:57.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 15:59:57.068
  STEP: Creating a pod to test override command @ 05/21/25 15:59:57.071
  E0521 15:59:57.803738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:58.804715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 15:59:59.804166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:00.804361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:00:01.085
  I0521 16:00:01.087170 23 output.go:207] Trying to get logs from node worker-0 pod client-containers-68b1f726-dd3d-4e0d-ac9d-527555bd5eb6 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:00:01.091
  I0521 16:00:01.102993 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3033" for this suite. @ 05/21/25 16:00:01.105
• [4.055 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 05/21/25 16:00:01.111
  I0521 16:00:01.111836 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:00:01.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:00:01.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:00:01.121
  STEP: Creating configMap with name cm-test-opt-del-b06e901e-93e3-4bdd-9d5a-8a941bfa179d @ 05/21/25 16:00:01.205
  STEP: Creating configMap with name cm-test-opt-upd-5fff63b0-afa1-44fe-988f-e8e318aba79d @ 05/21/25 16:00:01.211
  STEP: Creating the pod @ 05/21/25 16:00:01.215
  E0521 16:00:01.804819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:02.805246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-b06e901e-93e3-4bdd-9d5a-8a941bfa179d @ 05/21/25 16:00:03.242
  STEP: Updating configmap cm-test-opt-upd-5fff63b0-afa1-44fe-988f-e8e318aba79d @ 05/21/25 16:00:03.245
  STEP: Creating configMap with name cm-test-opt-create-650678a4-ec06-4e59-bb96-d55740b9d576 @ 05/21/25 16:00:03.248
  STEP: waiting to observe update in volume @ 05/21/25 16:00:03.251
  E0521 16:00:03.805362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:04.805571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:05.805856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:06.806072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:07.806692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:08.806928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:09.807565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:10.807681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:11.808088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:12.808250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:13.808308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:14.808497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:15.809513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:16.809686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:17.810429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:18.810608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:19.810840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:20.811030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:21.811164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:22.811279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:23.811392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:24.811625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:25.811786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:26.811968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:27.812772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:28.812916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:29.813828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:30.814976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:31.815431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:32.815757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:33.816505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:34.816705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:35.817173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:36.817341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:37.817652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:38.817819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:39.817986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:40.818161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:41.818853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:42.818910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:43.819992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:44.820215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:45.821228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:46.821433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:47.822263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:48.822864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:49.823602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:50.824257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:51.824454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:52.824635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:53.824862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:54.825052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:55.826100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:56.826273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:57.827323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:58.827494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:00:59.828423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:00.828762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:01.829311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:02.830181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:03.830273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:04.830481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:05.830741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:06.830859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:07.831824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:08.831929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:09.832803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:10.832870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:11.833565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:12.833678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:13.834273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:14.834355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:15.834848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:16.835025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:17.835677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:18.835800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:19.835874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:20.836053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:21.836807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:22.836882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:23.837486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:24.837684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:25.837927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:26.838124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:27.838746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:28.838915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:29.546910 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1516" for this suite. @ 05/21/25 16:01:29.549
• [88.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 05/21/25 16:01:29.554
  I0521 16:01:29.554107 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 16:01:29.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:01:29.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:01:29.566
  STEP: Creating pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295 @ 05/21/25 16:01:29.568
  E0521 16:01:29.839225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:30.839769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 16:01:31.58
  I0521 16:01:31.582336 23 container_probe.go:1748] Initial restart count of pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 is 0
  I0521 16:01:31.584115 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:31.840387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:32.840559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:33.586704 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:33.840969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:34.841169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:35.589270 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:35.841624      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:36.841845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:37.591987 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:37.842539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:38.842708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:39.595627 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:39.842870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:40.843061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:41.598200 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:41.843477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:42.844512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:43.601697 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:43.844958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:44.845157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:45.604138 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:45.845255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:46.845450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:47.606572 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:47.846032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:48.846172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:49.609380 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:49.846788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:50.847113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:51.612333 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:51.847616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:52.847739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:53.615373 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:53.848762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:54.849103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:55.618305 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:55.849093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:56.849265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:57.621366 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:57.849736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:01:58.849917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:01:59.624081 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:01:59.850367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:00.850746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:01.627051 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:01.851321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:02.851483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:03.630858 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:03.852084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:04.852245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:05.633678 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:05.852924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:06.853099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:07.636205 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:07.853683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:08.853875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:09.639039 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:09.854298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:10.854481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:11.641651 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:11.854957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:12.855058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:13.644232 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:13.855494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:14.855664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:15.646631 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:15.855842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:16.855955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:17.650361 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:17.856602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:18.856758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:19.652986 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  E0521 16:02:19.857373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:20.858048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:21.656248 23 container_probe.go:1758] Get pod busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 in namespace container-probe-8295
  I0521 16:02:21.656287 23 container_probe.go:1762] Restart count of pod container-probe-8295/busybox-d27508b2-9b21-4fb9-bd68-9993988f0739 is now 1 (50.073917765s elapsed)
  STEP: deleting the pod @ 05/21/25 16:02:21.656
  I0521 16:02:21.667174 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8295" for this suite. @ 05/21/25 16:02:21.669
• [52.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/21/25 16:02:21.674
  I0521 16:02:21.674044 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 16:02:21.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:02:21.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:02:21.685
  E0521 16:02:21.858173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:22.858324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:23.700712 23 delete.go:62] Deleting pod "var-expansion-4b0357b9-28f8-43ff-ab0d-4e1a2ce66ff8" in namespace "var-expansion-1826"
  I0521 16:02:23.707077 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-4b0357b9-28f8-43ff-ab0d-4e1a2ce66ff8" to be fully deleted
  E0521 16:02:23.859275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:24.859472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:25.712177 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1826" for this suite. @ 05/21/25 16:02:25.714
• [4.045 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 05/21/25 16:02:25.719
  I0521 16:02:25.719374 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 16:02:25.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:02:25.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:02:25.728
  STEP: Creating a test headless service @ 05/21/25 16:02:25.73
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7267.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-7267.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 05/21/25 16:02:25.733
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7267.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7267.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/21/25 16:02:25.733
  STEP: creating a pod to probe DNS @ 05/21/25 16:02:25.733
  STEP: submitting the pod to kubernetes @ 05/21/25 16:02:25.733
  E0521 16:02:25.859905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:26.860947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 16:02:27.747
  STEP: looking for the results for each expected name from probers @ 05/21/25 16:02:27.749
  I0521 16:02:27.762058 23 dns_common.go:546] DNS probes using dns-7267/dns-test-c043b280-a74c-4238-b847-b3828eea30e0 succeeded

  STEP: deleting the pod @ 05/21/25 16:02:27.762
  STEP: deleting the test headless service @ 05/21/25 16:02:27.772
  I0521 16:02:27.780524 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7267" for this suite. @ 05/21/25 16:02:27.783
• [2.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 05/21/25 16:02:27.787
  I0521 16:02:27.787045 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 16:02:27.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:02:27.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:02:27.799
  STEP: Creating service test in namespace statefulset-4691 @ 05/21/25 16:02:27.802
  I0521 16:02:27.814896 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0521 16:02:27.861175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:28.861359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:29.861561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:30.861710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:31.861908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:32.862018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:33.862138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:34.862234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:35.862443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:36.862628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:37.815519 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/21/25 16:02:37.819
  I0521 16:02:37.834658 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:02:37.834697 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0521 16:02:37.862958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:38.863180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:39.863310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:40.863503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:41.863697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:42.863819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:43.863886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:44.864082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:45.864253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:46.864453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:02:47.830966 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:02:47.831004 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/21/25 16:02:47.834
  STEP: Delete all of the StatefulSets @ 05/21/25 16:02:47.836
  STEP: Verify that StatefulSets have been deleted @ 05/21/25 16:02:47.843
  I0521 16:02:47.845637 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4691
  I0521 16:02:47.853687 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4691" for this suite. @ 05/21/25 16:02:47.864
  E0521 16:02:47.864486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [20.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 05/21/25 16:02:47.871
  I0521 16:02:47.871860 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:02:47.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:02:47.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:02:47.88
  STEP: Creating a ResourceQuota @ 05/21/25 16:02:47.884
  STEP: Getting a ResourceQuota @ 05/21/25 16:02:47.889
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/21/25 16:02:47.891
  STEP: Patching the ResourceQuota @ 05/21/25 16:02:47.893
  STEP: Deleting a Collection of ResourceQuotas @ 05/21/25 16:02:47.896
  STEP: Verifying the deleted ResourceQuota @ 05/21/25 16:02:47.902
  I0521 16:02:47.904558 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5674" for this suite. @ 05/21/25 16:02:47.963
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 05/21/25 16:02:47.969
  I0521 16:02:47.969976 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 16:02:47.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:02:47.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:02:47.98
  STEP: Creating configMap with name configmap-test-volume-4ec3cedb-fc88-43c5-a51a-bfe8fad5bcd3 @ 05/21/25 16:02:47.983
  STEP: Creating a pod to test consume configMaps @ 05/21/25 16:02:47.989
  E0521 16:02:48.864641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:49.864867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:50.865500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:51.865673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:02:52.002
  I0521 16:02:52.004145 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-03d69dab-a585-4351-9c9c-9e70124724dd container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:02:52.008
  I0521 16:02:52.021628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3341" for this suite. @ 05/21/25 16:02:52.024
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/21/25 16:02:52.028
  I0521 16:02:52.028109 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename chunking @ 05/21/25 16:02:52.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:02:52.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:02:52.04
  STEP: creating a large number of resources @ 05/21/25 16:02:52.042
  E0521 16:02:52.866487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:53.867105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:54.867720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:55.868455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:56.869282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:57.870223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:58.871273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:02:59.872099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:00.872384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:01.873261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:02.874247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:03.875206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:04.876158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:05.877073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:06.877495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:07.878017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:08.878647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 05/21/25 16:03:09.733
  I0521 16:03:09.782743 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0521 16:03:09.832965 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E0521 16:03:09.878971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:09.881950 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0521 16:03:09.931919 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0521 16:03:09.981963 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0521 16:03:10.032050 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0521 16:03:10.082041 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0521 16:03:10.132020 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0521 16:03:10.182187 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0521 16:03:10.232264 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0521 16:03:10.282373 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0521 16:03:10.332615 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0521 16:03:10.382739 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0521 16:03:10.432792 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0521 16:03:10.481783 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0521 16:03:10.531660 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0521 16:03:10.582795 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0521 16:03:10.632134 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0521 16:03:10.682114 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0521 16:03:10.732132 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0521 16:03:10.782750 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0521 16:03:10.832877 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E0521 16:03:10.879992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:10.882822 23 chunking.go:98] Retrieved 17/17 results with rv 25251 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0521 16:03:10.931944 23 chunking.go:98] Retrieved 9/17 results with rv 25251 and continue 
  I0521 16:03:10.983227 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0521 16:03:11.032555 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0521 16:03:11.082868 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0521 16:03:11.131973 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0521 16:03:11.182038 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0521 16:03:11.232144 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0521 16:03:11.282086 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0521 16:03:11.332089 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0521 16:03:11.382541 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0521 16:03:11.432536 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0521 16:03:11.482232 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0521 16:03:11.532308 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0521 16:03:11.582063 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0521 16:03:11.631976 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0521 16:03:11.682143 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0521 16:03:11.732079 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0521 16:03:11.782074 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0521 16:03:11.832435 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  E0521 16:03:11.880802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:11.882255 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0521 16:03:11.932056 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0521 16:03:11.981997 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0521 16:03:12.031982 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0521 16:03:12.081849 23 chunking.go:98] Retrieved 17/17 results with rv 25252 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0521 16:03:12.131839 23 chunking.go:98] Retrieved 9/17 results with rv 25252 and continue 
  I0521 16:03:12.182776 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0521 16:03:12.232847 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0521 16:03:12.281882 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0521 16:03:12.331928 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0521 16:03:12.382085 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0521 16:03:12.432237 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0521 16:03:12.482216 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0521 16:03:12.532309 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0521 16:03:12.584569 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0521 16:03:12.633116 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0521 16:03:12.682057 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0521 16:03:12.732140 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0521 16:03:12.782591 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0521 16:03:12.832559 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  E0521 16:03:12.880914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:12.882542 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0521 16:03:12.932644 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0521 16:03:12.982624 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0521 16:03:13.032669 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0521 16:03:13.082619 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0521 16:03:13.132589 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0521 16:03:13.182453 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0521 16:03:13.232672 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0521 16:03:13.283285 23 chunking.go:98] Retrieved 17/17 results with rv 25255 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjUyNTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0521 16:03:13.332012 23 chunking.go:98] Retrieved 9/17 results with rv 25255 and continue 
  STEP: retrieving those results all at once @ 05/21/25 16:03:13.332
  I0521 16:03:13.391997 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2680" for this suite. @ 05/21/25 16:03:13.432
• [21.456 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 05/21/25 16:03:13.484
  I0521 16:03:13.484033 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename namespaces @ 05/21/25 16:03:13.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:13.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:13.494
  STEP: Creating a test namespace @ 05/21/25 16:03:13.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:13.502
  STEP: Creating a pod in the namespace @ 05/21/25 16:03:13.504
  STEP: Waiting for the pod to have running status @ 05/21/25 16:03:13.51
  E0521 16:03:13.881712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:14.881835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/21/25 16:03:15.514
  STEP: Waiting for the namespace to be removed. @ 05/21/25 16:03:15.518
  E0521 16:03:15.881952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:16.882085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:17.882619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:18.882828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:19.883741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:20.884445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:21.884952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:22.885681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:23.885853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:24.885836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:25.886232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/21/25 16:03:26.521
  STEP: Verifying there are no pods in the namespace @ 05/21/25 16:03:26.528
  I0521 16:03:26.530518 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9791" for this suite. @ 05/21/25 16:03:26.535
  STEP: Destroying namespace "nsdeletetest-1493" for this suite. @ 05/21/25 16:03:26.54
  I0521 16:03:26.542064 23 framework.go:370] Namespace nsdeletetest-1493 was already deleted
  STEP: Destroying namespace "nsdeletetest-9914" for this suite. @ 05/21/25 16:03:26.542
• [13.062 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/21/25 16:03:26.545
  I0521 16:03:26.545834 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename conformance-tests @ 05/21/25 16:03:26.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:26.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:26.554
  STEP: Getting node addresses @ 05/21/25 16:03:26.557
  I0521 16:03:26.557554 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0521 16:03:26.633345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-755" for this suite. @ 05/21/25 16:03:26.637
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 05/21/25 16:03:26.642
  I0521 16:03:26.642177 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:03:26.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:26.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:26.651
  STEP: Creating the pod @ 05/21/25 16:03:26.654
  E0521 16:03:26.886252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:27.886954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:28.887678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:29.181814 23 pod_client.go:173] Successfully updated pod "labelsupdatea61145db-cb2e-4c66-a7ce-ab034ddaee16"
  E0521 16:03:29.887828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:30.888002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:31.192709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9831" for this suite. @ 05/21/25 16:03:31.195
• [4.559 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/21/25 16:03:31.201
  I0521 16:03:31.201804 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/21/25 16:03:31.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:31.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:31.211
  STEP: getting /apis @ 05/21/25 16:03:31.213
  STEP: getting /apis/storage.k8s.io @ 05/21/25 16:03:31.217
  STEP: getting /apis/storage.k8s.io/v1 @ 05/21/25 16:03:31.218
  STEP: creating @ 05/21/25 16:03:31.219
  STEP: watching @ 05/21/25 16:03:31.233
  I0521 16:03:31.233102 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/21/25 16:03:31.237
  STEP: listing in namespace @ 05/21/25 16:03:31.239
  STEP: listing across namespaces @ 05/21/25 16:03:31.241
  STEP: patching @ 05/21/25 16:03:31.242
  STEP: updating @ 05/21/25 16:03:31.246
  I0521 16:03:31.249292 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0521 16:03:31.249407 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/21/25 16:03:31.249
  STEP: deleting a collection @ 05/21/25 16:03:31.256
  I0521 16:03:31.266669 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1405" for this suite. @ 05/21/25 16:03:31.296
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/21/25 16:03:31.3
  I0521 16:03:31.300374 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replicaset @ 05/21/25 16:03:31.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:31.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:31.309
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/21/25 16:03:31.312
  E0521 16:03:31.888636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:32.888770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 05/21/25 16:03:33.325
  STEP: Then the orphan pod is adopted @ 05/21/25 16:03:33.329
  E0521 16:03:33.889586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 05/21/25 16:03:34.334
  I0521 16:03:34.336707 23 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/21/25 16:03:34.343
  E0521 16:03:34.889964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:35.348617 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9776" for this suite. @ 05/21/25 16:03:35.353
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 05/21/25 16:03:35.358
  I0521 16:03:35.358818 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 16:03:35.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:35.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:35.37
  STEP: Setting up server cert @ 05/21/25 16:03:35.382
  E0521 16:03:35.890925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 16:03:36.128
  STEP: Deploying the webhook pod @ 05/21/25 16:03:36.132
  STEP: Wait for the deployment to be ready @ 05/21/25 16:03:36.143
  I0521 16:03:36.149519 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 16:03:36.891039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:37.891162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 16:03:38.157
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 16:03:38.17
  E0521 16:03:38.891878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:39.171141 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0521 16:03:39.174265 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8825-crds.webhook.example.com via the AdmissionRegistration API @ 05/21/25 16:03:39.68
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/21/25 16:03:39.695
  E0521 16:03:39.892790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:40.892863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:41.893698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:42.266381 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1127" for this suite. @ 05/21/25 16:03:42.269
  STEP: Destroying namespace "webhook-markers-4387" for this suite. @ 05/21/25 16:03:42.273
• [6.919 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 05/21/25 16:03:42.277
  I0521 16:03:42.277661 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename aggregator @ 05/21/25 16:03:42.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:03:42.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:03:42.291
  I0521 16:03:42.293866 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Registering the sample API server. @ 05/21/25 16:03:42.294
  I0521 16:03:42.448015 23 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I0521 16:03:42.470950 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0521 16:03:42.894591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:43.894793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:44.506798 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:44.895101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:45.895223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:46.510181 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:46.895474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:47.895620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:48.509288 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:48.896586      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:49.896806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:50.509554 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:50.896997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:51.897200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:52.510193 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:52.897778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:53.898143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:54.510371 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:54.898845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:55.899018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:56.509795 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:56.899124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:57.899848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:03:58.509276 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:03:58.899978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:03:59.900175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:04:00.510581 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:04:00.901044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:01.901241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:04:02.509342 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 3, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:04:02.901825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:03.902020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:04:04.622838 23 aggregator.go:756] Waited 109.55811ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/21/25 16:04:04.654
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/21/25 16:04:04.656
  STEP: List APIServices @ 05/21/25 16:04:04.662
  I0521 16:04:04.665513 23 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/21/25 16:04:04.665
  I0521 16:04:04.676995 23 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/21/25 16:04:04.677
  I0521 16:04:04.684456 23 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.May, 21, 16, 4, 4, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/21/25 16:04:04.684
  I0521 16:04:04.686329 23 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-05-21 16:04:04 +0000 UTC Passed all checks passed}
  I0521 16:04:04.686356 23 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0521 16:04:04.686389 23 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/21/25 16:04:04.686
  I0521 16:04:04.694528 23 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1862546293" @ 05/21/25 16:04:04.694
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/21/25 16:04:04.703
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/21/25 16:04:04.71
  STEP: Patch APIService Status @ 05/21/25 16:04:04.711
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/21/25 16:04:04.717
  I0521 16:04:04.720004 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-05-21 16:04:04 +0000 UTC Passed all checks passed}
  I0521 16:04:04.720041 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0521 16:04:04.720060 23 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0521 16:04:04.720077 23 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/21/25 16:04:04.72
  STEP: Confirm that the generated APIService has been deleted @ 05/21/25 16:04:04.726
  I0521 16:04:04.726283 23 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0521 16:04:04.727974 23 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0521 16:04:04.727995 23 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0521 16:04:04.789736 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1280" for this suite. @ 05/21/25 16:04:04.792
• [22.520 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 05/21/25 16:04:04.797
  I0521 16:04:04.797835 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:04:04.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:04:04.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:04:04.807
  STEP: Creating configMap with name projected-configmap-test-volume-map-0365fb46-7642-485f-93ac-e474252a60fc @ 05/21/25 16:04:04.809
  STEP: Creating a pod to test consume configMaps @ 05/21/25 16:04:04.814
  E0521 16:04:04.902398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:05.902595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:06.902930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:07.903032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:04:08.829
  I0521 16:04:08.831336 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-5213569d-cd2f-4ff3-84f9-75a547b9562c container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:04:08.835
  I0521 16:04:08.847303 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6493" for this suite. @ 05/21/25 16:04:08.849
• [4.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/21/25 16:04:08.855
  I0521 16:04:08.855562 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replicaset @ 05/21/25 16:04:08.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:04:08.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:04:08.867
  STEP: Create a ReplicaSet @ 05/21/25 16:04:08.869
  STEP: Verify that the required pods have come up @ 05/21/25 16:04:08.874
  I0521 16:04:08.876927 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  E0521 16:04:08.904059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:09.904230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:10.904293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:11.904501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:12.904674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:13.904817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:04:13.963435 23 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/21/25 16:04:13.963
  I0521 16:04:13.965293 23 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/21/25 16:04:13.965
  STEP: DeleteCollection of the ReplicaSets @ 05/21/25 16:04:13.983
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/21/25 16:04:13.988
  I0521 16:04:13.990809 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3107" for this suite. @ 05/21/25 16:04:13.994
• [5.146 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 05/21/25 16:04:14.001
  I0521 16:04:14.001479 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 16:04:14.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:04:14.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:04:14.021
  STEP: Creating configMap with name configmap-test-upd-92922fd5-5bdf-4ced-a50f-4a203091b6b0 @ 05/21/25 16:04:14.094
  STEP: Creating the pod @ 05/21/25 16:04:14.098
  E0521 16:04:14.904880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:15.905060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-92922fd5-5bdf-4ced-a50f-4a203091b6b0 @ 05/21/25 16:04:16.115
  STEP: waiting to observe update in volume @ 05/21/25 16:04:16.118
  E0521 16:04:16.905954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:17.906054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:18.906107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:19.906317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:20.907233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:21.907425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:22.907846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:23.907936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:24.908755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:25.908843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:26.908905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:27.909060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:28.909805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:29.910001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:30.910159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:31.910356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:32.910851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:33.911036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:34.911555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:35.911795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:36.912370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:37.912557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:38.912594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:39.912804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:40.912849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:41.913052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:42.913333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:43.914118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:44.914949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:45.915127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:46.916063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:47.916158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:48.916448      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:49.916545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:50.916649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:51.916856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:52.917806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:53.917980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:54.918495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:55.918663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:56.919759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:57.919826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:58.920370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:04:59.920548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:00.920748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:01.920942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:02.921277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:03.921473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:04.922347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:05.922551      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:06.923390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:07.922914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:08.923577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:09.923803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:10.924733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:11.924919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:12.925854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:13.925938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:14.926857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:15.927018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:16.927127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:17.927250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:18.304514 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2280" for this suite. @ 05/21/25 16:05:18.307
• [64.309 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/21/25 16:05:18.311
  I0521 16:05:18.311083 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename events @ 05/21/25 16:05:18.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:05:18.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:05:18.322
  STEP: Create set of events @ 05/21/25 16:05:18.325
  STEP: get a list of Events with a label in the current namespace @ 05/21/25 16:05:18.337
  STEP: delete a list of events @ 05/21/25 16:05:18.339
  I0521 16:05:18.339206 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/21/25 16:05:18.348
  I0521 16:05:18.350023 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9009" for this suite. @ 05/21/25 16:05:18.407
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 05/21/25 16:05:18.411
  I0521 16:05:18.411973 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 16:05:18.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:05:18.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:05:18.423
  STEP: create the rc1 @ 05/21/25 16:05:18.508
  STEP: create the rc2 @ 05/21/25 16:05:18.512
  E0521 16:05:18.927985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:19.929025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:20.929099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:21.929350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:22.929919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:23.938906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/21/25 16:05:24.536
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/21/25 16:05:24.923
  STEP: wait for the rc to be deleted @ 05/21/25 16:05:24.928
  E0521 16:05:24.935912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:25.936101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:26.936909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:27.937542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:28.937997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:29.937433 23 garbage_collector.go:770] 72 pods remaining
  I0521 16:05:29.937469 23 garbage_collector.go:777] 72 pods has nil DeletionTimestamp
  I0521 16:05:29.937480 23 garbage_collector.go:778] 
  E0521 16:05:29.938611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:30.939040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:31.938887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:32.940021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:33.940062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/21/25 16:05:34.936
  W0521 16:05:34.939217      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0521 16:05:34.939249 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0521 16:05:34.939315 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22c96" in namespace "gc-3967"
  E0521 16:05:34.940721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:34.949091 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2789f" in namespace "gc-3967"
  I0521 16:05:34.958838 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29jl4" in namespace "gc-3967"
  I0521 16:05:34.970016 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2scxn" in namespace "gc-3967"
  I0521 16:05:34.980400 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lbf5" in namespace "gc-3967"
  I0521 16:05:34.994852 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sggp" in namespace "gc-3967"
  I0521 16:05:35.009290 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4td9v" in namespace "gc-3967"
  I0521 16:05:35.019857 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5gkxv" in namespace "gc-3967"
  I0521 16:05:35.029363 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jd5m" in namespace "gc-3967"
  I0521 16:05:35.037564 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5k5g8" in namespace "gc-3967"
  I0521 16:05:35.047895 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5n2jx" in namespace "gc-3967"
  I0521 16:05:35.059148 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5n662" in namespace "gc-3967"
  I0521 16:05:35.065873 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5phcx" in namespace "gc-3967"
  I0521 16:05:35.076233 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5r8qf" in namespace "gc-3967"
  I0521 16:05:35.086036 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qvjs" in namespace "gc-3967"
  I0521 16:05:35.095021 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tb8l" in namespace "gc-3967"
  I0521 16:05:35.104535 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7kw9t" in namespace "gc-3967"
  I0521 16:05:35.116488 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lvzr" in namespace "gc-3967"
  I0521 16:05:35.127799 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8b5rt" in namespace "gc-3967"
  I0521 16:05:35.137017 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8btkc" in namespace "gc-3967"
  I0521 16:05:35.145827 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mwm5" in namespace "gc-3967"
  I0521 16:05:35.157711 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9c7jl" in namespace "gc-3967"
  I0521 16:05:35.166222 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cqht" in namespace "gc-3967"
  I0521 16:05:35.172794 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9gqq2" in namespace "gc-3967"
  I0521 16:05:35.182046 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sr7b" in namespace "gc-3967"
  I0521 16:05:35.193172 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9thm7" in namespace "gc-3967"
  I0521 16:05:35.203144 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wp4m" in namespace "gc-3967"
  I0521 16:05:35.212447 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8gs4" in namespace "gc-3967"
  I0521 16:05:35.223072 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgn5j" in namespace "gc-3967"
  I0521 16:05:35.235273 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkjsf" in namespace "gc-3967"
  I0521 16:05:35.246069 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkwdz" in namespace "gc-3967"
  I0521 16:05:35.256602 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbhgg" in namespace "gc-3967"
  I0521 16:05:35.269204 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cm79w" in namespace "gc-3967"
  I0521 16:05:35.278877 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cnzxq" in namespace "gc-3967"
  I0521 16:05:35.287523 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqc8h" in namespace "gc-3967"
  I0521 16:05:35.297320 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cs8fr" in namespace "gc-3967"
  I0521 16:05:35.308345 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4rw8" in namespace "gc-3967"
  I0521 16:05:35.320061 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dj4mh" in namespace "gc-3967"
  I0521 16:05:35.328873 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dld86" in namespace "gc-3967"
  I0521 16:05:35.339621 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fjmsw" in namespace "gc-3967"
  I0521 16:05:35.353423 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkccp" in namespace "gc-3967"
  I0521 16:05:35.364936 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fw9wj" in namespace "gc-3967"
  I0521 16:05:35.374882 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g94xq" in namespace "gc-3967"
  I0521 16:05:35.386644 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfwf8" in namespace "gc-3967"
  I0521 16:05:35.394411 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gj6fj" in namespace "gc-3967"
  I0521 16:05:35.404167 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gmtfx" in namespace "gc-3967"
  I0521 16:05:35.415952 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gv2t5" in namespace "gc-3967"
  I0521 16:05:35.426838 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h95nn" in namespace "gc-3967"
  I0521 16:05:35.435292 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgfjd" in namespace "gc-3967"
  I0521 16:05:35.443492 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hjj67" in namespace "gc-3967"
  I0521 16:05:35.455228 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3967" for this suite. @ 05/21/25 16:05:35.461
• [17.057 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/21/25 16:05:35.47
  I0521 16:05:35.470200 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 16:05:35.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:05:35.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:05:35.497
  STEP: Creating secret with name secret-test-dfb180f0-ac50-4aea-8d18-a98be4af37bb @ 05/21/25 16:05:35.517
  STEP: Creating a pod to test consume secrets @ 05/21/25 16:05:35.52
  E0521 16:05:35.940842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:36.941053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:37.941641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:38.941860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:05:39.538
  I0521 16:05:39.540756 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-21ae9811-6829-4925-944e-fe771825ca66 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 16:05:39.545
  I0521 16:05:39.556518 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8465" for this suite. @ 05/21/25 16:05:39.559
  STEP: Destroying namespace "secret-namespace-7099" for this suite. @ 05/21/25 16:05:39.562
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 05/21/25 16:05:39.567
  I0521 16:05:39.567381 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 16:05:39.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:05:39.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:05:39.578
  STEP: Creating pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366 @ 05/21/25 16:05:39.58
  E0521 16:05:39.942956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:40.943143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 16:05:41.592
  I0521 16:05:41.594343 23 container_probe.go:1748] Initial restart count of pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec is 0
  I0521 16:05:41.596748 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:41.944224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:42.945309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:43.600980 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:43.945281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:44.945979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:45.603761 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:45.946069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:46.946245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:47.607889 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:47.946776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:48.946849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:49.610836 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:49.946969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:50.947154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:51.614184 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:51.947439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:52.947605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:53.617302 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:53.947634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:54.947789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:55.620033 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:55.948389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:56.948576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:57.622353 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:57.948804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:05:58.948863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:05:59.625048 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:05:59.949929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:00.950131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:01.627735 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:01.950985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:02.951176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:03.631316 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:03.951666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:04.951871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:05.634076 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:05.952458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:06.952642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:07.637250 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:07.952711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:08.952912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:09.640256 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:09.953663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:10.953826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:11.642889 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:11.954746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:12.955351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:13.646488 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:13.955986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:14.956162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:15.649306 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:15.956667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:16.956838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:17.652167 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:17.957573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:18.957668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:19.655085 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:19.958508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:20.958639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:21.657365 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:21.958797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:22.958872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:23.660000 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:23.959447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:24.959526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:25.662944 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:25.960324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:26.960526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:27.665934 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:27.961282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:28.961393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:29.668596 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:29.961920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:30.962119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:31.670832 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:31.962181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:32.962290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:33.673411 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:33.962822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:34.963009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:35.676648 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:35.964067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:36.964240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:37.680071 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:37.964436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:38.964639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:39.682748 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:39.964947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:40.965136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:41.684870 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:41.966220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:42.966945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:43.688567 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:43.967991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:44.968100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:45.691475 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:45.968762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:46.968867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:47.694166 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:47.969472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:48.969809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:49.696947 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:49.970388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:50.970484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:51.700507 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:51.970591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:52.970811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:53.703920 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:53.971233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:54.971423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:55.706849 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:55.972219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:56.972414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:57.709768 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:57.973251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:06:58.973431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:06:59.712565 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:06:59.973917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:00.974083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:01.716299 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:01.974597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:02.974783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:03.718871 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:03.975279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:04.975481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:05.721846 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:05.976128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:06.976322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:07.724684 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:07.977071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:08.977276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:09.727202 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:09.977383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:10.977587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:11.729419 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:11.977660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:12.977828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:13.731879 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:13.977882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:14.978076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:15.735608 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:15.978842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:16.979022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:17.738839 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:17.979195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:18.979367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:19.741656 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:19.979980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:20.980063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:21.744078 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:21.980274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:22.980841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:23.746871 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:23.980919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:24.981030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:25.751288 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:25.981499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:26.981685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:27.753906 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:27.982138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:28.982215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:29.756360 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:29.982646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:30.982775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:31.758831 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:31.983237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:32.983318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:33.761546 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:33.983829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:34.984006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:35.764545 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:35.984950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:36.985034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:37.767421 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:37.985649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:38.985829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:39.770298 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:39.986559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:40.986952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:41.772895 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:41.987089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:42.987417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:43.775687 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:43.987834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:44.987993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:45.778451 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:45.988686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:46.988879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:47.781084 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:47.989376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:48.989562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:49.783749 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:49.990223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:50.990346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:51.786436 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:51.990825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:52.990918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:53.789000 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:53.991288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:54.991411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:55.791818 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:55.992035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:56.992216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:57.795130 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:57.992250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:07:58.992431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:07:59.798014 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:07:59.993302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:00.993470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:01.800686 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:01.993927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:02.994935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:03.804081 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:03.995354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:04.995971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:05.807359 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:05.996783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:06.996941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:07.810774 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:07.998009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:08.998113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:09.813772 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:09.998923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:10.999922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:11.817024 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:12.000252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:13.000361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:13.819545 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:14.000941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:15.001109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:15.822561 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:16.001816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:17.001976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:17.825190 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:18.002435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:19.002817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:19.827868 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:20.002834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:21.002996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:21.831233 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:22.003397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:23.003587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:23.834201 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:24.004432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:25.004604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:25.837042 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:26.005202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:27.005379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:27.839804 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:28.005991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:29.006925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:29.843212 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:30.007436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:31.007610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:31.845903 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:32.008187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:33.008298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:33.849127 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:34.009298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:35.009924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:35.852110 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:36.010337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:37.010511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:37.854951 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:38.011261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:39.011426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:39.857572 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:40.011775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:41.011960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:41.860297 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:42.012497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:43.012679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:43.862872 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:44.013005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:45.013166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:45.866822 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:46.014228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:47.014394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:47.869710 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:48.014921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:49.015087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:49.872136 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:50.015334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:51.016018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:51.874605 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:52.016753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:53.016842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:53.877052 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:54.017261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:55.017440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:55.879858 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:56.018046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:57.018216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:57.882463 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:08:58.018644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:08:59.018825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:08:59.884984 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:00.019223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:01.019402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:01.887821 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:02.020007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:03.020117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:03.890426 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:04.020636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:05.021117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:05.893555 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:06.021746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:07.021934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:07.896234 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:08.022434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:09.022615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:09.898842 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:10.023004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:11.023198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:11.903037 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:12.024260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:13.024606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:13.905607 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:14.024766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:15.024846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:15.908494 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:16.026276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:17.026373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:17.911766 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:18.026992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:19.027192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:19.914452 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:20.027623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:21.027772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:21.916808 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:22.027831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:23.027909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:23.922890 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:24.028066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:25.028257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:25.926159 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:26.029275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:27.029363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:27.928779 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:28.029858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:29.030030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:29.931956 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:30.030135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:31.030309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:31.934519 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:32.030712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:33.030848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:33.936956 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:34.031115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:35.031318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:35.939485 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:36.031621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:37.031823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:37.942003 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:38.032231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:39.032457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:39.944399 23 container_probe.go:1758] Get pod test-webserver-3715419f-8dac-4a97-bbd7-ff3bf363fcec in namespace container-probe-5366
  E0521 16:09:40.032539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:41.032749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/21/25 16:09:41.944
  I0521 16:09:41.955027 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5366" for this suite. @ 05/21/25 16:09:41.958
• [242.396 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/21/25 16:09:41.963
  I0521 16:09:41.963988 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename security-context @ 05/21/25 16:09:41.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:09:41.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:09:41.973
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/21/25 16:09:41.976
  E0521 16:09:42.033475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:43.033906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:44.033896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:45.034058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:09:45.99
  I0521 16:09:45.992414 23 output.go:207] Trying to get logs from node worker-0 pod security-context-3f71721d-af42-43a2-b1b9-4a39bd8aa110 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 16:09:46.004
  I0521 16:09:46.015021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3955" for this suite. @ 05/21/25 16:09:46.017
• [4.059 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 05/21/25 16:09:46.022
  I0521 16:09:46.023008 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/21/25 16:09:46.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:09:46.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:09:46.033
  E0521 16:09:46.034337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:09:46.035541 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0521 16:09:47.034948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:48.035065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:49.035913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:50.035985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:51.036871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:52.037001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:53.037327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:54.037415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:55.037849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:56.037942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:57.038907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:58.038909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:09:59.039935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:00.040655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:01.040986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:02.041111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:03.041934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:04.042645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:05.042957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:06.043289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:07.043942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:08.044912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:09.045946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:10.046764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:11.046884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:12.047188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:13.047334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:14.047895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:15.048878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:16.049787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:17.049962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:18.050777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:19.050980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:20.051691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:21.051885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:22.052722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:23.052859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:24.053956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:25.054154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:26.054667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:27.054953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:28.055638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:29.055847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:30.056646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:31.056850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:32.057101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:33.057254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:34.058148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:35.058335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:36.058694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:37.058888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:38.059045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:39.059215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:40.060169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:41.060365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:42.060924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:43.062007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:44.062046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:45.062168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:10:46.035829 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0521 16:10:46.038552 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 05/21/25 16:10:46.038
  E0521 16:10:46.062227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:10:46.249889 23 taints.go:463] Pod1 is running on worker-0. Tainting Node
  E0521 16:10:47.062986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:48.063048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:10:48.463986 23 taints.go:471] Pod2 is running on worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/21/25 16:10:48.464
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/21/25 16:10:48.472
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/21/25 16:10:48.476
  E0521 16:10:49.063918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:50.063992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:51.064949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:52.065123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:53.065229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:54.065985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:10:54.528212 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0521 16:10:55.066839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:56.067028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:57.067231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:58.067926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:10:59.068103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:00.068205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:01.068406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:02.068597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:03.068824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:04.069031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:05.069195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:06.069389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:07.069475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:08.069667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:09.069834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:10.070003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:11.070201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:12.070368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:13.070685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:14.071539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:11:14.566967 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/21/25 16:11:14.575
  I0521 16:11:14.578227 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7751" for this suite. @ 05/21/25 16:11:14.582
• [88.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/21/25 16:11:14.589
  I0521 16:11:14.589547 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename init-container @ 05/21/25 16:11:14.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:11:14.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:11:14.603
  STEP: creating the pod @ 05/21/25 16:11:14.605
  I0521 16:11:14.605317 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0521 16:11:15.071853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:16.072580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:17.073422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:11:17.578249 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9695" for this suite. @ 05/21/25 16:11:17.581
• [2.995 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/21/25 16:11:17.585
  I0521 16:11:17.585164 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 16:11:17.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:11:17.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:11:17.594
  STEP: creating the pod @ 05/21/25 16:11:17.597
  STEP: waiting for pod running @ 05/21/25 16:11:17.604
  E0521 16:11:18.073947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:19.074148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/21/25 16:11:19.608
  I0521 16:11:19.610951 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4942 PodName:var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:11:19.610979 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:11:19.611025 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/var-expansion-4942/pods/var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0521 16:11:19.659003 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 05/21/25 16:11:19.659
  I0521 16:11:19.660954 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4942 PodName:var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:11:19.660976 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:11:19.661022 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/var-expansion-4942/pods/var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I0521 16:11:19.698160 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 05/21/25 16:11:19.698
  E0521 16:11:20.074492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:11:20.207999 23 pod_client.go:173] Successfully updated pod "var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893"
  STEP: waiting for annotated pod running @ 05/21/25 16:11:20.208
  STEP: deleting the pod gracefully @ 05/21/25 16:11:20.21
  I0521 16:11:20.210160 23 delete.go:62] Deleting pod "var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893" in namespace "var-expansion-4942"
  I0521 16:11:20.215631 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-19fefabc-39ea-44f1-aca8-ef571475d893" to be fully deleted
  E0521 16:11:21.075460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:22.075680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:23.076370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:24.076546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:25.077047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:26.077227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:27.078273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:28.078396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:29.078884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:30.079056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:31.079307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:32.079518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:33.079928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:34.080113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:35.080212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:36.080412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:37.081382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:38.081707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:39.081940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:40.082008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:41.082160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:42.082219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:43.082744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:44.082755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:45.083203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:46.083366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:47.083822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:48.083951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:49.084271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:50.085044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:51.085238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:52.085411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:11:52.263779 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4942" for this suite. @ 05/21/25 16:11:52.266
• [34.685 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 05/21/25 16:11:52.27
  I0521 16:11:52.270512 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/21/25 16:11:52.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:11:52.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:11:52.282
  STEP: creating a target pod @ 05/21/25 16:11:52.285
  E0521 16:11:53.085883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:54.086080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/21/25 16:11:54.297
  E0521 16:11:55.086698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:56.086822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 05/21/25 16:11:56.313
  STEP: checking pod container endpoints @ 05/21/25 16:11:56.315
  I0521 16:11:56.315383 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6868 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:11:56.315403 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:11:56.315446 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6868/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0521 16:11:56.357908 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 16:11:56.357939 23 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/21/25 16:11:56.367
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/21/25 16:11:56.37
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/21/25 16:11:56.379
  I0521 16:11:56.381943 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6868" for this suite. @ 05/21/25 16:11:56.385
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 05/21/25 16:11:56.389
  I0521 16:11:56.389216 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 16:11:56.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:11:56.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:11:56.4
  E0521 16:11:57.086905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:11:58.087064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/21/25 16:11:58.422
  I0521 16:11:58.422430 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1204 pod-service-account-4f7c9d46-0c91-4762-b9e3-8b03ec6dd282 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/21/25 16:11:58.516
  I0521 16:11:58.516599 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1204 pod-service-account-4f7c9d46-0c91-4762-b9e3-8b03ec6dd282 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/21/25 16:11:58.614
  I0521 16:11:58.615153 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1204 pod-service-account-4f7c9d46-0c91-4762-b9e3-8b03ec6dd282 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0521 16:11:58.705585 23 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-1204"
  I0521 16:11:58.707435 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1204" for this suite. @ 05/21/25 16:11:58.709
• [2.324 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 05/21/25 16:11:58.713
  I0521 16:11:58.713403 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 16:11:58.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:11:58.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:11:58.724
  STEP: Creating a test headless service @ 05/21/25 16:11:58.726
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local;sleep 1; done
   @ 05/21/25 16:11:58.729
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-744.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-744.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local;sleep 1; done
   @ 05/21/25 16:11:58.73
  STEP: creating a pod to probe DNS @ 05/21/25 16:11:58.73
  STEP: submitting the pod to kubernetes @ 05/21/25 16:11:58.73
  E0521 16:11:59.087982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:00.088162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 16:12:00.747
  STEP: looking for the results for each expected name from probers @ 05/21/25 16:12:00.749
  I0521 16:12:00.753552 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.756641 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.765834 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.771562 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.774786 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.777540 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.781565 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.785461 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:00.785485 23 dns_common.go:506] Lookups using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local]

  I0521 16:12:00.802843 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:12:00.809924 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:12:00.815425 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:12:01.088849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:02.089034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:03.089152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:04.089300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:05.089478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:05.753666 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.756397 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.758864 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.761259 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.763708 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.765975 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.768193 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.770461 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:05.770488 23 dns_common.go:506] Lookups using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local]

  I0521 16:12:05.774407 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:12:05.778081 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:12:05.781547 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:12:06.090033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:07.090130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:08.090954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:09.091046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:10.091236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:10.753237 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.755783 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.758050 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.760303 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.762624 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.764897 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.767045 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.769330 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:10.769354 23 dns_common.go:506] Lookups using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local]

  I0521 16:12:10.772961 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:12:10.776484 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:12:10.780156 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:12:11.091627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:12.091843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:13.091920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:14.092121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:15.092215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:15.753218 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.755853 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.758117 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.760441 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.762768 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.765013 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.767161 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.769358 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:15.769382 23 dns_common.go:506] Lookups using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local]

  I0521 16:12:15.773117 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:12:15.776619 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:12:15.780044 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:12:16.092459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:17.093197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:18.094015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:19.094222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:20.094392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:20.753501 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.755998 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.758270 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.760532 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.762835 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.765130 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.767275 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.769516 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:20.769541 23 dns_common.go:506] Lookups using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local]

  I0521 16:12:20.773305 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:12:20.777008 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:12:20.780390 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:12:21.094932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:22.095139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:23.095254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:24.095434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:25.095945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:25.753013 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.755612 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.757979 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.760356 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.762689 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.765256 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.767451 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.769690 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local from pod dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5: the server could not find the requested resource (get pods dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5)
  I0521 16:12:25.769713 23 dns_common.go:506] Lookups using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local agnhost_udp@dns-test-service-2.dns-744.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-744.svc.cluster.local jessie_udp@dns-test-service-2.dns-744.svc.cluster.local jessie_tcp@dns-test-service-2.dns-744.svc.cluster.local]

  I0521 16:12:25.773644 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:12:25.777293 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:12:25.780701 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:12:26.096036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:27.096952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:28.097109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:29.097246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:30.097347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:30.770599 23 dns_common.go:546] DNS probes using dns-744/dns-test-f30b61ee-1bda-4f9f-90cd-e200da0f37f5 succeeded

  STEP: deleting the pod @ 05/21/25 16:12:30.77
  STEP: deleting the test headless service @ 05/21/25 16:12:30.781
  I0521 16:12:30.791759 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-744" for this suite. @ 05/21/25 16:12:30.795
• [32.086 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 05/21/25 16:12:30.8
  I0521 16:12:30.800136 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 16:12:30.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:12:30.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:12:30.809
  STEP: Setting up server cert @ 05/21/25 16:12:30.824
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 16:12:30.928
  STEP: Deploying the webhook pod @ 05/21/25 16:12:30.932
  STEP: Wait for the deployment to be ready @ 05/21/25 16:12:30.941
  I0521 16:12:30.950808 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 16:12:31.097985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:32.098187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 16:12:32.956
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 16:12:32.97
  E0521 16:12:33.098283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:33.971158 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/21/25 16:12:33.973
  STEP: create a configmap that should be updated by the webhook @ 05/21/25 16:12:33.988
  I0521 16:12:34.042478 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5400" for this suite. @ 05/21/25 16:12:34.046
  STEP: Destroying namespace "webhook-markers-9186" for this suite. @ 05/21/25 16:12:34.049
• [3.256 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 05/21/25 16:12:34.056
  I0521 16:12:34.056125 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 16:12:34.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:12:34.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:12:34.065
  STEP: Creating pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370 @ 05/21/25 16:12:34.067
  E0521 16:12:34.098907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:35.099090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 16:12:36.078
  I0521 16:12:36.080551 23 container_probe.go:1748] Initial restart count of pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 is 0
  I0521 16:12:36.082224 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:36.099506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:37.099702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:38.085582 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:38.100633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:39.100815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:40.088268 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:40.101397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:41.101601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:42.090740 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:42.101751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:43.101902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:44.093036 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:44.102213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:45.102353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:46.095662 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:46.102752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:47.102914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:48.098038 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:48.103217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:49.103405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:50.100789 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:50.103783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:51.103974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:52.103391 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:52.104402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:53.104604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:54.104738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:54.106040 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:55.104840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:56.104943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:56.109441 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:57.105064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:12:58.105216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:12:58.112771 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:12:59.105794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:00.105994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:00.115494 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:01.106501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:02.106700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:02.118539 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:03.106772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:04.106841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:04.121738 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:05.107696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:06.107907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:06.124565 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:07.108056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:08.108176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:08.127688 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:09.109124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:10.109231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:10.130803 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:11.109817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:12.110009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:12.133884 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:13.111056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:14.111234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:14.136835 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:15.111787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:16.111990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:16.139488 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:17.112478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:18.112634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:18.142162 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:19.113087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:20.113276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:20.144919 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:21.113823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:22.114009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:22.147677 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:23.114422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:24.114536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:24.151217 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:25.115182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:26.115356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:26.153956 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:27.115887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:28.115845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:28.157421 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:29.116388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:30.116607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:30.160471 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:31.117378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:32.117455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:32.163658 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:33.117786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:34.118155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:34.166680 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:35.118645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:36.118766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:36.169395 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:37.119343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:38.119531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:38.171917 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  E0521 16:13:39.119799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:40.119991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:13:40.174411 23 container_probe.go:1758] Get pod test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 in namespace container-probe-9370
  I0521 16:13:40.174450 23 container_probe.go:1762] Restart count of pod container-probe-9370/test-grpc-5d82abf9-e0b8-4499-84b7-a8987ee13722 is now 1 (1m4.093866883s elapsed)
  STEP: deleting the pod @ 05/21/25 16:13:40.174
  I0521 16:13:40.184939 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9370" for this suite. @ 05/21/25 16:13:40.187
• [66.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 05/21/25 16:13:40.193
  I0521 16:13:40.193959 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 16:13:40.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:13:40.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:13:40.204
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/21/25 16:13:40.207
  E0521 16:13:41.120824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:42.121015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:13:42.22
  I0521 16:13:42.222321 23 output.go:207] Trying to get logs from node worker-0 pod pod-3f7c725f-0146-4578-a85d-82bdd5831c57 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 16:13:42.238
  I0521 16:13:42.251648 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1905" for this suite. @ 05/21/25 16:13:42.254
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 05/21/25 16:13:42.26
  I0521 16:13:42.260230 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename taint-single-pod @ 05/21/25 16:13:42.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:13:42.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:13:42.273
  I0521 16:13:42.276134 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0521 16:13:43.121372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:44.122321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:45.122511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:46.122705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:47.122798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:48.122885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:49.123777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:50.123893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:51.124689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:52.124821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:53.125029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:54.125531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:55.125843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:56.126010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:57.126148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:58.126251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:13:59.126858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:00.127855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:01.127950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:02.128144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:03.129007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:04.129183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:05.129649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:06.129843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:07.129958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:08.130077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:09.131125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:10.131207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:11.132244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:12.132419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:13.133126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:14.133312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:15.133599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:16.133796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:17.133995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:18.134146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:19.134825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:20.134895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:21.135550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:22.135742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:23.136469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:24.136662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:25.136756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:26.136956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:27.137016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:28.137126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:29.138390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:30.138471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:31.138587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:32.138802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:33.139700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:34.139807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:35.140699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:36.140814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:37.140906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:38.141022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:39.141314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:40.141506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:41.141597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:42.141815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:14:42.276652 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0521 16:14:42.280070 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 05/21/25 16:14:42.28
  I0521 16:14:42.490713 23 taints.go:294] Pod is running on worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/21/25 16:14:42.49
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/21/25 16:14:42.499
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/21/25 16:14:42.501
  I0521 16:14:42.501819 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0521 16:14:42.501831 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/21/25 16:14:42.51
  STEP: Waiting some time to make sure that toleration time passed. @ 05/21/25 16:14:42.514
  E0521 16:14:43.142830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:44.143028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:45.143216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:46.143396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:47.143595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:48.143784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:49.143853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:50.144051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:51.144243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:52.145062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:53.145170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:54.145353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:55.145524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:56.145693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:57.145884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:58.145996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:14:59.146167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:00.146811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:01.146981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:02.147164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:03.147281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:04.147449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:05.147623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:06.147809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:07.147976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:08.148074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:09.148241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:10.148406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:11.148572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:12.148754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:13.149440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:14.150077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:15.150187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:16.150299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:17.150466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:18.150630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:19.150808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:20.150973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:21.151147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:22.151316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:23.151488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:24.151668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:25.151835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:26.151998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:27.152174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:28.152935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:29.153101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:30.153279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:31.153439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:32.153596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:33.153804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:34.153962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:35.154135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:36.154303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:37.154474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:38.154643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:39.154839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:40.155018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:41.155926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:42.156618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:43.157142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:44.157016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:45.157184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:46.157364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:47.157532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:48.157753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:49.157930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:50.158095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:51.158267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:52.158434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:53.158594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:54.158797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:55.158966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:56.159139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:57.159306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:15:57.515707 23 taints.go:329] Pod wasn't evicted. Test successful
  I0521 16:15:57.515907 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6953" for this suite. @ 05/21/25 16:15:57.518
• [135.263 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/21/25 16:15:57.523
  I0521 16:15:57.523440 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 16:15:57.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:15:57.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:15:57.535
  STEP: Creating configMap configmap-4006/configmap-test-888e57e9-c3b1-4408-9cbb-5f249755659c @ 05/21/25 16:15:57.537
  STEP: Creating a pod to test consume configMaps @ 05/21/25 16:15:57.54
  E0521 16:15:58.160196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:15:59.160391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:15:59.553
  I0521 16:15:59.555701 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-f336d153-a4fe-4660-852f-b36a691ebd19 container env-test: <nil>
  STEP: delete the pod @ 05/21/25 16:15:59.567
  I0521 16:15:59.575559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4006" for this suite. @ 05/21/25 16:15:59.577
• [2.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/21/25 16:15:59.583
  I0521 16:15:59.583693 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename podtemplate @ 05/21/25 16:15:59.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:15:59.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:15:59.593
  I0521 16:15:59.617222 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7418" for this suite. @ 05/21/25 16:15:59.679
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 05/21/25 16:15:59.683
  I0521 16:15:59.683735 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:15:59.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:15:59.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:15:59.696
  STEP: Creating a ResourceQuota with terminating scope @ 05/21/25 16:15:59.698
  STEP: Ensuring ResourceQuota status is calculated @ 05/21/25 16:15:59.702
  E0521 16:16:00.160956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:01.161144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/21/25 16:16:01.706
  STEP: Ensuring ResourceQuota status is calculated @ 05/21/25 16:16:01.709
  E0521 16:16:02.162138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:03.162941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/21/25 16:16:03.712
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/21/25 16:16:03.724
  E0521 16:16:04.163036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:05.163230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/21/25 16:16:05.726
  E0521 16:16:06.163474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:07.163650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/21/25 16:16:07.73
  STEP: Ensuring resource quota status released the pod usage @ 05/21/25 16:16:07.74
  E0521 16:16:08.164662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:09.164837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/21/25 16:16:09.742
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/21/25 16:16:09.752
  E0521 16:16:10.165222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:11.165297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/21/25 16:16:11.756
  E0521 16:16:12.165398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:13.166203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/21/25 16:16:13.759
  STEP: Ensuring resource quota status released the pod usage @ 05/21/25 16:16:13.771
  E0521 16:16:14.166300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:15.166830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:15.773857 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3486" for this suite. @ 05/21/25 16:16:15.776
• [16.097 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 05/21/25 16:16:15.78
  I0521 16:16:15.780687 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:16:15.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:15.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:15.794
  STEP: Counting existing ResourceQuota @ 05/21/25 16:16:15.796
  E0521 16:16:16.166877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:17.167834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:18.167836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:19.168813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:20.169681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/21/25 16:16:20.798
  STEP: Ensuring resource quota status is calculated @ 05/21/25 16:16:20.804
  E0521 16:16:21.170178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:22.170881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/21/25 16:16:22.808
  STEP: Ensuring resource quota status captures replication controller creation @ 05/21/25 16:16:22.818
  E0521 16:16:23.170941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:24.171145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/21/25 16:16:24.821
  STEP: Ensuring resource quota status released usage @ 05/21/25 16:16:24.825
  E0521 16:16:25.172053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:26.172604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:26.828208 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8890" for this suite. @ 05/21/25 16:16:26.83
• [11.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 05/21/25 16:16:26.837
  I0521 16:16:26.837435 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 16:16:26.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:26.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:26.847
  STEP: creating the pod @ 05/21/25 16:16:26.85
  STEP: submitting the pod to kubernetes @ 05/21/25 16:16:26.85
  STEP: verifying QOS class is set on the pod @ 05/21/25 16:16:26.857
  I0521 16:16:26.859054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2440" for this suite. @ 05/21/25 16:16:26.931
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/21/25 16:16:26.938
  I0521 16:16:26.938022 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/21/25 16:16:26.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:26.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:26.947
  I0521 16:16:26.949270 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:16:27.173456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:28.173782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:29.173879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:30.112553 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6653" for this suite. @ 05/21/25 16:16:30.115
• [3.182 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 05/21/25 16:16:30.12
  I0521 16:16:30.120201 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename volumeattachment @ 05/21/25 16:16:30.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:30.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:30.129
  E0521 16:16:30.174444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create VolumeAttachment "va-e2e-ww5lx" on node "worker-0" @ 05/21/25 16:16:30.216
  STEP: Get VolumeAttachment "va-e2e-ww5lx" on node "worker-0" @ 05/21/25 16:16:30.22
  STEP: Patch VolumeAttachment "va-e2e-ww5lx" on node "worker-0" @ 05/21/25 16:16:30.221
  STEP: List VolumeAttachments with "va-e2e-ww5lx=patched" label @ 05/21/25 16:16:30.224
  STEP: Delete VolumeAttachment "va-e2e-ww5lx" on node "worker-0" @ 05/21/25 16:16:30.226
  STEP: Confirm deletion of VolumeAttachment "va-e2e-ww5lx" on node "worker-0" @ 05/21/25 16:16:30.229
  STEP: Create VolumeAttachment "va-e2e-89j84" on node "worker-1" @ 05/21/25 16:16:30.317
  STEP: Update the VolumeAttachment "va-e2e-89j84" on node "worker-1" with label "va-e2e=updated" @ 05/21/25 16:16:30.321
  STEP: Create VolumeAttachment "va-e2e-sbxww" on node "worker-0" @ 05/21/25 16:16:30.418
  STEP: Update the VolumeAttachment "va-e2e-sbxww" on node "worker-0" with label "va-e2e=updated" @ 05/21/25 16:16:30.423
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/21/25 16:16:30.428
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/21/25 16:16:30.435
  I0521 16:16:30.436802 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7660" for this suite. @ 05/21/25 16:16:30.518
• [0.403 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/21/25 16:16:30.523
  I0521 16:16:30.523076 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 16:16:30.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:30.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:30.534
  STEP: creating the pod @ 05/21/25 16:16:30.536
  I0521 16:16:30.536488 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 create -f -'
  I0521 16:16:30.644893 23 builder.go:146] stderr: ""
  I0521 16:16:30.644929 23 builder.go:147] stdout: "pod/pause created\n"
  E0521 16:16:31.174570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:32.174796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/21/25 16:16:32.65
  I0521 16:16:32.650909 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 label pods pause testing-label=testing-label-value'
  I0521 16:16:32.709060 23 builder.go:146] stderr: ""
  I0521 16:16:32.709260 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/21/25 16:16:32.709
  I0521 16:16:32.709383 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 get pod pause -L testing-label'
  I0521 16:16:32.761559 23 builder.go:146] stderr: ""
  I0521 16:16:32.761592 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/21/25 16:16:32.761
  I0521 16:16:32.761651 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 label pods pause testing-label-'
  I0521 16:16:32.818229 23 builder.go:146] stderr: ""
  I0521 16:16:32.818283 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/21/25 16:16:32.818
  I0521 16:16:32.818394 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 get pod pause -L testing-label'
  I0521 16:16:32.879579 23 builder.go:146] stderr: ""
  I0521 16:16:32.879654 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/21/25 16:16:32.879
  I0521 16:16:32.879812 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 delete --grace-period=0 --force -f -'
  I0521 16:16:32.938573 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0521 16:16:32.938674 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0521 16:16:32.938723 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 get rc,svc -l name=pause --no-headers'
  I0521 16:16:32.998841 23 builder.go:146] stderr: "No resources found in kubectl-5971 namespace.\n"
  I0521 16:16:32.998878 23 builder.go:147] stdout: ""
  I0521 16:16:32.998923 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5971 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0521 16:16:33.048843 23 builder.go:146] stderr: ""
  I0521 16:16:33.048880 23 builder.go:147] stdout: ""
  I0521 16:16:33.049049 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5971" for this suite. @ 05/21/25 16:16:33.051
• [2.534 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 05/21/25 16:16:33.057
  I0521 16:16:33.057136 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 16:16:33.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:33.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:33.066
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6266 @ 05/21/25 16:16:33.068
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/21/25 16:16:33.084
  STEP: creating service externalsvc in namespace services-6266 @ 05/21/25 16:16:33.084
  I0521 16:16:33.110805 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 16:16:33.174937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:34.175104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 05/21/25 16:16:35.119
  I0521 16:16:35.135046 23 resource.go:361] Creating new exec pod
  E0521 16:16:35.175315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:36.175444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:37.145244 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-6266 exec execpods842m -- /bin/sh -x -c nslookup nodeport-service.services-6266.svc.cluster.local'
  E0521 16:16:37.175473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:37.269046 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-6266.svc.cluster.local\n"
  I0521 16:16:37.269085 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6266.svc.cluster.local\tcanonical name = externalsvc.services-6266.svc.cluster.local.\nName:\texternalsvc.services-6266.svc.cluster.local\nAddress: 10.99.26.129\n\n"
  I0521 16:16:37.291995 23 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I0521 16:16:37.304169 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6266" for this suite. @ 05/21/25 16:16:37.311
• [4.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 05/21/25 16:16:37.315
  I0521 16:16:37.315878 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename proxy @ 05/21/25 16:16:37.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:37.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:37.325
  I0521 16:16:37.327477 23 proxy.go:336] Creating pod...
  E0521 16:16:38.175833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:39.176035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:39.337643 23 proxy.go:360] Creating service...
  I0521 16:16:39.352005 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/DELETE
  I0521 16:16:39.360321 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0521 16:16:39.360358 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/GET
  I0521 16:16:39.362838 23 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0521 16:16:39.362863 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/HEAD
  I0521 16:16:39.364987 23 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0521 16:16:39.365008 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/OPTIONS
  I0521 16:16:39.367272 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0521 16:16:39.367301 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/PATCH
  I0521 16:16:39.369676 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0521 16:16:39.369700 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/POST
  I0521 16:16:39.371890 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0521 16:16:39.371913 23 proxy.go:397] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/pods/agnhost/proxy/some/path/with/PUT
  I0521 16:16:39.374169 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0521 16:16:39.374196 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/DELETE
  I0521 16:16:39.376945 23 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0521 16:16:39.376974 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/GET
  I0521 16:16:39.379770 23 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0521 16:16:39.379803 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/HEAD
  I0521 16:16:39.382510 23 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I0521 16:16:39.382544 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/OPTIONS
  I0521 16:16:39.385216 23 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0521 16:16:39.385244 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/PATCH
  I0521 16:16:39.387972 23 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0521 16:16:39.387998 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/POST
  I0521 16:16:39.390691 23 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0521 16:16:39.390736 23 proxy.go:408] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7086/services/test-service/proxy/some/path/with/PUT
  I0521 16:16:39.394124 23 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0521 16:16:39.394307 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7086" for this suite. @ 05/21/25 16:16:39.396
• [2.088 seconds]
------------------------------
SS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/21/25 16:16:39.403
  I0521 16:16:39.403522 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename lease-test @ 05/21/25 16:16:39.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:39.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:39.415
  I0521 16:16:39.451171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6499" for this suite. @ 05/21/25 16:16:39.497
• [0.097 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/21/25 16:16:39.501
  I0521 16:16:39.501068 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename limitrange @ 05/21/25 16:16:39.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:39.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:39.512
  STEP: Creating LimitRange "e2e-limitrange-h7t89" in namespace "limitrange-5013" @ 05/21/25 16:16:39.515
  STEP: Creating another limitRange in another namespace @ 05/21/25 16:16:39.518
  I0521 16:16:39.526777 23 limit_range.go:299] Namespace "e2e-limitrange-h7t89-9452" created
  I0521 16:16:39.526804 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-h7t89" in namespace "e2e-limitrange-h7t89-9452"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-h7t89" @ 05/21/25 16:16:39.53
  I0521 16:16:39.531885 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-h7t89" in "limitrange-5013" namespace @ 05/21/25 16:16:39.531
  I0521 16:16:39.539082 23 limit_range.go:335] LimitRange "e2e-limitrange-h7t89" has been patched
  STEP: Delete LimitRange "e2e-limitrange-h7t89" by Collection with labelSelector: "e2e-limitrange-h7t89=patched" @ 05/21/25 16:16:39.539
  STEP: Confirm that the limitRange "e2e-limitrange-h7t89" has been deleted @ 05/21/25 16:16:39.543
  I0521 16:16:39.543677 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0521 16:16:39.545258 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-h7t89=patched"
  I0521 16:16:39.545288 23 limit_range.go:344] LimitRange "e2e-limitrange-h7t89" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-h7t89" @ 05/21/25 16:16:39.545
  I0521 16:16:39.546942 23 limit_range.go:350] Found 1 limitRange
  I0521 16:16:39.547061 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5013" for this suite. @ 05/21/25 16:16:39.597
  STEP: Destroying namespace "e2e-limitrange-h7t89-9452" for this suite. @ 05/21/25 16:16:39.601
• [0.104 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/21/25 16:16:39.605
  I0521 16:16:39.605242 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename certificates @ 05/21/25 16:16:39.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:39.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:39.614
  E0521 16:16:40.176443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 05/21/25 16:16:40.509
  STEP: getting /apis/certificates.k8s.io @ 05/21/25 16:16:40.512
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/21/25 16:16:40.513
  STEP: creating @ 05/21/25 16:16:40.514
  STEP: getting @ 05/21/25 16:16:40.527
  STEP: listing @ 05/21/25 16:16:40.529
  STEP: watching @ 05/21/25 16:16:40.531
  I0521 16:16:40.531067 23 certificates.go:316] starting watch
  STEP: patching @ 05/21/25 16:16:40.531
  STEP: updating @ 05/21/25 16:16:40.535
  I0521 16:16:40.540684 23 certificates.go:332] waiting for watch events with expected annotations
  I0521 16:16:40.540736 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/21/25 16:16:40.54
  STEP: patching /approval @ 05/21/25 16:16:40.542
  STEP: updating /approval @ 05/21/25 16:16:40.548
  STEP: getting /status @ 05/21/25 16:16:40.552
  STEP: patching /status @ 05/21/25 16:16:40.553
  STEP: updating /status @ 05/21/25 16:16:40.559
  STEP: deleting @ 05/21/25 16:16:40.565
  STEP: deleting a collection @ 05/21/25 16:16:40.571
  I0521 16:16:40.579964 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1331" for this suite. @ 05/21/25 16:16:40.582
• [0.980 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/21/25 16:16:40.585
  I0521 16:16:40.585881 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 16:16:40.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:40.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:40.597
  STEP: Creating secret with name secret-test-6ceff847-94f2-4803-8b94-757a09ba2cd3 @ 05/21/25 16:16:40.599
  STEP: Creating a pod to test consume secrets @ 05/21/25 16:16:40.602
  E0521 16:16:41.177092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:42.177175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:43.178005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:44.178075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:16:44.617
  I0521 16:16:44.620410 23 output.go:207] Trying to get logs from node worker-1 pod pod-secrets-b64f7a86-8159-4b6e-896b-fdf6ff9b473a container secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 16:16:44.633
  I0521 16:16:44.646358 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1858" for this suite. @ 05/21/25 16:16:44.648
• [4.066 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/21/25 16:16:44.652
  I0521 16:16:44.652307 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/21/25 16:16:44.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:44.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:44.661
  I0521 16:16:44.666969 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8117" for this suite. @ 05/21/25 16:16:44.749
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/21/25 16:16:44.753
  I0521 16:16:44.753537 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replicaset @ 05/21/25 16:16:44.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:44.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:44.764
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/21/25 16:16:44.767
  I0521 16:16:44.772465 23 resource.go:81] Pod name sample-pod: Found 0 pods out of 1
  E0521 16:16:45.178957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:46.179155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:47.179333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:48.179525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:49.179691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:16:49.774778 23 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/21/25 16:16:49.774
  STEP: getting scale subresource @ 05/21/25 16:16:49.774
  STEP: updating a scale subresource @ 05/21/25 16:16:49.776
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/21/25 16:16:49.78
  STEP: Patch a scale subresource @ 05/21/25 16:16:49.781
  I0521 16:16:49.793549 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4116" for this suite. @ 05/21/25 16:16:49.796
• [5.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/21/25 16:16:49.804
  I0521 16:16:49.804537 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:16:49.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:49.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:49.817
  STEP: Creating configMap with name configmap-projected-all-test-volume-f691fb0b-04f0-443f-a44c-f7a2d273e993 @ 05/21/25 16:16:49.82
  STEP: Creating secret with name secret-projected-all-test-volume-31f812d0-c598-4f58-8b31-324ae3430106 @ 05/21/25 16:16:49.823
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/21/25 16:16:49.826
  I0521 16:16:49.873568      23 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E0521 16:16:50.179831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:51.179996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:52.180247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:53.181126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:16:53.881
  I0521 16:16:53.883334 23 output.go:207] Trying to get logs from node worker-0 pod projected-volume-bcb22850-b0af-426d-8ddd-0e8592cc60c7 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 16:16:53.887
  I0521 16:16:53.898911 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7274" for this suite. @ 05/21/25 16:16:53.903
• [4.105 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 05/21/25 16:16:53.909
  I0521 16:16:53.909329 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename namespaces @ 05/21/25 16:16:53.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:53.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:53.918
  STEP: creating a Namespace @ 05/21/25 16:16:53.921
  STEP: patching the Namespace @ 05/21/25 16:16:53.929
  STEP: get the Namespace and ensuring it has the label @ 05/21/25 16:16:53.932
  I0521 16:16:53.934947 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5250" for this suite. @ 05/21/25 16:16:54.001
  STEP: Destroying namespace "nspatchtest-a5852a2a-4083-4c9e-8373-9d5cfd63f45f-8547" for this suite. @ 05/21/25 16:16:54.007
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/21/25 16:16:54.012
  I0521 16:16:54.012105 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-watch @ 05/21/25 16:16:54.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:16:54.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:16:54.021
  I0521 16:16:54.023852 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:16:54.181784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:55.182102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:56.182280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/21/25 16:16:56.55
  I0521 16:16:56.554221 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-21T16:16:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-21T16:16:56Z]] name:name1 resourceVersion:30710 uid:3fb3c0ca-2365-4792-b2e3-638f8cea5254] num:map[num1:9223372036854775807 num2:1000000]]}
  E0521 16:16:57.182841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:58.182991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:16:59.183162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:00.183355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:01.183561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:02.183645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:03.183860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:04.184031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:05.184247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:06.184431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/21/25 16:17:06.554
  I0521 16:17:06.559057 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-21T16:17:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-21T16:17:06Z]] name:name2 resourceVersion:30750 uid:26304c38-a378-4da5-bf47-c0f246b30220] num:map[num1:9223372036854775807 num2:1000000]]}
  E0521 16:17:07.184519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:08.184737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:09.184936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:10.185100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:11.185302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:12.185493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:13.185675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:14.185853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:15.186916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:16.187047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/21/25 16:17:16.559
  I0521 16:17:16.564055 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-21T16:16:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-21T16:17:16Z]] name:name1 resourceVersion:30773 uid:3fb3c0ca-2365-4792-b2e3-638f8cea5254] num:map[num1:9223372036854775807 num2:1000000]]}
  E0521 16:17:17.187692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:18.187908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:19.188121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:20.188291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:21.188488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:22.188656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:23.188854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:24.188900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:25.189096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:26.189808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/21/25 16:17:26.564
  I0521 16:17:26.568834 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-21T16:17:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-21T16:17:26Z]] name:name2 resourceVersion:30795 uid:26304c38-a378-4da5-bf47-c0f246b30220] num:map[num1:9223372036854775807 num2:1000000]]}
  E0521 16:17:27.189479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:28.189705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:29.189908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:30.190108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:31.190309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:32.190482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:33.190677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:34.190865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:35.190951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:36.191148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/21/25 16:17:36.569
  I0521 16:17:36.574475 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-21T16:16:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-21T16:17:16Z]] name:name1 resourceVersion:30818 uid:3fb3c0ca-2365-4792-b2e3-638f8cea5254] num:map[num1:9223372036854775807 num2:1000000]]}
  E0521 16:17:37.192146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:38.192225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:39.192412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:40.192580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:41.192784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:42.192958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:43.193276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:44.193755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:45.193801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:46.193971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/21/25 16:17:46.575
  I0521 16:17:46.580250 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-21T16:17:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-21T16:17:26Z]] name:name2 resourceVersion:30841 uid:26304c38-a378-4da5-bf47-c0f246b30220] num:map[num1:9223372036854775807 num2:1000000]]}
  E0521 16:17:47.194923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:48.195033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:49.195197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:50.195361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:51.195526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:52.195692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:53.195853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:54.196014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:55.196178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:56.196347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:17:57.089577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4297" for this suite. @ 05/21/25 16:17:57.092
• [63.087 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/21/25 16:17:57.098
  I0521 16:17:57.098910 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename cronjob @ 05/21/25 16:17:57.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:17:57.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:17:57.108
  STEP: Creating a ReplaceConcurrent cronjob @ 05/21/25 16:17:57.11
  STEP: Ensuring a job is scheduled @ 05/21/25 16:17:57.116
  E0521 16:17:57.197191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:58.197322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:17:59.197523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:00.197947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/21/25 16:18:01.118
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/21/25 16:18:01.12
  STEP: Ensuring the job is replaced with a new one @ 05/21/25 16:18:01.122
  E0521 16:18:01.198190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:02.198383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:03.199440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:04.199647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:05.199612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:06.199831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:07.200048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:08.200197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:09.200889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:10.201079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:11.201874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:12.202073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:13.202767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:14.202878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:15.203229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:16.203401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:17.203701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:18.203919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:19.204831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:20.205140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:21.206083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:22.206248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:23.206727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:24.206909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:25.207634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:26.207836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:27.209166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:28.209279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:29.209367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:30.209567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:31.210300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:32.210987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:33.211308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:34.211478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:35.212203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:36.212391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:37.212871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:38.212957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:39.213926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:40.214048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:41.214802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:42.215005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:43.215741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:44.215930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:45.216749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:46.216966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:47.217313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:48.218123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:49.218922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:50.219088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:51.219488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:52.219674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:53.220674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:54.220801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:55.221260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:56.221356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:57.222071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:58.223180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:18:59.223430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:00.223597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 05/21/25 16:19:01.127
  I0521 16:19:01.131337 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4177" for this suite. @ 05/21/25 16:19:01.133
• [64.042 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 05/21/25 16:19:01.14
  I0521 16:19:01.140563 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 16:19:01.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:19:01.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:19:01.155
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:19:01.157
  E0521 16:19:01.224864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:02.225056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:19:03.17
  I0521 16:19:03.172589 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-5414a9c4-1363-4159-b4ba-587d57ca0ce1 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:19:03.184
  I0521 16:19:03.196583 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2044" for this suite. @ 05/21/25 16:19:03.199
• [2.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/21/25 16:19:03.202
  I0521 16:19:03.202940 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/21/25 16:19:03.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:19:03.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:19:03.214
  E0521 16:19:03.225559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the container to handle the HTTPGet hook request. @ 05/21/25 16:19:03.3
  E0521 16:19:04.226668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:05.226854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/21/25 16:19:05.315
  E0521 16:19:06.227690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:07.227890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/21/25 16:19:07.328
  STEP: delete the pod with lifecycle hook @ 05/21/25 16:19:07.338
  E0521 16:19:08.228285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:09.228464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:19:09.349990 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1957" for this suite. @ 05/21/25 16:19:09.352
• [6.153 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 05/21/25 16:19:09.356
  I0521 16:19:09.356480 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 16:19:09.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:19:09.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:19:09.366
  I0521 16:19:09.369061 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:19:10.229515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:11.229695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:12.230682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:19:12.426058 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6161" for this suite. @ 05/21/25 16:19:12.428
• [3.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/21/25 16:19:12.434
  I0521 16:19:12.434164 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename cronjob @ 05/21/25 16:19:12.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:19:12.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:19:12.447
  STEP: Creating a ForbidConcurrent cronjob @ 05/21/25 16:19:12.449
  STEP: Ensuring a job is scheduled @ 05/21/25 16:19:12.453
  E0521 16:19:13.230992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:14.231080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:15.232126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:16.232308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:17.233342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:18.233524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:19.233824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:20.234019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:21.234388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:22.234565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:23.235061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:24.235144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:25.235480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:26.235673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:27.235705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:28.236091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:29.236612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:30.237553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:31.237630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:32.237849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:33.237918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:34.238115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:35.238617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:36.238805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:37.238860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:38.239022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:39.239308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:40.239472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:41.239794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:42.239960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:43.240381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:44.240811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:45.240666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:46.241164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:47.241263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:48.241367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:49.241607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:50.241791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:51.241885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:52.242051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:53.242158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:54.242327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:55.242756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:56.242924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:57.243025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:58.243088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:19:59.243343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:00.243441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/21/25 16:20:00.456
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/21/25 16:20:00.458
  STEP: Ensuring no more jobs are scheduled @ 05/21/25 16:20:00.461
  STEP: Removing cronjob @ 05/21/25 16:20:00.462
  I0521 16:20:00.466803 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-843" for this suite. @ 05/21/25 16:20:00.469
• [48.039 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/21/25 16:20:00.472
  I0521 16:20:00.472810 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pods @ 05/21/25 16:20:00.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:00.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:00.487
  STEP: creating the pod @ 05/21/25 16:20:00.489
  STEP: submitting the pod to kubernetes @ 05/21/25 16:20:00.489
  I0521 16:20:00.496506      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0521 16:20:01.243854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:02.244038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 05/21/25 16:20:02.503
  STEP: updating the pod @ 05/21/25 16:20:02.506
  I0521 16:20:03.015871 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-33ef2f26-51d9-40ad-9e09-74676ed95927"
  E0521 16:20:03.244566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:04.244679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:05.245385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:06.245469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:07.023685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6741" for this suite. @ 05/21/25 16:20:07.028
• [6.561 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 05/21/25 16:20:07.034
  I0521 16:20:07.034353 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 16:20:07.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:07.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:07.044
  STEP: Creating a pod to test service account token:  @ 05/21/25 16:20:07.046
  E0521 16:20:07.245810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:08.245954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:20:09.058
  I0521 16:20:09.059929 23 output.go:207] Trying to get logs from node worker-0 pod test-pod-ea7515f8-a726-4558-a9fc-9f9ca2a492a3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:20:09.064
  I0521 16:20:09.073846 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2732" for this suite. @ 05/21/25 16:20:09.076
• [2.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 05/21/25 16:20:09.079
  I0521 16:20:09.079970 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 16:20:09.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:09.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:09.088
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/21/25 16:20:09.091
  I0521 16:20:09.091649 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:09.246913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:10.247447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:11.247842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:12.248336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:13.248419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/21/25 16:20:14.139
  I0521 16:20:14.139709 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:14.248490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:15.248917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:15.356309 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:16.249500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:17.250046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:18.250963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:19.251937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:20.252939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:20.312194 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5451" for this suite. @ 05/21/25 16:20:20.318
• [11.242 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/21/25 16:20:20.322
  I0521 16:20:20.322562 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename secrets @ 05/21/25 16:20:20.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:20.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:20.334
  STEP: Creating secret with name secret-test-2b638c88-0151-4384-b226-fc04ed679a9f @ 05/21/25 16:20:20.336
  STEP: Creating a pod to test consume secrets @ 05/21/25 16:20:20.339
  E0521 16:20:21.253906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:22.254024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:23.254454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:24.254655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:20:24.352
  I0521 16:20:24.354105 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-ad748d53-f2c6-410c-aeb0-178c4d912970 container secret-env-test: <nil>
  STEP: delete the pod @ 05/21/25 16:20:24.358
  I0521 16:20:24.369864 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3917" for this suite. @ 05/21/25 16:20:24.372
• [4.053 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 05/21/25 16:20:24.375
  I0521 16:20:24.375919 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:20:24.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:24.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:24.385
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:20:24.387
  E0521 16:20:25.255514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:26.255852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:27.256381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:28.256767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:20:28.402
  I0521 16:20:28.405284 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-0c10ceac-a051-4095-989d-4cdf414129fe container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:20:28.409
  I0521 16:20:28.420928 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5381" for this suite. @ 05/21/25 16:20:28.423
• [4.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/21/25 16:20:28.426
  I0521 16:20:28.426962 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename var-expansion @ 05/21/25 16:20:28.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:28.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:28.441
  STEP: Creating a pod to test substitution in container's args @ 05/21/25 16:20:28.443
  E0521 16:20:29.256893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:30.256978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:31.257462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:32.257567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:20:32.457
  I0521 16:20:32.460009 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-5b4a22f9-25ef-4c14-a8cf-d313b898c483 container dapi-container: <nil>
  STEP: delete the pod @ 05/21/25 16:20:32.464
  I0521 16:20:32.474548 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2425" for this suite. @ 05/21/25 16:20:32.476
• [4.055 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/21/25 16:20:32.482
  I0521 16:20:32.482144 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/21/25 16:20:32.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:32.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:32.491
  I0521 16:20:32.494113 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:33.258596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:33.508945 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1743" for this suite. @ 05/21/25 16:20:33.511
• [1.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 05/21/25 16:20:33.515
  I0521 16:20:33.515532 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 16:20:33.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:33.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:33.524
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/21/25 16:20:33.526
  I0521 16:20:33.526873 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:34.258946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:34.747593 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:35.259572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:36.260228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:37.260994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:38.261644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:39.261805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:39.705118 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6560" for this suite. @ 05/21/25 16:20:39.711
• [6.200 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 05/21/25 16:20:39.715
  I0521 16:20:39.715297 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 16:20:39.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:39.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:39.724
  I0521 16:20:39.729371      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 05/21/25 16:20:39.729
  I0521 16:20:39.733431      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 05/21/25 16:20:39.733
  I0521 16:20:39.734389      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 05/21/25 16:20:39.734
  I0521 16:20:39.736141      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 05/21/25 16:20:39.736
  I0521 16:20:39.739695      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 16:20:39.740610      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/21/25 16:20:39.74
  I0521 16:20:39.742371      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 05/21/25 16:20:39.742
  I0521 16:20:39.747912      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 16:20:39.748940      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/21/25 16:20:39.749
  I0521 16:20:39.750875      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 05/21/25 16:20:39.75
  I0521 16:20:39.755836      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 05/21/25 16:20:39.755
  I0521 16:20:39.756899      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 05/21/25 16:20:39.757
  I0521 16:20:39.758585      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 16:20:39.758754 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5390" for this suite. @ 05/21/25 16:20:39.812
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/21/25 16:20:39.818
  I0521 16:20:39.818669 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/21/25 16:20:39.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:39.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:39.827
  I0521 16:20:39.830041 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:20:40.262316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:40.361206 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-393" for this suite. @ 05/21/25 16:20:40.366
• [0.551 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 05/21/25 16:20:40.37
  I0521 16:20:40.370138 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 16:20:40.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:40.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:40.38
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/21/25 16:20:40.382
  E0521 16:20:41.262562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:42.263062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:43.263713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:44.264451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:20:44.397
  I0521 16:20:44.398833 23 output.go:207] Trying to get logs from node worker-0 pod pod-e3bdbe21-0005-4d6a-97d1-ae89441407e4 container test-container: <nil>
  STEP: delete the pod @ 05/21/25 16:20:44.403
  I0521 16:20:44.414252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-668" for this suite. @ 05/21/25 16:20:44.416
• [4.050 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 05/21/25 16:20:44.42
  I0521 16:20:44.420154 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 16:20:44.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:44.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:44.431
  STEP: Creating a job @ 05/21/25 16:20:44.433
  STEP: Ensuring active pods == parallelism @ 05/21/25 16:20:44.438
  E0521 16:20:45.265040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:46.265257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 05/21/25 16:20:46.447
  I0521 16:20:46.956441 23 pod_client.go:173] Successfully updated pod "adopt-release-4nnfp"
  STEP: Checking that the Job readopts the Pod @ 05/21/25 16:20:46.956
  E0521 16:20:47.265919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:48.266438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 05/21/25 16:20:48.961
  E0521 16:20:49.266818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:49.470966 23 pod_client.go:173] Successfully updated pod "adopt-release-4nnfp"
  STEP: Checking that the Job releases the Pod @ 05/21/25 16:20:49.471
  E0521 16:20:50.267536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:51.267809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:20:51.476497 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-161" for this suite. @ 05/21/25 16:20:51.478
• [7.063 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/21/25 16:20:51.483
  I0521 16:20:51.483135 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename subpath @ 05/21/25 16:20:51.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:20:51.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:20:51.493
  STEP: Setting up data @ 05/21/25 16:20:51.495
  STEP: Creating pod pod-subpath-test-configmap-gv4c @ 05/21/25 16:20:51.501
  STEP: Creating a pod to test atomic-volume-subpath @ 05/21/25 16:20:51.501
  E0521 16:20:52.268359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:53.268504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:54.268796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:55.268868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:56.269155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:57.269921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:58.270739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:20:59.270825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:00.270914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:01.271116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:02.271349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:03.271490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:04.271914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:05.273113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:06.273615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:07.273771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:08.274779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:09.275073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:10.275151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:11.275312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:12.275942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:13.276943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:21:13.543
  I0521 16:21:13.545387 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-configmap-gv4c container test-container-subpath-configmap-gv4c: <nil>
  STEP: delete the pod @ 05/21/25 16:21:13.556
  STEP: Deleting pod pod-subpath-test-configmap-gv4c @ 05/21/25 16:21:13.568
  I0521 16:21:13.568099 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-gv4c" in namespace "subpath-798"
  I0521 16:21:13.569823 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-798" for this suite. @ 05/21/25 16:21:13.572
• [22.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 05/21/25 16:21:13.575
  I0521 16:21:13.575967 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:21:13.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:21:13.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:21:13.588
  STEP: Creating configMap with name projected-configmap-test-volume-c10eab9a-654f-483c-8208-d0a55506de50 @ 05/21/25 16:21:13.59
  STEP: Creating a pod to test consume configMaps @ 05/21/25 16:21:13.593
  E0521 16:21:14.277046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:15.277235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:16.277509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:17.277581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:21:17.607
  I0521 16:21:17.609233 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-791d4811-aaf8-46e2-b64d-61114bb8d395 container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:21:17.615
  I0521 16:21:17.626229 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7552" for this suite. @ 05/21/25 16:21:17.628
• [4.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:704
  STEP: Creating a kubernetes client @ 05/21/25 16:21:17.632
  I0521 16:21:17.632358 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-pred @ 05/21/25 16:21:17.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:21:17.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:21:17.643
  I0521 16:21:17.645452 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0521 16:21:17.732013 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0521 16:21:17.734133 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0521 16:21:17.737050 23 predicates.go:956] coredns-6c77c7d548-jrxjv from kube-system started at 2025-05-21 16:14:42 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.737077 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 16:21:17.737091 23 predicates.go:956] konnectivity-agent-p9v68 from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.737102 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 16:21:17.737113 23 predicates.go:956] kube-proxy-jqp49 from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.737124 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 16:21:17.737134 23 predicates.go:956] kube-router-zbf2d from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.737146 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 16:21:17.737160 23 predicates.go:956] sonobuoy from sonobuoy started at 2025-05-21 15:01:05 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.737174 23 predicates.go:958] 	Container kube-sonobuoy ready: true, restart count 0
  I0521 16:21:17.737186 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-t9t5j from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 16:21:17.737197 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 16:21:17.737208 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  I0521 16:21:17.737225 23 predicates.go:118] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0521 16:21:17.739694 23 predicates.go:956] coredns-6c77c7d548-xlnk6 from kube-system started at 2025-05-21 15:01:37 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.739715 23 predicates.go:958] 	Container coredns ready: true, restart count 0
  I0521 16:21:17.739746 23 predicates.go:956] konnectivity-agent-fn5zg from kube-system started at 2025-05-21 15:00:46 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.739761 23 predicates.go:958] 	Container konnectivity-agent ready: true, restart count 0
  I0521 16:21:17.739772 23 predicates.go:956] kube-proxy-2phkk from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.739783 23 predicates.go:958] 	Container kube-proxy ready: true, restart count 0
  I0521 16:21:17.739794 23 predicates.go:956] kube-router-8kq5b from kube-system started at 2025-05-21 15:00:45 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.739808 23 predicates.go:958] 	Container kube-router ready: true, restart count 0
  I0521 16:21:17.739819 23 predicates.go:956] metrics-server-7db8586f5-2prf5 from kube-system started at 2025-05-21 15:00:58 +0000 UTC (1 container statuses recorded)
  I0521 16:21:17.739831 23 predicates.go:958] 	Container metrics-server ready: true, restart count 0
  I0521 16:21:17.739843 23 predicates.go:956] sonobuoy-e2e-job-29ce0f45b43640ca from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 16:21:17.739853 23 predicates.go:958] 	Container e2e ready: true, restart count 0
  I0521 16:21:17.739863 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 16:21:17.739873 23 predicates.go:956] sonobuoy-systemd-logs-daemon-set-636b9b9836de48af-78s9t from sonobuoy started at 2025-05-21 15:01:10 +0000 UTC (2 container statuses recorded)
  I0521 16:21:17.739879 23 predicates.go:958] 	Container sonobuoy-worker ready: true, restart count 0
  I0521 16:21:17.739887 23 predicates.go:958] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/21/25 16:21:17.739
  E0521 16:21:18.277595      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:19.277830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/21/25 16:21:19.751
  STEP: Trying to apply a random label on the found node. @ 05/21/25 16:21:19.763
  STEP: verifying the node has the label kubernetes.io/e2e-598fccc5-64fd-4393-97dd-24757b96ba78 95 @ 05/21/25 16:21:19.77
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/21/25 16:21:19.772
  E0521 16:21:20.277845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:21.278591      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.54.132 on the node which pod4 resides and expect not scheduled @ 05/21/25 16:21:21.782
  E0521 16:21:22.278810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:23.278919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:24.279893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:25.280058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:26.280747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:27.280909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:28.281821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:29.281990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:30.282393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:31.282573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:32.283518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:33.283689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:34.283822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:35.284110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:36.284227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:37.284412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:38.285170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:39.285922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:40.286395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:41.286563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:42.286713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:43.286886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:44.287367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:45.287791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:46.287854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:47.288672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:48.289704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:49.289886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:50.290049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:51.290213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:52.290603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:53.290807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:54.291424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:55.291619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:56.291925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:57.292123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:58.292849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:21:59.293016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:00.293616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:01.293696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:02.294151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:03.294218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:04.294822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:05.295093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:06.295506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:07.295687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:08.296736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:09.296908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:10.296980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:11.297169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:12.297652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:13.297826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:14.298090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:15.298767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:16.299811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:17.301015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:18.301971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:19.302156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:20.302689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:21.302895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:22.302994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:23.303099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:24.303465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:25.303637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:26.303833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:27.303957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:28.304853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:29.304921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:30.305942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:31.306018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:32.306519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:33.307156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:34.308033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:35.308199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:36.308279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:37.308479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:38.309392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:39.309473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:40.310129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:41.310380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:42.310587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:43.310709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:44.310820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:45.310982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:46.311086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:47.311245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:48.312040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:49.312929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:50.313925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:51.314927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:52.315488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:53.315653      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:54.316092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:55.316932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:56.317238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:57.317346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:58.317928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:22:59.318973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:00.319341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:01.319447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:02.319930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:03.320087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:04.320338      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:05.320929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:06.321969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:07.322133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:08.322200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:09.322371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:10.322676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:11.322849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:12.323821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:13.323980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:14.324223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:15.324388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:16.325418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:17.325930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:18.326583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:19.326691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:20.326955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:21.327401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:22.327920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:23.328028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:24.328396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:25.328562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:26.328867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:27.329019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:28.329526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:29.329697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:30.329960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:31.331139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:32.331442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:33.331672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:34.331955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:35.332127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:36.332894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:37.333065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:38.333728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:39.333916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:40.333952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:41.334944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:42.335454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:43.335659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:44.335696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:45.335882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:46.335948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:47.336113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:48.336771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:49.336938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:50.337029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:51.337184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:52.337388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:53.337554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:54.337708      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:55.337874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:56.337990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:57.338093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:58.338766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:23:59.338938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:00.339533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:01.339707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:02.339995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:03.340097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:04.340953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:05.341124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:06.341252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:07.341333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:08.341930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:09.342100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:10.342122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:11.342380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:12.342466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:13.342841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:14.343255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:15.343426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:16.343577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:17.343845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:18.344429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:19.344517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:20.344827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:21.345000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:22.345833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:23.345931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:24.346391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:25.346930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:26.347601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:27.347788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:28.348615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:29.348817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:30.349347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:31.349922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:32.350332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:33.350671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:34.350922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:35.351051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:36.351473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:37.351566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:38.352098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:39.352200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:40.352298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:41.352453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:42.352584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:43.352771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:44.353045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:45.353948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:46.354800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:47.354972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:48.355793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:49.355968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:50.356089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:51.356259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:52.356816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:53.356987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:54.357228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:55.357287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:56.357822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:57.357991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:58.358666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:24:59.358922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:00.359367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:01.359532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:02.360057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:03.360186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:04.360389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:05.361078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:06.361547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:07.361704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:08.362424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:09.362824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:10.363383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:11.363542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:12.363661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:13.363825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:14.364334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:15.364922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:16.365769      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:17.365877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:18.366501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:19.366929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:20.367309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:21.367501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:22.367556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:23.367748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:24.368223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:25.368317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:26.368690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:27.368796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:28.369605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:29.369790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:30.370304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:31.370410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:32.370542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:33.371346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:34.371826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:35.372001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:36.372420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:37.372599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:38.373463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:39.373638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:40.373925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:41.374124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:42.374650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:43.374853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:44.375212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:45.375782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:46.376275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:47.376447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:48.377185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:49.377359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:50.377511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:51.377596      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:52.378027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:53.378953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:54.379584      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:55.379820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:56.380281      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:57.380456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:58.381299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:25:59.381469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:00.382235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:01.382409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:02.383019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:03.383179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:04.383328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:05.383503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:06.383850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:07.384024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:08.384434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:09.384628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:10.384924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:11.385357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:12.385775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:13.385966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:14.386353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:15.386786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:16.387455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:17.387613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:18.388033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:19.388226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:20.388396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:21.388554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-598fccc5-64fd-4393-97dd-24757b96ba78 off the node worker-0 @ 05/21/25 16:26:21.79
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-598fccc5-64fd-4393-97dd-24757b96ba78 @ 05/21/25 16:26:21.799
  I0521 16:26:21.801657 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3633" for this suite. @ 05/21/25 16:26:21.803
• [304.175 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 05/21/25 16:26:21.807
  I0521 16:26:21.807815 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:26:21.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:26:21.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:26:21.819
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:26:21.822
  E0521 16:26:22.389427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:23.389578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:24.389894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:25.389954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:26:25.835
  I0521 16:26:25.837413 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-37d16e2e-c53a-4dc6-8402-1302c13801d4 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:26:25.849
  I0521 16:26:25.859482 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4908" for this suite. @ 05/21/25 16:26:25.861
• [4.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 05/21/25 16:26:25.865
  I0521 16:26:25.865698 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename fake-node @ 05/21/25 16:26:25.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:26:25.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:26:25.876
  STEP: Create "e2e-fake-node-hhcxm" @ 05/21/25 16:26:25.878
  STEP: Getting "e2e-fake-node-hhcxm" @ 05/21/25 16:26:25.882
  STEP: Patching "e2e-fake-node-hhcxm" @ 05/21/25 16:26:25.886
  STEP: Listing nodes with LabelSelector "e2e-fake-node-hhcxm=patched" @ 05/21/25 16:26:25.895
  STEP: Updating "e2e-fake-node-hhcxm" @ 05/21/25 16:26:25.902
  STEP: Delete "e2e-fake-node-hhcxm" @ 05/21/25 16:26:25.913
  STEP: Confirm deletion of "e2e-fake-node-hhcxm" @ 05/21/25 16:26:25.917
  I0521 16:26:25.919429 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-1630" for this suite. @ 05/21/25 16:26:25.921
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/21/25 16:26:25.926
  I0521 16:26:25.926915 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename subpath @ 05/21/25 16:26:25.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:26:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:26:25.935
  STEP: Setting up data @ 05/21/25 16:26:25.937
  STEP: Creating pod pod-subpath-test-secret-t22f @ 05/21/25 16:26:25.945
  STEP: Creating a pod to test atomic-volume-subpath @ 05/21/25 16:26:25.945
  E0521 16:26:26.390032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:27.390959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:28.391833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:29.392006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:30.392412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:31.392613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:32.393477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:33.393639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:34.393742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:35.394047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:36.394354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:37.394556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:38.394628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:39.394744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:40.395092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:41.394971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:42.395620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:43.395835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:44.396138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:45.396317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:46.396609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:47.396770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:48.397369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:49.397537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:26:50.032
  I0521 16:26:50.034226 23 output.go:207] Trying to get logs from node worker-0 pod pod-subpath-test-secret-t22f container test-container-subpath-secret-t22f: <nil>
  STEP: delete the pod @ 05/21/25 16:26:50.038
  STEP: Deleting pod pod-subpath-test-secret-t22f @ 05/21/25 16:26:50.048
  I0521 16:26:50.048156 23 delete.go:62] Deleting pod "pod-subpath-test-secret-t22f" in namespace "subpath-9339"
  I0521 16:26:50.049909 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9339" for this suite. @ 05/21/25 16:26:50.052
• [24.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/21/25 16:26:50.056
  I0521 16:26:50.056359 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename apf @ 05/21/25 16:26:50.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:26:50.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:26:50.065
  STEP: getting /apis @ 05/21/25 16:26:50.067
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/21/25 16:26:50.07
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/21/25 16:26:50.071
  STEP: creating @ 05/21/25 16:26:50.072
  STEP: getting @ 05/21/25 16:26:50.084
  STEP: listing @ 05/21/25 16:26:50.085
  STEP: watching @ 05/21/25 16:26:50.088
  I0521 16:26:50.088534 23 flowcontrol.go:394] starting watch
  STEP: patching @ 05/21/25 16:26:50.089
  STEP: updating @ 05/21/25 16:26:50.094
  I0521 16:26:50.099438 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/21/25 16:26:50.099
  STEP: patching /status @ 05/21/25 16:26:50.101
  STEP: updating /status @ 05/21/25 16:26:50.104
  STEP: deleting @ 05/21/25 16:26:50.127
  STEP: deleting a collection @ 05/21/25 16:26:50.134
  I0521 16:26:50.146700 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6958" for this suite. @ 05/21/25 16:26:50.153
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/21/25 16:26:50.156
  I0521 16:26:50.156779 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename init-container @ 05/21/25 16:26:50.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:26:50.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:26:50.167
  STEP: creating the pod @ 05/21/25 16:26:50.17
  I0521 16:26:50.170479 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0521 16:26:50.397853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:51.398886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:52.399825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:53.399999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:54.400203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:55.400938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:56.401041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:57.401925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:58.402101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:26:59.402268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:00.402443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:01.402607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:02.402799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:03.402936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:04.403109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:05.403274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:06.403440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:07.403977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:08.404748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:09.404919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:10.405019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:11.405240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:12.405434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:13.405615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:14.405796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:15.405990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:16.406199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:17.406264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:18.406385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:19.406565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:20.406755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:21.406956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:22.407881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:23.408031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:24.408106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:25.408289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:26.408468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:27.408675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:28.408823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:29.409018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:30.409101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:31.409295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:32.409488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:33.409575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:34.409777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:35.409951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:27:35.440792 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-13746ed8-d149-4b85-9003-9ae9b674f8b0", GenerateName:"", Namespace:"init-container-9617", SelfLink:"", UID:"d9ebe029-9c90-49c8-b19f-7488093239a1", ResourceVersion:"32895", Generation:1, CreationTimestamp:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"170467603"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ff1c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 21, 16, 27, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ff1cc8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-2vdfr", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0054c3060), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2vdfr", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2vdfr", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2vdfr", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0034fed18), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003ee2750), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0034feda0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0034fedc0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0034fedc8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0034fedcc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0004a9db0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 21, 16, 26, 51, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.54.132", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.0.54.132"}}, PodIP:"10.244.0.119", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.0.119"}}, StartTime:time.Date(2025, time.May, 21, 16, 26, 50, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003c6690)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003c6700)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://0c1388edd38e59f884ae30aeb71461d19eeaa24bacf6b827eac57511cfdf938c", Started:(*bool)(0xc0034fee9a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc003f67cb0), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2vdfr", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0004a9dd0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0054c30c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0034feead), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2vdfr", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0004a9de0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0054c30a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0034fee6f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2vdfr", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0004a9dc0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0521 16:27:35.440988 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9617" for this suite. @ 05/21/25 16:27:35.443
• [45.290 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/21/25 16:27:35.447
  I0521 16:27:35.447302 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 16:27:35.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:27:35.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:27:35.459
  STEP: creating a ConfigMap @ 05/21/25 16:27:35.462
  STEP: fetching the ConfigMap @ 05/21/25 16:27:35.464
  STEP: patching the ConfigMap @ 05/21/25 16:27:35.466
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/21/25 16:27:35.469
  STEP: deleting the ConfigMap by collection with a label selector @ 05/21/25 16:27:35.471
  STEP: listing all ConfigMaps in test namespace @ 05/21/25 16:27:35.475
  I0521 16:27:35.477053 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1702" for this suite. @ 05/21/25 16:27:35.544
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/21/25 16:27:35.55
  I0521 16:27:35.550387 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/21/25 16:27:35.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:27:35.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:27:35.559
  I0521 16:27:35.561441 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:27:36.410344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:37.410929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:38.411430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:27:38.594817 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3961" for this suite. @ 05/21/25 16:27:38.597
• [3.053 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 05/21/25 16:27:38.603
  I0521 16:27:38.603403 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 16:27:38.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:27:38.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:27:38.613
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/21/25 16:27:38.616
  E0521 16:27:39.411804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:40.411864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:27:40.627
  I0521 16:27:40.628884 23 output.go:207] Trying to get logs from node worker-0 pod pod-b38892c3-fb23-417d-a6d7-a5a1c689580c container test-container: <nil>
  STEP: delete the pod @ 05/21/25 16:27:40.634
  I0521 16:27:40.643635 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9925" for this suite. @ 05/21/25 16:27:40.645
• [2.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 05/21/25 16:27:40.649
  I0521 16:27:40.649382 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 16:27:40.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:27:40.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:27:40.658
  I0521 16:27:40.660945 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:27:41.412731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/21/25 16:27:41.891
  I0521 16:27:41.891513 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 create -f -'
  E0521 16:27:42.413432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:43.413573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:27:43.967388 23 builder.go:146] stderr: ""
  I0521 16:27:43.967432 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2248-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0521 16:27:43.967479 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 delete e2e-test-crd-publish-openapi-2248-crds test-foo'
  I0521 16:27:44.023339 23 builder.go:146] stderr: ""
  I0521 16:27:44.023385 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2248-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0521 16:27:44.023428 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 apply -f -'
  I0521 16:27:44.079901 23 builder.go:146] stderr: ""
  I0521 16:27:44.079935 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2248-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0521 16:27:44.079987 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 delete e2e-test-crd-publish-openapi-2248-crds test-foo'
  I0521 16:27:44.132997 23 builder.go:146] stderr: ""
  I0521 16:27:44.133032 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2248-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/21/25 16:27:44.133
  I0521 16:27:44.133115 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 create -f -'
  I0521 16:27:44.183866 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/21/25 16:27:44.184
  I0521 16:27:44.184129 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 create -f -'
  I0521 16:27:44.235350 23 builder.go:135] rc: 1
  I0521 16:27:44.235421 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 apply -f -'
  I0521 16:27:44.289038 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/21/25 16:27:44.289
  I0521 16:27:44.289128 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 create -f -'
  I0521 16:27:44.340652 23 builder.go:135] rc: 1
  I0521 16:27:44.340757 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 --namespace=crd-publish-openapi-6685 apply -f -'
  I0521 16:27:44.395021 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/21/25 16:27:44.395
  I0521 16:27:44.395121 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 explain e2e-test-crd-publish-openapi-2248-crds'
  E0521 16:27:44.414842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:27:44.444710 23 builder.go:146] stderr: ""
  I0521 16:27:44.444773 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2248-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/21/25 16:27:44.445
  I0521 16:27:44.445176 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 explain e2e-test-crd-publish-openapi-2248-crds.metadata'
  I0521 16:27:44.494976 23 builder.go:146] stderr: ""
  I0521 16:27:44.495121 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2248-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0521 16:27:44.495367 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 explain e2e-test-crd-publish-openapi-2248-crds.spec'
  I0521 16:27:44.546079 23 builder.go:146] stderr: ""
  I0521 16:27:44.546115 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2248-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0521 16:27:44.546237 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 explain e2e-test-crd-publish-openapi-2248-crds.spec.bars'
  I0521 16:27:44.597046 23 builder.go:146] stderr: ""
  I0521 16:27:44.597082 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2248-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/21/25 16:27:44.597
  I0521 16:27:44.597370 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=crd-publish-openapi-6685 explain e2e-test-crd-publish-openapi-2248-crds.spec.bars2'
  I0521 16:27:44.645613 23 builder.go:135] rc: 1
  E0521 16:27:45.415490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:27:45.896037 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6685" for this suite. @ 05/21/25 16:27:45.902
• [5.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 05/21/25 16:27:45.906
  I0521 16:27:45.906314 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 16:27:45.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:27:45.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:27:45.918
  STEP: Setting up server cert @ 05/21/25 16:27:45.933
  E0521 16:27:46.416180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 16:27:46.493
  STEP: Deploying the webhook pod @ 05/21/25 16:27:46.497
  STEP: Wait for the deployment to be ready @ 05/21/25 16:27:46.508
  I0521 16:27:46.513039 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 16:27:47.416966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:48.417143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 16:27:48.519
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 16:27:48.535
  E0521 16:27:49.417276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:27:49.536387 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/21/25 16:27:49.539
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/21/25 16:27:49.539
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/21/25 16:27:49.554
  E0521 16:27:50.417958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/21/25 16:27:50.562
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/21/25 16:27:50.562
  E0521 16:27:51.419350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 05/21/25 16:27:51.585
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/21/25 16:27:51.585
  E0521 16:27:52.420052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:53.420156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:54.420317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:55.420956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:56.421150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/21/25 16:27:56.611
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/21/25 16:27:56.611
  E0521 16:27:57.421939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:58.422042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:27:59.422098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:00.422306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:01.422655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:01.679869 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-343" for this suite. @ 05/21/25 16:28:01.682
  STEP: Destroying namespace "webhook-markers-7729" for this suite. @ 05/21/25 16:28:01.685
• [15.783 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 05/21/25 16:28:01.689
  I0521 16:28:01.689625 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 16:28:01.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:28:01.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:28:01.702
  STEP: Creating a test headless service @ 05/21/25 16:28:01.704
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4176 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4176;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4176 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4176;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4176.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-4176.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4176.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-4176.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-4176.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-4176.svc;check="$$(dig +notcp +noall +answer +search 97.148.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.148.97_udp@PTR;check="$$(dig +tcp +noall +answer +search 97.148.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.148.97_tcp@PTR;sleep 1; done
   @ 05/21/25 16:28:01.725
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4176 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4176;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4176 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4176;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4176.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4176.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4176.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4176.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4176.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4176.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4176.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4176.svc;check="$$(dig +notcp +noall +answer +search 97.148.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.148.97_udp@PTR;check="$$(dig +tcp +noall +answer +search 97.148.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.148.97_tcp@PTR;sleep 1; done
   @ 05/21/25 16:28:01.725
  STEP: creating a pod to probe DNS @ 05/21/25 16:28:01.726
  STEP: submitting the pod to kubernetes @ 05/21/25 16:28:01.726
  E0521 16:28:02.422951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:03.423169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 16:28:03.743
  STEP: looking for the results for each expected name from probers @ 05/21/25 16:28:03.746
  I0521 16:28:03.750514 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.753246 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.755575 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.758002 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.760810 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.763094 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.765401 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.767604 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.779682 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.782067 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.784412 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.786782 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.789130 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.791420 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.793704 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.795998 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:03.805340 23 dns_common.go:506] Lookups using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4176 agnhost_tcp@dns-test-service.dns-4176 agnhost_udp@dns-test-service.dns-4176.svc agnhost_tcp@dns-test-service.dns-4176.svc agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4176 jessie_tcp@dns-test-service.dns-4176 jessie_udp@dns-test-service.dns-4176.svc jessie_tcp@dns-test-service.dns-4176.svc jessie_udp@_http._tcp.dns-test-service.dns-4176.svc jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc]

  I0521 16:28:03.809205 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:28:03.813138 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:28:03.816617 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:28:04.423351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:05.423539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:06.423715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:07.423903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:08.424085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:08.750018 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.752950 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.755848 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.758647 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.761381 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.763996 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.766629 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.769247 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.782665 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.785055 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.787537 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.790001 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.792463 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.794838 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.797339 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.799948 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:08.809461 23 dns_common.go:506] Lookups using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4176 agnhost_tcp@dns-test-service.dns-4176 agnhost_udp@dns-test-service.dns-4176.svc agnhost_tcp@dns-test-service.dns-4176.svc agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4176 jessie_tcp@dns-test-service.dns-4176 jessie_udp@dns-test-service.dns-4176.svc jessie_tcp@dns-test-service.dns-4176.svc jessie_udp@_http._tcp.dns-test-service.dns-4176.svc jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc]

  I0521 16:28:08.813660 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:28:08.817565 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:28:08.821137 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:28:09.425179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:10.425346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:11.425455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:12.425627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:13.425804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:13.751061 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.753856 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.756175 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.758692 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.761015 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.763295 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.765631 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.767879 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.778944 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.781281 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.783546 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.785658 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.787986 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.790288 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.792496 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.796411 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:13.807556 23 dns_common.go:506] Lookups using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4176 agnhost_tcp@dns-test-service.dns-4176 agnhost_udp@dns-test-service.dns-4176.svc agnhost_tcp@dns-test-service.dns-4176.svc agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4176 jessie_tcp@dns-test-service.dns-4176 jessie_udp@dns-test-service.dns-4176.svc jessie_tcp@dns-test-service.dns-4176.svc jessie_udp@_http._tcp.dns-test-service.dns-4176.svc jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc]

  I0521 16:28:13.811637 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:28:13.815064 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:28:13.818589 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:28:14.425909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:15.426117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:16.426271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:17.426402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:18.426813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:18.750519 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.753266 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.755844 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.758258 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.760686 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.763087 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.765477 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.767988 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.779788 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.782050 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.784310 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.786691 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.788941 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.791365 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.793773 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.796152 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:18.805412 23 dns_common.go:506] Lookups using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4176 agnhost_tcp@dns-test-service.dns-4176 agnhost_udp@dns-test-service.dns-4176.svc agnhost_tcp@dns-test-service.dns-4176.svc agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4176 jessie_tcp@dns-test-service.dns-4176 jessie_udp@dns-test-service.dns-4176.svc jessie_tcp@dns-test-service.dns-4176.svc jessie_udp@_http._tcp.dns-test-service.dns-4176.svc jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc]

  I0521 16:28:18.809394 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:28:18.813414 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:28:18.816865 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:28:19.427707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:20.427904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:21.428092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:22.428272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:23.428351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:23.751200 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.754365 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.757134 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.759956 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.762607 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.765281 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.767933 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.770501 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.783383 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.785830 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.788148 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.790520 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.793124 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.795490 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.797864 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.800231 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:23.809993 23 dns_common.go:506] Lookups using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4176 agnhost_tcp@dns-test-service.dns-4176 agnhost_udp@dns-test-service.dns-4176.svc agnhost_tcp@dns-test-service.dns-4176.svc agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4176 jessie_tcp@dns-test-service.dns-4176 jessie_udp@dns-test-service.dns-4176.svc jessie_tcp@dns-test-service.dns-4176.svc jessie_udp@_http._tcp.dns-test-service.dns-4176.svc jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc]

  I0521 16:28:23.814263 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:28:23.818063 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:28:23.821782 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:28:24.428471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:25.428688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:26.428849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:27.429209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:28.429317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:28.749959 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.752744 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.755142 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.757517 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.759859 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.762287 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.764672 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.767026 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.778207 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.780342 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.782518 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.784813 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176 from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.787055 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.789236 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.791532 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.793701 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc from pod dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc: the server could not find the requested resource (get pods dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc)
  I0521 16:28:28.803035 23 dns_common.go:506] Lookups using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-4176 agnhost_tcp@dns-test-service.dns-4176 agnhost_udp@dns-test-service.dns-4176.svc agnhost_tcp@dns-test-service.dns-4176.svc agnhost_udp@_http._tcp.dns-test-service.dns-4176.svc agnhost_tcp@_http._tcp.dns-test-service.dns-4176.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4176 jessie_tcp@dns-test-service.dns-4176 jessie_udp@dns-test-service.dns-4176.svc jessie_tcp@dns-test-service.dns-4176.svc jessie_udp@_http._tcp.dns-test-service.dns-4176.svc jessie_tcp@_http._tcp.dns-test-service.dns-4176.svc]

  I0521 16:28:28.807784 23 dns_common.go:514] Pod client logs for webserver: 
  I0521 16:28:28.811498 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0521 16:28:28.814851 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0521 16:28:29.429575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:30.429687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:31.429792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:32.429969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:33.430791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:33.803126 23 dns_common.go:546] DNS probes using dns-4176/dns-test-58495afd-053c-4786-8b17-d558a4c8d8fc succeeded

  STEP: deleting the pod @ 05/21/25 16:28:33.803
  STEP: deleting the test service @ 05/21/25 16:28:33.813
  STEP: deleting the test headless service @ 05/21/25 16:28:33.843
  I0521 16:28:33.850297 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4176" for this suite. @ 05/21/25 16:28:33.853
• [32.167 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/21/25 16:28:33.856
  I0521 16:28:33.856984 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:28:33.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:28:33.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:28:33.868
  STEP: Creating projection with secret that has name projected-secret-test-cff91073-79fc-4a88-95f3-3287218713bf @ 05/21/25 16:28:33.871
  STEP: Creating a pod to test consume secrets @ 05/21/25 16:28:33.873
  E0521 16:28:34.430847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:35.430841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:28:35.884
  I0521 16:28:35.886634 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-cbc0409e-1fa9-4742-8d53-cd10b761c555 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/21/25 16:28:35.891
  I0521 16:28:35.901962 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5474" for this suite. @ 05/21/25 16:28:35.904
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 05/21/25 16:28:35.908
  I0521 16:28:35.908079 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/21/25 16:28:35.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:28:35.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:28:35.92
  STEP: set up a multi version CRD @ 05/21/25 16:28:35.922
  I0521 16:28:35.922975 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  E0521 16:28:36.431154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:37.431418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:38.431555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/21/25 16:28:39.108
  STEP: check the unserved version gets removed @ 05/21/25 16:28:39.12
  E0521 16:28:39.432023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/21/25 16:28:39.815
  E0521 16:28:40.432157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:41.432960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:42.343682 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4595" for this suite. @ 05/21/25 16:28:42.349
• [6.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 05/21/25 16:28:42.361
  I0521 16:28:42.361818 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:28:42.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:28:42.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:28:42.37
  STEP: Counting existing ResourceQuota @ 05/21/25 16:28:42.373
  E0521 16:28:42.433380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:43.433915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:44.434162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:45.434746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:46.435040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/21/25 16:28:47.375
  STEP: Ensuring resource quota status is calculated @ 05/21/25 16:28:47.381
  E0521 16:28:47.435514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:48.435681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 05/21/25 16:28:49.384
  STEP: Ensuring resource quota status captures replicaset creation @ 05/21/25 16:28:49.394
  E0521 16:28:49.436597      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:50.436815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 05/21/25 16:28:51.397
  STEP: Ensuring resource quota status released usage @ 05/21/25 16:28:51.402
  E0521 16:28:51.437347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:52.437528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:28:53.404950 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3359" for this suite. @ 05/21/25 16:28:53.408
• [11.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 05/21/25 16:28:53.412
  I0521 16:28:53.412400 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 16:28:53.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:28:53.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:28:53.427
  STEP: Creating service test in namespace statefulset-470 @ 05/21/25 16:28:53.429
  STEP: Creating stateful set ss in namespace statefulset-470 @ 05/21/25 16:28:53.433
  E0521 16:28:53.438199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-470 @ 05/21/25 16:28:53.439
  I0521 16:28:53.441826 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0521 16:28:54.438378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:55.438986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:56.439091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:57.439295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:58.439674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:28:59.439836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:00.440026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:01.440947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:02.441118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:03.441163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:03.443843 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/21/25 16:29:03.443
  I0521 16:29:03.446668 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:29:03.548022 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:29:03.548060 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:29:03.548085 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:29:03.550275 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0521 16:29:04.442232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:05.442330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:06.442525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:07.443738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:08.443648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:09.444480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:10.444699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:11.444930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:12.445811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:13.445974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:13.551506 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:29:13.551543 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0521 16:29:13.561413 23 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0521 16:29:13.561456 23 resource.go:175] ss-0  worker-0  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:28:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:28:53 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:03 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:03 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:28:53 +0000 UTC  }]
  I0521 16:29:13.561470 23 resource.go:178] 
  I0521 16:29:13.561481 23 statefulset.go:2448] StatefulSet ss has not reached scale 3, at 1
  E0521 16:29:14.446383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:14.565474 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.996694983s
  E0521 16:29:15.447384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:15.569175 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.992764649s
  E0521 16:29:16.447449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:16.572857 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.989241524s
  E0521 16:29:17.447715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:17.577147 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.985385902s
  E0521 16:29:18.448073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:18.581604 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.981024538s
  E0521 16:29:19.448141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:19.586002 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.97692732s
  E0521 16:29:20.448814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:20.589826 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.972250347s
  E0521 16:29:21.448892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:21.592845 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.969240328s
  E0521 16:29:22.449743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:22.596644 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 965.357101ms
  E0521 16:29:23.450559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-470 @ 05/21/25 16:29:23.597
  I0521 16:29:23.600409 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:29:23.694041 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:29:23.694073 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:29:23.694086 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:29:23.694129 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:29:23.784036 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0521 16:29:23.784068 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:29:23.784079 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:29:23.784152 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:29:23.875297 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0521 16:29:23.875334 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:29:23.875367 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:29:23.877673 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0521 16:29:24.450956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:25.451932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:26.452034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:27.452145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:28.452238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:29.452339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:30.452441      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:31.452630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:32.453013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:33.453162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:33.878286 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:29:33.878323 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:29:33.878338 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/21/25 16:29:33.878
  I0521 16:29:33.880828 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:29:33.971714 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:29:33.971768 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:29:33.971780 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:29:33.971819 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:29:34.068377 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:29:34.068416 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:29:34.068431 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:29:34.068477 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-470 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:29:34.167359 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:29:34.167398 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:29:34.167409 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:29:34.167422 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0521 16:29:34.169337 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0521 16:29:34.453690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:35.453886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:36.454099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:37.454696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:38.454979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:39.455143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:40.455328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:41.455502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:42.455689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:43.455863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:44.173028 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:29:44.173065 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:29:44.173074 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:29:44.184870 23 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0521 16:29:44.184927 23 resource.go:175] ss-0  worker-0  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:28:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:28:53 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:28:53 +0000 UTC  }]
  I0521 16:29:44.185002 23 resource.go:175] ss-1  worker-0  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:14 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:13 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:13 +0000 UTC  }]
  I0521 16:29:44.185029 23 resource.go:175] ss-2  worker-1  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:14 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:13 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-05-21 16:29:13 +0000 UTC  }]
  I0521 16:29:44.185039 23 resource.go:178] 
  I0521 16:29:44.185049 23 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E0521 16:29:44.455993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:45.187577 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 8.993367771s
  E0521 16:29:45.456957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:46.189935 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.990863137s
  E0521 16:29:46.457054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:47.193369 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.987691274s
  E0521 16:29:47.457755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:48.196042 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.984980658s
  E0521 16:29:48.458388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:49.198871 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.982435153s
  E0521 16:29:49.459300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:50.201725 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.979544473s
  E0521 16:29:50.460118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:51.204833 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.976691497s
  E0521 16:29:51.460184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:52.207929 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.973647788s
  E0521 16:29:52.460237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:53.210691 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 970.544823ms
  E0521 16:29:53.461053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-470 @ 05/21/25 16:29:54.21
  I0521 16:29:54.213291 23 rest.go:153] Scaling statefulset ss to 0
  I0521 16:29:54.216663 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 16:29:54.218241 23 statefulset.go:138] Deleting all statefulset in ns statefulset-470
  I0521 16:29:54.219967 23 rest.go:153] Scaling statefulset ss to 0
  I0521 16:29:54.222838 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 16:29:54.224277 23 rest.go:91] Deleting statefulset ss
  I0521 16:29:54.231758 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-470" for this suite. @ 05/21/25 16:29:54.234
• [60.827 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 05/21/25 16:29:54.24
  I0521 16:29:54.240043 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename replication-controller @ 05/21/25 16:29:54.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:29:54.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:29:54.249
  STEP: Creating replication controller my-hostname-basic-4d45227c-7f60-4b4a-81e3-79bdfe87491b @ 05/21/25 16:29:54.251
  I0521 16:29:54.258933 23 resource.go:81] Pod name my-hostname-basic-4d45227c-7f60-4b4a-81e3-79bdfe87491b: Found 0 pods out of 1
  E0521 16:29:54.461225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:55.461398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:56.461501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:57.462118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:29:58.462212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:29:59.348432 23 resource.go:81] Pod name my-hostname-basic-4d45227c-7f60-4b4a-81e3-79bdfe87491b: Found 1 pods out of 1
  I0521 16:29:59.348476 23 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-4d45227c-7f60-4b4a-81e3-79bdfe87491b" are running
  I0521 16:29:59.350423 23 rc.go:525] Pod "my-hostname-basic-4d45227c-7f60-4b4a-81e3-79bdfe87491b-rnmww" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-21 16:29:55 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-21 16:29:54 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-21 16:29:55 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-21 16:29:55 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-21 16:29:54 +0000 UTC Reason: Message:}])
  I0521 16:29:59.350449 23 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/21/25 16:29:59.35
  I0521 16:29:59.456487 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6091" for this suite. @ 05/21/25 16:29:59.458
• [5.223 seconds]
------------------------------
SSSS  E0521 16:29:59.462739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/21/25 16:29:59.463
  I0521 16:29:59.463031 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-runtime @ 05/21/25 16:29:59.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:29:59.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:29:59.472
  STEP: create the container @ 05/21/25 16:29:59.474
  I0521 16:29:59.483340      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 05/21/25 16:29:59.483
  E0521 16:30:00.463275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:01.463477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:02.463990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/21/25 16:30:02.492
  STEP: the container should be terminated @ 05/21/25 16:30:02.494
  STEP: the termination message should be set @ 05/21/25 16:30:02.494
  I0521 16:30:02.494950 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/21/25 16:30:02.494
  I0521 16:30:02.506151 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9911" for this suite. @ 05/21/25 16:30:02.508
• [3.049 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 05/21/25 16:30:02.512
  I0521 16:30:02.512295 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 16:30:02.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:02.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:02.523
  STEP: create the rc @ 05/21/25 16:30:02.609
  I0521 16:30:02.613096      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0521 16:30:03.465084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:04.466090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:05.467532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:06.469971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:07.470068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:08.472001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/21/25 16:30:08.615
  STEP: wait for the rc to be deleted @ 05/21/25 16:30:08.621
  E0521 16:30:09.471117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:09.632514 23 garbage_collector.go:678] 80 pods remaining
  I0521 16:30:09.632556 23 garbage_collector.go:685] 80 pods has nil DeletionTimestamp
  I0521 16:30:09.632564 23 garbage_collector.go:686] 
  E0521 16:30:10.472950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:10.631536 23 garbage_collector.go:678] 71 pods remaining
  I0521 16:30:10.631581 23 garbage_collector.go:685] 71 pods has nil DeletionTimestamp
  I0521 16:30:10.631618 23 garbage_collector.go:686] 
  E0521 16:30:11.473135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:11.631789 23 garbage_collector.go:678] 60 pods remaining
  I0521 16:30:11.632549 23 garbage_collector.go:685] 60 pods has nil DeletionTimestamp
  I0521 16:30:11.632568 23 garbage_collector.go:686] 
  E0521 16:30:12.473500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:12.639253 23 garbage_collector.go:678] 40 pods remaining
  I0521 16:30:12.639945 23 garbage_collector.go:685] 40 pods has nil DeletionTimestamp
  I0521 16:30:12.639970 23 garbage_collector.go:686] 
  E0521 16:30:13.474064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:13.627934 23 garbage_collector.go:678] 31 pods remaining
  I0521 16:30:13.627976 23 garbage_collector.go:685] 31 pods has nil DeletionTimestamp
  I0521 16:30:13.627987 23 garbage_collector.go:686] 
  E0521 16:30:14.474112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:14.627307 23 garbage_collector.go:678] 20 pods remaining
  I0521 16:30:14.627341 23 garbage_collector.go:685] 20 pods has nil DeletionTimestamp
  I0521 16:30:14.627353 23 garbage_collector.go:686] 
  E0521 16:30:15.474205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/21/25 16:30:15.628
  W0521 16:30:15.631342      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0521 16:30:15.631382 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0521 16:30:15.631579 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-482" for this suite. @ 05/21/25 16:30:15.634
• [13.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/21/25 16:30:15.637
  I0521 16:30:15.637827 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename watch @ 05/21/25 16:30:15.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:15.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:15.647
  STEP: creating a watch on configmaps with a certain label @ 05/21/25 16:30:15.65
  STEP: creating a new configmap @ 05/21/25 16:30:15.651
  STEP: modifying the configmap once @ 05/21/25 16:30:15.653
  STEP: changing the label value of the configmap @ 05/21/25 16:30:15.658
  STEP: Expecting to observe a delete notification for the watched object @ 05/21/25 16:30:15.663
  I0521 16:30:15.663178 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3688  31c3c5ab-4c03-4be0-9104-ced9274b58f1 34959 0 2025-05-21 16:30:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-21 16:30:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:30:15.663304 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3688  31c3c5ab-4c03-4be0-9104-ced9274b58f1 34960 0 2025-05-21 16:30:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-21 16:30:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:30:15.663384 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3688  31c3c5ab-4c03-4be0-9104-ced9274b58f1 34961 0 2025-05-21 16:30:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-21 16:30:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/21/25 16:30:15.663
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/21/25 16:30:15.668
  E0521 16:30:16.474940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:17.475126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:18.475310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:19.475480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:20.475677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:21.475853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:22.476052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:23.476686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:24.476862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:25.477028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 05/21/25 16:30:25.668
  STEP: modifying the configmap a third time @ 05/21/25 16:30:25.673
  STEP: deleting the configmap @ 05/21/25 16:30:25.677
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/21/25 16:30:25.681
  I0521 16:30:25.681162 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3688  31c3c5ab-4c03-4be0-9104-ced9274b58f1 35422 0 2025-05-21 16:30:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-21 16:30:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:30:25.681276 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3688  31c3c5ab-4c03-4be0-9104-ced9274b58f1 35423 0 2025-05-21 16:30:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-21 16:30:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:30:25.681354 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3688  31c3c5ab-4c03-4be0-9104-ced9274b58f1 35424 0 2025-05-21 16:30:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-21 16:30:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:30:25.681453 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3688" for this suite. @ 05/21/25 16:30:25.683
• [10.050 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 05/21/25 16:30:25.687
  I0521 16:30:25.687567 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:30:25.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:25.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:25.699
  STEP: Counting existing ResourceQuota @ 05/21/25 16:30:25.701
  E0521 16:30:26.477422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:27.478000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:28.478010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:29.478625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:30.478940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/21/25 16:30:30.704
  STEP: Ensuring resource quota status is calculated @ 05/21/25 16:30:30.707
  E0521 16:30:31.479885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:32.480055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/21/25 16:30:32.711
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/21/25 16:30:32.723
  E0521 16:30:33.480308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:34.480487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/21/25 16:30:34.726
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/21/25 16:30:34.728
  STEP: Ensuring a pod cannot update its resource requirements @ 05/21/25 16:30:34.729
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/21/25 16:30:34.731
  E0521 16:30:35.480869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:36.481031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/21/25 16:30:36.734
  STEP: Ensuring resource quota status released the pod usage @ 05/21/25 16:30:36.742
  E0521 16:30:37.481350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:38.481660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:38.745087 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2086" for this suite. @ 05/21/25 16:30:38.747
• [13.066 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 05/21/25 16:30:38.753
  I0521 16:30:38.753525 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 16:30:38.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:38.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:38.763
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:30:38.765
  E0521 16:30:39.481787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:40.481854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:41.482269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:42.482617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:30:42.779
  I0521 16:30:42.781177 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-91bc2c5e-f483-4390-ba9d-55b542fc6872 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:30:42.791
  I0521 16:30:42.803361 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5553" for this suite. @ 05/21/25 16:30:42.805
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/21/25 16:30:42.809
  I0521 16:30:42.809692 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename discovery @ 05/21/25 16:30:42.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:42.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:42.82
  STEP: Setting up server cert @ 05/21/25 16:30:42.823
  STEP: Requesting APIResourceList from "/api/v1" @ 05/21/25 16:30:43.12
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/21/25 16:30:43.121
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/21/25 16:30:43.123
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/21/25 16:30:43.123
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/21/25 16:30:43.124
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/21/25 16:30:43.125
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/21/25 16:30:43.126
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/21/25 16:30:43.127
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/21/25 16:30:43.128
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/21/25 16:30:43.129
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/21/25 16:30:43.129
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/21/25 16:30:43.13
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/21/25 16:30:43.131
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/21/25 16:30:43.132
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/21/25 16:30:43.133
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/21/25 16:30:43.133
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/21/25 16:30:43.134
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/21/25 16:30:43.135
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/21/25 16:30:43.136
  I0521 16:30:43.137108 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3163" for this suite. @ 05/21/25 16:30:43.141
• [0.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 05/21/25 16:30:43.144
  I0521 16:30:43.144894 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename dns @ 05/21/25 16:30:43.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:43.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:43.156
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/21/25 16:30:43.158
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/21/25 16:30:43.158
  STEP: creating a pod to probe DNS @ 05/21/25 16:30:43.158
  STEP: submitting the pod to kubernetes @ 05/21/25 16:30:43.159
  E0521 16:30:43.483380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:44.483454      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/21/25 16:30:45.17
  STEP: looking for the results for each expected name from probers @ 05/21/25 16:30:45.172
  I0521 16:30:45.184436 23 dns_common.go:546] DNS probes using dns-6016/dns-test-7dba33e4-956b-4ddf-8dff-4d07c65b8b84 succeeded

  STEP: deleting the pod @ 05/21/25 16:30:45.184
  I0521 16:30:45.195314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6016" for this suite. @ 05/21/25 16:30:45.291
• [2.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 05/21/25 16:30:45.296
  I0521 16:30:45.296086 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:30:45.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:45.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:45.305
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:30:45.307
  E0521 16:30:45.483989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:46.484091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:47.484936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:48.485984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:30:49.319
  I0521 16:30:49.321815 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-b44813b4-f068-4025-ad03-dcac8ff62b54 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:30:49.326
  I0521 16:30:49.336147 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5303" for this suite. @ 05/21/25 16:30:49.338
• [4.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 05/21/25 16:30:49.342
  I0521 16:30:49.342347 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 16:30:49.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:30:49.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:30:49.352
  STEP: Creating service test in namespace statefulset-5724 @ 05/21/25 16:30:49.354
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/21/25 16:30:49.358
  STEP: Creating stateful set ss in namespace statefulset-5724 @ 05/21/25 16:30:49.36
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5724 @ 05/21/25 16:30:49.365
  I0521 16:30:49.376155 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0521 16:30:49.486631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:50.487559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:51.487746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:52.487835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:53.488024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:54.488926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:55.489127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:56.489319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:57.489483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:30:58.490098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:30:59.369194 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/21/25 16:30:59.369
  I0521 16:30:59.371401 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:30:59.478192 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:30:59.478264 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:30:59.478282 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:30:59.480536 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0521 16:30:59.490704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:00.491619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:01.491833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:02.492030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:03.492553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:04.492768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:05.492829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:06.493016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:07.493104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:08.493935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:09.481708 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:31:09.481767 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  E0521 16:31:09.494112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:09.581621 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.99999894s
  E0521 16:31:10.494902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:10.584955 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.908823894s
  E0521 16:31:11.496003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:11.587906 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.905798655s
  E0521 16:31:12.497117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:12.591177 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.902171473s
  E0521 16:31:13.497220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:13.593915 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.899578396s
  E0521 16:31:14.497853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:14.597283 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.895862105s
  E0521 16:31:15.498923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:15.600860 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.892788668s
  E0521 16:31:16.499738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:16.604230 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.889010322s
  E0521 16:31:17.500229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:17.606850 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.886550169s
  E0521 16:31:18.500871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:18.609344 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 883.92276ms
  E0521 16:31:19.501308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5724 @ 05/21/25 16:31:19.609
  I0521 16:31:19.612232 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:31:19.707176 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:31:19.707209 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:31:19.707225 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:31:19.709114 23 wait.go:44] Found 1 stateful pods, waiting for 3
  E0521 16:31:20.502258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:21.502335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:22.502501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:23.502694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:24.503026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:25.503130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:26.503246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:27.503343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:28.503525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:29.503701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:29.711897 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:31:29.711926 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:31:29.711935 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/21/25 16:31:29.711
  STEP: Scale down will halt with unhealthy stateful pod @ 05/21/25 16:31:29.711
  I0521 16:31:29.715994 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:31:29.806603 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:31:29.806641 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:31:29.806656 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:31:29.806905 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:31:29.906852 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:31:29.906888 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:31:29.906905 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:31:29.907105 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:31:30.012013 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:31:30.012047 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:31:30.012059 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0521 16:31:30.012071 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0521 16:31:30.014543 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0521 16:31:30.504323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:31.504518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:32.504625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:33.504830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:34.505024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:35.505124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:36.505237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:37.505337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:38.505503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:39.505706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:40.017085 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:31:40.017121 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:31:40.017130 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0521 16:31:40.118030 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.99999896s
  E0521 16:31:40.505865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:41.121121 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.906338852s
  E0521 16:31:41.506620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:42.124197 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.903607296s
  E0521 16:31:42.508109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:43.127311 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.899920684s
  E0521 16:31:43.508726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:44.131327 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.896885474s
  E0521 16:31:44.508745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:45.135355 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.892926278s
  E0521 16:31:45.508768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:46.138324 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.889000939s
  E0521 16:31:46.509682      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:47.141586 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.885454501s
  E0521 16:31:47.510078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:48.144217 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.883036912s
  E0521 16:31:48.510748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:31:49.147362 23 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 880.232497ms
  E0521 16:31:49.511353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5724 @ 05/21/25 16:31:50.147
  I0521 16:31:50.150877 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:31:50.241458 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:31:50.241490 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:31:50.241506 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:31:50.241694 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:31:50.336536 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:31:50.336591 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:31:50.336617 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:31:50.336688 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-5724 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:31:50.426524 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:31:50.426557 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:31:50.426571 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0521 16:31:50.426586 23 rest.go:153] Scaling statefulset ss to 0
  E0521 16:31:50.511533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:51.511898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:52.512798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:53.513408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:54.514033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:55.514145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:56.514248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:57.514440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:58.514934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:31:59.515117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/21/25 16:32:00.432
  I0521 16:32:00.432190 23 statefulset.go:138] Deleting all statefulset in ns statefulset-5724
  I0521 16:32:00.434265 23 rest.go:153] Scaling statefulset ss to 0
  I0521 16:32:00.437366 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 16:32:00.438890 23 rest.go:91] Deleting statefulset ss
  I0521 16:32:00.446098 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5724" for this suite. @ 05/21/25 16:32:00.448
• [71.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 05/21/25 16:32:00.455
  I0521 16:32:00.455245 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:32:00.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:00.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:00.464
  STEP: Creating configMap with name projected-configmap-test-volume-map-00ea5dae-6421-4d04-9747-6d653f502e55 @ 05/21/25 16:32:00.466
  STEP: Creating a pod to test consume configMaps @ 05/21/25 16:32:00.471
  E0521 16:32:00.516057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:01.516944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:02.517565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:03.517766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:32:04.483
  I0521 16:32:04.485072 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-35ff550d-65ed-40d4-8009-96fbea53563b container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:32:04.491
  I0521 16:32:04.501951 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4109" for this suite. @ 05/21/25 16:32:04.504
• [4.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/21/25 16:32:04.51
  I0521 16:32:04.510178 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/21/25 16:32:04.51
  E0521 16:32:04.518001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:04.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:04.52
  STEP: creating a target pod @ 05/21/25 16:32:04.522
  E0521 16:32:05.519000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:06.519052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/21/25 16:32:06.535
  E0521 16:32:07.519836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:08.519967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 05/21/25 16:32:08.547
  STEP: checking pod container endpoints @ 05/21/25 16:32:08.549
  I0521 16:32:08.549140 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2762 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:32:08.549161 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:32:08.549207 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-2762/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0521 16:32:08.588494 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 16:32:08.588521 23 exec_util.go:112] Exec stderr: ""
  I0521 16:32:08.592431 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2762" for this suite. @ 05/21/25 16:32:08.594
• [4.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/21/25 16:32:08.6
  I0521 16:32:08.600425 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename subjectreview @ 05/21/25 16:32:08.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:08.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:08.609
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-279" @ 05/21/25 16:32:08.612
  I0521 16:32:08.616873 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-279:e2e"
  I0521 16:32:08.616903 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-279"}
  I0521 16:32:08.616914 23 subjectreviews.go:71] saUID: "52049090-2606-42c4-9c96-48cc414bac80"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-279:e2e" @ 05/21/25 16:32:08.616
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-279:e2e" @ 05/21/25 16:32:08.617
  I0521 16:32:08.618393 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-279:e2e" api 'list' configmaps in "subjectreview-279" namespace @ 05/21/25 16:32:08.618
  I0521 16:32:08.619348 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-279:e2e" @ 05/21/25 16:32:08.619
  I0521 16:32:08.620874 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0521 16:32:08.620898 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0521 16:32:08.621002 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-279" for this suite. @ 05/21/25 16:32:08.694
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/21/25 16:32:08.698
  I0521 16:32:08.698917 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 16:32:08.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:08.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:08.707
  I0521 16:32:08.710456 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-5175 version'
  I0521 16:32:08.759509 23 builder.go:146] stderr: ""
  I0521 16:32:08.759538 23 builder.go:147] stdout: "Client Version: v1.33.1\nKustomize Version: v5.6.0\nServer Version: v1.33.1+k0s\n"
  I0521 16:32:08.759781 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5175" for this suite. @ 05/21/25 16:32:08.794
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/21/25 16:32:08.798
  I0521 16:32:08.798810 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename events @ 05/21/25 16:32:08.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:08.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:08.807
  STEP: creating a test event @ 05/21/25 16:32:08.809
  STEP: listing all events in all namespaces @ 05/21/25 16:32:08.812
  STEP: patching the test event @ 05/21/25 16:32:08.814
  STEP: fetching the test event @ 05/21/25 16:32:08.818
  STEP: updating the test event @ 05/21/25 16:32:08.819
  STEP: getting the test event @ 05/21/25 16:32:08.825
  STEP: deleting the test event @ 05/21/25 16:32:08.826
  STEP: listing all events in all namespaces @ 05/21/25 16:32:08.83
  I0521 16:32:08.832459 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1778" for this suite. @ 05/21/25 16:32:08.895
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 05/21/25 16:32:08.9
  I0521 16:32:08.900333 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 16:32:08.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:08.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:08.911
  STEP: create deployment with httpd image @ 05/21/25 16:32:08.913
  I0521 16:32:08.913479 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4022 create -f -'
  I0521 16:32:08.996164 23 builder.go:146] stderr: ""
  I0521 16:32:08.996197 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/21/25 16:32:08.996
  I0521 16:32:08.996446 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4022 diff -f -'
  I0521 16:32:09.092802 23 builder.go:135] rc: 1
  I0521 16:32:09.092880 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4022 delete -f -'
  I0521 16:32:09.143337 23 builder.go:146] stderr: ""
  I0521 16:32:09.143372 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0521 16:32:09.143559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4022" for this suite. @ 05/21/25 16:32:09.146
• [0.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/21/25 16:32:09.151
  I0521 16:32:09.151362 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename subpath @ 05/21/25 16:32:09.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:09.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:09.164
  STEP: Setting up data @ 05/21/25 16:32:09.167
  STEP: Creating pod pod-subpath-test-configmap-fn8x @ 05/21/25 16:32:09.173
  STEP: Creating a pod to test atomic-volume-subpath @ 05/21/25 16:32:09.173
  E0521 16:32:09.520098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:10.520185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:11.520473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:12.520650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:13.521279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:14.521456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:15.522052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:16.522213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:17.522733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:18.522852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:19.523195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:20.523415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:21.523813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:22.523996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:23.524183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:24.524352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:25.524444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:26.524608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:27.524828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:28.525933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:29.526866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:30.527051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:31.527784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:32.527969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:32:33.222
  I0521 16:32:33.224684 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-configmap-fn8x container test-container-subpath-configmap-fn8x: <nil>
  STEP: delete the pod @ 05/21/25 16:32:33.238
  STEP: Deleting pod pod-subpath-test-configmap-fn8x @ 05/21/25 16:32:33.249
  I0521 16:32:33.249063 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-fn8x" in namespace "subpath-5289"
  I0521 16:32:33.250753 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5289" for this suite. @ 05/21/25 16:32:33.252
• [24.105 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/21/25 16:32:33.256
  I0521 16:32:33.256356 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 16:32:33.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:33.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:33.268
  STEP: Setting up server cert @ 05/21/25 16:32:33.279
  E0521 16:32:33.528285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 16:32:33.683
  STEP: Deploying the webhook pod @ 05/21/25 16:32:33.687
  STEP: Wait for the deployment to be ready @ 05/21/25 16:32:33.696
  I0521 16:32:33.702390 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0521 16:32:34.528707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:35.528830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:32:35.709594 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:32:36.529483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:37.529574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:32:37.712274 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:32:38.530129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:39.530224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:32:39.712739 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:32:40.530326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:41.530521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:32:41.712013 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 21, 16, 32, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0521 16:32:42.530865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:43.531481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 16:32:43.712
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 16:32:43.726
  E0521 16:32:44.532102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:32:44.726580 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/21/25 16:32:44.728
  I0521 16:32:44.763055 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6906" for this suite. @ 05/21/25 16:32:44.765
  STEP: Destroying namespace "webhook-markers-4285" for this suite. @ 05/21/25 16:32:44.769
• [11.518 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/21/25 16:32:44.774
  I0521 16:32:44.774566 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:32:44.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:32:44.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:32:44.786
  STEP: Creating secret with name s-test-opt-del-493e66ac-2f8c-4f0d-8af0-f43823b7d759 @ 05/21/25 16:32:44.865
  STEP: Creating secret with name s-test-opt-upd-f9e15bdb-e255-4f2f-b529-002fdbabf377 @ 05/21/25 16:32:44.87
  STEP: Creating the pod @ 05/21/25 16:32:44.873
  E0521 16:32:45.533101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:46.533286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-493e66ac-2f8c-4f0d-8af0-f43823b7d759 @ 05/21/25 16:32:46.899
  STEP: Updating secret s-test-opt-upd-f9e15bdb-e255-4f2f-b529-002fdbabf377 @ 05/21/25 16:32:46.902
  STEP: Creating secret with name s-test-opt-create-099e0436-3e4b-4086-8197-9ac3b62cc063 @ 05/21/25 16:32:46.905
  STEP: waiting to observe update in volume @ 05/21/25 16:32:46.908
  E0521 16:32:47.534175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:48.534935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:49.535996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:50.536192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:51.536756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:52.536924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:53.537745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:54.537807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:55.538616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:56.538821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:57.539089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:58.539277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:32:59.539615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:00.539796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:01.540244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:02.540432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:03.540637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:04.540848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:05.541828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:06.541929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:07.542306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:08.542385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:09.542898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:10.543948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:11.544614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:12.544770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:13.545974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:14.546172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:15.546957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:16.547132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:17.547658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:18.547904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:19.548581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:20.548953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:21.549352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:22.549537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:23.549943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:24.550042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:25.550949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:26.551119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:27.551843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:28.551855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:29.552836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:30.553018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:31.553954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:32.554127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:33.554559      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:34.555484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:35.555886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:36.556060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:37.556482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:38.556642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:39.556692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:40.557288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:41.557193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:42.557371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:43.558089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:44.558294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:45.558927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:46.559026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:47.559974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:48.560139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:49.560324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:50.561029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:51.561455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:52.561549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:53.561933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:54.562104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:55.562886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:56.563085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:33:57.137954 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8950" for this suite. @ 05/21/25 16:33:57.14
• [72.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/21/25 16:33:57.144
  I0521 16:33:57.144175 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubelet-test @ 05/21/25 16:33:57.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:33:57.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:33:57.155
  E0521 16:33:57.563974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:33:58.564229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:33:59.173271 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6023" for this suite. @ 05/21/25 16:33:59.175
• [2.035 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 05/21/25 16:33:59.179
  I0521 16:33:59.179238 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:33:59.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:33:59.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:33:59.188
  E0521 16:33:59.565170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:00.565815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:01.566836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:02.567460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:03.567751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:04.568473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:05.569328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:06.569644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:07.570470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:08.571282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:09.571436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:10.571936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:11.572781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:12.573392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:13.573483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:14.574430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:15.574521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/21/25 16:34:16.194
  E0521 16:34:16.575605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:17.576006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:18.577398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:19.577485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:20.578015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/21/25 16:34:21.197
  STEP: Ensuring resource quota status is calculated @ 05/21/25 16:34:21.2
  E0521 16:34:21.578131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:22.578318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/21/25 16:34:23.203
  STEP: Ensuring resource quota status captures configMap creation @ 05/21/25 16:34:23.213
  E0521 16:34:23.579175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:24.579922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/21/25 16:34:25.216
  STEP: Ensuring resource quota status released usage @ 05/21/25 16:34:25.219
  E0521 16:34:25.580262      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:26.580350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:34:27.223226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6523" for this suite. @ 05/21/25 16:34:27.225
• [28.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 05/21/25 16:34:27.232
  I0521 16:34:27.232578 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 16:34:27.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:34:27.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:34:27.242
  STEP: fetching services @ 05/21/25 16:34:27.245
  I0521 16:34:27.247165 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5244" for this suite. @ 05/21/25 16:34:27.326
• [0.101 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 05/21/25 16:34:27.333
  I0521 16:34:27.333225 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename runtimeclass @ 05/21/25 16:34:27.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:34:27.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:34:27.343
  STEP: Deleting RuntimeClass runtimeclass-2273-delete-me @ 05/21/25 16:34:27.348
  STEP: Waiting for the RuntimeClass to disappear @ 05/21/25 16:34:27.352
  I0521 16:34:27.357838 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2273" for this suite. @ 05/21/25 16:34:27.427
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/21/25 16:34:27.433
  I0521 16:34:27.433809 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename limitrange @ 05/21/25 16:34:27.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:34:27.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:34:27.443
  STEP: Creating a LimitRange @ 05/21/25 16:34:27.446
  STEP: Setting up watch @ 05/21/25 16:34:27.446
  STEP: Submitting a LimitRange @ 05/21/25 16:34:27.559
  STEP: Verifying LimitRange creation was observed @ 05/21/25 16:34:27.562
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/21/25 16:34:27.562
  I0521 16:34:27.564238 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0521 16:34:27.564266 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/21/25 16:34:27.564
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/21/25 16:34:27.567
  I0521 16:34:27.569504 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0521 16:34:27.569537 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/21/25 16:34:27.569
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/21/25 16:34:27.576
  I0521 16:34:27.577783 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0521 16:34:27.577805 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/21/25 16:34:27.577
  STEP: Failing to create a Pod with more than max resources @ 05/21/25 16:34:27.579
  E0521 16:34:27.580476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating a LimitRange @ 05/21/25 16:34:27.58
  STEP: Verifying LimitRange updating is effective @ 05/21/25 16:34:27.584
  E0521 16:34:28.581041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:29.581222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 05/21/25 16:34:29.587
  STEP: Failing to create a Pod with more than max resources @ 05/21/25 16:34:29.591
  STEP: Deleting a LimitRange @ 05/21/25 16:34:29.593
  STEP: Verifying the LimitRange was deleted @ 05/21/25 16:34:29.6
  E0521 16:34:30.582122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:31.582297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:32.582488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:33.582862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:34.583036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:34:34.603422 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/21/25 16:34:34.603
  I0521 16:34:34.609048 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2697" for this suite. @ 05/21/25 16:34:34.611
• [7.184 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/21/25 16:34:34.617
  I0521 16:34:34.617589 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename prestop @ 05/21/25 16:34:34.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:34:34.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:34:34.629
  STEP: Creating server pod server in namespace prestop-1546 @ 05/21/25 16:34:34.631
  STEP: Waiting for pods to come up. @ 05/21/25 16:34:34.707
  E0521 16:34:35.583140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:36.583334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1546 @ 05/21/25 16:34:36.717
  E0521 16:34:37.583445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:38.583602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/21/25 16:34:38.727
  E0521 16:34:39.583787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:40.583966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:41.584161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:42.584478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:43.585136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:34:43.736507 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/21/25 16:34:43.736
  I0521 16:34:43.746535 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1546" for this suite. @ 05/21/25 16:34:43.749
• [9.135 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 05/21/25 16:34:43.752
  I0521 16:34:43.752803 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 16:34:43.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:34:43.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:34:43.764
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 05/21/25 16:34:43.767
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 05/21/25 16:34:43.772
  E0521 16:34:44.586136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:45.586246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:46.586562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:47.586659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 05/21/25 16:34:47.779
  I0521 16:34:47.780977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8032" for this suite. @ 05/21/25 16:34:47.783
• [4.035 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 05/21/25 16:34:47.787
  I0521 16:34:47.787412 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename statefulset @ 05/21/25 16:34:47.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:34:47.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:34:47.799
  STEP: Creating service test in namespace statefulset-9196 @ 05/21/25 16:34:47.801
  STEP: Creating a new StatefulSet @ 05/21/25 16:34:47.804
  I0521 16:34:47.813505 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0521 16:34:48.586809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:49.586842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:50.586951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:51.587146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:52.587926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:53.588102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:54.588193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:55.588388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:56.588563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:57.588774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:34:57.814877 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:34:57.814908 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:34:57.814917 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0521 16:34:57.820637 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-9196 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:34:57.921611 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:34:57.921804 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:34:57.921851 23 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0521 16:34:58.589611      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:34:59.589929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:00.590117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:01.590315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:02.590542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:03.590757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:04.591189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:05.591304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:06.591501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:07.591671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/21/25 16:35:07.926
  I0521 16:35:07.934871 23 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 05/21/25 16:35:07.934
  E0521 16:35:08.591909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:09.592078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:10.592289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:11.592456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:12.592647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:13.592824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:14.592837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:15.593042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:16.593221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:17.593327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/21/25 16:35:17.94
  I0521 16:35:17.942561 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-9196 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:35:18.034095 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:35:18.034259 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:35:18.034315 23 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0521 16:35:18.593446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:19.593645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:20.594069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:21.594140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:22.594328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:23.594413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:24.594614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:25.594828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:26.594857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:27.595028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/21/25 16:35:28.042
  I0521 16:35:28.042930 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-9196 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0521 16:35:28.138573 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0521 16:35:28.138610 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0521 16:35:28.138621 23 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0521 16:35:28.595759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:29.595965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:30.596132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:31.596943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:32.597109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:33.597360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:34.597560      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:35.597749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:36.597926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:37.598123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:35:38.149065 23 statefulset.go:2542] Updating stateful set ss2
  E0521 16:35:38.599204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:39.599384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:40.599578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:41.599771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:42.599955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:43.600132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:44.600305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:45.600506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:46.600576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:47.600807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/21/25 16:35:48.154
  I0521 16:35:48.156165 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=statefulset-9196 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0521 16:35:48.244692 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0521 16:35:48.244790 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0521 16:35:48.244810 23 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0521 16:35:48.601824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:49.602013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:50.602955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:51.603053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:52.603246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:53.603445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:54.603640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:55.603832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:56.604013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:57.604209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:35:58.253035 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9196
  I0521 16:35:58.255100 23 rest.go:153] Scaling statefulset ss2 to 0
  E0521 16:35:58.605255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:35:59.605499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:00.605678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:01.606032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:02.606211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:03.606923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:04.607924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:05.608957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:06.609858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:07.610065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:36:08.263028 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0521 16:36:08.264933 23 rest.go:91] Deleting statefulset ss2
  I0521 16:36:08.273085 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9196" for this suite. @ 05/21/25 16:36:08.275
• [80.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 05/21/25 16:36:08.28
  I0521 16:36:08.280917 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 16:36:08.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:36:08.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:36:08.292
  STEP: creating service in namespace services-411 @ 05/21/25 16:36:08.295
  STEP: creating service affinity-clusterip-transition in namespace services-411 @ 05/21/25 16:36:08.295
  I0521 16:36:08.316990 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 16:36:08.610373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:09.610571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:36:10.329086 23 resource.go:361] Creating new exec pod
  E0521 16:36:10.611414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:11.611601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:36:12.339978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-411 exec execpod-affinityxd758 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0521 16:36:12.435296 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.101.120.250) 80 port [tcp/http] succeeded!\n"
  I0521 16:36:12.435460 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:36:12.435558 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-411 exec execpod-affinityxd758 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.120.250 80'
  I0521 16:36:12.528938 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.120.250 80\nConnection to 10.101.120.250 80 port [tcp/http] succeeded!\n"
  I0521 16:36:12.529010 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:36:12.534502 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-411 exec execpod-affinityxd758 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/ ; done'
  E0521 16:36:12.611948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:36:12.690449 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n"
  I0521 16:36:12.690525 23 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-m94g6\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-m94g6\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-m94g6\naffinity-clusterip-transition-5cffb65545-fxglq\naffinity-clusterip-transition-5cffb65545-m94g6"
  I0521 16:36:12.690617 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.690656 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690669 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.690709 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.690721 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.690736 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-m94g6
  I0521 16:36:12.690747 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690758 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-m94g6
  I0521 16:36:12.690771 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690783 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690818 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.690830 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690841 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690852 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-m94g6
  I0521 16:36:12.690863 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-fxglq
  I0521 16:36:12.690874 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-m94g6
  I0521 16:36:12.697659 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-411 exec execpod-affinityxd758 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/ ; done'
  I0521 16:36:12.859240 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.101.120.250:80/\n"
  I0521 16:36:12.859302 23 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6\naffinity-clusterip-transition-5cffb65545-558d6"
  I0521 16:36:12.859323 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859332 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859340 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859347 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859355 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859365 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859374 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859382 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859389 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859398 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859406 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859430 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859441 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859451 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859462 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859472 23 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-558d6
  I0521 16:36:12.859673 23 service.go:4352] Cleaning up the exec pod
  I0521 16:36:12.904537 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-411" for this suite. @ 05/21/25 16:36:12.908
• [4.632 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 05/21/25 16:36:12.912
  I0521 16:36:12.912810 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 16:36:12.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:36:12.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:36:12.923
  STEP: Looking for a node to schedule job pods @ 05/21/25 16:36:12.926
  STEP: Creating a job @ 05/21/25 16:36:13.01
  STEP: Waiting for all the pods to be ready @ 05/21/25 16:36:13.016
  E0521 16:36:13.611997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:14.612198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:15.612814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:16.612981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 05/21/25 16:36:17.022
  STEP: Evict all the Pods @ 05/21/25 16:36:17.025
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-j6qfs/job-2050 @ 05/21/25 16:36:17.025
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-w8mq5/job-2050 @ 05/21/25 16:36:17.025
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-hgd6s/job-2050 @ 05/21/25 16:36:17.025
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-w8mq5/job-2050 to be deleted @ 05/21/25 16:36:17.041
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-j6qfs/job-2050 to be deleted @ 05/21/25 16:36:17.044
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-hgd6s/job-2050 to be deleted @ 05/21/25 16:36:17.045
  E0521 16:36:17.613852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:18.614063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:19.614808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:20.614992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 05/21/25 16:36:21.053
  E0521 16:36:21.615073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:22.615277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:23.615371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:24.615572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:25.615786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:26.615864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:27.616783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:28.616950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:29.617376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:30.617564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:31.617669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:32.617812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:33.617851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:34.618032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:35.618092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:36.618274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:37.619387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:38.619587      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:39.620092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:40.620196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:41.620811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:42.621125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:43.621751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:44.621915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:45.622635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:46.622818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:47.623702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:48.623856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:49.623955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:50.624131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:51.624960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:52.625123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:53.626102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:54.626296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:55.626376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:56.626544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:57.627410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:58.627615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:36:59.627737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:00.627905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:01.628245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:02.628409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:37:03.110339 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2050" for this suite. @ 05/21/25 16:37:03.112
• [50.204 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 05/21/25 16:37:03.116
  I0521 16:37:03.116944 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename emptydir @ 05/21/25 16:37:03.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:03.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:03.135
  STEP: Creating Pod @ 05/21/25 16:37:03.138
  E0521 16:37:03.628590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:04.628662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/21/25 16:37:05.149
  I0521 16:37:05.149450 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1046 PodName:pod-sharedvolume-5e4afda4-7c93-4bab-ab6b-392925fb5b62 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:37:05.149472 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:37:05.149512 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/emptydir-1046/pods/pod-sharedvolume-5e4afda4-7c93-4bab-ab6b-392925fb5b62/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0521 16:37:05.192243 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 16:37:05.192359 23 exec_util.go:112] Exec stderr: ""
  I0521 16:37:05.192510 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1046" for this suite. @ 05/21/25 16:37:05.194
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 05/21/25 16:37:05.2
  I0521 16:37:05.200482 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename webhook @ 05/21/25 16:37:05.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:05.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:05.21
  STEP: Setting up server cert @ 05/21/25 16:37:05.223
  E0521 16:37:05.629444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/21/25 16:37:05.962
  STEP: Deploying the webhook pod @ 05/21/25 16:37:05.966
  STEP: Wait for the deployment to be ready @ 05/21/25 16:37:05.978
  I0521 16:37:05.982199 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0521 16:37:06.629923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:07.630124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/21/25 16:37:07.988
  STEP: Verifying the service has paired with the endpoint @ 05/21/25 16:37:08.003
  E0521 16:37:08.630948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:37:09.003282 23 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/21/25 16:37:09.006
  STEP: verifying the mutating webhook match conditions @ 05/21/25 16:37:09.013
  STEP: updating the mutating webhook match conditions @ 05/21/25 16:37:09.015
  STEP: verifying the mutating webhook match conditions @ 05/21/25 16:37:09.024
  I0521 16:37:09.061333 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8383" for this suite. @ 05/21/25 16:37:09.063
  STEP: Destroying namespace "webhook-markers-8158" for this suite. @ 05/21/25 16:37:09.071
• [3.876 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 05/21/25 16:37:09.076
  I0521 16:37:09.076583 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename field-validation @ 05/21/25 16:37:09.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:09.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:09.088
  I0521 16:37:09.090824 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  W0521 16:37:09.091257      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004b087f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0521 16:37:09.630984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:10.631156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:37:11.619669      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0521 16:37:11.619694      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0521 16:37:11.619706      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0521 16:37:11.619735      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0521 16:37:11.619755      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0521 16:37:11.631600      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:37:12.146346 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7005" for this suite. @ 05/21/25 16:37:12.148
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 05/21/25 16:37:12.153
  I0521 16:37:12.153032 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:37:12.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:12.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:12.164
  STEP: Creating a ResourceQuota @ 05/21/25 16:37:12.166
  STEP: Getting a ResourceQuota @ 05/21/25 16:37:12.169
  STEP: Updating a ResourceQuota @ 05/21/25 16:37:12.17
  STEP: Verifying a ResourceQuota was modified @ 05/21/25 16:37:12.177
  STEP: Deleting a ResourceQuota @ 05/21/25 16:37:12.178
  STEP: Verifying the deleted ResourceQuota @ 05/21/25 16:37:12.182
  I0521 16:37:12.184220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1933" for this suite. @ 05/21/25 16:37:12.249
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 05/21/25 16:37:12.255
  I0521 16:37:12.255568 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename kubectl @ 05/21/25 16:37:12.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:12.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:12.266
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/21/25 16:37:12.269
  I0521 16:37:12.269060 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4685 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0521 16:37:12.330143 23 builder.go:146] stderr: ""
  I0521 16:37:12.330182 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/21/25 16:37:12.33
  E0521 16:37:12.632267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:13.632339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:14.632458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:15.632666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:16.632792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/21/25 16:37:17.38
  I0521 16:37:17.380883 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4685 get pod e2e-test-httpd-pod -o json'
  I0521 16:37:17.430980 23 builder.go:146] stderr: ""
  I0521 16:37:17.431135 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-05-21T16:37:12Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4685\",\n        \"resourceVersion\": \"37863\",\n        \"uid\": \"d81ea809-73c3-46ee-b835-6394d0d915eb\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5dm98\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-0\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5dm98\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-21T16:37:13Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-21T16:37:12Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-21T16:37:13Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-21T16:37:13Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-21T16:37:12Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://529eb2d0935955eafade843b2e5ada715ce5c25d6236d5e415303f907e2a8c0c\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-05-21T16:37:12Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5dm98\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.0.54.132\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.0.54.132\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.0.205\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.0.205\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-05-21T16:37:12Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/21/25 16:37:17.431
  I0521 16:37:17.431265 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4685 replace -f -'
  I0521 16:37:17.538240 23 builder.go:146] stderr: ""
  I0521 16:37:17.538276 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/21/25 16:37:17.538
  I0521 16:37:17.540247 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=kubectl-4685 delete pods e2e-test-httpd-pod'
  E0521 16:37:17.633714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:18.633950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:37:19.163553 23 builder.go:146] stderr: ""
  I0521 16:37:19.163598 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0521 16:37:19.163805 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4685" for this suite. @ 05/21/25 16:37:19.166
• [6.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 05/21/25 16:37:19.173
  I0521 16:37:19.173578 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 16:37:19.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:19.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:19.183
  STEP: create the deployment @ 05/21/25 16:37:19.186
  I0521 16:37:19.191919      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/21/25 16:37:19.191
  E0521 16:37:19.635059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 05/21/25 16:37:19.699
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/21/25 16:37:19.702
  STEP: Gathering metrics @ 05/21/25 16:37:20.212
  W0521 16:37:20.214791      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0521 16:37:20.214818 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0521 16:37:20.215027 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5263" for this suite. @ 05/21/25 16:37:20.217
• [1.047 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/21/25 16:37:20.22
  I0521 16:37:20.220544 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/21/25 16:37:20.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:20.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:20.231
  STEP: Creating two CSIDrivers @ 05/21/25 16:37:20.233
  STEP: Getting "inline-driver-0b477f7b-dbcb-4b93-85ad-e87b650f678b" & "inline-driver-f3ca4584-84c1-4d5d-86a2-42c4e7e4e593" @ 05/21/25 16:37:20.244
  STEP: Patching the CSIDriver "inline-driver-f3ca4584-84c1-4d5d-86a2-42c4e7e4e593" @ 05/21/25 16:37:20.247
  STEP: Updating the CSIDriver "inline-driver-f3ca4584-84c1-4d5d-86a2-42c4e7e4e593" @ 05/21/25 16:37:20.253
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5476" @ 05/21/25 16:37:20.257
  STEP: Deleting CSIDriver "inline-driver-0b477f7b-dbcb-4b93-85ad-e87b650f678b" @ 05/21/25 16:37:20.259
  STEP: Confirm deletion of CSIDriver "inline-driver-0b477f7b-dbcb-4b93-85ad-e87b650f678b" @ 05/21/25 16:37:20.262
  STEP: Deleting CSIDriver "inline-driver-f3ca4584-84c1-4d5d-86a2-42c4e7e4e593" via DeleteCollection @ 05/21/25 16:37:20.263
  STEP: Confirm deletion of CSIDriver "inline-driver-f3ca4584-84c1-4d5d-86a2-42c4e7e4e593" @ 05/21/25 16:37:20.27
  I0521 16:37:20.271793 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5476" for this suite. @ 05/21/25 16:37:20.318
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 05/21/25 16:37:20.321
  I0521 16:37:20.321585 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename projected @ 05/21/25 16:37:20.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:20.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:20.332
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:37:20.335
  E0521 16:37:20.635623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:21.635823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:37:22.344
  I0521 16:37:22.346166 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-38f0a0a0-48ea-4f1e-a608-8eabc4a87b8b container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:37:22.357
  I0521 16:37:22.368361 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2043" for this suite. @ 05/21/25 16:37:22.37
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:747
  STEP: Creating a kubernetes client @ 05/21/25 16:37:22.376
  I0521 16:37:22.376484 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption @ 05/21/25 16:37:22.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:37:22.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:37:22.385
  I0521 16:37:22.398404 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0521 16:37:22.636015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:23.636184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:24.637017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:25.637096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:26.637516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:27.637738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:28.638137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:29.638339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:30.639303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:31.639482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:32.640316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:33.640536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:34.640823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:35.641029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:36.641971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:37.642166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:38.642318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:39.642413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:40.642839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:41.642911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:42.643283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:43.643944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:44.644037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:45.644163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:46.645003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:47.645195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:48.646032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:49.646160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:50.647188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:51.647358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:52.648276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:53.648445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:54.648532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:55.648748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:56.648803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:57.648956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:58.650021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:37:59.650231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:00.650481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:01.650659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:02.651621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:03.651743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:04.652455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:05.652627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:06.653520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:07.653544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:08.654373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:09.654974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:10.655575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:11.655693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:12.656659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:13.656867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:14.657384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:15.657528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:16.658585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:17.658773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:18.659604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:19.659843      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:20.660518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:21.660713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:38:22.402615 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/21/25 16:38:22.404
  I0521 16:38:22.405014 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/21/25 16:38:22.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:38:22.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:38:22.418
  STEP: Finding an available node @ 05/21/25 16:38:22.42
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/21/25 16:38:22.42
  E0521 16:38:22.661507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:23.661589      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/21/25 16:38:24.432
  I0521 16:38:24.440516 23 preemption.go:710] found a healthy node: worker-0
  STEP: Adding a custom resource @ 05/21/25 16:38:24.443
  E0521 16:38:24.661917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:25.662009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:26.662105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:27.662423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:28.662979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:29.663945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:38:30.487082 23 preemption.go:829] pods created so far: [1 1 1]
  I0521 16:38:30.487121 23 preemption.go:830] length of pods created so far: 3
  E0521 16:38:30.664493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:31.665452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:38:32.496805 23 preemption.go:847] pods created so far: [2 2 1]
  E0521 16:38:32.666112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:33.666269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:34.666299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:35.666468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:36.666665      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:37.666821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:38.667005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 05/21/25 16:38:39.497
  STEP: Removing a custom resource @ 05/21/25 16:38:39.535
  STEP: Removing a custom resource @ 05/21/25 16:38:39.54
  I0521 16:38:39.545072 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3610" for this suite. @ 05/21/25 16:38:39.547
  I0521 16:38:39.551157 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9854" for this suite. @ 05/21/25 16:38:39.648
• [77.275 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 05/21/25 16:38:39.651
  I0521 16:38:39.651781 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename downward-api @ 05/21/25 16:38:39.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:38:39.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:38:39.663
  STEP: Creating a pod to test downward API volume plugin @ 05/21/25 16:38:39.665
  E0521 16:38:39.667838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:40.668830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:41.668984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:42.669267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:43.669307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:38:43.68
  I0521 16:38:43.682191 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-9131e1e8-2f35-4076-923a-caa813f78bc8 container client-container: <nil>
  STEP: delete the pod @ 05/21/25 16:38:43.693
  I0521 16:38:43.706219 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1971" for this suite. @ 05/21/25 16:38:43.708
• [4.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/21/25 16:38:43.711
  I0521 16:38:43.711942 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename ingress @ 05/21/25 16:38:43.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:38:43.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:38:43.721
  STEP: getting /apis @ 05/21/25 16:38:43.723
  STEP: getting /apis/networking.k8s.io @ 05/21/25 16:38:43.726
  STEP: getting /apis/networking.k8s.iov1 @ 05/21/25 16:38:43.727
  STEP: creating @ 05/21/25 16:38:43.727
  STEP: getting @ 05/21/25 16:38:43.738
  STEP: listing @ 05/21/25 16:38:43.739
  STEP: watching @ 05/21/25 16:38:43.741
  I0521 16:38:43.741824 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/21/25 16:38:43.742
  STEP: cluster-wide watching @ 05/21/25 16:38:43.744
  I0521 16:38:43.744314 23 ingress.go:198] starting watch
  STEP: patching @ 05/21/25 16:38:43.745
  STEP: updating @ 05/21/25 16:38:43.748
  I0521 16:38:43.754833 23 ingress.go:221] waiting for watch events with expected annotations
  I0521 16:38:43.754866 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/21/25 16:38:43.755
  STEP: updating /status @ 05/21/25 16:38:43.758
  STEP: get /status @ 05/21/25 16:38:43.763
  STEP: deleting @ 05/21/25 16:38:43.764
  STEP: deleting a collection @ 05/21/25 16:38:43.771
  I0521 16:38:43.779160 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7438" for this suite. @ 05/21/25 16:38:43.809
• [0.103 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 05/21/25 16:38:43.815
  I0521 16:38:43.815127 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename job @ 05/21/25 16:38:43.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:38:43.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:38:43.824
  STEP: Creating Indexed job @ 05/21/25 16:38:43.826
  STEP: Ensuring job reaches completions @ 05/21/25 16:38:43.832
  E0521 16:38:44.670118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:45.670220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:46.671096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:47.671276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:48.671476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:49.671652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:50.672690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:51.673531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/21/25 16:38:51.846
  I0521 16:38:51.849324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6789" for this suite. @ 05/21/25 16:38:51.851
• [8.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 05/21/25 16:38:51.855
  I0521 16:38:51.855923 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 16:38:51.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:38:51.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:38:51.865
  STEP: creating service in namespace services-5906 @ 05/21/25 16:38:51.868
  STEP: creating service affinity-nodeport-transition in namespace services-5906 @ 05/21/25 16:38:51.868
  I0521 16:38:51.891352 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0521 16:38:52.674444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:53.674518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:38:53.903412 23 resource.go:361] Creating new exec pod
  E0521 16:38:54.675374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:55.675555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:38:55.915551 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5906 exec execpod-affinity75dzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0521 16:38:56.012023 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.110.143.109) 80 port [tcp/http] succeeded!\n"
  I0521 16:38:56.012062 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:38:56.012124 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5906 exec execpod-affinity75dzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.143.109 80'
  I0521 16:38:56.102408 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.143.109 80\nConnection to 10.110.143.109 80 port [tcp/http] succeeded!\n"
  I0521 16:38:56.102478 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:38:56.102569 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5906 exec execpod-affinity75dzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.54.132 31418'
  I0521 16:38:56.191774 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.54.132 31418\nConnection to 10.0.54.132 31418 port [tcp/*] succeeded!\n"
  I0521 16:38:56.191920 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:38:56.191989 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5906 exec execpod-affinity75dzf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.60.98 31418'
  I0521 16:38:56.281470 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.60.98 31418\nConnection to 10.0.60.98 31418 port [tcp/*] succeeded!\n"
  I0521 16:38:56.281514 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:38:56.286859 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5906 exec execpod-affinity75dzf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/ ; done'
  I0521 16:38:56.443084 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n"
  I0521 16:38:56.443164 23 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-fkkfl\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-fkkfl\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-p2m68\naffinity-nodeport-transition-7d57658b6c-p2m68\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-p2m68\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-fkkfl\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-fkkfl\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-p2m68\naffinity-nodeport-transition-7d57658b6c-p2m68"
  I0521 16:38:56.443190 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-fkkfl
  I0521 16:38:56.443246 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443259 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-fkkfl
  I0521 16:38:56.443275 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443287 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-p2m68
  I0521 16:38:56.443298 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-p2m68
  I0521 16:38:56.443309 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443320 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443331 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-p2m68
  I0521 16:38:56.443343 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443354 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-fkkfl
  I0521 16:38:56.443364 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443376 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-fkkfl
  I0521 16:38:56.443387 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.443398 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-p2m68
  I0521 16:38:56.443410 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-p2m68
  I0521 16:38:56.451085 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-5906 exec execpod-affinity75dzf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/ ; done'
  I0521 16:38:56.605619 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.0.54.132:31418/\n"
  I0521 16:38:56.605664 23 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj\naffinity-nodeport-transition-7d57658b6c-tmhkj"
  I0521 16:38:56.605682 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605696 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605706 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605713 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605734 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605745 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605784 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605796 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605809 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605821 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605831 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605843 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605868 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605878 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605890 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605900 23 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tmhkj
  I0521 16:38:56.605973 23 service.go:4352] Cleaning up the exec pod
  I0521 16:38:56.654149 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5906" for this suite. @ 05/21/25 16:38:56.657
• [4.808 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/21/25 16:38:56.664
  I0521 16:38:56.664246 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename cronjob @ 05/21/25 16:38:56.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:38:56.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:38:56.673
  STEP: Creating a cronjob @ 05/21/25 16:38:56.675
  E0521 16:38:56.675563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring more than one job is running at a time @ 05/21/25 16:38:56.68
  E0521 16:38:57.676621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:58.676954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:38:59.677271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:00.677468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:01.678319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:02.678566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:03.678967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:04.679554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:05.679952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:06.680127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:07.680484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:08.680599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:09.681021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:10.681099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:11.681371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:12.681550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:13.681857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:14.681996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:15.682309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:16.682412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:17.682474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:18.682629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:19.682908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:20.682889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:21.683091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:22.683395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:23.683920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:24.684243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:25.684447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:26.685157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:27.686114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:28.686265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:29.686452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:30.687446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:31.687647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:32.687910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:33.688045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:34.688558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:35.688784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:36.688796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:37.688983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:38.689776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:39.689984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:40.690049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:41.690247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:42.690955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:43.691101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:44.691423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:45.691626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:46.692576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:47.693599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:48.693983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:49.694961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:50.695450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:51.695614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:52.696515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:53.696696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:54.697416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:55.697609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:56.697821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:57.698004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:58.698185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:39:59.698386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/21/25 16:40:00.683
  STEP: Removing cronjob @ 05/21/25 16:40:00.686
  I0521 16:40:00.689838 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6129" for this suite. @ 05/21/25 16:40:00.692
• [64.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/21/25 16:40:00.696
  I0521 16:40:00.696522 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename watch @ 05/21/25 16:40:00.697
  E0521 16:40:00.699288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:40:00.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:40:00.708
  STEP: creating a new configmap @ 05/21/25 16:40:00.711
  STEP: modifying the configmap once @ 05/21/25 16:40:00.716
  STEP: modifying the configmap a second time @ 05/21/25 16:40:00.725
  STEP: deleting the configmap @ 05/21/25 16:40:00.729
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/21/25 16:40:00.732
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/21/25 16:40:00.734
  I0521 16:40:00.734088 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1803  c1239965-8d80-4f00-9538-838e623d8be2 38842 0 2025-05-21 16:40:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-21 16:40:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:40:00.734206 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1803  c1239965-8d80-4f00-9538-838e623d8be2 38843 0 2025-05-21 16:40:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-21 16:40:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0521 16:40:00.734302 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1803" for this suite. @ 05/21/25 16:40:00.792
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 05/21/25 16:40:00.796
  I0521 16:40:00.796538 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename gc @ 05/21/25 16:40:00.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:40:00.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:40:00.805
  STEP: create the rc @ 05/21/25 16:40:00.893
  I0521 16:40:00.896753      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0521 16:40:01.700831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:02.701758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:03.703275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:04.703439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 05/21/25 16:40:04.903
  STEP: wait for the rc to be deleted @ 05/21/25 16:40:04.912
  E0521 16:40:05.703885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:06.705195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:07.706071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:08.706228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:09.706420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/21/25 16:40:09.915
  E0521 16:40:10.707236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:11.707881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:12.707983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:13.708949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:14.709933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:15.710138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:16.710926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:17.711949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:18.712115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:19.712219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:20.712391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:21.712926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:22.713030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:23.713198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:24.713363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:25.713469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:26.713646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:27.713732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:28.713837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:29.714004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:30.714169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:31.714331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:32.714564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:33.714836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:34.715005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:35.715173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:36.715340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:37.715566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:38.715751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:39.715926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/21/25 16:40:39.922
  W0521 16:40:39.925429      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0521 16:40:39.925461 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0521 16:40:39.925545 23 delete.go:95] Deleting pod "simpletest.rc-2clzv" in namespace "gc-2753"
  I0521 16:40:39.936368 23 delete.go:95] Deleting pod "simpletest.rc-2dm5s" in namespace "gc-2753"
  I0521 16:40:39.946224 23 delete.go:95] Deleting pod "simpletest.rc-2dv29" in namespace "gc-2753"
  I0521 16:40:39.955121 23 delete.go:95] Deleting pod "simpletest.rc-2hzq9" in namespace "gc-2753"
  I0521 16:40:39.965042 23 delete.go:95] Deleting pod "simpletest.rc-2kmhs" in namespace "gc-2753"
  I0521 16:40:39.974401 23 delete.go:95] Deleting pod "simpletest.rc-2rtpx" in namespace "gc-2753"
  I0521 16:40:39.982516 23 delete.go:95] Deleting pod "simpletest.rc-2vpvb" in namespace "gc-2753"
  I0521 16:40:39.994798 23 delete.go:95] Deleting pod "simpletest.rc-2z4md" in namespace "gc-2753"
  I0521 16:40:40.009033 23 delete.go:95] Deleting pod "simpletest.rc-4vvvn" in namespace "gc-2753"
  I0521 16:40:40.017923 23 delete.go:95] Deleting pod "simpletest.rc-4z82x" in namespace "gc-2753"
  I0521 16:40:40.027554 23 delete.go:95] Deleting pod "simpletest.rc-56mwl" in namespace "gc-2753"
  I0521 16:40:40.038144 23 delete.go:95] Deleting pod "simpletest.rc-5n77d" in namespace "gc-2753"
  I0521 16:40:40.046414 23 delete.go:95] Deleting pod "simpletest.rc-67c4g" in namespace "gc-2753"
  I0521 16:40:40.056590 23 delete.go:95] Deleting pod "simpletest.rc-6bfbf" in namespace "gc-2753"
  I0521 16:40:40.066778 23 delete.go:95] Deleting pod "simpletest.rc-6fdk7" in namespace "gc-2753"
  I0521 16:40:40.079032 23 delete.go:95] Deleting pod "simpletest.rc-6gcbl" in namespace "gc-2753"
  I0521 16:40:40.089117 23 delete.go:95] Deleting pod "simpletest.rc-6hrlh" in namespace "gc-2753"
  I0521 16:40:40.100543 23 delete.go:95] Deleting pod "simpletest.rc-6nbfm" in namespace "gc-2753"
  I0521 16:40:40.112799 23 delete.go:95] Deleting pod "simpletest.rc-6pvkb" in namespace "gc-2753"
  I0521 16:40:40.121666 23 delete.go:95] Deleting pod "simpletest.rc-6t759" in namespace "gc-2753"
  I0521 16:40:40.141564 23 delete.go:95] Deleting pod "simpletest.rc-7k9nf" in namespace "gc-2753"
  I0521 16:40:40.151958 23 delete.go:95] Deleting pod "simpletest.rc-7kqqb" in namespace "gc-2753"
  I0521 16:40:40.161624 23 delete.go:95] Deleting pod "simpletest.rc-82wmt" in namespace "gc-2753"
  I0521 16:40:40.173356 23 delete.go:95] Deleting pod "simpletest.rc-85fl7" in namespace "gc-2753"
  I0521 16:40:40.181449 23 delete.go:95] Deleting pod "simpletest.rc-872bc" in namespace "gc-2753"
  I0521 16:40:40.194866 23 delete.go:95] Deleting pod "simpletest.rc-8b9hj" in namespace "gc-2753"
  I0521 16:40:40.213698 23 delete.go:95] Deleting pod "simpletest.rc-8j66m" in namespace "gc-2753"
  I0521 16:40:40.233938 23 delete.go:95] Deleting pod "simpletest.rc-8n2b7" in namespace "gc-2753"
  I0521 16:40:40.247995 23 delete.go:95] Deleting pod "simpletest.rc-8wjfm" in namespace "gc-2753"
  I0521 16:40:40.260297 23 delete.go:95] Deleting pod "simpletest.rc-8wxph" in namespace "gc-2753"
  I0521 16:40:40.270643 23 delete.go:95] Deleting pod "simpletest.rc-9bncj" in namespace "gc-2753"
  I0521 16:40:40.283958 23 delete.go:95] Deleting pod "simpletest.rc-9jfw2" in namespace "gc-2753"
  I0521 16:40:40.298783 23 delete.go:95] Deleting pod "simpletest.rc-9t4bt" in namespace "gc-2753"
  I0521 16:40:40.311080 23 delete.go:95] Deleting pod "simpletest.rc-c75qm" in namespace "gc-2753"
  I0521 16:40:40.324509 23 delete.go:95] Deleting pod "simpletest.rc-d9xh9" in namespace "gc-2753"
  I0521 16:40:40.338582 23 delete.go:95] Deleting pod "simpletest.rc-dbsmw" in namespace "gc-2753"
  I0521 16:40:40.349365 23 delete.go:95] Deleting pod "simpletest.rc-dd4mq" in namespace "gc-2753"
  I0521 16:40:40.362063 23 delete.go:95] Deleting pod "simpletest.rc-dv9nl" in namespace "gc-2753"
  I0521 16:40:40.370480 23 delete.go:95] Deleting pod "simpletest.rc-f78m8" in namespace "gc-2753"
  I0521 16:40:40.379098 23 delete.go:95] Deleting pod "simpletest.rc-fkzw8" in namespace "gc-2753"
  I0521 16:40:40.392645 23 delete.go:95] Deleting pod "simpletest.rc-frhmm" in namespace "gc-2753"
  I0521 16:40:40.403709 23 delete.go:95] Deleting pod "simpletest.rc-fsgfx" in namespace "gc-2753"
  I0521 16:40:40.413289 23 delete.go:95] Deleting pod "simpletest.rc-h22tc" in namespace "gc-2753"
  I0521 16:40:40.421088 23 delete.go:95] Deleting pod "simpletest.rc-hgqth" in namespace "gc-2753"
  I0521 16:40:40.432540 23 delete.go:95] Deleting pod "simpletest.rc-hmfmx" in namespace "gc-2753"
  I0521 16:40:40.446319 23 delete.go:95] Deleting pod "simpletest.rc-hmplj" in namespace "gc-2753"
  I0521 16:40:40.455047 23 delete.go:95] Deleting pod "simpletest.rc-htwqp" in namespace "gc-2753"
  I0521 16:40:40.465442 23 delete.go:95] Deleting pod "simpletest.rc-hw92r" in namespace "gc-2753"
  I0521 16:40:40.473605 23 delete.go:95] Deleting pod "simpletest.rc-jblf2" in namespace "gc-2753"
  I0521 16:40:40.487981 23 delete.go:95] Deleting pod "simpletest.rc-jgjn7" in namespace "gc-2753"
  I0521 16:40:40.501506 23 delete.go:95] Deleting pod "simpletest.rc-jh6gh" in namespace "gc-2753"
  I0521 16:40:40.513395 23 delete.go:95] Deleting pod "simpletest.rc-k2hzc" in namespace "gc-2753"
  I0521 16:40:40.529286 23 delete.go:95] Deleting pod "simpletest.rc-kg8k8" in namespace "gc-2753"
  I0521 16:40:40.540430 23 delete.go:95] Deleting pod "simpletest.rc-km9ml" in namespace "gc-2753"
  I0521 16:40:40.552138 23 delete.go:95] Deleting pod "simpletest.rc-krv48" in namespace "gc-2753"
  I0521 16:40:40.560127 23 delete.go:95] Deleting pod "simpletest.rc-l8msw" in namespace "gc-2753"
  I0521 16:40:40.574025 23 delete.go:95] Deleting pod "simpletest.rc-l9zwv" in namespace "gc-2753"
  I0521 16:40:40.587968 23 delete.go:95] Deleting pod "simpletest.rc-ldcwg" in namespace "gc-2753"
  I0521 16:40:40.598328 23 delete.go:95] Deleting pod "simpletest.rc-lfp6w" in namespace "gc-2753"
  I0521 16:40:40.609013 23 delete.go:95] Deleting pod "simpletest.rc-lnv2x" in namespace "gc-2753"
  I0521 16:40:40.617261 23 delete.go:95] Deleting pod "simpletest.rc-m226t" in namespace "gc-2753"
  I0521 16:40:40.626505 23 delete.go:95] Deleting pod "simpletest.rc-m4vvp" in namespace "gc-2753"
  I0521 16:40:40.640700 23 delete.go:95] Deleting pod "simpletest.rc-m7dlc" in namespace "gc-2753"
  I0521 16:40:40.673680 23 delete.go:95] Deleting pod "simpletest.rc-mcf8t" in namespace "gc-2753"
  E0521 16:40:40.718778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:40:40.727591 23 delete.go:95] Deleting pod "simpletest.rc-mjrz5" in namespace "gc-2753"
  I0521 16:40:40.777622 23 delete.go:95] Deleting pod "simpletest.rc-msfwx" in namespace "gc-2753"
  I0521 16:40:40.833917 23 delete.go:95] Deleting pod "simpletest.rc-n774r" in namespace "gc-2753"
  I0521 16:40:40.883656 23 delete.go:95] Deleting pod "simpletest.rc-n88qx" in namespace "gc-2753"
  I0521 16:40:40.927623 23 delete.go:95] Deleting pod "simpletest.rc-ndxv9" in namespace "gc-2753"
  I0521 16:40:40.977315 23 delete.go:95] Deleting pod "simpletest.rc-ngdqc" in namespace "gc-2753"
  I0521 16:40:41.035347 23 delete.go:95] Deleting pod "simpletest.rc-nhtr9" in namespace "gc-2753"
  I0521 16:40:41.079811 23 delete.go:95] Deleting pod "simpletest.rc-nkvx8" in namespace "gc-2753"
  I0521 16:40:41.124528 23 delete.go:95] Deleting pod "simpletest.rc-nn4d4" in namespace "gc-2753"
  I0521 16:40:41.176595 23 delete.go:95] Deleting pod "simpletest.rc-nrfrx" in namespace "gc-2753"
  I0521 16:40:41.226771 23 delete.go:95] Deleting pod "simpletest.rc-nwfd5" in namespace "gc-2753"
  I0521 16:40:41.275155 23 delete.go:95] Deleting pod "simpletest.rc-nwng7" in namespace "gc-2753"
  I0521 16:40:41.325567 23 delete.go:95] Deleting pod "simpletest.rc-pbdbr" in namespace "gc-2753"
  I0521 16:40:41.378539 23 delete.go:95] Deleting pod "simpletest.rc-pj2h8" in namespace "gc-2753"
  I0521 16:40:41.425560 23 delete.go:95] Deleting pod "simpletest.rc-ppwjm" in namespace "gc-2753"
  I0521 16:40:41.478124 23 delete.go:95] Deleting pod "simpletest.rc-pxxrp" in namespace "gc-2753"
  I0521 16:40:41.529835 23 delete.go:95] Deleting pod "simpletest.rc-qgjxk" in namespace "gc-2753"
  I0521 16:40:41.576652 23 delete.go:95] Deleting pod "simpletest.rc-rl627" in namespace "gc-2753"
  I0521 16:40:41.626175 23 delete.go:95] Deleting pod "simpletest.rc-rqgtc" in namespace "gc-2753"
  I0521 16:40:41.681917 23 delete.go:95] Deleting pod "simpletest.rc-rvxzh" in namespace "gc-2753"
  E0521 16:40:41.718904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:40:41.728914 23 delete.go:95] Deleting pod "simpletest.rc-sr49w" in namespace "gc-2753"
  I0521 16:40:41.775242 23 delete.go:95] Deleting pod "simpletest.rc-stkfz" in namespace "gc-2753"
  I0521 16:40:41.824117 23 delete.go:95] Deleting pod "simpletest.rc-t5cxz" in namespace "gc-2753"
  I0521 16:40:41.879696 23 delete.go:95] Deleting pod "simpletest.rc-tdqhp" in namespace "gc-2753"
  I0521 16:40:41.926995 23 delete.go:95] Deleting pod "simpletest.rc-tnpjp" in namespace "gc-2753"
  I0521 16:40:41.976012 23 delete.go:95] Deleting pod "simpletest.rc-trwd6" in namespace "gc-2753"
  I0521 16:40:42.026446 23 delete.go:95] Deleting pod "simpletest.rc-twx25" in namespace "gc-2753"
  I0521 16:40:42.075849 23 delete.go:95] Deleting pod "simpletest.rc-v5xxj" in namespace "gc-2753"
  I0521 16:40:42.131256 23 delete.go:95] Deleting pod "simpletest.rc-v96xt" in namespace "gc-2753"
  I0521 16:40:42.179761 23 delete.go:95] Deleting pod "simpletest.rc-w82kj" in namespace "gc-2753"
  I0521 16:40:42.227265 23 delete.go:95] Deleting pod "simpletest.rc-wb5mg" in namespace "gc-2753"
  I0521 16:40:42.278392 23 delete.go:95] Deleting pod "simpletest.rc-wf44q" in namespace "gc-2753"
  I0521 16:40:42.325313 23 delete.go:95] Deleting pod "simpletest.rc-wwwk4" in namespace "gc-2753"
  I0521 16:40:42.377688 23 delete.go:95] Deleting pod "simpletest.rc-x4g6g" in namespace "gc-2753"
  I0521 16:40:42.427634 23 delete.go:95] Deleting pod "simpletest.rc-x8mbm" in namespace "gc-2753"
  I0521 16:40:42.478926 23 delete.go:95] Deleting pod "simpletest.rc-zn5s5" in namespace "gc-2753"
  I0521 16:40:42.526293 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2753" for this suite. @ 05/21/25 16:40:42.569
• [41.825 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 05/21/25 16:40:42.621
  I0521 16:40:42.621656 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename svcaccounts @ 05/21/25 16:40:42.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:40:42.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:40:42.639
  STEP: Creating a Serviceaccount "e2e-sa-k27cn" in namespace "svcaccounts-9769" @ 05/21/25 16:40:42.642
  STEP: Creating a ServiceaccountToken "e2e-sa-k27cn" in namespace "svcaccounts-9769" @ 05/21/25 16:40:42.645
  STEP: Creating a TokenReview for "e2e-sa-k27cn" in namespace "svcaccounts-9769" @ 05/21/25 16:40:42.65
  I0521 16:40:42.654892 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9769" for this suite. @ 05/21/25 16:40:42.669
• [0.055 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 05/21/25 16:40:42.677
  I0521 16:40:42.677489 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename resourcequota @ 05/21/25 16:40:42.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:40:42.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:40:42.698
  STEP: Discovering how many secrets are in namespace by default @ 05/21/25 16:40:42.707
  E0521 16:40:42.721490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:43.721433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:44.721712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:45.722456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:46.722780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/21/25 16:40:47.711
  E0521 16:40:47.723152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:48.723716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:49.724295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:50.724652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:51.725519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/21/25 16:40:52.715
  STEP: Ensuring resource quota status is calculated @ 05/21/25 16:40:52.72
  E0521 16:40:52.725896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:53.726052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/21/25 16:40:54.723
  E0521 16:40:54.726351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures secret creation @ 05/21/25 16:40:54.732
  E0521 16:40:55.726818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:56.726987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/21/25 16:40:56.735
  STEP: Ensuring resource quota status released usage @ 05/21/25 16:40:56.739
  E0521 16:40:57.727492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:40:58.727684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:40:58.742226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6611" for this suite. @ 05/21/25 16:40:58.744
• [16.071 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/21/25 16:40:58.748
  I0521 16:40:58.748674 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename pod-network-test @ 05/21/25 16:40:58.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:40:58.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:40:58.76
  STEP: Performing setup for networking test in namespace pod-network-test-8301 @ 05/21/25 16:40:58.763
  STEP: creating a selector @ 05/21/25 16:40:58.763
  STEP: Creating the service pods in kubernetes @ 05/21/25 16:40:58.763
  I0521 16:40:58.763354 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0521 16:40:59.727817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:00.727984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:01.728874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:02.728985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:03.729418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:04.729534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:05.730057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:06.730239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:07.730987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:08.731104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:09.732004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:10.732103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/21/25 16:41:10.883
  E0521 16:41:11.732583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:12.732654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:12.902249 23 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0521 16:41:12.902280 23 utils.go:495] Going to poll 10.244.0.20 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0521 16:41:12.903818 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.20:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8301 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:41:12.903846 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:41:12.903896 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8301/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.20%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0521 16:41:12.954975 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 16:41:12.955013 23 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I0521 16:41:12.955056 23 utils.go:495] Going to poll 10.244.1.26 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0521 16:41:12.956756 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.26:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8301 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0521 16:41:12.956779 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0521 16:41:12.956829 23 exec_util.go:84] ExecWithOptions: execute(https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8301/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.26%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0521 16:41:12.994568 23 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I0521 16:41:12.994654 23 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I0521 16:41:12.994874 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8301" for this suite. @ 05/21/25 16:41:12.997
• [14.252 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 05/21/25 16:41:13
  I0521 16:41:13.000973 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename container-probe @ 05/21/25 16:41:13.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:41:13.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:41:13.012
  STEP: Creating pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960 @ 05/21/25 16:41:13.014
  E0521 16:41:13.732995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:14.733177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/21/25 16:41:15.026
  I0521 16:41:15.027923 23 container_probe.go:1748] Initial restart count of pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a is 0
  I0521 16:41:15.029585 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:15.733926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:16.734124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:17.032837 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:17.734959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:18.735127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:19.035748 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:19.735529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:20.735947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:21.038711 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:21.736383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:22.736864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:23.041430 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:23.737242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:24.737993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:25.045065 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:25.738307      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:26.738952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:27.047139 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:27.739358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:28.739548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:29.050470 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:29.740144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:30.740229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:31.054359 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:31.741099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:32.741188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:33.056629 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:33.741336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:34.741513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:35.059100 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:35.741905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:36.741991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:37.061391 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:37.742391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:38.742576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:39.064412 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:39.742663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:40.742874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:41.067551 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:41.743201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:42.743275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:43.070699 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:43.743404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:44.743489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:45.073082 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:45.743692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:46.743918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:47.075476 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:47.744756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:48.744963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:49.078643 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:49.745319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:50.745496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:51.081211 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:51.745879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:52.745955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:53.083433 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:53.746047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:54.746243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:55.085964 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:55.746539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:56.746715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:57.089229 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:57.747657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:41:58.747947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:41:59.093254 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:41:59.748916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:00.749094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:01.095701 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:01.749949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:02.750024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:03.098635 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:03.750403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:04.750476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:05.101372 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:05.751002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:06.751196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:07.103914 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:07.751678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:08.751855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:09.106559 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:09.752215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:10.752387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:11.109033 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:11.752672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:12.752765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:13.112369 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:13.753040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:14.753204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:15.114887 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:15.753631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:16.753824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:17.117450 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:17.754336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:18.754513      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:19.119996 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:19.754659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:20.754842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:21.122791 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:21.755029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:22.755166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:23.126346 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:23.755981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:24.756171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:25.128767 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:25.756382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:26.756553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:27.131682 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:27.757425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:28.757617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:29.134896 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:29.758683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:30.758859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:31.137859 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:31.759495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:32.759594      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:33.142023 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:33.759670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:34.759854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:35.144552 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:35.759957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:36.760144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:37.147982 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:37.760694      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:38.760905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:39.150591 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:39.761009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:40.761199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:41.153933 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:41.761497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:42.761577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:43.157619 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:43.762650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:44.762758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:45.160146 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:45.763806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:46.763971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:47.162483 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:47.764242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:48.764412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:49.165016 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:49.764516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:50.764697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:51.167837 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:51.765419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:52.765516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:53.170753 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:53.766363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:54.766524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:55.173390 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:55.766978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:56.767158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:57.175981 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:57.767795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:42:58.767962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:42:59.178823 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:42:59.768062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:00.768238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:01.181985 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:01.768554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:02.768599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:03.185228 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:03.768838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:04.768998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:05.187806 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:05.769403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:06.769566      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:07.190122 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:07.769818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:08.769986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:09.192565 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:09.770245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:10.770418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:11.195176 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:11.770707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:12.770818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:13.198239 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:13.771849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:14.772023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:15.200566 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:15.772128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:16.772306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:17.203063 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:17.772825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:18.772998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:19.205694 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:19.773408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:20.773585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:21.208376 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:21.773872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:22.773987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:23.211839 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:23.774343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:24.774510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:25.213993 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:25.774577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:26.774662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:27.216388 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:27.775229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:28.775390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:29.219051 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:29.775612      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:30.775798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:31.221300 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:31.775840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:32.775942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:33.223840 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:33.776165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:34.776329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:35.226752 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:35.777345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:36.777515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:37.229005 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:37.777997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:38.778171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:39.231752 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:39.778927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:40.779095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:41.234768 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:41.779234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:42.779683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:43.238270 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:43.779798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:44.779959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:45.240578 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:45.780056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:46.780222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:47.242875 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:47.780583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:48.780791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:49.245782 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:49.780873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:50.781056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:51.247972 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:51.781410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:52.781515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:53.251005 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:53.782514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:54.782921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:55.253401 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:55.783040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:56.783216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:57.255835 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:57.783553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:43:58.783711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:43:59.258436 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:43:59.783930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:00.784599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:01.261156 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:01.784664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:02.785702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:03.264809 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:03.786353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:04.786523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:05.267073 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:05.787590      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:06.787776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:07.269351 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:07.788100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:08.788804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:09.272768 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:09.788893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:10.789068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:11.276230 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:11.789767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:12.789845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:13.278933 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:13.790466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:14.790634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:15.282113 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:15.791685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:16.791776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:17.284337 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:17.792698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:18.792885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:19.286928 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:19.793582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:20.793771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:21.289683 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:21.794117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:22.794214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:23.293337 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:23.794822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:24.794985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:25.295553 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:25.795099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:26.795204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:27.297760 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:27.795318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:28.795923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:29.300761 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:29.796931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:30.797060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:31.303762 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:31.797239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:32.798056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:33.306391 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:33.797852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:34.798020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:35.308562 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:35.798044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:36.798210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:37.310867 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:37.798553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:38.798749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:39.313516 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:39.798975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:40.799148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:41.316139 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:41.799572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:42.799641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:43.319142 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:43.799909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:44.800088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:45.321934 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:45.800412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:46.800578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:47.325803 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:47.801418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:48.801582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:49.328832 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:49.802355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:50.803009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:51.331922 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:51.803350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:52.803509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:53.334522 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:53.803965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:54.804923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:55.337562 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:55.805924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:56.806091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:57.340557 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:57.806436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:44:58.807138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:44:59.343166 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:44:59.807555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:00.807740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:01.346544 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:01.808017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:02.808139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:03.349491 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:03.808982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:04.809932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:05.353229 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:05.810828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:06.810933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:07.355536 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:07.811128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:08.811312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:09.358112 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:09.811508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:10.811680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:11.360371 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:11.811807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:12.811887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:13.362985 23 container_probe.go:1758] Get pod liveness-4bbc08ad-0227-41f1-ba76-d1d845b70f0a in namespace container-probe-1960
  E0521 16:45:13.812563      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:14.812746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/21/25 16:45:15.363
  I0521 16:45:15.373475 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1960" for this suite. @ 05/21/25 16:45:15.378
• [242.381 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 05/21/25 16:45:15.382
  I0521 16:45:15.382627 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename containers @ 05/21/25 16:45:15.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:45:15.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:45:15.394
  E0521 16:45:15.813291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:16.814165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:17.421226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4027" for this suite. @ 05/21/25 16:45:17.423
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/21/25 16:45:17.428
  I0521 16:45:17.428344 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename csi-storageclass @ 05/21/25 16:45:17.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:45:17.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:45:17.438
  STEP: Creating a StorageClass @ 05/21/25 16:45:17.44
  STEP: Get StorageClass "e2e-xtwjz" @ 05/21/25 16:45:17.443
  STEP: Patching the StorageClass "e2e-xtwjz" @ 05/21/25 16:45:17.445
  STEP: Delete StorageClass "e2e-xtwjz" @ 05/21/25 16:45:17.45
  STEP: Confirm deletion of StorageClass "e2e-xtwjz" @ 05/21/25 16:45:17.453
  STEP: Create a replacement StorageClass @ 05/21/25 16:45:17.455
  STEP: Updating StorageClass "e2e-v2-2q9f7" @ 05/21/25 16:45:17.458
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-2q9f7=updated" @ 05/21/25 16:45:17.463
  STEP: Deleting StorageClass "e2e-v2-2q9f7" via DeleteCollection @ 05/21/25 16:45:17.464
  STEP: Confirm deletion of StorageClass "e2e-v2-2q9f7" @ 05/21/25 16:45:17.469
  I0521 16:45:17.470859 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4716" for this suite. @ 05/21/25 16:45:17.524
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 05/21/25 16:45:17.528
  I0521 16:45:17.528153 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename services @ 05/21/25 16:45:17.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:45:17.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:45:17.539
  STEP: creating service multiprotocol-test in namespace services-7659 @ 05/21/25 16:45:17.541
  STEP: creating pod pod1 in namespace services-7659 @ 05/21/25 16:45:17.554
  STEP: Creating pod pod1 in namespace services-7659 @ 05/21/25 16:45:17.554
  E0521 16:45:17.814516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:18.815494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7659 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/21/25 16:45:19.571
  I0521 16:45:19.575431      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0521 16:45:19.578733 23 service.go:4729] successfully validated that service multiprotocol-test in namespace services-7659 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/21/25 16:45:19.578
  I0521 16:45:19.578783 23 resource.go:361] Creating new exec pod
  E0521 16:45:19.815948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:20.816034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:21.587217 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80'
  I0521 16:45:21.681817 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.17.188 80\nConnection to 10.96.17.188 80 port [tcp/http] succeeded!\n"
  I0521 16:45:21.681876 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:45:21.681973 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.17.188 80'
  E0521 16:45:21.816989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:22.817072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:23.778119 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.17.188 80\n"
  I0521 16:45:23.778154 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/21/25 16:45:23.778
  I0521 16:45:23.786391 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80'
  E0521 16:45:23.817812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:23.883143 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.17.188 80\nConnection to 10.96.17.188 80 port [tcp/http] succeeded!\n"
  I0521 16:45:23.883182 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0521 16:45:23.883299 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.17.188 80'
  E0521 16:45:24.817963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:25.818510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:25.980575 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.17.188 80\n"
  I0521 16:45:25.980616 23 builder.go:147] stdout: ""
  I0521 16:45:25.980689 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.17.188 80'
  E0521 16:45:26.818715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:27.819732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:28.074833 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.17.188 80\n"
  I0521 16:45:28.074886 23 builder.go:147] stdout: ""
  I0521 16:45:28.074975 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.17.188 80'
  E0521 16:45:28.820323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:29.820508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:30.170977 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.17.188 80\n"
  I0521 16:45:30.171021 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/21/25 16:45:30.171
  I0521 16:45:30.177251 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.96.17.188 80'
  E0521 16:45:30.821431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:31.821632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:32.270938 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.96.17.188 80\n"
  I0521 16:45:32.270974 23 builder.go:147] stdout: "pod1"
  I0521 16:45:32.271062 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80'
  E0521 16:45:32.822114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:33.822305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:34.363006 23 builder.go:135] rc: 1
  I0521 16:45:34.363087 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.17.188 80
  nc: connect to 10.96.17.188 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0521 16:45:34.363198 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80'
  E0521 16:45:34.822585      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:35.822663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:36.457903 23 builder.go:135] rc: 1
  I0521 16:45:36.458070 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.17.188 80
  nc: connect to 10.96.17.188 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0521 16:45:36.458195 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80'
  E0521 16:45:36.823398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:37.823567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0521 16:45:38.551862 23 builder.go:135] rc: 1
  I0521 16:45:38.551919 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4164331398 --namespace=services-7659 exec execpodzc5sr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.17.188 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.96.17.188 80
  nc: connect to 10.96.17.188 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0521 16:45:38.552175 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7659" for this suite. @ 05/21/25 16:45:38.554
• [21.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 05/21/25 16:45:38.558
  I0521 16:45:38.558994 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename configmap @ 05/21/25 16:45:38.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:45:38.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:45:38.568
  STEP: Creating configMap with name configmap-test-volume-a737291c-6998-4708-8566-be3223b5f966 @ 05/21/25 16:45:38.57
  STEP: Creating a pod to test consume configMaps @ 05/21/25 16:45:38.573
  E0521 16:45:38.823988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0521 16:45:39.824087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/21/25 16:45:40.584
  I0521 16:45:40.586435 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-8a993fee-f792-4d73-b10e-5cff2cd69ade container agnhost-container: <nil>
  STEP: delete the pod @ 05/21/25 16:45:40.59
  I0521 16:45:40.601457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-322" for this suite. @ 05/21/25 16:45:40.603
• [2.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:223
  STEP: Creating a kubernetes client @ 05/21/25 16:45:40.607
  I0521 16:45:40.607803 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename servicecidr @ 05/21/25 16:45:40.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:45:40.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:45:40.619
  STEP: creating @ 05/21/25 16:45:40.621
  STEP: patching @ 05/21/25 16:45:40.627
  STEP: updating @ 05/21/25 16:45:40.631
  STEP: getting @ 05/21/25 16:45:40.637
  STEP: listing @ 05/21/25 16:45:40.639
  STEP: watching @ 05/21/25 16:45:40.64
  STEP: deleting @ 05/21/25 16:45:40.641
  STEP: deleting a collection @ 05/21/25 16:45:40.644
  I0521 16:45:40.651085 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-2621" for this suite. @ 05/21/25 16:45:40.704
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 05/21/25 16:45:40.708
  I0521 16:45:40.708419 23 util.go:453] >>> kubeConfig: /tmp/kubeconfig-4164331398
  STEP: Building a namespace api object, basename servicecidr @ 05/21/25 16:45:40.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/21/25 16:45:40.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/21/25 16:45:40.717
  STEP: getting @ 05/21/25 16:45:40.719
  STEP: patching @ 05/21/25 16:45:40.721
  STEP: updating @ 05/21/25 16:45:40.724
  STEP: listing @ 05/21/25 16:45:40.748
  STEP: watching @ 05/21/25 16:45:40.75
  I0521 16:45:40.751495 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-597" for this suite. @ 05/21/25 16:45:40.805
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0521 16:45:40.809209 23 suites.go:34] Running AfterSuite actions on node 1
  I0521 16:45:40.809236 23 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
  E0521 16:45:40.825042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.042 seconds]
------------------------------

Ran 419 of 6731 Specs in 6257.984 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6312 Skipped
PASS

Ginkgo ran 1 suite in 1h44m18.825508817s
Test Suite Passed
2025/05/21 16:45:40 Saving results at /tmp/sonobuoy/results
