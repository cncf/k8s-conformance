  I1014 02:19:56.157659      21 e2e.go:109] Starting e2e run "e4e7049c-5f80-48b2-9217-1dd2a58718ae" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1760408394 - will randomize all specs

Will run 419 of 6735 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1014 02:19:56.608358 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  I1014 02:19:56.610354 21 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1014 02:19:56.648037 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1014 02:19:56.653230 21 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'civo-csi-node' (0 seconds elapsed)
  I1014 02:19:56.653609 21 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'traefik' (0 seconds elapsed)
  I1014 02:19:56.653870 21 e2e.go:245] e2e test version: v1.33.5
  I1014 02:19:56.655384 21 e2e.go:254] kube-apiserver version: v1.33.5+k3s1
  I1014 02:19:56.655476 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  I1014 02:19:56.659886 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.052 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/14/25 02:19:56.986
  I1014 02:19:56.986701 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename hostport @ 10/14/25 02:19:56.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:19:57.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:19:57.017
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/14/25 02:19:57.026
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.1.11 on the node which pod1 resides and expect scheduled @ 10/14/25 02:20:03.049
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.1.11 but use UDP protocol on the node which pod2 resides @ 10/14/25 02:20:05.061
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/14/25 02:20:09.09
  I1014 02:20:09.090423 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.1.11 http://127.0.0.1:54323/hostname] Namespace:hostport-5888 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:20:09.090687 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:20:09.090996 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-5888/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.1.11+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I1014 02:20:09.230408 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.1.11, port: 54323 @ 10/14/25 02:20:09.23
  I1014 02:20:09.231019 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.1.11:54323/hostname] Namespace:hostport-5888 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:20:09.231252 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:20:09.231554 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-5888/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.1.11%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  I1014 02:20:09.349362 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.1.11, port: 54323 UDP @ 10/14/25 02:20:09.351
  I1014 02:20:09.351317 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.1.11 54323] Namespace:hostport-5888 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:20:09.351570 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:20:09.351979 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/hostport-5888/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.1.11+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I1014 02:20:14.512126 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 02:20:14.513389 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5888" for this suite. @ 10/14/25 02:20:14.52
â€¢ [17.544 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/14/25 02:20:14.535
  I1014 02:20:14.535481 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 02:20:14.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:14.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:14.565
  I1014 02:20:14.571045 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1014 02:20:14.594625 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/25 02:20:14.594
  I1014 02:20:20.617138 21 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I1014 02:20:20.622169 21 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1014 02:20:20.638472 21 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1014 02:20:22.646658 21 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1014 02:20:22.650530 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6ff565599d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1014 02:20:24.657093 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 20, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6ff565599d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1014 02:20:26.657641 21 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1014 02:20:26.675480 21 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5892",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46490159-b007-4288-8bba-beb48efdb7e5",
      ResourceVersion: (string) (len=4) "1002",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 02:20:26.716352 21 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5892",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85234080-1408-4b54-9c07-5b5acf696c05",
      ResourceVersion: (string) (len=3) "992",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "46490159-b007-4288-8bba-beb48efdb7e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 36 34 39 30 31  35 39 2d 62 30 30 37 2d  |\"46490159-b007-|
              00000120  34 32 38 38 2d 38 62 62  61 2d 62 65 62 34 38 65  |4288-8bba-beb48e|
              00000130  66 64 62 37 65 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fdb7e5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:20:26.716903 21 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1014 02:20:26.717078 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5892",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a14c53b1-8300-4ab2-ba41-edfc119c2cd7",
      ResourceVersion: (string) (len=4) "1001",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005214,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "46490159-b007-4288-8bba-beb48efdb7e5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 36 34 39 30 31 35  |"uid\":\"4649015|
              000000b0  39 2d 62 30 30 37 2d 34  32 38 38 2d 38 62 62 61  |9-b007-4288-8bba|
              000000c0  2d 62 65 62 34 38 65 66  64 62 37 65 35 5c 22 7d  |-beb48efdb7e5\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:20:26.723372 21 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-vcnxj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-vcnxj",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-5892",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12ccb129-6d44-4d6d-a7da-3c2e3416e0e6",
      ResourceVersion: (string) (len=3) "991",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "85234080-1408-4b54-9c07-5b5acf696c05",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  32 33 34 30 38 30 2d 31  |d\":\"85234080-1|
              00000090  34 30 38 2d 34 62 35 34  2d 39 63 30 37 2d 35 62  |408-4b54-9c07-5b|
              000000a0  35 61 63 66 36 39 36 63  30 35 5c 22 7d 22 3a 7b  |5acf696c05\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 36 5c  22 7d 22 3a 7b 22 2e 22  |.42.1.6\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjm82",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjm82",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=9) "10.42.1.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.42.1.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896005225,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://81a2c36617d67e4e8ba54da87651e1b82af40591d2e84860081ba89da7965208",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gjm82",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:20:26.740147 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5892" for this suite. @ 10/14/25 02:20:26.744
â€¢ [12.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 10/14/25 02:20:26.749
  I1014 02:20:26.749940 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/14/25 02:20:26.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:26.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:26.774
  STEP: getting /apis @ 10/14/25 02:20:26.78
  STEP: getting /apis/storage.k8s.io @ 10/14/25 02:20:26.794
  STEP: getting /apis/storage.k8s.io/v1 @ 10/14/25 02:20:26.797
  STEP: creating @ 10/14/25 02:20:26.799
  STEP: watching @ 10/14/25 02:20:26.823
  I1014 02:20:26.823661 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 10/14/25 02:20:26.834
  STEP: listing in namespace @ 10/14/25 02:20:26.839
  STEP: listing across namespaces @ 10/14/25 02:20:26.842
  STEP: patching @ 10/14/25 02:20:26.846
  STEP: updating @ 10/14/25 02:20:26.85
  I1014 02:20:26.856386 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1014 02:20:26.856997 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/14/25 02:20:26.857
  STEP: deleting a collection @ 10/14/25 02:20:26.871
  I1014 02:20:26.884790 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8662" for this suite. @ 10/14/25 02:20:26.888
â€¢ [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/14/25 02:20:26.901
  I1014 02:20:26.902030 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/14/25 02:20:26.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:26.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:26.926
  STEP: mirroring a new custom Endpoint @ 10/14/25 02:20:26.947
  I1014 02:20:26.956076      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:20:26.963610 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 10/14/25 02:20:28.967
  I1014 02:20:28.972737      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 10/14/25 02:20:28.984
  I1014 02:20:28.988870      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:20:29.009347 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8980" for this suite. @ 10/14/25 02:20:29.014
â€¢ [2.118 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/14/25 02:20:29.02
  I1014 02:20:29.021003 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 02:20:29.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:29.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:29.042
  I1014 02:20:29.124908 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1014 02:20:29.130249 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1014 02:20:29.217511 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:20:29.217668 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:20:30.137824 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:20:30.138298 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:20:31.137320 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:20:31.138009 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:20:32.139843 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:20:32.140357 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:20:33.137582 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:20:33.138008 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:20:34.143195 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:20:34.143671 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:20:35.138781 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 02:20:35.139666 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I1014 02:20:35.140313 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1014 02:20:35.149769 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I1014 02:20:37.162012 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1014 02:20:37.171960 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I1014 02:20:37.172011 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1014 02:20:37.181617 21 daemon_set.go:1193] Wrong image for pod: daemon-set-j6cs4. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1014 02:20:37.182060 21 daemon_set.go:1198] Pod daemon-set-j6cs4 is not available
  I1014 02:20:39.178077 21 daemon_set.go:1198] Pod daemon-set-f5fv6 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/25 02:20:39.195
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1037, will wait for the garbage collector to delete the pods @ 10/14/25 02:20:39.195
  I1014 02:20:39.263652 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.784518ms
  I1014 02:20:39.364241 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.580212ms
  I1014 02:20:40.571314 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:20:40.571446 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1014 02:20:40.586244 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1157"},"items":null}

  I1014 02:20:40.596266 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1157"},"items":null}

  I1014 02:20:40.608935 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1037" for this suite. @ 10/14/25 02:20:40.612
â€¢ [11.598 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/14/25 02:20:40.619
  I1014 02:20:40.619125 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:20:40.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:40.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:40.647
  I1014 02:20:40.652470 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: creating the pod @ 10/14/25 02:20:40.653
  STEP: submitting the pod to kubernetes @ 10/14/25 02:20:40.653
  I1014 02:20:44.779340 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6697" for this suite. @ 10/14/25 02:20:44.784
â€¢ [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 10/14/25 02:20:44.791
  I1014 02:20:44.791021 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 02:20:44.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:44.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:44.811
  STEP: create the deployment @ 10/14/25 02:20:44.815
  I1014 02:20:44.820972      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/14/25 02:20:44.821
  STEP: delete the deployment @ 10/14/25 02:20:45.331
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/14/25 02:20:45.341
  STEP: Gathering metrics @ 10/14/25 02:20:45.942
  W1014 02:20:45.947475      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1014 02:20:45.947991 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1014 02:20:45.954676 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-506" for this suite. @ 10/14/25 02:20:45.966
â€¢ [1.183 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 10/14/25 02:20:45.975
  I1014 02:20:45.975451 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename ingressclass @ 10/14/25 02:20:45.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:46.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:46.015
  STEP: getting /apis @ 10/14/25 02:20:46.026
  STEP: getting /apis/networking.k8s.io @ 10/14/25 02:20:46.042
  STEP: getting /apis/networking.k8s.iov1 @ 10/14/25 02:20:46.049
  STEP: creating @ 10/14/25 02:20:46.051
  STEP: getting @ 10/14/25 02:20:46.075
  STEP: listing @ 10/14/25 02:20:46.079
  STEP: watching @ 10/14/25 02:20:46.082
  I1014 02:20:46.082874 21 ingressclass.go:348] starting watch
  STEP: patching @ 10/14/25 02:20:46.085
  STEP: updating @ 10/14/25 02:20:46.09
  I1014 02:20:46.094527 21 ingressclass.go:364] waiting for watch events with expected annotations
  I1014 02:20:46.094669 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 10/14/25 02:20:46.094
  STEP: deleting a collection @ 10/14/25 02:20:46.108
  I1014 02:20:46.124613 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9302" for this suite. @ 10/14/25 02:20:46.128
â€¢ [0.160 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 10/14/25 02:20:46.135
  I1014 02:20:46.136001 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename taint-single-pod @ 10/14/25 02:20:46.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:20:46.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:20:46.162
  I1014 02:20:46.168351 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1014 02:21:46.169099 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I1014 02:21:46.174203 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 10/14/25 02:21:46.174
  I1014 02:21:46.389524 21 taints.go:294] Pod is running on k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/14/25 02:21:46.389
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/25 02:21:46.403
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/14/25 02:21:46.422
  I1014 02:21:46.422394 21 taints.go:313] Pod wasn't evicted. Proceeding
  I1014 02:21:46.422413 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/25 02:21:46.502
  STEP: Waiting some time to make sure that toleration time passed. @ 10/14/25 02:21:46.552
  I1014 02:23:01.553301 21 taints.go:329] Pod wasn't evicted. Test successful
  I1014 02:23:01.553731 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1771" for this suite. @ 10/14/25 02:23:01.558
â€¢ [135.428 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 10/14/25 02:23:01.565
  I1014 02:23:01.565673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 02:23:01.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:01.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:01.587
  STEP: apply creating a deployment @ 10/14/25 02:23:01.592
  I1014 02:23:01.610127 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-242" for this suite. @ 10/14/25 02:23:01.613
â€¢ [0.056 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/14/25 02:23:01.621
  I1014 02:23:01.621886 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/14/25 02:23:01.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:01.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:01.656
  STEP: Creating two CSIDrivers @ 10/14/25 02:23:01.661
  STEP: Getting "inline-driver-7b7af4ac-f79b-45d5-a005-ca792c7f2d8b" & "inline-driver-8370bb19-85a8-4cbb-8512-674ba585d7b5" @ 10/14/25 02:23:01.68
  STEP: Patching the CSIDriver "inline-driver-8370bb19-85a8-4cbb-8512-674ba585d7b5" @ 10/14/25 02:23:01.687
  STEP: Updating the CSIDriver "inline-driver-8370bb19-85a8-4cbb-8512-674ba585d7b5" @ 10/14/25 02:23:01.694
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8421" @ 10/14/25 02:23:01.702
  STEP: Deleting CSIDriver "inline-driver-7b7af4ac-f79b-45d5-a005-ca792c7f2d8b" @ 10/14/25 02:23:01.708
  STEP: Confirm deletion of CSIDriver "inline-driver-7b7af4ac-f79b-45d5-a005-ca792c7f2d8b" @ 10/14/25 02:23:01.714
  STEP: Deleting CSIDriver "inline-driver-8370bb19-85a8-4cbb-8512-674ba585d7b5" via DeleteCollection @ 10/14/25 02:23:01.717
  STEP: Confirm deletion of CSIDriver "inline-driver-8370bb19-85a8-4cbb-8512-674ba585d7b5" @ 10/14/25 02:23:01.724
  I1014 02:23:01.727293 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8421" for this suite. @ 10/14/25 02:23:01.73
â€¢ [0.114 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 10/14/25 02:23:01.737
  I1014 02:23:01.737823 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename events @ 10/14/25 02:23:01.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:01.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:01.76
  STEP: creating a test event @ 10/14/25 02:23:01.765
  STEP: listing all events in all namespaces @ 10/14/25 02:23:01.769
  STEP: patching the test event @ 10/14/25 02:23:01.778
  STEP: fetching the test event @ 10/14/25 02:23:01.784
  STEP: updating the test event @ 10/14/25 02:23:01.787
  STEP: getting the test event @ 10/14/25 02:23:01.797
  STEP: deleting the test event @ 10/14/25 02:23:01.804
  STEP: listing all events in all namespaces @ 10/14/25 02:23:01.81
  I1014 02:23:01.818662 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8087" for this suite. @ 10/14/25 02:23:01.834
â€¢ [0.105 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 10/14/25 02:23:01.844
  I1014 02:23:01.844213 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename limitrange @ 10/14/25 02:23:01.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:01.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:01.864
  STEP: Creating a LimitRange @ 10/14/25 02:23:01.869
  STEP: Setting up watch @ 10/14/25 02:23:01.869
  STEP: Submitting a LimitRange @ 10/14/25 02:23:01.973
  STEP: Verifying LimitRange creation was observed @ 10/14/25 02:23:01.979
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/14/25 02:23:01.979
  I1014 02:23:01.982922 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1014 02:23:01.983323 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/14/25 02:23:01.983
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/14/25 02:23:01.988
  I1014 02:23:01.999523 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1014 02:23:01.999926 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/14/25 02:23:02
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/14/25 02:23:02.006
  I1014 02:23:02.018374 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1014 02:23:02.018789 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/14/25 02:23:02.019
  STEP: Failing to create a Pod with more than max resources @ 10/14/25 02:23:02.021
  STEP: Updating a LimitRange @ 10/14/25 02:23:02.025
  STEP: Verifying LimitRange updating is effective @ 10/14/25 02:23:02.03
  STEP: Creating a Pod with less than former min resources @ 10/14/25 02:23:04.035
  STEP: Failing to create a Pod with more than max resources @ 10/14/25 02:23:04.039
  STEP: Deleting a LimitRange @ 10/14/25 02:23:04.044
  STEP: Verifying the LimitRange was deleted @ 10/14/25 02:23:04.057
  I1014 02:23:09.062655 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/14/25 02:23:09.063
  I1014 02:23:09.077084 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-604" for this suite. @ 10/14/25 02:23:09.09
â€¢ [7.252 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 10/14/25 02:23:09.096
  I1014 02:23:09.096420 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:23:09.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:09.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:09.119
  I1014 02:23:09.169618 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6838" for this suite. @ 10/14/25 02:23:09.191
â€¢ [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/14/25 02:23:09.2
  I1014 02:23:09.200744 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 02:23:09.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:09.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:09.229
  STEP: Creating simple DaemonSet "daemon-set" @ 10/14/25 02:23:09.298
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/25 02:23:09.303
  I1014 02:23:09.416127 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:23:09.416282 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:23:10.312085 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:23:10.312569 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:23:11.311581 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 02:23:11.312099 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/14/25 02:23:11.315
  I1014 02:23:11.421762 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:23:11.421916 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm is running 0 daemon pod, expected 1
  I1014 02:23:12.355833 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:23:12.355957 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm is running 0 daemon pod, expected 1
  I1014 02:23:13.344547 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 02:23:13.345047 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/25 02:23:13.348
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8588, will wait for the garbage collector to delete the pods @ 10/14/25 02:23:13.349
  I1014 02:23:13.415132 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.35525ms
  I1014 02:23:13.516555 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.421455ms
  I1014 02:23:15.226142 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:23:15.226325 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1014 02:23:15.230361 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"1656"},"items":null}

  I1014 02:23:15.233609 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"1656"},"items":null}

  I1014 02:23:15.261901 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8588" for this suite. @ 10/14/25 02:23:15.268
â€¢ [6.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:492
  STEP: Creating a kubernetes client @ 10/14/25 02:23:15.283
  I1014 02:23:15.283993 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:23:15.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:15.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:15.308
  STEP: Setting up server cert @ 10/14/25 02:23:15.335
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:23:16.667
  STEP: Deploying the webhook pod @ 10/14/25 02:23:16.673
  STEP: Wait for the deployment to be ready @ 10/14/25 02:23:16.687
  I1014 02:23:16.716921 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:23:18.738
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:23:18.781
  I1014 02:23:19.781811 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/14/25 02:23:19.789
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/14/25 02:23:19.83
  STEP: Creating a configMap that should not be mutated @ 10/14/25 02:23:19.836
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/14/25 02:23:19.846
  STEP: Creating a configMap that should be mutated @ 10/14/25 02:23:19.853
  I1014 02:23:19.954160 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-219" for this suite. @ 10/14/25 02:23:19.96
  STEP: Destroying namespace "webhook-markers-7367" for this suite. @ 10/14/25 02:23:19.976
â€¢ [4.698 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:153
  STEP: Creating a kubernetes client @ 10/14/25 02:23:19.982
  I1014 02:23:19.982305 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:23:19.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:19.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:20.004
  STEP: Creating a test headless service @ 10/14/25 02:23:20.008
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 72.90.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.90.72_udp@PTR;check="$$(dig +tcp +noall +answer +search 72.90.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.90.72_tcp@PTR;sleep 1; done
   @ 10/14/25 02:23:20.04
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7872.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7872.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7872.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7872.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 72.90.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.90.72_udp@PTR;check="$$(dig +tcp +noall +answer +search 72.90.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.90.72_tcp@PTR;sleep 1; done
   @ 10/14/25 02:23:20.04
  STEP: creating a pod to probe DNS @ 10/14/25 02:23:20.04
  STEP: submitting the pod to kubernetes @ 10/14/25 02:23:20.04
  STEP: retrieving the pod @ 10/14/25 02:23:36.106
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:23:36.11
  I1014 02:23:36.123625 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.132448 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.137913 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.141464 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.168901 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.173060 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.177066 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.181154 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local from pod dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3: the server could not find the requested resource (get pods dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3)
  I1014 02:23:36.198172 21 dns_common.go:506] Lookups using dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3 failed for: [agnhost_udp@dns-test-service.dns-7872.svc.cluster.local agnhost_tcp@dns-test-service.dns-7872.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local jessie_udp@dns-test-service.dns-7872.svc.cluster.local jessie_tcp@dns-test-service.dns-7872.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7872.svc.cluster.local]

  I1014 02:23:36.219096 21 dns_common.go:514] Pod client logs for webserver: 
  I1014 02:23:36.227774 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1014 02:23:36.236798 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I1014 02:23:41.174042 21 dns_common.go:546] DNS probes using dns-7872/dns-test-77ff8d59-2c70-4529-aedf-cd244f88d2e3 succeeded

  STEP: deleting the pod @ 10/14/25 02:23:41.174
  STEP: deleting the test service @ 10/14/25 02:23:41.183
  STEP: deleting the test headless service @ 10/14/25 02:23:41.244
  I1014 02:23:41.265852 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7872" for this suite. @ 10/14/25 02:23:41.278
â€¢ [21.302 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/14/25 02:23:41.284
  I1014 02:23:41.284061 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 02:23:41.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:41.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:41.305
  I1014 02:23:41.310168 21 deployment.go:1664] Creating simple deployment test-new-deployment
  I1014 02:23:41.324095 21 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 10/14/25 02:23:43.355
  STEP: updating a scale subresource @ 10/14/25 02:23:43.366
  STEP: verifying the deployment Spec.Replicas was modified @ 10/14/25 02:23:43.376
  STEP: Patch a scale subresource @ 10/14/25 02:23:43.39
  I1014 02:23:43.462899 21 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9424",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "097e9533-9e2d-4dce-9e73-b2bafd8ede90",
      ResourceVersion: (string) (len=4) "1851",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 02:23:43.529565 21 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9424",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a295662c-77f0-41b9-b09e-764f80f4d2d8",
      ResourceVersion: (string) (len=4) "1869",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "097e9533-9e2d-4dce-9e73-b2bafd8ede90",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 39 37 65 39 35  33 33 2d 39 65 32 64 2d  |\"097e9533-9e2d-|
              00000120  34 64 63 65 2d 39 65 37  33 2d 62 32 62 61 66 64  |4dce-9e73-b2bafd|
              00000130  38 65 64 65 39 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8ede90\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:23:43.553423 21 deployment.go:68] Pod "test-new-deployment-685b768f58-7p6h2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-7p6h2",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9424",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "144d2d4f-8793-45d1-9618-6ffb1f4bf0c8",
      ResourceVersion: (string) (len=4) "1842",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "a295662c-77f0-41b9-b09e-764f80f4d2d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  39 35 36 36 32 63 2d 37  |d\":\"a295662c-7|
              00000090  37 66 30 2d 34 31 62 39  2d 62 30 39 65 2d 37 36  |7f0-41b9-b09e-76|
              000000a0  34 66 38 30 66 34 64 32  64 38 5c 22 7d 22 3a 7b  |4f80f4d2d8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  5c 22 7d 22 3a 7b 22 2e  |.42.1.14\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hk957",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hk957",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005422,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005421,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=10) "10.42.1.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005421,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896005421,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5086b4f5a62192985844b3c80d09733aebdb95757651aba764ff7978f2c6214d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hk957",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:23:43.607600 21 deployment.go:68] Pod "test-new-deployment-685b768f58-bhvnl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-bhvnl",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9424",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62156bf8-5e4e-4d78-9e24-666f1a822149",
      ResourceVersion: (string) (len=4) "1868",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "a295662c-77f0-41b9-b09e-764f80f4d2d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  39 35 36 36 32 63 2d 37  |d\":\"a295662c-7|
              00000090  37 66 30 2d 34 31 62 39  2d 62 30 39 65 2d 37 36  |7f0-41b9-b09e-76|
              000000a0  34 66 38 30 66 34 64 32  64 38 5c 22 7d 22 3a 7b  |4f80f4d2d8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wmx85",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wmx85",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:23:43.637540 21 deployment.go:68] Pod "test-new-deployment-685b768f58-ggchx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-ggchx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9424",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac7b15c8-24ef-4f90-9e7c-1a64cfca49fc",
      ResourceVersion: (string) (len=4) "1857",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "a295662c-77f0-41b9-b09e-764f80f4d2d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  39 35 36 36 32 63 2d 37  |d\":\"a295662c-7|
              00000090  37 66 30 2d 34 31 62 39  2d 62 30 39 65 2d 37 36  |7f0-41b9-b09e-76|
              000000a0  34 66 38 30 66 34 64 32  64 38 5c 22 7d 22 3a 7b  |4f80f4d2d8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2kk4k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2kk4k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2kk4k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:23:43.687574 21 deployment.go:68] Pod "test-new-deployment-685b768f58-vrqfs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-vrqfs",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9424",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e686ab2e-f7af-47af-b557-e267b2b83b3e",
      ResourceVersion: (string) (len=4) "1870",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "a295662c-77f0-41b9-b09e-764f80f4d2d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  39 35 36 36 32 63 2d 37  |d\":\"a295662c-7|
              00000090  37 66 30 2d 34 31 62 39  2d 62 30 39 65 2d 37 36  |7f0-41b9-b09e-76|
              000000a0  34 66 38 30 66 34 64 32  64 38 5c 22 7d 22 3a 7b  |4f80f4d2d8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mblp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mblp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896005423,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896005423,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6mblp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:23:43.729994 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9424" for this suite. @ 10/14/25 02:23:43.734
â€¢ [2.456 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 10/14/25 02:23:43.74
  I1014 02:23:43.740016 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 02:23:43.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:23:43.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:23:43.762
  STEP: Creating pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813 @ 10/14/25 02:23:43.767
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 02:23:45.793
  I1014 02:23:45.799066 21 container_probe.go:1748] Initial restart count of pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 is 0
  I1014 02:23:45.804187 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:47.807763 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:49.812552 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:51.818191 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:53.822773 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:55.828420 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:57.838485 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:23:59.843940 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:24:01.851078 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:24:03.855665 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:24:05.863228 21 container_probe.go:1758] Get pod liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 in namespace container-probe-8813
  I1014 02:24:05.864907 21 container_probe.go:1762] Restart count of pod container-probe-8813/liveness-c6deade2-9ca2-4b03-890a-b769ceb63a24 is now 1 (20.065392543s elapsed)
  STEP: deleting the pod @ 10/14/25 02:24:05.866
  I1014 02:24:05.882620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8813" for this suite. @ 10/14/25 02:24:05.886
â€¢ [22.153 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 10/14/25 02:24:05.893
  I1014 02:24:05.893112 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 02:24:05.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:24:05.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:24:05.926
  STEP: apply creating a deployment @ 10/14/25 02:24:05.929
  I1014 02:24:05.946603 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8109" for this suite. @ 10/14/25 02:24:05.987
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1861
  STEP: Creating a kubernetes client @ 10/14/25 02:24:05.993
  I1014 02:24:05.993284 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:24:05.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:24:06.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:24:06.02
  STEP: Starting the proxy @ 10/14/25 02:24:06.027
  I1014 02:24:06.027813 21 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-5290 proxy --unix-socket=/tmp/kubectl-proxy-unix695303821/test'
  STEP: retrieving proxy /api/ output @ 10/14/25 02:24:06.102
  I1014 02:24:06.103091 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5290" for this suite. @ 10/14/25 02:24:06.107
â€¢ [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/14/25 02:24:06.113
  I1014 02:24:06.113037 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:24:06.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:24:06.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:24:06.142
  STEP: Creating secret with name s-test-opt-del-0a21e5f8-0c50-4771-8310-81756f7fab75 @ 10/14/25 02:24:06.209
  STEP: Creating secret with name s-test-opt-upd-5d93de38-5ff1-45fa-a85c-05da30dc1da8 @ 10/14/25 02:24:06.231
  STEP: Creating the pod @ 10/14/25 02:24:06.24
  STEP: Deleting secret s-test-opt-del-0a21e5f8-0c50-4771-8310-81756f7fab75 @ 10/14/25 02:24:08.288
  STEP: Updating secret s-test-opt-upd-5d93de38-5ff1-45fa-a85c-05da30dc1da8 @ 10/14/25 02:24:08.296
  STEP: Creating secret with name s-test-opt-create-094cae90-9a50-4ead-95d7-21ab8a31c55f @ 10/14/25 02:24:08.301
  STEP: waiting to observe update in volume @ 10/14/25 02:24:08.305
  I1014 02:25:26.822854 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3431" for this suite. @ 10/14/25 02:25:26.828
â€¢ [80.724 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 10/14/25 02:25:26.837
  I1014 02:25:26.837156 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replication-controller @ 10/14/25 02:25:26.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:26.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:26.862
  I1014 02:25:26.869079 21 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/14/25 02:25:26.883
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/14/25 02:25:26.888
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/14/25 02:25:27.899
  I1014 02:25:27.914226 21 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/14/25 02:25:27.914
  I1014 02:25:27.923180 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8267" for this suite. @ 10/14/25 02:25:27.928
â€¢ [1.098 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 10/14/25 02:25:27.935
  I1014 02:25:27.935059 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:25:27.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:27.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:27.955
  STEP: Creating an indexed job with successPolicy @ 10/14/25 02:25:27.96
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 10/14/25 02:25:27.966
  STEP: Ensure that the job reaches completions @ 10/14/25 02:25:31.989
  STEP: Verifying that the job status to ensure correct final state @ 10/14/25 02:25:31.998
  I1014 02:25:32.002829 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5853" for this suite. @ 10/14/25 02:25:32.007
â€¢ [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 10/14/25 02:25:32.015
  I1014 02:25:32.015563 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:25:32.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:32.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:32.037
  STEP: creating secret secrets-307/secret-test-ac7ff8cb-921c-4629-b8b4-2fa9c8764292 @ 10/14/25 02:25:32.042
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:25:32.048
  STEP: Saw pod success @ 10/14/25 02:25:36.071
  I1014 02:25:36.075183 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-9f4c0410-15c8-4c83-9f38-d5610f8493b8 container env-test: <nil>
  STEP: delete the pod @ 10/14/25 02:25:36.092
  I1014 02:25:36.109851 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-307" for this suite. @ 10/14/25 02:25:36.115
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:730
  STEP: Creating a kubernetes client @ 10/14/25 02:25:36.13
  I1014 02:25:36.131017 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:25:36.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:36.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:36.157
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 10/14/25 02:25:36.172
  STEP: Awaiting for the job to fail as all indexes are failed @ 10/14/25 02:25:36.178
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 10/14/25 02:25:40.196
  I1014 02:25:40.200806 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5935" for this suite. @ 10/14/25 02:25:40.204
â€¢ [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 10/14/25 02:25:40.215
  I1014 02:25:40.215353 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:25:40.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:40.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:40.238
  STEP: Setting up server cert @ 10/14/25 02:25:40.275
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:25:41.049
  STEP: Deploying the webhook pod @ 10/14/25 02:25:41.057
  STEP: Wait for the deployment to be ready @ 10/14/25 02:25:41.071
  I1014 02:25:41.088739 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:25:43.102
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:25:43.133
  I1014 02:25:44.133695 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 02:25:44.140463 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3815-crds.webhook.example.com via the AdmissionRegistration API @ 10/14/25 02:25:44.654
  STEP: Creating a custom resource while v1 is storage version @ 10/14/25 02:25:44.688
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/14/25 02:25:46.738
  STEP: Patching the custom resource while v2 is storage version @ 10/14/25 02:25:46.757
  I1014 02:25:47.410166 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8671" for this suite. @ 10/14/25 02:25:47.414
  STEP: Destroying namespace "webhook-markers-1388" for this suite. @ 10/14/25 02:25:47.42
â€¢ [7.211 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 10/14/25 02:25:47.426
  I1014 02:25:47.426578 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-runtime @ 10/14/25 02:25:47.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:47.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:47.448
  STEP: create the container @ 10/14/25 02:25:47.454
  I1014 02:25:47.464031      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 10/14/25 02:25:47.464
  STEP: get the container status @ 10/14/25 02:25:50.488
  STEP: the container should be terminated @ 10/14/25 02:25:50.493
  STEP: the termination message should be set @ 10/14/25 02:25:50.493
  I1014 02:25:50.493189 21 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/14/25 02:25:50.493
  I1014 02:25:50.510635 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8313" for this suite. @ 10/14/25 02:25:50.515
â€¢ [3.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 10/14/25 02:25:50.526
  I1014 02:25:50.526425 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/25 02:25:50.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:50.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:50.555
  I1014 02:25:52.613420 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1557" for this suite. @ 10/14/25 02:25:52.62
â€¢ [2.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:566
  STEP: Creating a kubernetes client @ 10/14/25 02:25:52.631
  I1014 02:25:52.631610 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:25:52.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:52.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:52.656
  STEP: Setting up server cert @ 10/14/25 02:25:52.68
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:25:54.231
  STEP: Deploying the webhook pod @ 10/14/25 02:25:54.237
  STEP: Wait for the deployment to be ready @ 10/14/25 02:25:54.25
  I1014 02:25:54.297447 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:25:56.31
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:25:56.335
  I1014 02:25:57.335936 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/14/25 02:25:57.392
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/25 02:25:57.485
  STEP: Deleting the collection of validation webhooks @ 10/14/25 02:25:57.622
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/25 02:25:57.694
  I1014 02:25:57.790460 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5974" for this suite. @ 10/14/25 02:25:57.802
  STEP: Destroying namespace "webhook-markers-1420" for this suite. @ 10/14/25 02:25:57.819
â€¢ [5.193 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 10/14/25 02:25:57.825
  I1014 02:25:57.825591 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 02:25:57.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:25:57.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:25:57.853
  I1014 02:25:57.858715 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/14/25 02:25:59.679
  I1014 02:25:59.680315 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-5946 --namespace=crd-publish-openapi-5946 create -f -'
  I1014 02:25:59.794532 21 builder.go:146] stderr: ""
  I1014 02:25:59.794577 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8507-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1014 02:25:59.794626 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-5946 --namespace=crd-publish-openapi-5946 delete e2e-test-crd-publish-openapi-8507-crds test-cr'
  I1014 02:25:59.861293 21 builder.go:146] stderr: ""
  I1014 02:25:59.861338 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8507-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1014 02:25:59.861388 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-5946 --namespace=crd-publish-openapi-5946 apply -f -'
  I1014 02:25:59.970437 21 builder.go:146] stderr: ""
  I1014 02:25:59.970481 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8507-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1014 02:25:59.970530 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-5946 --namespace=crd-publish-openapi-5946 delete e2e-test-crd-publish-openapi-8507-crds test-cr'
  I1014 02:26:00.066956 21 builder.go:146] stderr: ""
  I1014 02:26:00.067292 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8507-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/14/25 02:26:00.067
  I1014 02:26:00.067381 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-5946 explain e2e-test-crd-publish-openapi-8507-crds'
  I1014 02:26:00.157056 21 builder.go:146] stderr: ""
  I1014 02:26:00.157117 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8507-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1014 02:26:01.571048 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5946" for this suite. @ 10/14/25 02:26:01.581
â€¢ [3.765 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 10/14/25 02:26:01.59
  I1014 02:26:01.590513 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:26:01.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:01.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:01.616
  STEP: Creating a pod to test downward api env vars @ 10/14/25 02:26:01.622
  STEP: Saw pod success @ 10/14/25 02:26:05.658
  I1014 02:26:05.663035 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downward-api-c1a1eef3-7f57-43ba-89fe-2489b235e442 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 02:26:05.673
  I1014 02:26:05.695209 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5110" for this suite. @ 10/14/25 02:26:05.704
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 10/14/25 02:26:05.711
  I1014 02:26:05.711084 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replication-controller @ 10/14/25 02:26:05.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:05.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:05.743
  STEP: Given a ReplicationController is created @ 10/14/25 02:26:05.752
  STEP: When the matched label of one of its pods change @ 10/14/25 02:26:05.759
  I1014 02:26:05.764704 21 resource.go:81] Pod name pod-release: Found 0 pods out of 1
  I1014 02:26:10.821810 21 resource.go:81] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/14/25 02:26:10.841
  I1014 02:26:10.851046 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3375" for this suite. @ 10/14/25 02:26:10.873
â€¢ [5.185 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 10/14/25 02:26:10.896
  I1014 02:26:10.897016 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/25 02:26:10.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:10.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:10.925
  I1014 02:26:10.931892 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  I1014 02:26:14.004087 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7339" for this suite. @ 10/14/25 02:26:14.008
â€¢ [3.117 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:264
  STEP: Creating a kubernetes client @ 10/14/25 02:26:14.014
  I1014 02:26:14.015021 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:26:14.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:14.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:14.039
  STEP: Creating a test headless service @ 10/14/25 02:26:14.044
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-823.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-823.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 10/14/25 02:26:14.051
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-823.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-823.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/14/25 02:26:14.052
  STEP: creating a pod to probe DNS @ 10/14/25 02:26:14.052
  STEP: submitting the pod to kubernetes @ 10/14/25 02:26:14.052
  STEP: retrieving the pod @ 10/14/25 02:26:16.093
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:26:16.097
  I1014 02:26:16.144823 21 dns_common.go:546] DNS probes using dns-823/dns-test-6a3dbf60-dcbc-4665-9d9d-ade8c56d9fa4 succeeded

  STEP: deleting the pod @ 10/14/25 02:26:16.145
  STEP: deleting the test headless service @ 10/14/25 02:26:16.171
  I1014 02:26:16.200222 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-823" for this suite. @ 10/14/25 02:26:16.214
â€¢ [2.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 10/14/25 02:26:16.226
  I1014 02:26:16.226290 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 02:26:16.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:16.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:16.268
  STEP: create the rc1 @ 10/14/25 02:26:16.312
  STEP: create the rc2 @ 10/14/25 02:26:16.322
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/14/25 02:26:18.354
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/14/25 02:26:18.518
  STEP: wait for the rc to be deleted @ 10/14/25 02:26:18.53
  STEP: Gathering metrics @ 10/14/25 02:26:23.543
  W1014 02:26:23.552194      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1014 02:26:23.552235 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1014 02:26:23.552318 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-259gc" in namespace "gc-950"
  I1014 02:26:23.566244 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2hnxq" in namespace "gc-950"
  I1014 02:26:23.582858 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6p2zh" in namespace "gc-950"
  I1014 02:26:23.612542 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84ljp" in namespace "gc-950"
  I1014 02:26:23.623596 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9b96b" in namespace "gc-950"
  I1014 02:26:23.644985 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cgzf" in namespace "gc-950"
  I1014 02:26:23.665967 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqj4k" in namespace "gc-950"
  I1014 02:26:23.679719 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-950" for this suite. @ 10/14/25 02:26:23.691
â€¢ [7.473 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 10/14/25 02:26:23.699
  I1014 02:26:23.700015 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename csi-storageclass @ 10/14/25 02:26:23.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:23.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:23.736
  STEP: Creating a StorageClass @ 10/14/25 02:26:23.74
  STEP: Get StorageClass "e2e-wt97d" @ 10/14/25 02:26:23.746
  STEP: Patching the StorageClass "e2e-wt97d" @ 10/14/25 02:26:23.749
  STEP: Delete StorageClass "e2e-wt97d" @ 10/14/25 02:26:23.756
  STEP: Confirm deletion of StorageClass "e2e-wt97d" @ 10/14/25 02:26:23.764
  STEP: Create a replacement StorageClass @ 10/14/25 02:26:23.77
  STEP: Updating StorageClass "e2e-v2-gbqz6" @ 10/14/25 02:26:23.775
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-gbqz6=updated" @ 10/14/25 02:26:23.795
  STEP: Deleting StorageClass "e2e-v2-gbqz6" via DeleteCollection @ 10/14/25 02:26:23.8
  STEP: Confirm deletion of StorageClass "e2e-v2-gbqz6" @ 10/14/25 02:26:23.809
  I1014 02:26:23.814581 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2455" for this suite. @ 10/14/25 02:26:23.819
â€¢ [0.127 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 10/14/25 02:26:23.827
  I1014 02:26:23.827143 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/25 02:26:23.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:23.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:23.855
  I1014 02:26:23.869276 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-38" for this suite. @ 10/14/25 02:26:23.919
â€¢ [0.115 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/14/25 02:26:23.942
  I1014 02:26:23.942794 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 02:26:23.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:23.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:23.978
  I1014 02:26:24.028258 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/14/25 02:26:24.042
  I1014 02:26:24.053083 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:26:24.053227 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/14/25 02:26:24.053
  I1014 02:26:24.149781 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:26:24.149943 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm is running 0 daemon pod, expected 1
  I1014 02:26:25.139416 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:26:25.139584 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/14/25 02:26:25.143
  I1014 02:26:25.171147 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:26:25.171290 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/14/25 02:26:25.171
  I1014 02:26:25.239936 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:26:25.240081 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm is running 0 daemon pod, expected 1
  I1014 02:26:26.192233 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:26:26.192388 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm is running 0 daemon pod, expected 1
  I1014 02:26:27.195148 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:26:27.195303 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/25 02:26:27.208
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1941, will wait for the garbage collector to delete the pods @ 10/14/25 02:26:27.208
  I1014 02:26:27.282061 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 18.798565ms
  I1014 02:26:27.382807 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.665047ms
  I1014 02:26:29.199147 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:26:29.199334 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1014 02:26:29.222555 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3084"},"items":null}

  I1014 02:26:29.229511 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3084"},"items":null}

  I1014 02:26:29.261623 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1941" for this suite. @ 10/14/25 02:26:29.268
â€¢ [5.337 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 10/14/25 02:26:29.28
  I1014 02:26:29.280113 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/25 02:26:29.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:29.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:29.306
  I1014 02:26:31.343362 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3325" for this suite. @ 10/14/25 02:26:31.349
â€¢ [2.076 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:437
  STEP: Creating a kubernetes client @ 10/14/25 02:26:31.358
  I1014 02:26:31.358421 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:26:31.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:31.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:31.382
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/14/25 02:26:31.386
  I1014 02:26:31.396279 21 dns.go:449] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9265  a10333a5-c6f2-40f0-a6c4-44220477ede8 3112 1 2025-10-14 02:26:31 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-10-14 02:26:31 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4fkpm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4fkpm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/14/25 02:26:33.412
  I1014 02:26:33.412943 21 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9265 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:26:33.413071 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:26:33.413202 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-9265/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  I1014 02:26:33.513380 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: Verifying customized DNS server is configured on pod... @ 10/14/25 02:26:33.513
  I1014 02:26:33.513639 21 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9265 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:26:33.513693 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:26:33.513802 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/dns-9265/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I1014 02:26:33.604781 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 02:26:33.604975 21 dns.go:451] Deleting pod test-dns-nameservers...
  I1014 02:26:33.616310 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9265" for this suite. @ 10/14/25 02:26:33.624
â€¢ [2.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 10/14/25 02:26:33.641
  I1014 02:26:33.641141 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-webhook @ 10/14/25 02:26:33.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:33.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:33.677
  STEP: Setting up server cert @ 10/14/25 02:26:33.681
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/14/25 02:26:34.687
  STEP: Deploying the custom resource conversion webhook pod @ 10/14/25 02:26:34.692
  STEP: Wait for the deployment to be ready @ 10/14/25 02:26:34.702
  I1014 02:26:34.724118 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:26:36.736
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:26:36.757
  I1014 02:26:37.757400 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1014 02:26:37.762334 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Creating a v1 custom resource @ 10/14/25 02:26:40.364
  STEP: Create a v2 custom resource @ 10/14/25 02:26:40.377
  STEP: List CRs in v1 @ 10/14/25 02:26:40.405
  STEP: List CRs in v2 @ 10/14/25 02:26:40.409
  I1014 02:26:41.006059 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2108" for this suite. @ 10/14/25 02:26:41.013
â€¢ [7.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 10/14/25 02:26:41.035
  I1014 02:26:41.035816 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename security-context @ 10/14/25 02:26:41.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:41.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:41.072
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/14/25 02:26:41.082
  STEP: Saw pod success @ 10/14/25 02:26:45.118
  I1014 02:26:45.121947 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod security-context-cac20162-a119-4954-ab1d-3db6aaf09ff9 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:26:45.13
  I1014 02:26:45.146915 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7256" for this suite. @ 10/14/25 02:26:45.152
â€¢ [4.126 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 10/14/25 02:26:45.159
  I1014 02:26:45.159673 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:26:45.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:45.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:45.187
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:26:45.192
  STEP: Saw pod success @ 10/14/25 02:26:49.234
  I1014 02:26:49.239729 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-8782f9bb-d949-472d-a43d-e51e9d917f09 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:26:49.25
  I1014 02:26:49.270154 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4442" for this suite. @ 10/14/25 02:26:49.274
â€¢ [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:659
  STEP: Creating a kubernetes client @ 10/14/25 02:26:49.28
  I1014 02:26:49.280726 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 02:26:49.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:26:49.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:26:49.306
  STEP: Creating service test in namespace statefulset-5868 @ 10/14/25 02:26:49.31
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/14/25 02:26:49.319
  STEP: Creating stateful set ss in namespace statefulset-5868 @ 10/14/25 02:26:49.368
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5868 @ 10/14/25 02:26:49.379
  I1014 02:26:49.405939 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I1014 02:26:59.384881 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/14/25 02:26:59.385
  I1014 02:26:59.393470 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:26:59.571791 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:26:59.571838 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:26:59.571854 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:26:59.576071 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1014 02:27:09.577674 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:27:09.577862 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1014 02:27:09.678459 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 9.999999401s
  I1014 02:27:10.683965 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 8.913588042s
  I1014 02:27:11.688851 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 7.908168924s
  I1014 02:27:12.702547 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 6.898729995s
  I1014 02:27:13.708813 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 5.888941002s
  I1014 02:27:14.718011 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 4.883517855s
  I1014 02:27:15.730418 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 3.870811729s
  I1014 02:27:16.746375 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 2.858747751s
  I1014 02:27:17.751514 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 1.845908227s
  I1014 02:27:18.758073 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 1 for another 840.603597ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5868 @ 10/14/25 02:27:19.758
  I1014 02:27:19.763403 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:27:19.950032 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:27:19.950080 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:27:19.950096 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:27:19.954554 21 wait.go:44] Found 1 stateful pods, waiting for 3
  I1014 02:27:29.954398 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:27:29.954857 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:27:29.955098 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/14/25 02:27:29.955
  STEP: Scale down will halt with unhealthy stateful pod @ 10/14/25 02:27:29.955
  I1014 02:27:29.963189 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:27:30.129401 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:27:30.129450 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:27:30.129466 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:27:30.129514 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:27:30.308812 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:27:30.308859 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:27:30.308874 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:27:30.308923 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:27:30.482470 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:27:30.482517 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:27:30.482533 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:27:30.482548 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1014 02:27:30.490408 21 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I1014 02:27:40.497108 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:27:40.498205 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:27:40.499290 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:27:40.596042 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999226s
  I1014 02:27:41.601739 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.913855659s
  I1014 02:27:42.609404 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.908922455s
  I1014 02:27:43.615547 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.900820841s
  I1014 02:27:44.624308 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.895403421s
  I1014 02:27:45.630509 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.88590284s
  I1014 02:27:46.635633 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.880475193s
  I1014 02:27:47.646280 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.874995928s
  I1014 02:27:48.651661 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.864691792s
  I1014 02:27:49.664124 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 851.430726ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5868 @ 10/14/25 02:27:50.664
  I1014 02:27:50.669638 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:27:50.831005 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:27:50.831052 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:27:50.831068 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:27:50.831119 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:27:50.990852 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:27:50.990899 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:27:50.990916 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:27:50.990967 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5868 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:27:51.153772 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:27:51.153846 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:27:51.153869 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:27:51.153885 21 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/14/25 02:28:01.164
  I1014 02:28:01.165114 21 statefulset.go:138] Deleting all statefulset in ns statefulset-5868
  I1014 02:28:01.169228 21 rest.go:153] Scaling statefulset ss to 0
  I1014 02:28:01.177263 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 02:28:01.181157 21 rest.go:91] Deleting statefulset ss
  I1014 02:28:01.206240 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5868" for this suite. @ 10/14/25 02:28:01.213
â€¢ [71.941 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/14/25 02:28:01.234
  I1014 02:28:01.235153 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename init-container @ 10/14/25 02:28:01.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:01.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:01.26
  STEP: creating the pod @ 10/14/25 02:28:01.264
  I1014 02:28:01.264750 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1014 02:28:05.648681 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2265" for this suite. @ 10/14/25 02:28:05.654
â€¢ [4.431 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 10/14/25 02:28:05.666
  I1014 02:28:05.666404 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replicaset @ 10/14/25 02:28:05.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:05.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:05.696
  STEP: Create a ReplicaSet @ 10/14/25 02:28:05.699
  STEP: Verify that the required pods have come up @ 10/14/25 02:28:05.705
  I1014 02:28:05.711796 21 resource.go:81] Pod name sample-pod: Found 0 pods out of 3
  I1014 02:28:10.778639 21 resource.go:81] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/14/25 02:28:10.778
  I1014 02:28:10.786779 21 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/14/25 02:28:10.786
  STEP: DeleteCollection of the ReplicaSets @ 10/14/25 02:28:10.863
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/14/25 02:28:10.874
  I1014 02:28:10.884299 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7852" for this suite. @ 10/14/25 02:28:10.91
â€¢ [5.273 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 10/14/25 02:28:10.939
  I1014 02:28:10.939900 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:28:10.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:10.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:11.001
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:28:11.009
  STEP: Saw pod success @ 10/14/25 02:28:15.046
  I1014 02:28:15.054257 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-75f4013e-afe5-4049-b7b0-2defef126e03 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:28:15.072
  I1014 02:28:15.093156 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7473" for this suite. @ 10/14/25 02:28:15.103
â€¢ [4.172 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 10/14/25 02:28:15.112
  I1014 02:28:15.112369 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename disruption @ 10/14/25 02:28:15.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:15.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:15.151
  STEP: creating the pdb @ 10/14/25 02:28:15.163
  STEP: Waiting for the pdb to be processed @ 10/14/25 02:28:15.171
  STEP: updating the pdb @ 10/14/25 02:28:17.178
  STEP: Waiting for the pdb to be processed @ 10/14/25 02:28:17.21
  STEP: patching the pdb @ 10/14/25 02:28:17.22
  STEP: Waiting for the pdb to be processed @ 10/14/25 02:28:17.238
  STEP: Waiting for the pdb to be deleted @ 10/14/25 02:28:17.26
  I1014 02:28:17.269318 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5716" for this suite. @ 10/14/25 02:28:17.293
â€¢ [2.194 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1068
  STEP: Creating a kubernetes client @ 10/14/25 02:28:17.307
  I1014 02:28:17.307289 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:28:17.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:17.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:17.348
  STEP: Creating a job @ 10/14/25 02:28:17.36
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/14/25 02:28:17.367
  STEP: patching /status @ 10/14/25 02:28:19.378
  STEP: updating /status @ 10/14/25 02:28:19.385
  STEP: get /status @ 10/14/25 02:28:19.394
  I1014 02:28:19.398685 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1638" for this suite. @ 10/14/25 02:28:19.414
â€¢ [2.129 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1794
  STEP: Creating a kubernetes client @ 10/14/25 02:28:19.437
  I1014 02:28:19.438181 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:28:19.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:19.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:19.483
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/25 02:28:19.494
  I1014 02:28:19.494877 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-865 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1014 02:28:19.601114 21 builder.go:146] stderr: ""
  I1014 02:28:19.601160 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/14/25 02:28:19.601
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/14/25 02:28:24.652
  I1014 02:28:24.652559 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-865 get pod e2e-test-httpd-pod -o json'
  I1014 02:28:24.875885 21 builder.go:146] stderr: ""
  I1014 02:28:24.876044 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-10-14T02:28:19Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-865\",\n        \"resourceVersion\": \"3794\",\n        \"uid\": \"42d32a77-2b4a-472e-bfdd-abf23c0e29f9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-76tdp\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-76tdp\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-14T02:28:20Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-14T02:28:19Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-14T02:28:20Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-14T02:28:20Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-10-14T02:28:19Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://3c07153a640084c0dfef79d26561ee58ea87190b006c89bb833cfc59ae2db979\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-10-14T02:28:20Z\"\n                    }\n                },\n                \"user\": {\n                    \"linux\": {\n                        \"gid\": 0,\n                        \"supplementalGroups\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            10,\n                            11,\n                            20,\n                            26,\n                            27\n                        ],\n                        \"uid\": 0\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-76tdp\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.1.11\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.1.11\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.0.28\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.0.28\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-10-14T02:28:19Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/14/25 02:28:24.876
  I1014 02:28:24.876149 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-865 replace -f -'
  I1014 02:28:25.123816 21 builder.go:146] stderr: ""
  I1014 02:28:25.123862 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 10/14/25 02:28:25.123
  I1014 02:28:25.130987 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-865 delete pods e2e-test-httpd-pod'
  I1014 02:28:27.554027 21 builder.go:146] stderr: ""
  I1014 02:28:27.554073 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1014 02:28:27.554193 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-865" for this suite. @ 10/14/25 02:28:27.559
â€¢ [8.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 10/14/25 02:28:27.568
  I1014 02:28:27.568979 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:28:27.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:27.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:27.592
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:28:27.597
  STEP: Saw pod success @ 10/14/25 02:28:31.626
  I1014 02:28:31.632020 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-658c1e8a-c5b1-4373-9868-4e1bb31eabf9 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:28:31.641
  I1014 02:28:31.659424 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1074" for this suite. @ 10/14/25 02:28:31.664
â€¢ [4.103 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 10/14/25 02:28:31.671
  I1014 02:28:31.671962 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:28:31.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:31.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:31.702
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/14/25 02:28:31.706
  STEP: Saw pod success @ 10/14/25 02:28:35.733
  I1014 02:28:35.736979 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-be46abe9-cb74-439a-bed8-fbfe2b230379 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:28:35.744
  I1014 02:28:35.759854 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6154" for this suite. @ 10/14/25 02:28:35.764
â€¢ [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 10/14/25 02:28:35.771
  I1014 02:28:35.771406 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:28:35.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:35.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:35.8
  STEP: Creating the pod @ 10/14/25 02:28:35.806
  I1014 02:28:38.356103 21 pod_client.go:173] Successfully updated pod "annotationupdatefa8e553c-e636-4833-9b4d-e36efad40e99"
  I1014 02:28:42.384252 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3237" for this suite. @ 10/14/25 02:28:42.389
â€¢ [6.625 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 10/14/25 02:28:42.398
  I1014 02:28:42.399087 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replicaset @ 10/14/25 02:28:42.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:42.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:42.432
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/14/25 02:28:42.438
  STEP: When a replicaset with a matching selector is created @ 10/14/25 02:28:44.469
  STEP: Then the orphan pod is adopted @ 10/14/25 02:28:44.475
  STEP: When the matched label of one of its pods change @ 10/14/25 02:28:45.495
  I1014 02:28:45.502248 21 resource.go:81] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/14/25 02:28:45.521
  I1014 02:28:45.530016 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3177" for this suite. @ 10/14/25 02:28:45.557
â€¢ [3.173 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 10/14/25 02:28:45.572
  I1014 02:28:45.572307 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename events @ 10/14/25 02:28:45.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:45.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:45.595
  STEP: Create set of events @ 10/14/25 02:28:45.6
  I1014 02:28:45.605918 21 core_events.go:198] created test-event-1
  I1014 02:28:45.622004 21 core_events.go:198] created test-event-2
  I1014 02:28:45.628338 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/14/25 02:28:45.628
  STEP: delete collection of events @ 10/14/25 02:28:45.635
  I1014 02:28:45.635822 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/14/25 02:28:45.659
  I1014 02:28:45.659965 21 core_events.go:230] requesting list of events to confirm quantity
  I1014 02:28:45.664951 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9822" for this suite. @ 10/14/25 02:28:45.669
â€¢ [0.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 10/14/25 02:28:45.677
  I1014 02:28:45.677092 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:28:45.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:45.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:45.705
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:28:45.71
  STEP: Saw pod success @ 10/14/25 02:28:49.739
  I1014 02:28:49.743179 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod downwardapi-volume-03ef6500-2a03-4958-a930-18a241573527 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:28:49.76
  I1014 02:28:49.780776 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-499" for this suite. @ 10/14/25 02:28:49.787
â€¢ [4.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/14/25 02:28:49.795
  I1014 02:28:49.795951 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename subpath @ 10/14/25 02:28:49.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:28:49.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:28:49.82
  STEP: Setting up data @ 10/14/25 02:28:49.823
  STEP: Creating pod pod-subpath-test-secret-klxc @ 10/14/25 02:28:49.833
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/25 02:28:49.833
  STEP: Saw pod success @ 10/14/25 02:29:11.909
  I1014 02:29:11.913453 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-subpath-test-secret-klxc container test-container-subpath-secret-klxc: <nil>
  STEP: delete the pod @ 10/14/25 02:29:11.922
  STEP: Deleting pod pod-subpath-test-secret-klxc @ 10/14/25 02:29:11.936
  I1014 02:29:11.937116 21 delete.go:62] Deleting pod "pod-subpath-test-secret-klxc" in namespace "subpath-6089"
  I1014 02:29:11.940764 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6089" for this suite. @ 10/14/25 02:29:11.944
â€¢ [22.156 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 10/14/25 02:29:11.952
  I1014 02:29:11.952689 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename volumeattachment @ 10/14/25 02:29:11.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:11.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:11.984
  STEP: Create VolumeAttachment "va-e2e-4r8jh" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 02:29:12.045
  STEP: Get VolumeAttachment "va-e2e-4r8jh" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 02:29:12.054
  STEP: Patch VolumeAttachment "va-e2e-4r8jh" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 02:29:12.06
  STEP: List VolumeAttachments with "va-e2e-4r8jh=patched" label @ 10/14/25 02:29:12.067
  STEP: Delete VolumeAttachment "va-e2e-4r8jh" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 02:29:12.072
  STEP: Confirm deletion of VolumeAttachment "va-e2e-4r8jh" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 02:29:12.078
  STEP: Create VolumeAttachment "va-e2e-bf5zm" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm" @ 10/14/25 02:29:12.145
  STEP: Update the VolumeAttachment "va-e2e-bf5zm" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm" with label "va-e2e=updated" @ 10/14/25 02:29:12.15
  STEP: Create VolumeAttachment "va-e2e-cw56d" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm" @ 10/14/25 02:29:12.246
  STEP: Update the VolumeAttachment "va-e2e-cw56d" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm" with label "va-e2e=updated" @ 10/14/25 02:29:12.251
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/14/25 02:29:12.26
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/14/25 02:29:12.273
  I1014 02:29:12.302238 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6813" for this suite. @ 10/14/25 02:29:12.346
â€¢ [0.401 seconds]
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 10/14/25 02:29:12.354
  I1014 02:29:12.355065 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename fake-node @ 10/14/25 02:29:12.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:12.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:12.38
  STEP: Create "e2e-fake-node-lv4mj" @ 10/14/25 02:29:12.385
  STEP: Getting "e2e-fake-node-lv4mj" @ 10/14/25 02:29:12.391
  STEP: Patching "e2e-fake-node-lv4mj" @ 10/14/25 02:29:12.419
  STEP: Listing nodes with LabelSelector "e2e-fake-node-lv4mj=patched" @ 10/14/25 02:29:12.445
  STEP: Updating "e2e-fake-node-lv4mj" @ 10/14/25 02:29:12.478
  STEP: Delete "e2e-fake-node-lv4mj" @ 10/14/25 02:29:12.486
  STEP: Confirm deletion of "e2e-fake-node-lv4mj" @ 10/14/25 02:29:12.493
  I1014 02:29:17.514283 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-3236" for this suite. @ 10/14/25 02:29:17.523
â€¢ [5.179 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/14/25 02:29:17.535
  I1014 02:29:17.535926 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:29:17.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:17.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:17.564
  STEP: Creating projection with secret that has name projected-secret-test-map-56f30ce4-d0e2-423d-b4be-12f9dab1574f @ 10/14/25 02:29:17.569
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:29:17.573
  STEP: Saw pod success @ 10/14/25 02:29:21.614
  I1014 02:29:21.619542 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-secrets-38f2a757-bd5b-487a-aad5-a3df8d9a3fca container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:29:21.628
  I1014 02:29:21.649164 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6873" for this suite. @ 10/14/25 02:29:21.657
â€¢ [4.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:335
  STEP: Creating a kubernetes client @ 10/14/25 02:29:21.672
  I1014 02:29:21.672259 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 02:29:21.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:21.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:21.7
  STEP: Counting existing ResourceQuota @ 10/14/25 02:29:38.709
  STEP: Creating a ResourceQuota @ 10/14/25 02:29:43.717
  STEP: Ensuring resource quota status is calculated @ 10/14/25 02:29:43.724
  STEP: Creating a ConfigMap @ 10/14/25 02:29:45.731
  STEP: Ensuring resource quota status captures configMap creation @ 10/14/25 02:29:45.743
  STEP: Deleting a ConfigMap @ 10/14/25 02:29:47.748
  STEP: Ensuring resource quota status released usage @ 10/14/25 02:29:47.758
  I1014 02:29:49.769155 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4469" for this suite. @ 10/14/25 02:29:49.773
â€¢ [28.108 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 10/14/25 02:29:49.781
  I1014 02:29:49.781355 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-runtime @ 10/14/25 02:29:49.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:49.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:49.812
  STEP: create the container @ 10/14/25 02:29:49.817
  I1014 02:29:49.824273      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 10/14/25 02:29:49.824
  STEP: get the container status @ 10/14/25 02:29:52.862
  STEP: the container should be terminated @ 10/14/25 02:29:52.865
  STEP: the termination message should be set @ 10/14/25 02:29:52.866
  I1014 02:29:52.866414 21 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/14/25 02:29:52.866
  I1014 02:29:52.885879 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5837" for this suite. @ 10/14/25 02:29:52.89
â€¢ [3.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 10/14/25 02:29:52.898
  I1014 02:29:52.898214 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/25 02:29:52.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:52.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:52.923
  STEP: fetching the /apis discovery document @ 10/14/25 02:29:52.928
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/14/25 02:29:52.931
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/14/25 02:29:52.931
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/14/25 02:29:52.931
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/14/25 02:29:52.935
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/14/25 02:29:52.936
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/14/25 02:29:52.938
  I1014 02:29:52.938783 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4828" for this suite. @ 10/14/25 02:29:52.991
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/14/25 02:29:52.999
  I1014 02:29:52.999495 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:29:53
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:53.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:53.02
  STEP: creating the pod @ 10/14/25 02:29:53.028
  STEP: submitting the pod to kubernetes @ 10/14/25 02:29:53.028
  I1014 02:29:53.065947      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: verifying the pod is in kubernetes @ 10/14/25 02:29:55.091
  STEP: updating the pod @ 10/14/25 02:29:55.096
  I1014 02:29:55.612275 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-371be646-e07d-46ab-8217-efa75a867bc9"
  I1014 02:29:59.626707 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5491" for this suite. @ 10/14/25 02:29:59.632
â€¢ [6.642 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/14/25 02:29:59.643
  I1014 02:29:59.643554 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename proxy @ 10/14/25 02:29:59.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:29:59.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:29:59.669
  STEP: starting an echo server on multiple ports @ 10/14/25 02:29:59.687
  I1014 02:29:59.725652 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1014 02:30:01.730736 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 2, 29, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 29, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 29, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 29, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"proxy-service-4mhc2-7fd6cc7cbc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1014 02:30:03.755915      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:30:03.756451 21 proxy.go:273] setup took 4.081657464s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/14/25 02:30:03.756
  I1014 02:30:03.865550 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 105.358086ms)
  I1014 02:30:03.865854 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 105.132588ms)
  I1014 02:30:03.868993 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 108.196286ms)
  I1014 02:30:03.869327 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 108.974311ms)
  I1014 02:30:03.869499 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 109.236001ms)
  I1014 02:30:03.872425 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 112.724894ms)
  I1014 02:30:03.872747 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 112.84288ms)
  I1014 02:30:03.877334 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 117.339753ms)
  I1014 02:30:03.877687 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 117.258038ms)
  I1014 02:30:03.878047 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 117.471357ms)
  I1014 02:30:03.878457 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 118.363463ms)
  I1014 02:30:03.878720 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 119.195104ms)
  I1014 02:30:03.883770 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 123.249068ms)
  I1014 02:30:03.884061 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 123.407ms)
  I1014 02:30:03.884089 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 127.041974ms)
  I1014 02:30:03.884126 21 proxy.go:601] (0) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 124.327464ms)
  I1014 02:30:03.922114 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 37.141056ms)
  I1014 02:30:03.922759 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 37.516174ms)
  I1014 02:30:03.927655 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 41.411257ms)
  I1014 02:30:03.927977 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 41.827583ms)
  I1014 02:30:03.928003 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 41.182127ms)
  I1014 02:30:03.928022 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 41.127106ms)
  I1014 02:30:03.928038 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 42.720679ms)
  I1014 02:30:03.929456 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 44.000018ms)
  I1014 02:30:03.929851 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 43.469653ms)
  I1014 02:30:03.929875 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 43.137101ms)
  I1014 02:30:03.933727 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 48.575852ms)
  I1014 02:30:03.934082 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 48.06207ms)
  I1014 02:30:03.934117 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 47.460668ms)
  I1014 02:30:03.934887 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 48.328224ms)
  I1014 02:30:03.934928 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 48.454528ms)
  I1014 02:30:03.934946 21 proxy.go:601] (1) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 49.355709ms)
  I1014 02:30:03.970586 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 35.378399ms)
  I1014 02:30:03.971200 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 36.092624ms)
  I1014 02:30:03.971614 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 35.666345ms)
  I1014 02:30:03.972380 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 36.405856ms)
  I1014 02:30:03.972636 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 37.005946ms)
  I1014 02:30:03.972663 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 37.103946ms)
  I1014 02:30:03.972697 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 37.417733ms)
  I1014 02:30:03.972797 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 37.103139ms)
  I1014 02:30:03.972818 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 37.839559ms)
  I1014 02:30:03.972832 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 36.793269ms)
  I1014 02:30:03.975112 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 38.896521ms)
  I1014 02:30:03.976025 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 40.197505ms)
  I1014 02:30:03.978229 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 42.07164ms)
  I1014 02:30:03.979051 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 42.951422ms)
  I1014 02:30:03.979098 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 43.338245ms)
  I1014 02:30:03.979117 21 proxy.go:601] (2) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 43.673255ms)
  I1014 02:30:04.011973 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 31.468809ms)
  I1014 02:30:04.014051 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 32.549884ms)
  I1014 02:30:04.014702 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 33.091825ms)
  I1014 02:30:04.015488 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 34.562675ms)
  I1014 02:30:04.015542 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 34.122469ms)
  I1014 02:30:04.015564 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 34.724125ms)
  I1014 02:30:04.015757 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 34.754735ms)
  I1014 02:30:04.015774 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 34.434969ms)
  I1014 02:30:04.018390 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 37.987618ms)
  I1014 02:30:04.018439 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 37.861437ms)
  I1014 02:30:04.021418 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 40.153058ms)
  I1014 02:30:04.021668 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 40.566932ms)
  I1014 02:30:04.021710 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 40.526654ms)
  I1014 02:30:04.021726 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 41.506486ms)
  I1014 02:30:04.021741 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 41.080026ms)
  I1014 02:30:04.021755 21 proxy.go:601] (3) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 41.013839ms)
  I1014 02:30:04.053409 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 29.999813ms)
  I1014 02:30:04.059881 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 35.300594ms)
  I1014 02:30:04.059934 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 33.839281ms)
  I1014 02:30:04.059960 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 35.253107ms)
  I1014 02:30:04.059984 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 34.812848ms)
  I1014 02:30:04.060004 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 34.688093ms)
  I1014 02:30:04.060026 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 35.165701ms)
  I1014 02:30:04.060054 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 34.570233ms)
  I1014 02:30:04.060076 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 34.115853ms)
  I1014 02:30:04.060092 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 35.66948ms)
  I1014 02:30:04.064645 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 38.82218ms)
  I1014 02:30:04.064685 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 40.50206ms)
  I1014 02:30:04.065568 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 41.602649ms)
  I1014 02:30:04.066060 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 41.043872ms)
  I1014 02:30:04.066246 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 42.623321ms)
  I1014 02:30:04.066404 21 proxy.go:601] (4) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 40.737996ms)
  I1014 02:30:04.095100 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 28.529113ms)
  I1014 02:30:04.100176 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 33.056111ms)
  I1014 02:30:04.100527 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 32.704406ms)
  I1014 02:30:04.100555 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 32.620494ms)
  I1014 02:30:04.100590 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 32.523835ms)
  I1014 02:30:04.100608 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 32.363726ms)
  I1014 02:30:04.100624 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 33.58924ms)
  I1014 02:30:04.100643 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 33.451469ms)
  I1014 02:30:04.100674 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 33.90693ms)
  I1014 02:30:04.100712 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 32.977285ms)
  I1014 02:30:04.104804 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 37.846239ms)
  I1014 02:30:04.105060 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 37.790439ms)
  I1014 02:30:04.105104 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 37.678567ms)
  I1014 02:30:04.106012 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 38.662ms)
  I1014 02:30:04.106030 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 39.162397ms)
  I1014 02:30:04.106050 21 proxy.go:601] (5) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 37.900508ms)
  I1014 02:30:04.143646 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 35.430865ms)
  I1014 02:30:04.144283 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 36.347219ms)
  I1014 02:30:04.144810 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 36.315085ms)
  I1014 02:30:04.145188 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 37.059306ms)
  I1014 02:30:04.145471 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 36.899066ms)
  I1014 02:30:04.145699 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 37.849237ms)
  I1014 02:30:04.145761 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 38.001455ms)
  I1014 02:30:04.145779 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 37.512884ms)
  I1014 02:30:04.145818 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 37.156884ms)
  I1014 02:30:04.145832 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 38.239111ms)
  I1014 02:30:04.148529 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 40.108434ms)
  I1014 02:30:04.151124 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 42.238502ms)
  I1014 02:30:04.152231 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 44.213106ms)
  I1014 02:30:04.152726 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 43.920932ms)
  I1014 02:30:04.153243 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 44.898151ms)
  I1014 02:30:04.153288 21 proxy.go:601] (6) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 44.549578ms)
  I1014 02:30:04.193679 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 39.426533ms)
  I1014 02:30:04.195865 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 40.651708ms)
  I1014 02:30:04.195907 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 40.774302ms)
  I1014 02:30:04.195932 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 40.952986ms)
  I1014 02:30:04.196288 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 40.999251ms)
  I1014 02:30:04.198664 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 43.847759ms)
  I1014 02:30:04.198701 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 43.805938ms)
  I1014 02:30:04.198724 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 44.679732ms)
  I1014 02:30:04.199508 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 44.815874ms)
  I1014 02:30:04.199537 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 45.195308ms)
  I1014 02:30:04.201110 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 46.683267ms)
  I1014 02:30:04.202939 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 48.353893ms)
  I1014 02:30:04.203392 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 48.333308ms)
  I1014 02:30:04.203508 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 48.145481ms)
  I1014 02:30:04.203543 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 48.107679ms)
  I1014 02:30:04.204353 21 proxy.go:601] (7) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 49.846397ms)
  I1014 02:30:04.246430 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 41.397129ms)
  I1014 02:30:04.248105 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 41.533227ms)
  I1014 02:30:04.248161 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 41.417728ms)
  I1014 02:30:04.248191 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 41.383801ms)
  I1014 02:30:04.248213 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 42.842391ms)
  I1014 02:30:04.248232 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 42.780324ms)
  I1014 02:30:04.249197 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 42.788777ms)
  I1014 02:30:04.249231 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 42.751667ms)
  I1014 02:30:04.249253 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 43.695051ms)
  I1014 02:30:04.249288 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 42.973656ms)
  I1014 02:30:04.250571 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 43.919111ms)
  I1014 02:30:04.250892 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 45.251759ms)
  I1014 02:30:04.251357 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 46.157606ms)
  I1014 02:30:04.251757 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 45.653928ms)
  I1014 02:30:04.252215 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 45.985838ms)
  I1014 02:30:04.252364 21 proxy.go:601] (8) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 47.073873ms)
  I1014 02:30:04.286907 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 34.013607ms)
  I1014 02:30:04.301521 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 48.219882ms)
  I1014 02:30:04.301573 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 47.452921ms)
  I1014 02:30:04.301595 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 48.00344ms)
  I1014 02:30:04.301652 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 47.618663ms)
  I1014 02:30:04.301704 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 48.282535ms)
  I1014 02:30:04.302303 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 48.120371ms)
  I1014 02:30:04.302337 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 48.664889ms)
  I1014 02:30:04.302359 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 48.611556ms)
  I1014 02:30:04.302379 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 47.875608ms)
  I1014 02:30:04.309996 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 55.546377ms)
  I1014 02:30:04.310442 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 56.483798ms)
  I1014 02:30:04.315952 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 62.062407ms)
  I1014 02:30:04.316410 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 62.146566ms)
  I1014 02:30:04.316759 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 63.250752ms)
  I1014 02:30:04.317122 21 proxy.go:601] (9) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 62.781753ms)
  I1014 02:30:04.358452 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 40.280722ms)
  I1014 02:30:04.358836 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 41.356796ms)
  I1014 02:30:04.359606 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 41.518326ms)
  I1014 02:30:04.360509 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 42.103702ms)
  I1014 02:30:04.360902 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 42.095302ms)
  I1014 02:30:04.361338 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 43.00989ms)
  I1014 02:30:04.361620 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 42.634686ms)
  I1014 02:30:04.362046 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 44.038275ms)
  I1014 02:30:04.362447 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 44.520349ms)
  I1014 02:30:04.362470 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 43.987745ms)
  I1014 02:30:04.367609 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 49.026496ms)
  I1014 02:30:04.367975 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 49.726324ms)
  I1014 02:30:04.368536 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 50.884912ms)
  I1014 02:30:04.368828 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 50.983322ms)
  I1014 02:30:04.369107 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 51.363007ms)
  I1014 02:30:04.369359 21 proxy.go:601] (10) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 50.641008ms)
  I1014 02:30:04.420715 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 50.766281ms)
  I1014 02:30:04.421055 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 51.02939ms)
  I1014 02:30:04.421098 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 50.193381ms)
  I1014 02:30:04.421244 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 50.640701ms)
  I1014 02:30:04.421279 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 50.751679ms)
  I1014 02:30:04.421295 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 50.613389ms)
  I1014 02:30:04.421311 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 50.480256ms)
  I1014 02:30:04.421453 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 50.4723ms)
  I1014 02:30:04.423664 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 53.557008ms)
  I1014 02:30:04.423929 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 53.483832ms)
  I1014 02:30:04.429061 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 58.694419ms)
  I1014 02:30:04.429521 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 59.683855ms)
  I1014 02:30:04.430131 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 59.845027ms)
  I1014 02:30:04.430300 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 60.688431ms)
  I1014 02:30:04.430318 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 60.119083ms)
  I1014 02:30:04.430332 21 proxy.go:601] (11) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 59.577083ms)
  I1014 02:30:04.479083 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 46.561728ms)
  I1014 02:30:04.479133 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 46.775185ms)
  I1014 02:30:04.479158 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 46.879754ms)
  I1014 02:30:04.479179 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 47.00976ms)
  I1014 02:30:04.486956 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 53.947263ms)
  I1014 02:30:04.487779 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 54.660026ms)
  I1014 02:30:04.488224 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 55.285485ms)
  I1014 02:30:04.488482 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 56.392497ms)
  I1014 02:30:04.488791 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 56.817535ms)
  I1014 02:30:04.489190 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 56.514804ms)
  I1014 02:30:04.491881 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 59.284949ms)
  I1014 02:30:04.492311 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 59.869926ms)
  I1014 02:30:04.492625 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 59.466212ms)
  I1014 02:30:04.493830 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 60.997863ms)
  I1014 02:30:04.494311 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 62.568742ms)
  I1014 02:30:04.499454 21 proxy.go:601] (12) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 66.696158ms)
  I1014 02:30:04.553963 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 53.294426ms)
  I1014 02:30:04.554598 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 54.092332ms)
  I1014 02:30:04.554916 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 54.490492ms)
  I1014 02:30:04.555255 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 54.672508ms)
  I1014 02:30:04.555425 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 54.609642ms)
  I1014 02:30:04.555446 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 54.708403ms)
  I1014 02:30:04.555490 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 55.488631ms)
  I1014 02:30:04.555626 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 54.73247ms)
  I1014 02:30:04.555640 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 55.294278ms)
  I1014 02:30:04.557408 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 56.265751ms)
  I1014 02:30:04.557773 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 57.474042ms)
  I1014 02:30:04.559873 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 58.81663ms)
  I1014 02:30:04.560372 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 60.249717ms)
  I1014 02:30:04.561211 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 61.515946ms)
  I1014 02:30:04.561587 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 60.367738ms)
  I1014 02:30:04.561610 21 proxy.go:601] (13) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 61.421576ms)
  I1014 02:30:04.602864 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 40.14309ms)
  I1014 02:30:04.603466 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 40.656323ms)
  I1014 02:30:04.603732 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 40.859192ms)
  I1014 02:30:04.603895 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 40.850194ms)
  I1014 02:30:04.603938 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 40.818842ms)
  I1014 02:30:04.603959 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 40.53784ms)
  I1014 02:30:04.603976 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 40.477438ms)
  I1014 02:30:04.604006 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 40.433781ms)
  I1014 02:30:04.604021 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 41.397353ms)
  I1014 02:30:04.607994 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 44.338824ms)
  I1014 02:30:04.608522 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 45.177636ms)
  I1014 02:30:04.608922 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 46.395268ms)
  I1014 02:30:04.611236 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 48.910599ms)
  I1014 02:30:04.611991 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 49.019681ms)
  I1014 02:30:04.612392 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 49.125341ms)
  I1014 02:30:04.612841 21 proxy.go:601] (14) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 49.643362ms)
  I1014 02:30:04.656603 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 42.997142ms)
  I1014 02:30:04.656653 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 42.420602ms)
  I1014 02:30:04.657096 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 43.414732ms)
  I1014 02:30:04.657124 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 43.109531ms)
  I1014 02:30:04.659188 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 45.670875ms)
  I1014 02:30:04.659579 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 45.503366ms)
  I1014 02:30:04.661638 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 48.458879ms)
  I1014 02:30:04.669692 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 55.533224ms)
  I1014 02:30:04.670098 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 55.67858ms)
  I1014 02:30:04.670154 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 56.304621ms)
  I1014 02:30:04.670170 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 55.833844ms)
  I1014 02:30:04.671733 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 57.794912ms)
  I1014 02:30:04.672641 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 59.298015ms)
  I1014 02:30:04.676052 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 61.572833ms)
  I1014 02:30:04.677199 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 63.459133ms)
  I1014 02:30:04.679210 21 proxy.go:601] (15) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 65.772858ms)
  I1014 02:30:04.727027 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 47.253029ms)
  I1014 02:30:04.727746 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 47.885059ms)
  I1014 02:30:04.730506 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 49.627133ms)
  I1014 02:30:04.731128 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 50.397442ms)
  I1014 02:30:04.731502 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 51.297977ms)
  I1014 02:30:04.731813 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 51.009033ms)
  I1014 02:30:04.732157 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 51.796796ms)
  I1014 02:30:04.732446 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 51.777268ms)
  I1014 02:30:04.732586 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 52.642317ms)
  I1014 02:30:04.735491 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 55.210205ms)
  I1014 02:30:04.744122 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 63.682307ms)
  I1014 02:30:04.744749 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 64.720537ms)
  I1014 02:30:04.744801 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 64.215593ms)
  I1014 02:30:04.744831 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 64.707775ms)
  I1014 02:30:04.746752 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 66.220792ms)
  I1014 02:30:04.748152 21 proxy.go:601] (16) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 68.560018ms)
  I1014 02:30:04.806134 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 56.159351ms)
  I1014 02:30:04.806307 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 55.417858ms)
  I1014 02:30:04.806447 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 56.159931ms)
  I1014 02:30:04.806534 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 55.862749ms)
  I1014 02:30:04.806664 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 56.542199ms)
  I1014 02:30:04.806754 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 56.390061ms)
  I1014 02:30:04.806920 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 56.478348ms)
  I1014 02:30:04.807006 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 56.960656ms)
  I1014 02:30:04.807090 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 57.200372ms)
  I1014 02:30:04.807174 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 57.782548ms)
  I1014 02:30:04.814269 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 63.669233ms)
  I1014 02:30:04.814399 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 64.627131ms)
  I1014 02:30:04.817131 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 67.441394ms)
  I1014 02:30:04.817270 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 67.069097ms)
  I1014 02:30:04.817445 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 66.929176ms)
  I1014 02:30:04.817589 21 proxy.go:601] (17) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 67.992686ms)
  I1014 02:30:04.859016 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 40.778023ms)
  I1014 02:30:04.859627 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 41.022555ms)
  I1014 02:30:04.859953 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 42.069201ms)
  I1014 02:30:04.860206 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 42.228408ms)
  I1014 02:30:04.860459 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 42.401811ms)
  I1014 02:30:04.860774 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 42.391981ms)
  I1014 02:30:04.861033 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 43.349006ms)
  I1014 02:30:04.864406 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 46.116616ms)
  I1014 02:30:04.869703 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 46.320795ms)
  I1014 02:30:04.869904 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 46.700837ms)
  I1014 02:30:04.873159 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 49.67816ms)
  I1014 02:30:04.873194 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 55.061106ms)
  I1014 02:30:04.873215 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 54.772557ms)
  I1014 02:30:04.873587 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 55.06306ms)
  I1014 02:30:04.873615 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 49.973899ms)
  I1014 02:30:04.879410 21 proxy.go:601] (18) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 55.84557ms)
  I1014 02:30:04.936660 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 57.189129ms)
  I1014 02:30:04.936999 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/... (200; 56.589561ms)
  I1014 02:30:04.937026 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7/proxy/rewriteme"... (200; 57.362284ms)
  I1014 02:30:04.937060 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 57.334914ms)
  I1014 02:30:04.937078 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:160/proxy/: foo (200; 56.61646ms)
  I1014 02:30:04.937133 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/proxy-service-4mhc2-7fd6cc7cbc-fl8t7:1080/proxy/rewri... (200; 57.149501ms)
  I1014 02:30:04.937150 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/http:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:162/proxy/: bar (200; 57.108513ms)
  I1014 02:30:04.939031 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:460/proxy/: tls baz (200; 58.921051ms)
  I1014 02:30:04.939068 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:462/proxy/: tls qux (200; 59.270164ms)
  I1014 02:30:04.939100 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/: <a href="/api/v1/namespaces/proxy-9129/pods/https:proxy-service-4mhc2-7fd6cc7cbc-fl8t7:443/proxy/... (200; 58.750903ms)
  I1014 02:30:04.947424 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname1/proxy/: tls baz (200; 67.492127ms)
  I1014 02:30:04.947903 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/services/https:proxy-service-4mhc2:tlsportname2/proxy/: tls qux (200; 67.616193ms)
  I1014 02:30:04.951492 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname2/proxy/: bar (200; 71.892248ms)
  I1014 02:30:04.962579 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname2/proxy/: bar (200; 82.34538ms)
  I1014 02:30:04.963162 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/services/proxy-service-4mhc2:portname1/proxy/: foo (200; 83.278661ms)
  I1014 02:30:04.963469 21 proxy.go:601] (19) /api/v1/namespaces/proxy-9129/services/http:proxy-service-4mhc2:portname1/proxy/: foo (200; 83.301452ms)
  I1014 02:30:04.976133 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9129" for this suite. @ 10/14/25 02:30:04.991
â€¢ [5.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 10/14/25 02:30:05.009
  I1014 02:30:05.009322 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename apf @ 10/14/25 02:30:05.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:30:05.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:30:05.058
  STEP: getting /apis @ 10/14/25 02:30:05.066
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/14/25 02:30:05.07
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/14/25 02:30:05.074
  STEP: creating @ 10/14/25 02:30:05.075
  STEP: getting @ 10/14/25 02:30:05.088
  STEP: listing @ 10/14/25 02:30:05.091
  STEP: watching @ 10/14/25 02:30:05.095
  I1014 02:30:05.095377 21 flowcontrol.go:620] starting watch
  STEP: patching @ 10/14/25 02:30:05.097
  STEP: updating @ 10/14/25 02:30:05.106
  I1014 02:30:05.118243 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 10/14/25 02:30:05.118
  STEP: patching /status @ 10/14/25 02:30:05.123
  STEP: updating /status @ 10/14/25 02:30:05.128
  STEP: deleting @ 10/14/25 02:30:05.137
  STEP: deleting a collection @ 10/14/25 02:30:05.148
  I1014 02:30:05.167330 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2616" for this suite. @ 10/14/25 02:30:05.17
â€¢ [0.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 10/14/25 02:30:05.178
  I1014 02:30:05.178780 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename containers @ 10/14/25 02:30:05.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:30:05.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:30:05.201
  STEP: Creating a pod to test override all @ 10/14/25 02:30:05.205
  STEP: Saw pod success @ 10/14/25 02:30:09.239
  I1014 02:30:09.243832 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod client-containers-719b1c0e-739c-4c97-8201-82b7c12315c5 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 02:30:09.252
  I1014 02:30:09.289152 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9991" for this suite. @ 10/14/25 02:30:09.295
â€¢ [4.123 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 10/14/25 02:30:09.302
  I1014 02:30:09.302271 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 02:30:09.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:30:09.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:30:09.331
  STEP: Creating pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689 @ 10/14/25 02:30:09.34
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 02:30:11.369
  I1014 02:30:11.374242 21 container_probe.go:1748] Initial restart count of pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a is 0
  I1014 02:30:11.382254 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:13.387242 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:15.414477 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:17.420085 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:19.425188 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:21.432085 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:23.438080 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:25.444208 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:27.449434 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:29.455483 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:31.464529 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:33.471527 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:35.483350 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:37.489307 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:39.497001 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:41.504892 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:43.509969 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:45.514619 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:47.520052 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:49.526544 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:51.532242 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:53.538250 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:55.544137 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:57.553449 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:30:59.558777 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:01.565482 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:03.570775 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:05.575468 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:07.581535 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:09.588932 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:11.594889 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:13.601374 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:15.606859 21 container_probe.go:1758] Get pod test-grpc-59afa2e0-c789-499c-aab1-35830904392a in namespace container-probe-3689
  I1014 02:31:15.606997 21 container_probe.go:1762] Restart count of pod container-probe-3689/test-grpc-59afa2e0-c789-499c-aab1-35830904392a is now 1 (1m4.232368135s elapsed)
  STEP: deleting the pod @ 10/14/25 02:31:15.607
  I1014 02:31:15.631332 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3689" for this suite. @ 10/14/25 02:31:15.691
â€¢ [66.414 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 10/14/25 02:31:15.716
  I1014 02:31:15.716868 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 02:31:15.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:15.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:15.756
  I1014 02:31:15.802401 21 service_accounts.go:281] created pod pod-service-account-defaultsa
  I1014 02:31:15.802562 21 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I1014 02:31:15.812883 21 service_accounts.go:281] created pod pod-service-account-mountsa
  I1014 02:31:15.813029 21 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I1014 02:31:15.826379 21 service_accounts.go:281] created pod pod-service-account-nomountsa
  I1014 02:31:15.826837 21 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I1014 02:31:15.842490 21 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I1014 02:31:15.842531 21 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1014 02:31:15.860213 21 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I1014 02:31:15.860256 21 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1014 02:31:15.885230 21 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I1014 02:31:15.885269 21 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1014 02:31:15.905488 21 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I1014 02:31:15.905666 21 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1014 02:31:15.925168 21 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I1014 02:31:15.925323 21 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1014 02:31:15.947777 21 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I1014 02:31:15.947916 21 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1014 02:31:15.948120 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4406" for this suite. @ 10/14/25 02:31:15.979
â€¢ [0.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 10/14/25 02:31:16.002
  I1014 02:31:16.002233 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:31:16.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:16.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:16.037
  STEP: Creating Pod @ 10/14/25 02:31:16.047
  STEP: Reading file content from the nginx-container @ 10/14/25 02:31:18.07
  I1014 02:31:18.070887 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3599 PodName:pod-sharedvolume-56f739b8-b158-4d05-95db-33297b0e030b ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:31:18.070942 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:31:18.071045 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/emptydir-3599/pods/pod-sharedvolume-56f739b8-b158-4d05-95db-33297b0e030b/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I1014 02:31:18.141665 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 02:31:18.142739 21 exec_util.go:112] Exec stderr: ""
  I1014 02:31:18.143656 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3599" for this suite. @ 10/14/25 02:31:18.15
â€¢ [2.155 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 10/14/25 02:31:18.16
  I1014 02:31:18.160368 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:31:18.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:18.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:18.184
  STEP: creating a Pod with a static label @ 10/14/25 02:31:18.194
  STEP: watching for Pod to be ready @ 10/14/25 02:31:18.203
  I1014 02:31:18.208890 21 pods.go:947] observed Pod pod-test in namespace pods-2994 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1014 02:31:18.209297 21 pods.go:947] observed Pod pod-test in namespace pods-2994 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC  }]
  I1014 02:31:18.294351 21 pods.go:947] observed Pod pod-test in namespace pods-2994 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC  }]
  I1014 02:31:20.032663 21 pods.go:950] Found Pod pod-test in namespace pods-2994 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:20 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC  } {Ready 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:20 +0000 UTC  } {ContainersReady 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:20 +0000 UTC  } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:31:18 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/14/25 02:31:20.038
  STEP: getting the Pod and ensuring that it's patched @ 10/14/25 02:31:20.049
  STEP: replacing the Pod's status Ready condition to False @ 10/14/25 02:31:20.053
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/14/25 02:31:20.072
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/14/25 02:31:20.072
  STEP: watching for the Pod to be deleted @ 10/14/25 02:31:20.078
  I1014 02:31:20.081177 21 pods.go:1060] observed event type MODIFIED
  I1014 02:31:22.107162 21 pods.go:1060] observed event type MODIFIED
  I1014 02:31:22.411808 21 pods.go:1060] observed event type MODIFIED
  I1014 02:31:23.126495 21 pods.go:1060] observed event type MODIFIED
  I1014 02:31:23.138758 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2994" for this suite. @ 10/14/25 02:31:23.15
â€¢ [5.003 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 10/14/25 02:31:23.163
  I1014 02:31:23.163913 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:31:23.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:23.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:23.214
  STEP: Looking for a node to schedule job pod @ 10/14/25 02:31:23.224
  STEP: Creating a job @ 10/14/25 02:31:23.251
  STEP: Ensuring job fails @ 10/14/25 02:31:23.257
  I1014 02:31:29.280252 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2344" for this suite. @ 10/14/25 02:31:29.284
â€¢ [6.127 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 10/14/25 02:31:29.29
  I1014 02:31:29.290976 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-pred @ 10/14/25 02:31:29.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:29.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:29.319
  I1014 02:31:29.325115 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1014 02:31:29.388069 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I1014 02:31:29.392104 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e before test
  I1014 02:31:29.397464 21 predicates.go:958] civo-ccm-5759fbb5c6-pc5xw from kube-system started at 2025-10-14 02:16:28 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.397496 21 predicates.go:960] 	Container civo-ccm ready: true, restart count 0
  I1014 02:31:29.397510 21 predicates.go:958] civo-csi-controller-0 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (4 container statuses recorded)
  I1014 02:31:29.397520 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 02:31:29.397531 21 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I1014 02:31:29.397539 21 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I1014 02:31:29.397549 21 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I1014 02:31:29.397560 21 predicates.go:958] civo-csi-node-5ndmq from kube-system started at 2025-10-14 02:16:38 +0000 UTC (2 container statuses recorded)
  I1014 02:31:29.397568 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 02:31:29.397577 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 02:31:29.397587 21 predicates.go:958] coredns-64fd4b4794-zj4r6 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.397595 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I1014 02:31:29.397605 21 predicates.go:958] metrics-server-7bfffcd44-r2x5q from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.397613 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I1014 02:31:29.397623 21 predicates.go:958] traefik-dzn5b from kube-system started at 2025-10-14 02:17:12 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.397632 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 02:31:29.397641 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm before test
  I1014 02:31:29.401897 21 predicates.go:958] pod-failure-failjob-4r776 from job-2344 started at 2025-10-14 02:31:23 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.402204 21 predicates.go:960] 	Container c ready: false, restart count 0
  I1014 02:31:29.402436 21 predicates.go:958] pod-failure-failjob-fx5n7 from job-2344 started at 2025-10-14 02:31:23 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.402661 21 predicates.go:960] 	Container c ready: false, restart count 0
  I1014 02:31:29.402880 21 predicates.go:958] civo-csi-node-47bkk from kube-system started at 2025-10-14 02:21:46 +0000 UTC (2 container statuses recorded)
  I1014 02:31:29.403101 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 02:31:29.403319 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 02:31:29.403552 21 predicates.go:958] traefik-5vwd9 from kube-system started at 2025-10-14 02:21:46 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.403772 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 02:31:29.403994 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-14 02:19:42 +0000 UTC (1 container statuses recorded)
  I1014 02:31:29.404213 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1014 02:31:29.404434 21 predicates.go:958] sonobuoy-e2e-job-cda78a766ac8494d from sonobuoy started at 2025-10-14 02:19:48 +0000 UTC (2 container statuses recorded)
  I1014 02:31:29.404654 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1014 02:31:29.404876 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/14/25 02:31:29.405
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.186e3abd62aee660], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 10/14/25 02:31:29.439
  I1014 02:31:30.433374 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-77" for this suite. @ 10/14/25 02:31:30.438
â€¢ [1.154 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:55
  STEP: Creating a kubernetes client @ 10/14/25 02:31:30.447
  I1014 02:31:30.447622 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:31:30.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:30.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:30.469
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/14/25 02:31:30.474
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/14/25 02:31:30.474
  STEP: creating a pod to probe DNS @ 10/14/25 02:31:30.474
  STEP: submitting the pod to kubernetes @ 10/14/25 02:31:30.474
  STEP: retrieving the pod @ 10/14/25 02:31:32.497
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:31:32.5
  I1014 02:31:32.519606 21 dns_common.go:546] DNS probes using dns-6632/dns-test-112d92c9-41d7-4d4f-a549-ae87ae09b4f9 succeeded

  STEP: deleting the pod @ 10/14/25 02:31:32.52
  I1014 02:31:32.537371 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6632" for this suite. @ 10/14/25 02:31:32.541
â€¢ [2.101 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 10/14/25 02:31:32.548
  I1014 02:31:32.549033 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/25 02:31:32.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:31:32.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:31:32.576
  I1014 02:31:32.597289 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1014 02:32:32.603814 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/14/25 02:32:32.607
  STEP: Adding a custom resource @ 10/14/25 02:32:32.607
  I1014 02:32:32.636763 21 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I1014 02:32:32.646050 21 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 10/14/25 02:32:32.646
  I1014 02:32:32.689488 21 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I1014 02:32:32.704492 21 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/14/25 02:32:32.704
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/14/25 02:32:36.748
  STEP: Removing a custom resource @ 10/14/25 02:32:38.847
  STEP: Removing a custom resource @ 10/14/25 02:32:38.861
  I1014 02:32:38.876246 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9963" for this suite. @ 10/14/25 02:32:38.886
â€¢ [66.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/14/25 02:32:38.893
  I1014 02:32:38.893741 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:32:38.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:32:38.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:32:38.927
  STEP: Creating secret with name s-test-opt-del-a9d26f8f-4fb6-4d1f-a08c-a8ab86bde1d3 @ 10/14/25 02:32:38.937
  STEP: Creating secret with name s-test-opt-upd-6a29f826-978d-4a83-8e4c-d2264e209b57 @ 10/14/25 02:32:38.942
  STEP: Creating the pod @ 10/14/25 02:32:38.949
  STEP: Deleting secret s-test-opt-del-a9d26f8f-4fb6-4d1f-a08c-a8ab86bde1d3 @ 10/14/25 02:32:41.014
  STEP: Updating secret s-test-opt-upd-6a29f826-978d-4a83-8e4c-d2264e209b57 @ 10/14/25 02:32:41.022
  STEP: Creating secret with name s-test-opt-create-59d5427c-1da2-4106-9a1b-6481d9c24d8c @ 10/14/25 02:32:41.026
  STEP: waiting to observe update in volume @ 10/14/25 02:32:41.032
  I1014 02:34:11.647536 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3250" for this suite. @ 10/14/25 02:34:11.652
â€¢ [92.765 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 10/14/25 02:34:11.658
  I1014 02:34:11.658517 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:34:11.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:34:11.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:34:11.684
  STEP: Setting up server cert @ 10/14/25 02:34:11.712
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:34:12.339
  STEP: Deploying the webhook pod @ 10/14/25 02:34:12.345
  STEP: Wait for the deployment to be ready @ 10/14/25 02:34:12.357
  I1014 02:34:12.379893 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:34:14.392
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:34:14.405
  I1014 02:34:15.406446 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/14/25 02:34:15.421
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/25 02:34:15.421
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/14/25 02:34:15.453
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/14/25 02:34:16.472
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/25 02:34:16.472
  STEP: Having no error when timeout is longer than webhook latency @ 10/14/25 02:34:17.51
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/25 02:34:17.51
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/14/25 02:34:22.59
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/14/25 02:34:22.59
  I1014 02:34:27.709891 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5130" for this suite. @ 10/14/25 02:34:27.721
  STEP: Destroying namespace "webhook-markers-7587" for this suite. @ 10/14/25 02:34:27.73
â€¢ [16.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 10/14/25 02:34:27.737
  I1014 02:34:27.737602 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-runtime @ 10/14/25 02:34:27.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:34:27.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:34:27.762
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/14/25 02:34:27.775
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/14/25 02:34:44.882
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/14/25 02:34:44.887
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/14/25 02:34:44.895
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 10/14/25 02:34:44.896
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/14/25 02:34:44.926
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/14/25 02:34:46.945
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/14/25 02:34:47.958
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/14/25 02:34:47.965
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 10/14/25 02:34:47.966
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/14/25 02:34:47.99
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/14/25 02:34:49.013
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/14/25 02:34:50.024
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/14/25 02:34:50.038
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 10/14/25 02:34:50.039
  I1014 02:34:50.076811 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6982" for this suite. @ 10/14/25 02:34:50.082
â€¢ [22.350 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:980
  STEP: Creating a kubernetes client @ 10/14/25 02:34:50.088
  I1014 02:34:50.088410 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 02:34:50.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:34:50.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:34:50.112
  STEP: Creating service test in namespace statefulset-1778 @ 10/14/25 02:34:50.117
  I1014 02:34:50.144820 21 wait.go:44] Found 0 stateful pods, waiting for 1
  I1014 02:35:00.137783 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/14/25 02:35:00.145
  I1014 02:35:00.175313 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:35:00.175762 21 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I1014 02:35:10.171932 21 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:35:10.172425 21 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/14/25 02:35:10.179
  STEP: Delete all of the StatefulSets @ 10/14/25 02:35:10.183
  STEP: Verify that StatefulSets have been deleted @ 10/14/25 02:35:10.191
  I1014 02:35:10.198941 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1778
  I1014 02:35:10.255702 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1778" for this suite. @ 10/14/25 02:35:10.264
â€¢ [20.183 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 10/14/25 02:35:10.271
  I1014 02:35:10.271951 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename controllerrevisions @ 10/14/25 02:35:10.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:10.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:10.304
  STEP: Creating DaemonSet "e2e-tt2k8-daemon-set" @ 10/14/25 02:35:10.374
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/25 02:35:10.381
  I1014 02:35:10.516771 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tt2k8-daemon-set: 0
  I1014 02:35:10.516930 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:35:11.400798 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tt2k8-daemon-set: 0
  I1014 02:35:11.401319 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:35:12.390792 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tt2k8-daemon-set: 2
  I1014 02:35:12.391232 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-tt2k8-daemon-set
  STEP: Confirm DaemonSet "e2e-tt2k8-daemon-set" successfully created with "daemonset-name=e2e-tt2k8-daemon-set" label @ 10/14/25 02:35:12.395
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-tt2k8-daemon-set" @ 10/14/25 02:35:12.403
  I1014 02:35:12.409656 21 controller_revision.go:162] Located ControllerRevision: "e2e-tt2k8-daemon-set-6b57b9955f"
  STEP: Patching ControllerRevision "e2e-tt2k8-daemon-set-6b57b9955f" @ 10/14/25 02:35:12.413
  I1014 02:35:12.420140 21 controller_revision.go:173] e2e-tt2k8-daemon-set-6b57b9955f has been patched
  STEP: Create a new ControllerRevision @ 10/14/25 02:35:12.42
  I1014 02:35:12.425259 21 controller_revision.go:191] Created ControllerRevision: e2e-tt2k8-daemon-set-849dc5dddc
  STEP: Confirm that there are two ControllerRevisions @ 10/14/25 02:35:12.425
  I1014 02:35:12.425883 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1014 02:35:12.429708 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-tt2k8-daemon-set-6b57b9955f" @ 10/14/25 02:35:12.43
  STEP: Confirm that there is only one ControllerRevision @ 10/14/25 02:35:12.436
  I1014 02:35:12.436813 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1014 02:35:12.440817 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-tt2k8-daemon-set-849dc5dddc" @ 10/14/25 02:35:12.445
  I1014 02:35:12.455103 21 controller_revision.go:220] e2e-tt2k8-daemon-set-849dc5dddc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/14/25 02:35:12.455
  I1014 02:35:12.461413      21 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 10/14/25 02:35:12.461
  I1014 02:35:12.461524 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1014 02:35:12.491217 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-tt2k8-daemon-set-849dc5dddc=updated" @ 10/14/25 02:35:12.491
  STEP: Confirm that there is only one ControllerRevision @ 10/14/25 02:35:12.512
  I1014 02:35:12.513082 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1014 02:35:12.516971 21 controller_revision.go:265] Found 1 ControllerRevisions
  I1014 02:35:12.530141 21 controller_revision.go:246] ControllerRevision "e2e-tt2k8-daemon-set-7c9f658f94" has revision 3
  STEP: Deleting DaemonSet "e2e-tt2k8-daemon-set" @ 10/14/25 02:35:12.534
  STEP: deleting DaemonSet.extensions e2e-tt2k8-daemon-set in namespace controllerrevisions-8266, will wait for the garbage collector to delete the pods @ 10/14/25 02:35:12.534
  I1014 02:35:12.618286 21 resources.go:139] Deleting DaemonSet.extensions e2e-tt2k8-daemon-set took: 27.282191ms
  I1014 02:35:12.718865 21 resources.go:163] Terminating DaemonSet.extensions e2e-tt2k8-daemon-set pods took: 100.576992ms
  I1014 02:35:13.925170 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tt2k8-daemon-set: 0
  I1014 02:35:13.925349 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-tt2k8-daemon-set
  I1014 02:35:13.929444 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5363"},"items":null}

  I1014 02:35:13.933500 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5363"},"items":null}

  I1014 02:35:13.954610 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8266" for this suite. @ 10/14/25 02:35:14.038
â€¢ [3.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/14/25 02:35:14.049
  I1014 02:35:14.049369 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename watch @ 10/14/25 02:35:14.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:14.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:14.073
  STEP: creating a new configmap @ 10/14/25 02:35:14.077
  STEP: modifying the configmap once @ 10/14/25 02:35:14.082
  STEP: modifying the configmap a second time @ 10/14/25 02:35:14.092
  STEP: deleting the configmap @ 10/14/25 02:35:14.102
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/14/25 02:35:14.11
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/14/25 02:35:14.112
  I1014 02:35:14.112904 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3934  b3672a91-1bc1-4ddb-938b-f824c4b24baa 5371 0 2025-10-14 02:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-10-14 02:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 02:35:14.113144 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3934  b3672a91-1bc1-4ddb-938b-f824c4b24baa 5372 0 2025-10-14 02:35:14 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-10-14 02:35:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 02:35:14.113316 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3934" for this suite. @ 10/14/25 02:35:14.139
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 10/14/25 02:35:14.148
  I1014 02:35:14.148546 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:35:14.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:14.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:14.174
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:35:14.178
  STEP: Saw pod success @ 10/14/25 02:35:18.217
  I1014 02:35:18.222041 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-5199cf17-0bd9-478e-b24b-eab3588e8fc3 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:35:18.254
  I1014 02:35:18.278126 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-362" for this suite. @ 10/14/25 02:35:18.292
â€¢ [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:353
  STEP: Creating a kubernetes client @ 10/14/25 02:35:18.304
  I1014 02:35:18.305897 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:35:18.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:18.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:18.339
  STEP: Creating a test externalName service @ 10/14/25 02:35:18.345
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7608.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-7608.svc.cluster.local; sleep 1; done
   @ 10/14/25 02:35:18.351
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7608.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local; sleep 1; done
   @ 10/14/25 02:35:18.351
  STEP: creating a pod to probe DNS @ 10/14/25 02:35:18.352
  STEP: submitting the pod to kubernetes @ 10/14/25 02:35:18.352
  STEP: retrieving the pod @ 10/14/25 02:35:20.377
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:35:20.381
  I1014 02:35:20.400317 21 dns_common.go:571] DNS probes using dns-test-52dd2bc0-ef02-4ba5-826f-daa7000dd9b4 succeeded

  STEP: changing the externalName to bar.example.com @ 10/14/25 02:35:20.4
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7608.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-7608.svc.cluster.local; sleep 1; done
   @ 10/14/25 02:35:20.409
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7608.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local; sleep 1; done
   @ 10/14/25 02:35:20.409
  STEP: creating a second pod to probe DNS @ 10/14/25 02:35:20.409
  STEP: submitting the pod to kubernetes @ 10/14/25 02:35:20.409
  STEP: retrieving the pod @ 10/14/25 02:35:22.441
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:35:22.447
  I1014 02:35:22.457494 21 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-7608.svc.cluster.local from pod  dns-7608/dns-test-97ac8c2a-6cd8-4d84-a593-a33f19bd97a2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1014 02:35:22.463565 21 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local from pod  dns-7608/dns-test-97ac8c2a-6cd8-4d84-a593-a33f19bd97a2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1014 02:35:22.464142 21 dns_common.go:506] Lookups using dns-7608/dns-test-97ac8c2a-6cd8-4d84-a593-a33f19bd97a2 failed for: [agnhost_udp@dns-test-service-3.dns-7608.svc.cluster.local jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local]

  I1014 02:35:22.472172 21 dns_common.go:514] Pod client logs for webserver: 
  I1014 02:35:22.478768 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1014 02:35:22.485065 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I1014 02:35:27.482135 21 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local from pod  dns-7608/dns-test-97ac8c2a-6cd8-4d84-a593-a33f19bd97a2 contains '' instead of 'bar.example.com.'
  I1014 02:35:27.482878 21 dns_common.go:506] Lookups using dns-7608/dns-test-97ac8c2a-6cd8-4d84-a593-a33f19bd97a2 failed for: [jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local]

  I1014 02:35:27.498313 21 dns_common.go:514] Pod client logs for webserver: 
  I1014 02:35:27.508217 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1014 02:35:27.523354 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I1014 02:35:32.459007 21 dns_common.go:571] DNS probes using dns-test-97ac8c2a-6cd8-4d84-a593-a33f19bd97a2 succeeded

  STEP: changing the service to type=ClusterIP @ 10/14/25 02:35:32.46
  I1014 02:35:32.495785      21 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7608.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-7608.svc.cluster.local; sleep 1; done
   @ 10/14/25 02:35:32.496
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7608.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7608.svc.cluster.local; sleep 1; done
   @ 10/14/25 02:35:32.496
  STEP: creating a third pod to probe DNS @ 10/14/25 02:35:32.496
  STEP: submitting the pod to kubernetes @ 10/14/25 02:35:32.508
  STEP: retrieving the pod @ 10/14/25 02:35:34.53
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:35:34.533
  I1014 02:35:34.547887 21 dns_common.go:571] DNS probes using dns-test-b65583da-e6d6-42a9-9d71-c781aface38d succeeded

  STEP: deleting the pod @ 10/14/25 02:35:34.548
  STEP: deleting the pod @ 10/14/25 02:35:34.558
  STEP: deleting the pod @ 10/14/25 02:35:34.576
  STEP: deleting the test externalName service @ 10/14/25 02:35:34.596
  I1014 02:35:34.624171 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7608" for this suite. @ 10/14/25 02:35:34.631
â€¢ [16.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 10/14/25 02:35:34.645
  I1014 02:35:34.645901 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename namespaces @ 10/14/25 02:35:34.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:34.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:34.677
  STEP: Creating namespace "e2e-ns-kbhgv" @ 10/14/25 02:35:34.682
  I1014 02:35:34.698785 21 namespace.go:412] Namespace "e2e-ns-kbhgv-7426" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kbhgv-7426" @ 10/14/25 02:35:34.698
  I1014 02:35:34.707203 21 namespace.go:435] Namespace "e2e-ns-kbhgv-7426" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kbhgv-7426" @ 10/14/25 02:35:34.707
  I1014 02:35:34.716125 21 namespace.go:464] Namespace "e2e-ns-kbhgv-7426" has []v1.FinalizerName{"kubernetes"}
  I1014 02:35:34.716386 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1709" for this suite. @ 10/14/25 02:35:34.731
  STEP: Destroying namespace "e2e-ns-kbhgv-7426" for this suite. @ 10/14/25 02:35:34.738
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 10/14/25 02:35:34.746
  I1014 02:35:34.747049 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 02:35:34.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:34.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:34.776
  I1014 02:35:34.780938 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/14/25 02:35:36.183
  I1014 02:35:36.183615 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-6026 --namespace=crd-publish-openapi-6026 create -f -'
  I1014 02:35:36.309423 21 builder.go:146] stderr: ""
  I1014 02:35:36.309469 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1748-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1014 02:35:36.309517 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-6026 --namespace=crd-publish-openapi-6026 delete e2e-test-crd-publish-openapi-1748-crds test-cr'
  I1014 02:35:36.409902 21 builder.go:146] stderr: ""
  I1014 02:35:36.409950 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1748-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1014 02:35:36.410003 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-6026 --namespace=crd-publish-openapi-6026 apply -f -'
  I1014 02:35:36.520201 21 builder.go:146] stderr: ""
  I1014 02:35:36.520249 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1748-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1014 02:35:36.520302 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-6026 --namespace=crd-publish-openapi-6026 delete e2e-test-crd-publish-openapi-1748-crds test-cr'
  I1014 02:35:36.613403 21 builder.go:146] stderr: ""
  I1014 02:35:36.613452 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1748-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/14/25 02:35:36.613
  I1014 02:35:36.613623 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-6026 explain e2e-test-crd-publish-openapi-1748-crds'
  I1014 02:35:36.698968 21 builder.go:146] stderr: ""
  I1014 02:35:36.699030 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1748-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1014 02:35:38.067522 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6026" for this suite. @ 10/14/25 02:35:38.077
â€¢ [3.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 10/14/25 02:35:38.089
  I1014 02:35:38.089311 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 02:35:38.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:35:38.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:35:38.119
  STEP: Creating pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043 @ 10/14/25 02:35:38.126
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 02:35:40.158
  I1014 02:35:40.176475 21 container_probe.go:1748] Initial restart count of pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 is 0
  I1014 02:35:40.181994 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:42.189047 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:44.194097 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:46.199494 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:48.204196 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:50.209879 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:52.219321 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:54.226461 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:56.234128 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:35:58.239271 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:00.244631 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:02.249436 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:04.256514 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:06.264176 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:08.269214 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:10.274753 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:12.294519 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:14.299672 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:16.314305 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:18.321705 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:20.325810 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:22.330285 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:24.354686 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:26.361230 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:28.368364 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:30.375846 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:32.384050 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:34.389725 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:36.395410 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:38.400522 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:40.405598 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:42.412275 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:44.419906 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:46.426002 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:48.438804 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:50.443348 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:52.448431 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:54.452933 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:56.457860 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:36:58.465427 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:00.470299 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:02.477467 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:04.482701 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:06.491885 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:08.498232 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:10.503093 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:12.510017 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:14.514458 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:16.522264 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:18.528166 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:20.533256 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:22.544812 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:24.550393 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:26.559513 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:28.564760 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:30.571788 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:32.577683 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:34.582916 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:36.588495 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:38.592506 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:40.597055 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:42.602324 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:44.611064 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:46.616477 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:48.621304 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:50.626269 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:52.632253 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:54.637376 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:56.642775 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:37:58.647647 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:00.652122 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:02.656956 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:04.675962 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:06.681405 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:08.686989 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:10.694828 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:12.699356 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:14.703904 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:16.709506 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:18.715080 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:20.719885 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:22.726017 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:24.733211 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:26.742773 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:28.747555 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:30.752242 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:32.757399 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:34.764533 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:36.771737 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:38.777875 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:40.783855 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:42.788450 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:44.793673 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:46.799509 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:48.804695 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:50.813591 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:52.818264 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:54.823487 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:56.828879 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:38:58.833427 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:00.837853 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:02.843181 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:04.847875 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:06.852048 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:08.857901 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:10.861788 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:12.867076 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:14.872516 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:16.878212 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:18.900547 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:20.905580 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:22.911271 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:24.915273 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:26.920932 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:28.925721 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:30.930157 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:32.934745 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:34.940875 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:36.946325 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  I1014 02:39:38.950507 21 container_probe.go:1758] Get pod busybox-8f7011e9-8b06-4890-822d-92a0c6960179 in namespace container-probe-9043
  STEP: deleting the pod @ 10/14/25 02:39:40.951
  I1014 02:39:40.962204 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9043" for this suite. @ 10/14/25 02:39:40.977
â€¢ [242.896 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 10/14/25 02:39:40.986
  I1014 02:39:40.986389 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/25 02:39:40.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:39:41.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:39:41.022
  I1014 02:39:41.052296 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I1014 02:40:41.057499 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/14/25 02:40:41.061
  I1014 02:40:41.061177 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/14/25 02:40:41.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:40:41.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:40:41.08
  STEP: Finding an available node @ 10/14/25 02:40:41.084
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/14/25 02:40:41.084
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/14/25 02:40:43.112
  I1014 02:40:43.124296 21 preemption.go:717] found a healthy node: k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  STEP: Adding a custom resource @ 10/14/25 02:40:43.132
  I1014 02:40:49.201624 21 preemption.go:836] pods created so far: [1 1 1]
  I1014 02:40:49.202159 21 preemption.go:837] length of pods created so far: 3
  I1014 02:40:51.213896 21 preemption.go:854] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 10/14/25 02:40:58.214
  STEP: Removing a custom resource @ 10/14/25 02:40:58.271
  STEP: Removing a custom resource @ 10/14/25 02:40:58.285
  I1014 02:40:58.296468 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-647" for this suite. @ 10/14/25 02:40:58.3
  I1014 02:40:58.306913 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9715" for this suite. @ 10/14/25 02:40:58.401
â€¢ [77.421 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 10/14/25 02:40:58.409
  I1014 02:40:58.410058 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:40:58.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:40:58.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:40:58.432
  STEP: Setting up server cert @ 10/14/25 02:40:58.456
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:41:00.142
  STEP: Deploying the webhook pod @ 10/14/25 02:41:00.148
  STEP: Wait for the deployment to be ready @ 10/14/25 02:41:00.161
  I1014 02:41:00.184987 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:41:02.2
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:41:02.218
  I1014 02:41:03.218683 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/14/25 02:41:03.223
  STEP: create a namespace for the webhook @ 10/14/25 02:41:03.248
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/14/25 02:41:03.269
  I1014 02:41:03.593086 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-544" for this suite. @ 10/14/25 02:41:03.648
  STEP: Destroying namespace "webhook-markers-5460" for this suite. @ 10/14/25 02:41:03.696
  STEP: Destroying namespace "fail-closed-namespace-3044" for this suite. @ 10/14/25 02:41:03.72
â€¢ [5.343 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 10/14/25 02:41:03.753
  I1014 02:41:03.753457 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:41:03.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:03.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:03.811
  STEP: Setting up server cert @ 10/14/25 02:41:03.883
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:41:05.194
  STEP: Deploying the webhook pod @ 10/14/25 02:41:05.199
  STEP: Wait for the deployment to be ready @ 10/14/25 02:41:05.21
  I1014 02:41:05.236787 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:41:07.248
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:41:07.267
  I1014 02:41:08.268134 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/14/25 02:41:08.273
  STEP: verifying the mutating webhook match conditions @ 10/14/25 02:41:08.292
  STEP: updating the mutating webhook match conditions @ 10/14/25 02:41:08.296
  STEP: verifying the mutating webhook match conditions @ 10/14/25 02:41:08.305
  I1014 02:41:08.395881 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3014" for this suite. @ 10/14/25 02:41:08.405
  STEP: Destroying namespace "webhook-markers-754" for this suite. @ 10/14/25 02:41:08.411
â€¢ [4.665 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2222
  STEP: Creating a kubernetes client @ 10/14/25 02:41:08.418
  I1014 02:41:08.418560 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:41:08.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:08.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:08.445
  STEP: creating service in namespace services-7847 @ 10/14/25 02:41:08.451
  STEP: creating service affinity-nodeport in namespace services-7847 @ 10/14/25 02:41:08.451
  I1014 02:41:08.495366 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1014 02:41:10.521819 21 resource.go:361] Creating new exec pod
  I1014 02:41:12.548902 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-7847 exec execpod-affinity9d9n7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1014 02:41:12.761057 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport (10.43.185.216) 80 port [tcp/http] succeeded!\n"
  I1014 02:41:12.761109 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 02:41:12.761186 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-7847 exec execpod-affinity9d9n7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.185.216 80'
  I1014 02:41:12.933717 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.185.216 80\n+ Connection to 10.43.185.216 80 port [tcp/http] succeeded!\necho hostName\n"
  I1014 02:41:12.933817 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 02:41:12.933903 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-7847 exec execpod-affinity9d9n7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.11 31916'
  I1014 02:41:13.097275 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.11 31916\n+ Connection to 192.168.1.11 31916 port [tcp/*] succeeded!\necho hostName\n"
  I1014 02:41:13.097328 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 02:41:13.097485 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-7847 exec execpod-affinity9d9n7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 31916'
  I1014 02:41:13.301981 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.10 31916\n+ echo hostNameConnection to 192.168.1.10 31916 port [tcp/*] succeeded!\n\n"
  I1014 02:41:13.302031 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 02:41:13.302103 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-7847 exec execpod-affinity9d9n7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/ ; done'
  I1014 02:41:13.783258 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31916/\n"
  I1014 02:41:13.783331 21 builder.go:147] stdout: "\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg\naffinity-nodeport-85dffb5fc7-45ntg"
  I1014 02:41:13.783353 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783368 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783379 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783390 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783402 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783413 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783423 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783434 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783446 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783456 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783467 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783478 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783490 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783502 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783512 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783524 21 service.go:238] Received response from host: affinity-nodeport-85dffb5fc7-45ntg
  I1014 02:41:13.783587 21 service.go:4352] Cleaning up the exec pod
  I1014 02:41:13.867092 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7847" for this suite. @ 10/14/25 02:41:13.908
â€¢ [5.524 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 10/14/25 02:41:13.943
  I1014 02:41:13.943283 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:41:13.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:13.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:13.976
  STEP: creating the pod @ 10/14/25 02:41:13.98
  STEP: submitting the pod to kubernetes @ 10/14/25 02:41:13.98
  STEP: verifying QOS class is set on the pod @ 10/14/25 02:41:14.065
  I1014 02:41:14.078105 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8621" for this suite. @ 10/14/25 02:41:14.096
â€¢ [0.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 10/14/25 02:41:14.102
  I1014 02:41:14.102859 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 02:41:14.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:14.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:14.133
  STEP: set up a multi version CRD @ 10/14/25 02:41:14.138
  I1014 02:41:14.139580 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: rename a version @ 10/14/25 02:41:18.184
  STEP: check the new version name is served @ 10/14/25 02:41:18.206
  STEP: check the old version name is removed @ 10/14/25 02:41:19.144
  STEP: check the other version is not changed @ 10/14/25 02:41:19.923
  I1014 02:41:22.693698 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1491" for this suite. @ 10/14/25 02:41:22.701
â€¢ [8.606 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/14/25 02:41:22.709
  I1014 02:41:22.709605 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename init-container @ 10/14/25 02:41:22.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:22.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:22.732
  STEP: creating the pod @ 10/14/25 02:41:22.736
  I1014 02:41:22.736399 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1014 02:41:25.654119 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8954" for this suite. @ 10/14/25 02:41:25.664
â€¢ [2.961 seconds]
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 10/14/25 02:41:25.671
  I1014 02:41:25.671239 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 02:41:25.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:25.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:25.693
  STEP: create the rc @ 10/14/25 02:41:25.763
  I1014 02:41:25.768595      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 10/14/25 02:41:27.778
  STEP: wait for the rc to be deleted @ 10/14/25 02:41:27.784
  STEP: Gathering metrics @ 10/14/25 02:41:28.792
  W1014 02:41:28.797016      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1014 02:41:28.797469 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1014 02:41:28.806490 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5457" for this suite. @ 10/14/25 02:41:28.818
â€¢ [3.162 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 10/14/25 02:41:28.833
  I1014 02:41:28.833902 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 02:41:28.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:28.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:28.863
  STEP: Creating simple DaemonSet "daemon-set" @ 10/14/25 02:41:28.939
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/25 02:41:28.946
  I1014 02:41:29.076011 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:41:29.076177 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:41:29.954993 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:41:29.955144 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:41:30.954377 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 02:41:30.954535 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  I1014 02:41:31.953478 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 02:41:31.953622 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 10/14/25 02:41:31.956
  I1014 02:41:31.959489 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/14/25 02:41:31.959
  I1014 02:41:31.972978 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/14/25 02:41:31.973
  I1014 02:41:31.977519 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1014 02:41:31.978575 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.979817 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.982842 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.983222 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.983577 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3485 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1014 02:41:31.983834 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/14/25 02:41:31.984
  STEP: watching for the daemon set status to be patched @ 10/14/25 02:41:31.991
  I1014 02:41:31.996411 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1014 02:41:31.997011 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.997797 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.998689 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.999257 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1014 02:41:31.999912 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3485 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1014 02:41:32.000615 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1014 02:41:32.000940 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3485 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1014 02:41:32.001203 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/25 02:41:32.004
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3485, will wait for the garbage collector to delete the pods @ 10/14/25 02:41:32.005
  I1014 02:41:32.066531 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.767228ms
  I1014 02:41:32.168580 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 102.051452ms
  I1014 02:41:33.272334 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:41:33.272498 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1014 02:41:33.275806 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6663"},"items":null}

  I1014 02:41:33.278813 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6663"},"items":null}

  I1014 02:41:33.288561 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3485" for this suite. @ 10/14/25 02:41:33.292
â€¢ [4.464 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1162
  STEP: Creating a kubernetes client @ 10/14/25 02:41:33.299
  I1014 02:41:33.299810 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:41:33.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:33.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:33.326
  STEP: Creating a suspended job @ 10/14/25 02:41:33.335
  STEP: Patching the Job @ 10/14/25 02:41:33.34
  STEP: Watching for Job to be patched @ 10/14/25 02:41:33.358
  I1014 02:41:33.362436 21 job.go:1369] Event ADDED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v] and annotations: map[]
  I1014 02:41:33.362557 21 job.go:1372] Event MODIFIED found for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[]
  STEP: Updating the job @ 10/14/25 02:41:33.362
  STEP: Watching for Job to be updated @ 10/14/25 02:41:33.372
  I1014 02:41:33.376860 21 job.go:1372] Event MODIFIED found for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:33.376938 21 job.go:1240] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/14/25 02:41:33.376
  I1014 02:41:33.380480 21 job.go:1247] Job: e2e-p5x2v as labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched]
  STEP: Waiting for job to complete @ 10/14/25 02:41:33.381
  STEP: Delete a job collection with a labelselector @ 10/14/25 02:41:41.412
  STEP: Watching for Job to be deleted @ 10/14/25 02:41:41.419
  I1014 02:41:41.425292 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.425835 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.426095 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.429497 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.429906 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.430152 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.430634 21 job.go:1369] Event MODIFIED observed for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  I1014 02:41:41.430947 21 job.go:1372] Event DELETED found for Job e2e-p5x2v in namespace job-2681 with labels: map[e2e-job-label:e2e-p5x2v e2e-p5x2v:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/14/25 02:41:41.431
  I1014 02:41:41.448950 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2681" for this suite. @ 10/14/25 02:41:41.477
â€¢ [8.185 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 10/14/25 02:41:41.484
  I1014 02:41:41.484938 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 02:41:41.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:41.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:41.509
  STEP: Creating a pod to test substitution in container's args @ 10/14/25 02:41:41.514
  STEP: Saw pod success @ 10/14/25 02:41:45.541
  I1014 02:41:45.555166 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod var-expansion-50416a58-1150-484f-b545-46f8d29ec683 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 02:41:45.576
  I1014 02:41:45.591820 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6289" for this suite. @ 10/14/25 02:41:45.596
â€¢ [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 10/14/25 02:41:45.608
  I1014 02:41:45.608535 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/25 02:41:45.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:45.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:45.635
  I1014 02:41:45.674078 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8053" for this suite. @ 10/14/25 02:41:45.696
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/14/25 02:41:45.704
  I1014 02:41:45.704716 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:41:45.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:45.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:45.732
  I1014 02:41:45.782597 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3425" for this suite. @ 10/14/25 02:41:45.799
â€¢ [0.103 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/14/25 02:41:45.808
  I1014 02:41:45.808102 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:41:45.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:45.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:45.835
  STEP: Creating secret with name secret-test-map-4140c7d6-896f-4544-b69b-4170a2b9c52e @ 10/14/25 02:41:45.84
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:41:45.845
  STEP: Saw pod success @ 10/14/25 02:41:49.879
  I1014 02:41:49.883136 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-dd281e42-6483-4955-b54c-28e046082f44 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:41:49.891
  I1014 02:41:49.907757 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5117" for this suite. @ 10/14/25 02:41:49.916
â€¢ [4.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/14/25 02:41:49.923
  I1014 02:41:49.923807 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:41:49.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:49.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:49.95
  STEP: Creating projection with secret that has name projected-secret-test-map-1dfb9a63-0b97-4b87-ab16-6194833883c1 @ 10/14/25 02:41:49.955
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:41:49.959
  STEP: Saw pod success @ 10/14/25 02:41:53.984
  I1014 02:41:53.987907 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-secrets-1184a301-91fa-4f28-bc72-53e8a86c6904 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:41:53.995
  I1014 02:41:54.020887 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1575" for this suite. @ 10/14/25 02:41:54.026
â€¢ [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 10/14/25 02:41:54.055
  I1014 02:41:54.059746 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename podtemplate @ 10/14/25 02:41:54.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:54.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:54.104
  I1014 02:41:54.166723 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4926" for this suite. @ 10/14/25 02:41:54.17
â€¢ [0.120 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 10/14/25 02:41:54.175
  I1014 02:41:54.175892 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replicaset @ 10/14/25 02:41:54.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:54.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:54.196
  STEP: Create a Replicaset @ 10/14/25 02:41:54.204
  STEP: Verify that the required pods have come up. @ 10/14/25 02:41:54.209
  I1014 02:41:54.245806 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/25 02:41:54.246
  STEP: Getting /status @ 10/14/25 02:41:56.267
  I1014 02:41:56.271813 21 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/14/25 02:41:56.272
  I1014 02:41:56.281225 21 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/14/25 02:41:56.281
  I1014 02:41:56.283921 21 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I1014 02:41:56.284406 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.284766 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.285264 21 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.285587 21 replica_set.go:688] Found replicaset test-rs in namespace replicaset-7977 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1014 02:41:56.285835 21 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/14/25 02:41:56.286
  I1014 02:41:56.286258 21 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1014 02:41:56.293105 21 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/14/25 02:41:56.293
  I1014 02:41:56.295746 21 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I1014 02:41:56.296269 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.296622 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.297163 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.297489 21 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-7977 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1014 02:41:56.297873 21 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I1014 02:41:56.298143 21 replica_set.go:724] Found replicaset test-rs in namespace replicaset-7977 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1014 02:41:56.298387 21 replica_set.go:735] Replicaset test-rs has a patched status
  I1014 02:41:56.298732 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7977" for this suite. @ 10/14/25 02:41:56.302
â€¢ [2.132 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 10/14/25 02:41:56.308
  I1014 02:41:56.308069 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:41:56.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:56.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:56.33
  STEP: creating a ConfigMap @ 10/14/25 02:41:56.336
  STEP: fetching the ConfigMap @ 10/14/25 02:41:56.34
  STEP: patching the ConfigMap @ 10/14/25 02:41:56.345
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/14/25 02:41:56.352
  STEP: deleting the ConfigMap by collection with a label selector @ 10/14/25 02:41:56.356
  STEP: listing all ConfigMaps in test namespace @ 10/14/25 02:41:56.364
  I1014 02:41:56.368604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2405" for this suite. @ 10/14/25 02:41:56.404
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 10/14/25 02:41:56.413
  I1014 02:41:56.414034 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-webhook @ 10/14/25 02:41:56.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:41:56.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:41:56.437
  STEP: Setting up server cert @ 10/14/25 02:41:56.442
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/14/25 02:41:57.078
  STEP: Deploying the custom resource conversion webhook pod @ 10/14/25 02:41:57.084
  STEP: Wait for the deployment to be ready @ 10/14/25 02:41:57.096
  I1014 02:41:57.120764 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 10/14/25 02:41:59.208
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:41:59.239
  I1014 02:42:00.239918 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1014 02:42:00.244640 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Creating a v1 custom resource @ 10/14/25 02:42:02.827
  STEP: v2 custom resource should be converted @ 10/14/25 02:42:02.833
  I1014 02:42:03.439675 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8878" for this suite. @ 10/14/25 02:42:03.454
â€¢ [7.054 seconds]
------------------------------
SS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 10/14/25 02:42:03.468
  I1014 02:42:03.468704 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename servicecidr @ 10/14/25 02:42:03.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:42:03.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:42:03.495
  STEP: getting @ 10/14/25 02:42:03.499
  STEP: listing @ 10/14/25 02:42:03.503
  STEP: watching @ 10/14/25 02:42:03.506
  I1014 02:42:03.508366 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-2635" for this suite. @ 10/14/25 02:42:03.55
â€¢ [0.089 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 10/14/25 02:42:03.558
  I1014 02:42:03.558599 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename cronjob @ 10/14/25 02:42:03.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:42:03.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:42:03.586
  STEP: Creating a ReplaceConcurrent cronjob @ 10/14/25 02:42:03.591
  STEP: Ensuring a job is scheduled @ 10/14/25 02:42:03.599
  STEP: Ensuring exactly one is scheduled @ 10/14/25 02:43:01.604
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/14/25 02:43:01.608
  STEP: Ensuring the job is replaced with a new one @ 10/14/25 02:43:01.616
  STEP: Removing cronjob @ 10/14/25 02:44:01.621
  I1014 02:44:01.628860 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2424" for this suite. @ 10/14/25 02:44:01.634
â€¢ [118.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:308
  STEP: Creating a kubernetes client @ 10/14/25 02:44:01.648
  I1014 02:44:01.648888 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:44:01.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:01.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:01.683
  STEP: Creating a test headless service @ 10/14/25 02:44:01.689
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-5661.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-5661.svc.cluster.local;sleep 1; done
   @ 10/14/25 02:44:01.696
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5661.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5661.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5661.svc.cluster.local;sleep 1; done
   @ 10/14/25 02:44:01.696
  STEP: creating a pod to probe DNS @ 10/14/25 02:44:01.696
  STEP: submitting the pod to kubernetes @ 10/14/25 02:44:01.696
  STEP: retrieving the pod @ 10/14/25 02:44:03.724
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:44:03.727
  I1014 02:44:03.747414 21 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.755633 21 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.760979 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.767437 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.771893 21 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.776387 21 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.780755 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.785135 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5661.svc.cluster.local from pod dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac: the server could not find the requested resource (get pods dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac)
  I1014 02:44:03.785168 21 dns_common.go:506] Lookups using dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5661.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5661.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5661.svc.cluster.local jessie_udp@dns-test-service-2.dns-5661.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5661.svc.cluster.local]

  I1014 02:44:03.817059 21 dns_common.go:514] Pod client logs for webserver: 
  I1014 02:44:03.824477 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1014 02:44:03.831506 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I1014 02:44:08.791961 21 dns_common.go:546] DNS probes using dns-5661/dns-test-54e1bdf7-e3f4-4c76-98c4-6dfa80e170ac succeeded

  STEP: deleting the pod @ 10/14/25 02:44:08.792
  STEP: deleting the test headless service @ 10/14/25 02:44:08.803
  I1014 02:44:08.838731 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5661" for this suite. @ 10/14/25 02:44:08.854
â€¢ [7.219 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 10/14/25 02:44:08.868
  I1014 02:44:08.868454 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:44:08.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:08.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:08.906
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/14/25 02:44:08.91
  STEP: Saw pod success @ 10/14/25 02:44:12.947
  I1014 02:44:12.951371 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-efddb337-1ea1-4c51-a716-4889b0a3e8e3 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:44:12.971
  I1014 02:44:12.990747 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3493" for this suite. @ 10/14/25 02:44:12.996
â€¢ [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 10/14/25 02:44:13.009
  I1014 02:44:13.009638 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename podtemplate @ 10/14/25 02:44:13.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:13.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:13.037
  STEP: Create a pod template @ 10/14/25 02:44:13.042
  STEP: Replace a pod template @ 10/14/25 02:44:13.049
  I1014 02:44:13.059648 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1014 02:44:13.059902 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2413" for this suite. @ 10/14/25 02:44:13.096
â€¢ [0.093 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/14/25 02:44:13.103
  I1014 02:44:13.103449 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename events @ 10/14/25 02:44:13.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:13.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:13.126
  STEP: Create set of events @ 10/14/25 02:44:13.131
  STEP: get a list of Events with a label in the current namespace @ 10/14/25 02:44:13.155
  STEP: delete a list of events @ 10/14/25 02:44:13.158
  I1014 02:44:13.159073 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/14/25 02:44:13.175
  I1014 02:44:13.180218 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4019" for this suite. @ 10/14/25 02:44:13.196
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 10/14/25 02:44:13.203
  I1014 02:44:13.203526 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename security-context-test @ 10/14/25 02:44:13.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:13.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:13.227
  I1014 02:44:17.264788 21 security_context.go:619] Got logs for pod "busybox-privileged-false-7264866d-5472-411c-ba95-12cbc79804ad": "ip: RTNETLINK answers: Operation not permitted\n"
  I1014 02:44:17.265185 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-197" for this suite. @ 10/14/25 02:44:17.27
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 10/14/25 02:44:17.312
  I1014 02:44:17.312208 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replicaset @ 10/14/25 02:44:17.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:17.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:17.341
  I1014 02:44:17.376527 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/25 02:44:17.376
  STEP: Scaling up "test-rs" replicaset @ 10/14/25 02:44:19.398
  I1014 02:44:19.407521 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/14/25 02:44:19.407
  I1014 02:44:19.426080 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4180 with ReadyReplicas 1, AvailableReplicas 1
  I1014 02:44:19.449120 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4180 with ReadyReplicas 1, AvailableReplicas 1
  I1014 02:44:19.474562 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4180 with ReadyReplicas 1, AvailableReplicas 1
  I1014 02:44:19.484222 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4180 with ReadyReplicas 1, AvailableReplicas 1
  I1014 02:44:20.449790 21 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-4180 with ReadyReplicas 2, AvailableReplicas 2
  I1014 02:44:20.686069 21 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-4180 with ReadyReplicas 3 found true
  I1014 02:44:20.686215 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4180" for this suite. @ 10/14/25 02:44:20.691
â€¢ [3.387 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 10/14/25 02:44:20.699
  I1014 02:44:20.699971 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename namespaces @ 10/14/25 02:44:20.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:20.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:20.727
  STEP: Creating a test namespace @ 10/14/25 02:44:20.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:20.746
  STEP: Creating a service in the namespace @ 10/14/25 02:44:20.75
  STEP: Deleting the namespace @ 10/14/25 02:44:20.775
  STEP: Waiting for the namespace to be removed. @ 10/14/25 02:44:20.792
  STEP: Recreating the namespace @ 10/14/25 02:44:26.797
  STEP: Verifying there is no service in the namespace @ 10/14/25 02:44:26.812
  I1014 02:44:26.817017 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1456" for this suite. @ 10/14/25 02:44:26.821
  STEP: Destroying namespace "nsdeletetest-4760" for this suite. @ 10/14/25 02:44:26.828
  I1014 02:44:26.833569 21 framework.go:370] Namespace nsdeletetest-4760 was already deleted
  STEP: Destroying namespace "nsdeletetest-1648" for this suite. @ 10/14/25 02:44:26.833
â€¢ [6.144 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 10/14/25 02:44:26.844
  I1014 02:44:26.844112 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 02:44:26.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:26.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:26.874
  STEP: creating a Deployment @ 10/14/25 02:44:26.882
  I1014 02:44:26.882513 21 deployment.go:506] Creating simple deployment test-deployment-j2mlt
  I1014 02:44:26.906921 21 deployment.go:223] deployment "test-deployment-j2mlt" doesn't have the required revision set
  STEP: Getting /status @ 10/14/25 02:44:28.922
  I1014 02:44:28.927993 21 deployment.go:531] Deployment test-deployment-j2mlt has Conditions: [{Available True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j2mlt-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/14/25 02:44:28.928
  I1014 02:44:28.941966 21 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 44, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 44, 27, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 44, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 44, 26, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-j2mlt-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/14/25 02:44:28.942
  I1014 02:44:28.945648 21 deployment.go:578] Observed &Deployment event: ADDED
  I1014 02:44:28.946095 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j2mlt-6fb4c74686"}
  I1014 02:44:28.946553 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I1014 02:44:28.946880 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j2mlt-6fb4c74686"}
  I1014 02:44:28.947150 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1014 02:44:28.947533 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I1014 02:44:28.948107 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1014 02:44:28.948480 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-j2mlt-6fb4c74686" is progressing.}
  I1014 02:44:28.948882 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I1014 02:44:28.949145 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1014 02:44:28.949398 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j2mlt-6fb4c74686" has successfully progressed.}
  I1014 02:44:28.949778 21 deployment.go:578] Observed &Deployment event: MODIFIED
  I1014 02:44:28.950049 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1014 02:44:28.950297 21 deployment.go:574] Observed Deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j2mlt-6fb4c74686" has successfully progressed.}
  I1014 02:44:28.950517 21 deployment.go:571] Found Deployment test-deployment-j2mlt in namespace deployment-5894 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1014 02:44:28.950744 21 deployment.go:582] Deployment test-deployment-j2mlt has an updated status
  STEP: patching the Statefulset Status @ 10/14/25 02:44:28.95
  I1014 02:44:28.951117 21 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1014 02:44:28.957904 21 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/14/25 02:44:28.958
  I1014 02:44:28.963256 21 deployment.go:615] Observed &Deployment event: ADDED
  I1014 02:44:28.963915 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j2mlt-6fb4c74686"}
  I1014 02:44:28.964404 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I1014 02:44:28.964687 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-j2mlt-6fb4c74686"}
  I1014 02:44:28.964952 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1014 02:44:28.965335 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I1014 02:44:28.965951 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1014 02:44:28.966296 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:26 +0000 UTC 2025-10-14 02:44:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-j2mlt-6fb4c74686" is progressing.}
  I1014 02:44:28.966700 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I1014 02:44:28.966965 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1014 02:44:28.967499 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j2mlt-6fb4c74686" has successfully progressed.}
  I1014 02:44:28.967917 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I1014 02:44:28.968180 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:27 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1014 02:44:28.968453 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-10-14 02:44:27 +0000 UTC 2025-10-14 02:44:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-j2mlt-6fb4c74686" has successfully progressed.}
  I1014 02:44:28.968693 21 deployment.go:611] Observed deployment test-deployment-j2mlt in namespace deployment-5894 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1014 02:44:28.969086 21 deployment.go:615] Observed &Deployment event: MODIFIED
  I1014 02:44:28.969349 21 deployment.go:608] Found deployment test-deployment-j2mlt in namespace deployment-5894 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1014 02:44:28.969643 21 deployment.go:619] Deployment test-deployment-j2mlt has a patched status
  I1014 02:44:28.977474 21 deployment.go:632] Deployment "test-deployment-j2mlt":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-j2mlt",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77c798a1-f3ae-4305-83c0-24cec15bfe72",
      ResourceVersion: (string) (len=4) "7555",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896006666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=3) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006668,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=74) "ReplicaSet \"test-deployment-j2mlt-6fb4c74686\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 02:44:29.017085 21 deployment.go:40] New ReplicaSet "test-deployment-j2mlt-6fb4c74686" of Deployment "test-deployment-j2mlt":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-j2mlt-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1a27db1-efc3-4203-9667-131bc261aba3",
      ResourceVersion: (string) (len=4) "7549",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896006666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-j2mlt",
          UID: (types.UID) (len=36) "77c798a1-f3ae-4305-83c0-24cec15bfe72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 37 63  |k:{\"uid\":\"77c|
              00000120  37 39 38 61 31 2d 66 33  61 65 2d 34 33 30 35 2d  |798a1-f3ae-4305-|
              00000130  38 33 63 30 2d 32 34 63  65 63 31 35 62 66 65 37  |83c0-24cec15bfe7|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:44:29.041050 21 deployment.go:68] Pod "test-deployment-j2mlt-6fb4c74686-txfr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-j2mlt-6fb4c74686-txfr8",
      GenerateName: (string) (len=33) "test-deployment-j2mlt-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-5894",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90a6b79d-1a51-4fc0-8dc4-411a12c34d49",
      ResourceVersion: (string) (len=4) "7548",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896006666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-j2mlt-6fb4c74686",
          UID: (types.UID) (len=36) "c1a27db1-efc3-4203-9667-131bc261aba3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 31 61 32 37 64 62  31 2d 65 66 63 33 2d 34  |"c1a27db1-efc3-4|
              000000a0  32 30 33 2d 39 36 36 37  2d 31 33 31 62 63 32 36  |203-9667-131bc26|
              000000b0  31 61 62 61 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |1aba3\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 35 39  5c 22 7d 22 3a 7b 22 2e  |.42.0.59\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htwlz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htwlz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006667,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896006666,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=10) "10.42.0.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896006666,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896006667,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8d3b37d5b1c009f7c5ceac82d72377b5937a03deecca8743d1d61bfe68760f82",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-htwlz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:44:29.043029 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5894" for this suite. @ 10/14/25 02:44:29.048
â€¢ [2.211 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/14/25 02:44:29.057
  I1014 02:44:29.057303 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:44:29.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:29.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:29.081
  STEP: Creating projection with secret that has name projected-secret-test-6253614e-08df-4ade-8250-d43d3d4b6240 @ 10/14/25 02:44:29.086
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:44:29.091
  STEP: Saw pod success @ 10/14/25 02:44:33.122
  I1014 02:44:33.130048 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod pod-projected-secrets-709ac60e-6f70-4bda-b468-d35974acb691 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:44:33.14
  I1014 02:44:33.162204 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7778" for this suite. @ 10/14/25 02:44:33.168
â€¢ [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 10/14/25 02:44:33.176
  I1014 02:44:33.176203 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/25 02:44:33.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:33.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:33.201
  I1014 02:44:33.206030 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  I1014 02:44:39.412293 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9806" for this suite. @ 10/14/25 02:44:39.416
â€¢ [6.247 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 10/14/25 02:44:39.424
  I1014 02:44:39.425013 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename endpointslice @ 10/14/25 02:44:39.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:39.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:39.452
  I1014 02:44:39.464570      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:44:39.468913 21 endpointslice.go:1045] Endpoints addresses: [31.28.88.161] , ports: [6443]
  I1014 02:44:39.469033 21 endpointslice.go:1075] EndpointSlices addresses: [31.28.88.161] , ports: [6443]
  I1014 02:44:39.469171 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3954" for this suite. @ 10/14/25 02:44:39.517
â€¢ [0.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 10/14/25 02:44:39.535
  I1014 02:44:39.535718 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:44:39.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:44:39.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:44:39.565
  STEP: Creating configMap with name configmap-test-upd-8f0f6910-104a-46a1-a1f3-0ddf7286804c @ 10/14/25 02:44:39.617
  STEP: Creating the pod @ 10/14/25 02:44:39.622
  STEP: Updating configmap configmap-test-upd-8f0f6910-104a-46a1-a1f3-0ddf7286804c @ 10/14/25 02:44:41.666
  STEP: waiting to observe update in volume @ 10/14/25 02:44:41.672
  I1014 02:46:00.173656 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3453" for this suite. @ 10/14/25 02:46:00.18
â€¢ [80.653 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:431
  STEP: Creating a kubernetes client @ 10/14/25 02:46:00.19
  I1014 02:46:00.190713 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename security-context-test @ 10/14/25 02:46:00.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:00.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:00.216
  I1014 02:46:04.257016 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-949" for this suite. @ 10/14/25 02:46:04.265
â€¢ [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 10/14/25 02:46:04.278
  I1014 02:46:04.279004 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl-logs @ 10/14/25 02:46:04.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:04.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:04.304
  STEP: creating a pod @ 10/14/25 02:46:04.309
  I1014 02:46:04.309575 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1014 02:46:04.435251 21 builder.go:146] stderr: ""
  I1014 02:46:04.435294 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/14/25 02:46:04.435
  I1014 02:46:04.435390 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1014 02:46:06.450290 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/14/25 02:46:06.45
  I1014 02:46:06.450400 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 logs logs-generator logs-generator'
  I1014 02:46:06.553894 21 builder.go:146] stderr: ""
  I1014 02:46:06.553956 21 builder.go:147] stdout: "I1014 02:46:05.018202       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/hs4w 284\nI1014 02:46:05.219316       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/jbzs 361\nI1014 02:46:05.419466       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/rbfv 258\nI1014 02:46:05.618816       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/gbj9 283\nI1014 02:46:05.819258       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/tww 449\nI1014 02:46:06.018748       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/542d 240\nI1014 02:46:06.219152       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/p7kj 306\nI1014 02:46:06.421885       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/vlc 595\n"
  STEP: limiting log lines @ 10/14/25 02:46:06.553
  I1014 02:46:06.554040 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 logs logs-generator logs-generator --tail=1'
  I1014 02:46:06.649969 21 builder.go:146] stderr: ""
  I1014 02:46:06.650014 21 builder.go:147] stdout: "I1014 02:46:06.621203       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/tmhv 385\n"
  I1014 02:46:06.650032 21 logs.go:180] got output "I1014 02:46:06.621203       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/tmhv 385\n"
  STEP: limiting log bytes @ 10/14/25 02:46:06.65
  I1014 02:46:06.650112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 logs logs-generator logs-generator --limit-bytes=1'
  I1014 02:46:06.751171 21 builder.go:146] stderr: ""
  I1014 02:46:06.751215 21 builder.go:147] stdout: "I"
  I1014 02:46:06.751230 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 10/14/25 02:46:06.751
  I1014 02:46:06.751316 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 logs logs-generator logs-generator --tail=1 --timestamps'
  I1014 02:46:06.852469 21 builder.go:146] stderr: ""
  I1014 02:46:06.852649 21 builder.go:147] stdout: "2025-10-14T02:46:06.825713156Z I1014 02:46:06.825591       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/gbb2 398\n"
  I1014 02:46:06.852678 21 logs.go:192] got output "2025-10-14T02:46:06.825713156Z I1014 02:46:06.825591       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/gbb2 398\n"
  STEP: restricting to a time range @ 10/14/25 02:46:06.852
  I1014 02:46:09.352978 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 logs logs-generator logs-generator --since=1s'
  I1014 02:46:09.490172 21 builder.go:146] stderr: ""
  I1014 02:46:09.490226 21 builder.go:147] stdout: "I1014 02:46:08.618920       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/2gq6 380\nI1014 02:46:08.818224       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/74v 223\nI1014 02:46:09.019212       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/dc5h 420\nI1014 02:46:09.218568       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/v8j 584\nI1014 02:46:09.425612       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/mhm 326\n"
  I1014 02:46:09.490278 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 logs logs-generator logs-generator --since=24h'
  I1014 02:46:09.639965 21 builder.go:146] stderr: ""
  I1014 02:46:09.640044 21 builder.go:147] stdout: "I1014 02:46:05.018202       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/hs4w 284\nI1014 02:46:05.219316       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/jbzs 361\nI1014 02:46:05.419466       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/rbfv 258\nI1014 02:46:05.618816       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/gbj9 283\nI1014 02:46:05.819258       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/tww 449\nI1014 02:46:06.018748       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/542d 240\nI1014 02:46:06.219152       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/p7kj 306\nI1014 02:46:06.421885       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/vlc 595\nI1014 02:46:06.621203       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/tmhv 385\nI1014 02:46:06.825591       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/gbb2 398\nI1014 02:46:07.020704       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/kv8 479\nI1014 02:46:07.219343       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/zkb4 546\nI1014 02:46:07.418863       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/gv87 401\nI1014 02:46:07.618337       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/9bj 297\nI1014 02:46:07.818994       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/nlp 467\nI1014 02:46:08.018332       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/jqx 430\nI1014 02:46:08.218710       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/ws5 332\nI1014 02:46:08.418515       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/qvjm 428\nI1014 02:46:08.618920       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/2gq6 380\nI1014 02:46:08.818224       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/74v 223\nI1014 02:46:09.019212       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/dc5h 420\nI1014 02:46:09.218568       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/v8j 584\nI1014 02:46:09.425612       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/mhm 326\nI1014 02:46:09.619792       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/ns/pods/h786 280\n"
  I1014 02:46:09.640249 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-logs-9901 delete pod logs-generator'
  I1014 02:46:10.712247 21 builder.go:146] stderr: ""
  I1014 02:46:10.712290 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1014 02:46:10.712417 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9901" for this suite. @ 10/14/25 02:46:10.72
â€¢ [6.450 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/14/25 02:46:10.728
  I1014 02:46:10.728642 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/14/25 02:46:10.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:10.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:10.756
  STEP: creating a target pod @ 10/14/25 02:46:10.762
  STEP: adding an ephemeral container @ 10/14/25 02:46:12.796
  STEP: verifying the pod's generation is 2 @ 10/14/25 02:46:14.848
  STEP: checking pod container endpoints @ 10/14/25 02:46:14.852
  I1014 02:46:14.852489 21 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2563 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 02:46:14.852731 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 02:46:14.853009 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2563/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I1014 02:46:14.974314 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 02:46:14.974489 21 exec_util.go:112] Exec stderr: ""
  I1014 02:46:14.994213 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2563" for this suite. @ 10/14/25 02:46:15.01
â€¢ [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3220
  STEP: Creating a kubernetes client @ 10/14/25 02:46:15.018
  I1014 02:46:15.018739 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:46:15.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:15.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:15.059
  I1014 02:46:15.071871      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 10/14/25 02:46:15.072
  I1014 02:46:15.082381      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 10/14/25 02:46:15.082
  I1014 02:46:15.090319      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 10/14/25 02:46:15.09
  I1014 02:46:15.098248      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 10/14/25 02:46:15.098
  I1014 02:46:15.105018      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:46:15.107021      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 10/14/25 02:46:15.107
  I1014 02:46:15.111843      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 10/14/25 02:46:15.112
  I1014 02:46:15.119376      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:46:15.126090      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 10/14/25 02:46:15.126
  I1014 02:46:15.129201      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 10/14/25 02:46:15.129
  I1014 02:46:15.138511      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 10/14/25 02:46:15.138
  I1014 02:46:15.141662      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 10/14/25 02:46:15.142
  I1014 02:46:15.146465      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 02:46:15.146982 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3890" for this suite. @ 10/14/25 02:46:15.151
â€¢ [0.138 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 10/14/25 02:46:15.158
  I1014 02:46:15.159052 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/25 02:46:15.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:15.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:15.185
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/25 02:46:15.258
  STEP: create the pod with lifecycle hook @ 10/14/25 02:46:17.326
  STEP: delete the pod with lifecycle hook @ 10/14/25 02:46:19.362
  STEP: check prestop hook @ 10/14/25 02:46:21.382
  I1014 02:46:21.392853 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1937" for this suite. @ 10/14/25 02:46:21.398
â€¢ [6.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/14/25 02:46:21.412
  I1014 02:46:21.412782 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename subjectreview @ 10/14/25 02:46:21.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:21.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:21.447
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2132" @ 10/14/25 02:46:21.452
  I1014 02:46:21.457442 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-2132:e2e"
  I1014 02:46:21.457575 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2132"}
  I1014 02:46:21.457655 21 subjectreviews.go:71] saUID: "bd8be45f-62a1-4ed3-ad05-2e3c438c1fc1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2132:e2e" @ 10/14/25 02:46:21.457
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2132:e2e" @ 10/14/25 02:46:21.458
  I1014 02:46:21.462524 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2132:e2e" api 'list' configmaps in "subjectreview-2132" namespace @ 10/14/25 02:46:21.462
  I1014 02:46:21.465915 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2132:e2e" @ 10/14/25 02:46:21.466
  I1014 02:46:21.470093 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1014 02:46:21.470210 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1014 02:46:21.470413 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2132" for this suite. @ 10/14/25 02:46:21.498
â€¢ [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 10/14/25 02:46:21.505
  I1014 02:46:21.505250 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:46:21.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:21.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:21.529
  I1014 02:46:21.536124 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-7863 version'
  I1014 02:46:21.642184 21 builder.go:146] stderr: ""
  I1014 02:46:21.642229 21 builder.go:147] stdout: "Client Version: v1.33.5\nKustomize Version: v5.6.0\nServer Version: v1.33.5+k3s1\n"
  I1014 02:46:21.642814 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7863" for this suite. @ 10/14/25 02:46:21.647
â€¢ [0.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1426
  STEP: Creating a kubernetes client @ 10/14/25 02:46:21.655
  I1014 02:46:21.655974 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:46:21.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:21.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:21.678
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8706 @ 10/14/25 02:46:21.683
  STEP: changing the ExternalName service to type=NodePort @ 10/14/25 02:46:21.688
  I1014 02:46:21.739145 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I1014 02:46:23.743873 21 resource.go:361] Creating new exec pod
  I1014 02:46:25.770718 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8706 exec execpodcxv65 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1014 02:46:25.948108 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.80.79) 80 port [tcp/http] succeeded!\n"
  I1014 02:46:25.948160 21 builder.go:147] stdout: "externalname-service-796bbb6c96-4s8wj"
  I1014 02:46:25.948237 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8706 exec execpodcxv65 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.80.79 80'
  I1014 02:46:26.114359 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.80.79 80\n+ echo hostName\nConnection to 10.43.80.79 80 port [tcp/http] succeeded!\n"
  I1014 02:46:26.114404 21 builder.go:147] stdout: "externalname-service-796bbb6c96-4s8wj"
  I1014 02:46:26.114472 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8706 exec execpodcxv65 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.11 30732'
  I1014 02:46:26.263031 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.11 30732\nConnection to 192.168.1.11 30732 port [tcp/*] succeeded!\n"
  I1014 02:46:26.263081 21 builder.go:147] stdout: "externalname-service-796bbb6c96-4s8wj"
  I1014 02:46:26.263230 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8706 exec execpodcxv65 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 30732'
  I1014 02:46:26.412820 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.10 30732\nConnection to 192.168.1.10 30732 port [tcp/*] succeeded!\n+ echo hostName\n"
  I1014 02:46:26.412858 21 builder.go:147] stdout: "externalname-service-796bbb6c96-m4kgx"
  I1014 02:46:26.412918 21 service.go:1435] Cleaning up the ExternalName to NodePort test service
  I1014 02:46:26.467775 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8706" for this suite. @ 10/14/25 02:46:26.482
â€¢ [4.832 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 10/14/25 02:46:26.488
  I1014 02:46:26.488478 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replicaset @ 10/14/25 02:46:26.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:26.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:26.513
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/14/25 02:46:26.518
  I1014 02:46:26.535201 21 resource.go:81] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/25 02:46:26.535
  STEP: getting scale subresource @ 10/14/25 02:46:28.563
  STEP: updating a scale subresource @ 10/14/25 02:46:28.569
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/14/25 02:46:28.578
  STEP: Patch a scale subresource @ 10/14/25 02:46:28.597
  I1014 02:46:28.608420 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-655" for this suite. @ 10/14/25 02:46:28.617
â€¢ [2.168 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:526
  STEP: Creating a kubernetes client @ 10/14/25 02:46:28.656
  I1014 02:46:28.656926 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:46:28.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:28.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:28.693
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 10/14/25 02:46:28.698
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 10/14/25 02:46:28.703
  STEP: Ensure that the job reaches completions @ 10/14/25 02:46:32.727
  STEP: Verifying that the only appropriately index succeeded @ 10/14/25 02:46:32.736
  I1014 02:46:32.741926 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8367" for this suite. @ 10/14/25 02:46:32.746
â€¢ [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:340
  STEP: Creating a kubernetes client @ 10/14/25 02:46:32.753
  I1014 02:46:32.753481 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 02:46:32.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:46:32.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:46:32.785
  STEP: Creating service test in namespace statefulset-9659 @ 10/14/25 02:46:32.79
  STEP: Creating a new StatefulSet @ 10/14/25 02:46:32.794
  I1014 02:46:32.812311 21 wait.go:44] Found 0 stateful pods, waiting for 3
  I1014 02:46:42.813758 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:46:42.814025 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:46:42.814112 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/14/25 02:46:42.837
  I1014 02:46:42.847436 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 10/14/25 02:46:42.847
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/14/25 02:46:52.86
  STEP: Performing a canary update @ 10/14/25 02:46:52.86
  I1014 02:46:52.874803 21 statefulset.go:2542] Updating stateful set ss2
  I1014 02:46:52.897815 21 wait.go:74] Waiting for Pod statefulset-9659/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/14/25 02:47:02.884
  I1014 02:47:02.984150 21 wait.go:44] Found 2 stateful pods, waiting for 3
  I1014 02:47:12.947203 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:47:12.947721 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:47:12.947960 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/14/25 02:47:12.955
  I1014 02:47:12.966120 21 statefulset.go:2542] Updating stateful set ss2
  I1014 02:47:12.992759 21 wait.go:74] Waiting for Pod statefulset-9659/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1014 02:47:22.992136 21 statefulset.go:2542] Updating stateful set ss2
  I1014 02:47:23.025832 21 wait.go:56] Waiting for StatefulSet statefulset-9659/ss2 to complete update
  I1014 02:47:23.026205 21 wait.go:63] Waiting for Pod statefulset-9659/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1014 02:47:33.003766 21 statefulset.go:138] Deleting all statefulset in ns statefulset-9659
  I1014 02:47:33.008801 21 rest.go:153] Scaling statefulset ss2 to 0
  I1014 02:47:43.032150 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 02:47:43.036510 21 rest.go:91] Deleting statefulset ss2
  I1014 02:47:43.075211 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9659" for this suite. @ 10/14/25 02:47:43.083
â€¢ [70.341 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:609
  STEP: Creating a kubernetes client @ 10/14/25 02:47:43.094
  I1014 02:47:43.094149 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:47:43.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:47:43.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:47:43.12
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 10/14/25 02:47:43.126
  STEP: Awaiting for the job to fail as there are failed indexes @ 10/14/25 02:47:43.132
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 10/14/25 02:48:03.229
  I1014 02:48:03.236387 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7067" for this suite. @ 10/14/25 02:48:03.241
â€¢ [20.155 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 10/14/25 02:48:03.25
  I1014 02:48:03.250428 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 02:48:03.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:03.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:03.275
  I1014 02:48:05.328715 21 delete.go:62] Deleting pod "var-expansion-94ab6a89-9af5-400d-80b0-d485db9c09e8" in namespace "var-expansion-6484"
  I1014 02:48:05.341519 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-94ab6a89-9af5-400d-80b0-d485db9c09e8" to be fully deleted
  I1014 02:48:07.357468 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6484" for this suite. @ 10/14/25 02:48:07.365
â€¢ [4.123 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 10/14/25 02:48:07.373
  I1014 02:48:07.373019 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-runtime @ 10/14/25 02:48:07.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:07.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:07.398
  STEP: create the container @ 10/14/25 02:48:07.404
  I1014 02:48:07.415411      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 10/14/25 02:48:07.415
  STEP: get the container status @ 10/14/25 02:48:09.441
  STEP: the container should be terminated @ 10/14/25 02:48:09.446
  STEP: the termination message should be set @ 10/14/25 02:48:09.447
  I1014 02:48:09.447099 21 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/14/25 02:48:09.447
  I1014 02:48:09.471200 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9779" for this suite. @ 10/14/25 02:48:09.477
â€¢ [2.113 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:944
  STEP: Creating a kubernetes client @ 10/14/25 02:48:09.492
  I1014 02:48:09.492751 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 02:48:09.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:09.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:09.534
  STEP: Creating a ResourceQuota @ 10/14/25 02:48:09.539
  STEP: Getting a ResourceQuota @ 10/14/25 02:48:09.547
  STEP: Updating a ResourceQuota @ 10/14/25 02:48:09.554
  STEP: Verifying a ResourceQuota was modified @ 10/14/25 02:48:09.562
  STEP: Deleting a ResourceQuota @ 10/14/25 02:48:09.575
  STEP: Verifying the deleted ResourceQuota @ 10/14/25 02:48:09.581
  I1014 02:48:09.585871 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2569" for this suite. @ 10/14/25 02:48:09.59
â€¢ [0.109 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 10/14/25 02:48:09.597
  I1014 02:48:09.597469 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:48:09.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:09.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:09.625
  STEP: creating a secret @ 10/14/25 02:48:09.633
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/14/25 02:48:09.64
  STEP: patching the secret @ 10/14/25 02:48:09.644
  STEP: deleting the secret using a LabelSelector @ 10/14/25 02:48:09.655
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/14/25 02:48:09.663
  I1014 02:48:09.667996 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5081" for this suite. @ 10/14/25 02:48:09.69
â€¢ [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 10/14/25 02:48:09.719
  I1014 02:48:09.719826 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 02:48:09.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:09.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:09.76
  I1014 02:48:09.766972 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/14/25 02:48:11.185
  I1014 02:48:11.186042 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8538 --namespace=crd-publish-openapi-8538 create -f -'
  I1014 02:48:11.294957 21 builder.go:146] stderr: ""
  I1014 02:48:11.295019 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9499-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1014 02:48:11.295223 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8538 --namespace=crd-publish-openapi-8538 delete e2e-test-crd-publish-openapi-9499-crds test-cr'
  I1014 02:48:11.388859 21 builder.go:146] stderr: ""
  I1014 02:48:11.388908 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9499-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1014 02:48:11.388957 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8538 --namespace=crd-publish-openapi-8538 apply -f -'
  I1014 02:48:11.493554 21 builder.go:146] stderr: ""
  I1014 02:48:11.493601 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9499-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1014 02:48:11.493651 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8538 --namespace=crd-publish-openapi-8538 delete e2e-test-crd-publish-openapi-9499-crds test-cr'
  I1014 02:48:11.588840 21 builder.go:146] stderr: ""
  I1014 02:48:11.588966 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9499-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/14/25 02:48:11.588
  I1014 02:48:11.589047 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8538 explain e2e-test-crd-publish-openapi-9499-crds'
  I1014 02:48:11.674013 21 builder.go:146] stderr: ""
  I1014 02:48:11.674075 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9499-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1014 02:48:13.039054 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8538" for this suite. @ 10/14/25 02:48:13.048
â€¢ [3.337 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 10/14/25 02:48:13.057
  I1014 02:48:13.057486 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replication-controller @ 10/14/25 02:48:13.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:13.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:13.091
  STEP: creating a ReplicationController @ 10/14/25 02:48:13.099
  STEP: waiting for RC to be added @ 10/14/25 02:48:13.106
  STEP: waiting for available Replicas @ 10/14/25 02:48:13.106
  STEP: patching ReplicationController @ 10/14/25 02:48:14.193
  STEP: waiting for RC to be modified @ 10/14/25 02:48:14.203
  STEP: patching ReplicationController status @ 10/14/25 02:48:14.204
  STEP: waiting for RC to be modified @ 10/14/25 02:48:14.21
  STEP: waiting for available Replicas @ 10/14/25 02:48:14.211
  STEP: fetching ReplicationController status @ 10/14/25 02:48:14.216
  STEP: patching ReplicationController scale @ 10/14/25 02:48:14.22
  STEP: waiting for RC to be modified @ 10/14/25 02:48:14.226
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/14/25 02:48:14.227
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/14/25 02:48:16.501
  STEP: updating ReplicationController status @ 10/14/25 02:48:16.506
  STEP: waiting for RC to be modified @ 10/14/25 02:48:16.512
  STEP: listing all ReplicationControllers @ 10/14/25 02:48:16.513
  STEP: checking that ReplicationController has expected values @ 10/14/25 02:48:16.521
  STEP: deleting ReplicationControllers by collection @ 10/14/25 02:48:16.521
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/14/25 02:48:16.53
  I1014 02:48:16.576253 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 02:48:16.577069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1518" for this suite. @ 10/14/25 02:48:16.581
â€¢ [3.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:423
  STEP: Creating a kubernetes client @ 10/14/25 02:48:16.591
  I1014 02:48:16.591923 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename proxy @ 10/14/25 02:48:16.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:16.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:16.615
  I1014 02:48:16.624059 21 proxy.go:430] Creating pod...
  E1014 02:48:17.577296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:18.577534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:48:18.649212 21 proxy.go:454] Creating service...
  I1014 02:48:18.668231 21 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=DELETE
  I1014 02:48:18.696724 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1014 02:48:18.696876 21 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=OPTIONS
  I1014 02:48:18.707352 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1014 02:48:18.707478 21 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=PATCH
  I1014 02:48:18.721102 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1014 02:48:18.721239 21 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=POST
  I1014 02:48:18.730761 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1014 02:48:18.730923 21 proxy.go:491] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=PUT
  I1014 02:48:18.736442 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1014 02:48:18.736590 21 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=DELETE
  I1014 02:48:18.744965 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1014 02:48:18.745373 21 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1014 02:48:18.758039 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1014 02:48:18.758108 21 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=PATCH
  I1014 02:48:18.770809 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1014 02:48:18.770905 21 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=POST
  I1014 02:48:18.780347 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1014 02:48:18.780417 21 proxy.go:502] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=PUT
  I1014 02:48:18.786631 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1014 02:48:18.787670 21 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=GET
  I1014 02:48:18.792662 21 proxy.go:530] http.Client request:GET StatusCode:301
  I1014 02:48:18.793957 21 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=GET
  I1014 02:48:18.801978 21 proxy.go:530] http.Client request:GET StatusCode:301
  I1014 02:48:18.803678 21 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/pods/agnhost/proxy?method=HEAD
  I1014 02:48:18.809465 21 proxy.go:530] http.Client request:HEAD StatusCode:301
  I1014 02:48:18.809542 21 proxy.go:522] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-6003/services/e2e-proxy-test-service/proxy?method=HEAD
  I1014 02:48:18.815349 21 proxy.go:530] http.Client request:HEAD StatusCode:301
  I1014 02:48:18.817385 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6003" for this suite. @ 10/14/25 02:48:18.823
â€¢ [2.238 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:693
  STEP: Creating a kubernetes client @ 10/14/25 02:48:18.833
  I1014 02:48:18.833674 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename security-context-test @ 10/14/25 02:48:18.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:18.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:18.86
  E1014 02:48:19.578368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:20.578557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:21.579946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:22.580208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:48:22.910672 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9895" for this suite. @ 10/14/25 02:48:22.914
â€¢ [4.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:921
  STEP: Creating a kubernetes client @ 10/14/25 02:48:22.927
  I1014 02:48:22.927915 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:48:22.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:22.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:22.949
  STEP: Creating a job @ 10/14/25 02:48:22.953
  STEP: Ensuring active pods == parallelism @ 10/14/25 02:48:22.959
  E1014 02:48:23.581232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:24.581509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 10/14/25 02:48:24.978
  I1014 02:48:25.494393 21 pod_client.go:173] Successfully updated pod "adopt-release-nwt6k"
  STEP: Checking that the Job readopts the Pod @ 10/14/25 02:48:25.494
  E1014 02:48:25.582395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:26.583022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 10/14/25 02:48:27.515
  E1014 02:48:27.583645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:48:28.030840 21 pod_client.go:173] Successfully updated pod "adopt-release-nwt6k"
  STEP: Checking that the Job releases the Pod @ 10/14/25 02:48:28.031
  E1014 02:48:28.584147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:29.584687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:48:30.046922 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4759" for this suite. @ 10/14/25 02:48:30.054
â€¢ [7.135 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 10/14/25 02:48:30.064
  I1014 02:48:30.064576 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:48:30.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:30.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:30.088
  STEP: Creating the pod @ 10/14/25 02:48:30.093
  E1014 02:48:30.584975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:31.585224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:32.585205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:48:32.648226 21 pod_client.go:173] Successfully updated pod "labelsupdate608a5386-955f-44f8-876d-70d35245decc"
  E1014 02:48:33.585460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:34.585657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:35.585660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:36.586134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:48:36.679114 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1406" for this suite. @ 10/14/25 02:48:36.683
â€¢ [6.626 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3195
  STEP: Creating a kubernetes client @ 10/14/25 02:48:36.691
  I1014 02:48:36.691073 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:48:36.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:36.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:36.718
  STEP: fetching services @ 10/14/25 02:48:36.723
  I1014 02:48:36.727428 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9753" for this suite. @ 10/14/25 02:48:36.784
â€¢ [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 10/14/25 02:48:36.796
  I1014 02:48:36.796377 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:48:36.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:48:36.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:48:36.854
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-9cbcf67d-0cd4-4869-bcf0-676a1dafb260 @ 10/14/25 02:48:36.901
  STEP: Creating the pod @ 10/14/25 02:48:36.922
  E1014 02:48:37.587078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:38.587779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-9cbcf67d-0cd4-4869-bcf0-676a1dafb260 @ 10/14/25 02:48:38.962
  STEP: waiting to observe update in volume @ 10/14/25 02:48:38.967
  E1014 02:48:39.588294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:40.588347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:41.589085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:42.589271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:43.590087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:44.590292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:45.590524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:46.591283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:47.592146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:48.592461      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:49.593222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:50.593209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:51.593318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:52.593449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:53.593544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:54.593656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:55.593882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:56.594130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:57.594183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:58.594356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:48:59.594427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:00.594585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:01.595425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:02.595756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:03.595824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:04.596021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:05.596126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:06.596267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:07.596987      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:08.597175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:09.597972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:10.598182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:11.599873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:12.600010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:13.600893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:14.601181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:15.601151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:16.601307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:17.601434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:18.601691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:19.601631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:20.602070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:21.602550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:22.602396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:23.602516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:24.602621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:25.603170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:26.603596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:27.603759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:28.603741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:29.604525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:30.604642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:31.605640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:32.610034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:33.610443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:34.610787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:35.611524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:36.612283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:37.612826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:38.612867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:39.613542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:40.613817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:41.615581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:42.617398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:49:43.416294 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8516" for this suite. @ 10/14/25 02:49:43.429
â€¢ [66.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3404
  STEP: Creating a kubernetes client @ 10/14/25 02:49:43.438
  I1014 02:49:43.438849 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:49:43.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:49:43.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:49:43.477
  STEP: creating a Service @ 10/14/25 02:49:43.491
  STEP: watching for the Service to be added @ 10/14/25 02:49:43.542
  I1014 02:49:43.551304 21 service.go:3456] Found Service test-service-6zxsj in namespace services-1575 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32466}]
  I1014 02:49:43.551716 21 service.go:3463] Service test-service-6zxsj created
  STEP: Getting /status @ 10/14/25 02:49:43.551
  I1014 02:49:43.558731 21 service.go:3474] Service test-service-6zxsj has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/14/25 02:49:43.559
  STEP: watching for the Service to be patched @ 10/14/25 02:49:43.577
  I1014 02:49:43.580306 21 service.go:3497] observed Service test-service-6zxsj in namespace services-1575 with annotations: map[] & LoadBalancer: {[]}
  I1014 02:49:43.580355 21 service.go:3500] Found Service test-service-6zxsj in namespace services-1575 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc006f29530 []}]}
  I1014 02:49:43.580371 21 service.go:3507] Service test-service-6zxsj has service status patched
  STEP: updating the ServiceStatus @ 10/14/25 02:49:43.58
  I1014 02:49:43.601135 21 service.go:3527] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/14/25 02:49:43.601
  I1014 02:49:43.609380 21 service.go:3538] Observed Service test-service-6zxsj in namespace services-1575 with annotations: map[] & Conditions: []
  I1014 02:49:43.609803 21 service.go:3549] Observed Service test-service-6zxsj in namespace services-1575 with annotations: map[patchedstatus:true] & Conditions: []
  I1014 02:49:43.610086 21 service.go:3545] Found Service test-service-6zxsj in namespace services-1575 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1014 02:49:43.610339 21 service.go:3556] Service test-service-6zxsj has service status updated
  STEP: patching the service @ 10/14/25 02:49:43.61
  E1014 02:49:43.618089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: watching for the Service to be patched @ 10/14/25 02:49:43.631
  I1014 02:49:43.638294 21 service.go:3579] observed Service test-service-6zxsj in namespace services-1575 with labels: map[test-service-static:true]
  I1014 02:49:43.638778 21 service.go:3579] observed Service test-service-6zxsj in namespace services-1575 with labels: map[test-service-static:true]
  I1014 02:49:43.639018 21 service.go:3579] observed Service test-service-6zxsj in namespace services-1575 with labels: map[test-service-static:true]
  I1014 02:49:43.639315 21 service.go:3582] Found Service test-service-6zxsj in namespace services-1575 with labels: map[test-service:patched test-service-static:true]
  I1014 02:49:43.639569 21 service.go:3589] Service test-service-6zxsj patched
  STEP: deleting the service @ 10/14/25 02:49:43.639
  STEP: watching for the Service to be deleted @ 10/14/25 02:49:43.678
  I1014 02:49:43.683551 21 service.go:3613] Observed event: ADDED
  I1014 02:49:43.683595 21 service.go:3613] Observed event: MODIFIED
  I1014 02:49:43.683610 21 service.go:3613] Observed event: MODIFIED
  I1014 02:49:43.683718 21 service.go:3613] Observed event: MODIFIED
  I1014 02:49:43.683741 21 service.go:3609] Found Service test-service-6zxsj in namespace services-1575 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1014 02:49:43.683756 21 service.go:3618] Service test-service-6zxsj deleted
  I1014 02:49:43.683863 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1575" for this suite. @ 10/14/25 02:49:43.689
â€¢ [0.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 10/14/25 02:49:43.702
  I1014 02:49:43.703008 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:49:43.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:49:43.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:49:43.736
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/14/25 02:49:43.751
  E1014 02:49:44.619091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:45.622022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:46.625998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:47.626147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:49:47.79
  I1014 02:49:47.795374 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-5a7e681b-5f9a-4850-9efc-6d5c7816ba40 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:49:47.806
  I1014 02:49:47.824536 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5293" for this suite. @ 10/14/25 02:49:47.831
â€¢ [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/14/25 02:49:47.844
  I1014 02:49:47.844102 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:49:47.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:49:47.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:49:47.872
  STEP: creating pod @ 10/14/25 02:49:47.876
  E1014 02:49:48.626819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:49.627101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:49:49.920434 21 pods.go:83] Pod pod-hostip-af820a73-1f99-4349-a169-e0dfcecbd9fa has hostIP: 192.168.1.10
  I1014 02:49:49.922134 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-533" for this suite. @ 10/14/25 02:49:49.929
â€¢ [2.093 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 10/14/25 02:49:49.943
  I1014 02:49:49.944271 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:49:49.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:49:49.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:49:49.974
  STEP: Create a pod @ 10/14/25 02:49:49.979
  E1014 02:49:50.627148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:51.627295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/14/25 02:49:52.003
  I1014 02:49:52.013899 21 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1014 02:49:52.014103 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5921" for this suite. @ 10/14/25 02:49:52.018
â€¢ [2.082 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 10/14/25 02:49:52.028
  I1014 02:49:52.029026 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:49:52.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:49:52.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:49:52.057
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/14/25 02:49:52.062
  E1014 02:49:52.629595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:53.629821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:54.629875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:55.629988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:49:56.102
  I1014 02:49:56.107619 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-a79a99e8-e4d0-413c-b233-0999a2b23dd8 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:49:56.124
  I1014 02:49:56.144555 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9810" for this suite. @ 10/14/25 02:49:56.15
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 10/14/25 02:49:56.158
  I1014 02:49:56.158697 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:49:56.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:49:56.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:49:56.197
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:49:56.202
  E1014 02:49:56.633179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:57.634168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:58.638039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:49:59.638158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:50:00.239
  I1014 02:50:00.244440 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-180cb9f5-8047-47d3-91bf-fccef360f4a3 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:50:00.254
  I1014 02:50:00.274878 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8823" for this suite. @ 10/14/25 02:50:00.28
â€¢ [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 10/14/25 02:50:00.288
  I1014 02:50:00.293129 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename csinodes @ 10/14/25 02:50:00.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:00.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:00.331
  STEP: Creating initial csiNode "e2e-csinode-fkvf7" @ 10/14/25 02:50:00.338
  STEP: Getting initial csiNode "e2e-csinode-fkvf7" @ 10/14/25 02:50:00.342
  STEP: Patching initial csiNode: "e2e-csinode-fkvf7" @ 10/14/25 02:50:00.347
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-fkvf7=patched" @ 10/14/25 02:50:00.353
  STEP: Delete initial csiNode: "e2e-csinode-fkvf7" @ 10/14/25 02:50:00.357
  STEP: Confirm deletion of csiNode "e2e-csinode-fkvf7" @ 10/14/25 02:50:00.365
  STEP: Creating replacement csiNode "e2e-csinode-p7g5z" @ 10/14/25 02:50:00.374
  STEP: Getting replacement csiNode "e2e-csinode-p7g5z" @ 10/14/25 02:50:00.379
  STEP: Updating replacement csiNode "e2e-csinode-p7g5z" @ 10/14/25 02:50:00.383
  STEP: DeleteCollection of CSINodes with "e2e-csinode-p7g5z=updated" label @ 10/14/25 02:50:00.391
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-p7g5z=updated" @ 10/14/25 02:50:00.401
  I1014 02:50:00.405430 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-9973" for this suite. @ 10/14/25 02:50:00.409
â€¢ [0.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 10/14/25 02:50:00.417
  I1014 02:50:00.417533 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sysctl @ 10/14/25 02:50:00.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:00.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:00.447
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/14/25 02:50:00.451
  STEP: Watching for error events or started pod @ 10/14/25 02:50:00.461
  E1014 02:50:00.638759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:01.639018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 10/14/25 02:50:02.466
  E1014 02:50:02.639058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:03.639205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 10/14/25 02:50:04.478
  STEP: Getting logs from the pod @ 10/14/25 02:50:04.478
  STEP: Checking that the sysctl is actually updated @ 10/14/25 02:50:04.487
  I1014 02:50:04.487786 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8445" for this suite. @ 10/14/25 02:50:04.492
â€¢ [4.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 10/14/25 02:50:04.501
  I1014 02:50:04.501324 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename ingress @ 10/14/25 02:50:04.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:04.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:04.523
  STEP: getting /apis @ 10/14/25 02:50:04.528
  STEP: getting /apis/networking.k8s.io @ 10/14/25 02:50:04.536
  STEP: getting /apis/networking.k8s.iov1 @ 10/14/25 02:50:04.543
  STEP: creating @ 10/14/25 02:50:04.545
  STEP: getting @ 10/14/25 02:50:04.571
  STEP: listing @ 10/14/25 02:50:04.576
  STEP: watching @ 10/14/25 02:50:04.58
  I1014 02:50:04.580890 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 10/14/25 02:50:04.583
  STEP: cluster-wide watching @ 10/14/25 02:50:04.59
  I1014 02:50:04.590354 21 ingress.go:198] starting watch
  STEP: patching @ 10/14/25 02:50:04.591
  STEP: updating @ 10/14/25 02:50:04.603
  I1014 02:50:04.615723 21 ingress.go:221] waiting for watch events with expected annotations
  I1014 02:50:04.616386 21 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I1014 02:50:04.616788 21 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I1014 02:50:04.617071 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 10/14/25 02:50:04.617
  STEP: updating /status @ 10/14/25 02:50:04.624
  E1014 02:50:04.639453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get /status @ 10/14/25 02:50:04.66
  STEP: deleting @ 10/14/25 02:50:04.675
  STEP: deleting a collection @ 10/14/25 02:50:04.689
  I1014 02:50:04.707268 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6559" for this suite. @ 10/14/25 02:50:04.712
â€¢ [0.218 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 10/14/25 02:50:04.72
  I1014 02:50:04.720936 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:50:04.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:04.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:04.745
  STEP: Creating configMap configmap-7378/configmap-test-e3a99d21-ea47-48db-9372-90424ca47e37 @ 10/14/25 02:50:04.751
  STEP: Creating a pod to test consume configMaps @ 10/14/25 02:50:04.758
  E1014 02:50:05.639644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:06.640334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:50:06.783
  I1014 02:50:06.788992 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-8cc68a95-70b8-41a3-abc0-1727cd76428c container env-test: <nil>
  STEP: delete the pod @ 10/14/25 02:50:06.797
  I1014 02:50:06.816597 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7378" for this suite. @ 10/14/25 02:50:06.822
â€¢ [2.108 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/14/25 02:50:06.829
  I1014 02:50:06.829642 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:50:06.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:06.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:06.862
  STEP: creating the pod @ 10/14/25 02:50:06.868
  STEP: setting up watch @ 10/14/25 02:50:06.868
  STEP: submitting the pod to kubernetes @ 10/14/25 02:50:06.973
  STEP: verifying the pod is in kubernetes @ 10/14/25 02:50:06.991
  STEP: verifying pod creation was observed @ 10/14/25 02:50:07.003
  E1014 02:50:07.641209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:08.641356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/14/25 02:50:09.018
  STEP: verifying pod deletion was observed @ 10/14/25 02:50:09.025
  I1014 02:50:09.615760 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-915" for this suite. @ 10/14/25 02:50:09.622
â€¢ [2.799 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 10/14/25 02:50:09.636
  I1014 02:50:09.636714 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:50:09.642
  E1014 02:50:09.645742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:09.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:09.668
  STEP: validating cluster-info @ 10/14/25 02:50:09.672
  I1014 02:50:09.672772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-2981 cluster-info'
  I1014 02:50:09.816096 21 builder.go:146] stderr: ""
  I1014 02:50:09.816140 21 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1014 02:50:09.816249 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2981" for this suite. @ 10/14/25 02:50:09.824
â€¢ [0.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:338
  STEP: Creating a kubernetes client @ 10/14/25 02:50:09.836
  I1014 02:50:09.836104 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:50:09.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:09.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:09.874
  STEP: creating a replication controller @ 10/14/25 02:50:09.886
  I1014 02:50:09.886423 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 create -f -'
  I1014 02:50:10.138012 21 builder.go:146] stderr: ""
  I1014 02:50:10.138059 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/25 02:50:10.138
  I1014 02:50:10.138158 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 02:50:10.268928 21 builder.go:146] stderr: ""
  I1014 02:50:10.268974 21 builder.go:147] stdout: "update-demo-nautilus-s69qf update-demo-nautilus-sdtbj "
  I1014 02:50:10.269024 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods update-demo-nautilus-s69qf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 02:50:10.458492 21 builder.go:146] stderr: ""
  I1014 02:50:10.458537 21 builder.go:147] stdout: ""
  I1014 02:50:10.458564 21 kubectl.go:2505] update-demo-nautilus-s69qf is created but not running
  E1014 02:50:10.642590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:11.642688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:12.643040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:13.643293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:14.643465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:15.465635 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 02:50:15.583843 21 builder.go:146] stderr: ""
  I1014 02:50:15.583896 21 builder.go:147] stdout: "update-demo-nautilus-s69qf update-demo-nautilus-sdtbj "
  I1014 02:50:15.583948 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods update-demo-nautilus-s69qf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E1014 02:50:15.644163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:15.683056 21 builder.go:146] stderr: ""
  I1014 02:50:15.683105 21 builder.go:147] stdout: ""
  I1014 02:50:15.683119 21 kubectl.go:2505] update-demo-nautilus-s69qf is created but not running
  E1014 02:50:16.644291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:17.644481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:18.644759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:19.645294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:20.645618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:20.683886 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 02:50:20.795242 21 builder.go:146] stderr: ""
  I1014 02:50:20.795290 21 builder.go:147] stdout: "update-demo-nautilus-s69qf update-demo-nautilus-sdtbj "
  I1014 02:50:20.795339 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods update-demo-nautilus-s69qf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 02:50:20.879048 21 builder.go:146] stderr: ""
  I1014 02:50:20.879092 21 builder.go:147] stdout: "true"
  I1014 02:50:20.879142 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods update-demo-nautilus-s69qf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 02:50:20.967388 21 builder.go:146] stderr: ""
  I1014 02:50:20.967433 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 02:50:20.967450 21 kubectl.go:2396] validating pod update-demo-nautilus-s69qf
  I1014 02:50:20.976910 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 02:50:20.976979 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 02:50:20.976988 21 kubectl.go:2523] update-demo-nautilus-s69qf is verified up and running
  I1014 02:50:20.977025 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods update-demo-nautilus-sdtbj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 02:50:21.067243 21 builder.go:146] stderr: ""
  I1014 02:50:21.067285 21 builder.go:147] stdout: "true"
  I1014 02:50:21.067334 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods update-demo-nautilus-sdtbj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 02:50:21.153526 21 builder.go:146] stderr: ""
  I1014 02:50:21.153571 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 02:50:21.153586 21 kubectl.go:2396] validating pod update-demo-nautilus-sdtbj
  I1014 02:50:21.165000 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 02:50:21.165065 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 02:50:21.165079 21 kubectl.go:2523] update-demo-nautilus-sdtbj is verified up and running
  STEP: using delete to clean up resources @ 10/14/25 02:50:21.165
  I1014 02:50:21.165169 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 delete --grace-period=0 --force -f -'
  I1014 02:50:21.265945 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 02:50:21.265996 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1014 02:50:21.266052 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get rc,svc -l name=update-demo --no-headers'
  E1014 02:50:21.646420      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:21.857527 21 builder.go:146] stderr: "No resources found in kubectl-4298 namespace.\n"
  I1014 02:50:21.857606 21 builder.go:147] stdout: ""
  I1014 02:50:21.857713 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-4298 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1014 02:50:21.944036 21 builder.go:146] stderr: ""
  I1014 02:50:21.944079 21 builder.go:147] stdout: ""
  I1014 02:50:21.944306 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4298" for this suite. @ 10/14/25 02:50:21.949
â€¢ [12.120 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/14/25 02:50:21.955
  I1014 02:50:21.956005 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 02:50:21.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:21.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:21.978
  STEP: creating the pod @ 10/14/25 02:50:21.981
  STEP: submitting the pod to kubernetes @ 10/14/25 02:50:21.981
  E1014 02:50:22.647263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:23.647430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/14/25 02:50:24.011
  STEP: updating the pod @ 10/14/25 02:50:24.016
  I1014 02:50:24.535937 21 pod_client.go:173] Successfully updated pod "pod-update-d276c265-ccf3-4c36-9fba-d344eceac903"
  STEP: verifying the updated pod is in kubernetes @ 10/14/25 02:50:24.54
  I1014 02:50:24.545233 21 pods.go:391] Pod update OK
  I1014 02:50:24.545476 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6171" for this suite. @ 10/14/25 02:50:24.55
â€¢ [2.601 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:567
  STEP: Creating a kubernetes client @ 10/14/25 02:50:24.557
  I1014 02:50:24.557841 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:50:24.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:24.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:24.599
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 10/14/25 02:50:24.604
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 10/14/25 02:50:24.611
  E1014 02:50:24.647502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:25.647600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:26.648180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:27.648482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 10/14/25 02:50:28.634
  STEP: Verifying that the job status to ensure correct final state @ 10/14/25 02:50:28.641
  I1014 02:50:28.646358 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1014 02:50:28.648436      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "job-6468" for this suite. @ 10/14/25 02:50:28.658
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 10/14/25 02:50:28.669
  I1014 02:50:28.670005 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:50:28.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:28.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:28.69
  STEP: Creating configMap with name configmap-test-volume-5bef09a0-abfb-48a8-9689-4aa53e176790 @ 10/14/25 02:50:28.693
  STEP: Creating a pod to test consume configMaps @ 10/14/25 02:50:28.698
  E1014 02:50:29.649146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:30.649680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:31.650614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:32.650762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:50:32.732
  I1014 02:50:32.739748 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-61464642-c1a0-4ee9-9a4d-bd72f826c9df container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 02:50:32.749
  I1014 02:50:32.770935 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7525" for this suite. @ 10/14/25 02:50:32.775
â€¢ [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 10/14/25 02:50:32.79
  I1014 02:50:32.790652 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:50:32.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:32.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:32.821
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/14/25 02:50:32.826
  E1014 02:50:33.651080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:34.651364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:35.651307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:36.651529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:50:36.868
  I1014 02:50:36.872555 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-82a99284-2356-422c-942c-bc2fabb1863f container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:50:36.881
  I1014 02:50:36.909231 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-476" for this suite. @ 10/14/25 02:50:36.915
â€¢ [4.132 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 10/14/25 02:50:36.922
  I1014 02:50:36.923066 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:50:36.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:36.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:36.972
  STEP: Creating configMap with name cm-test-opt-del-82502f0f-4f95-46fa-b7f3-79dee08b74b0 @ 10/14/25 02:50:37.014
  STEP: Creating configMap with name cm-test-opt-upd-640c03a6-b401-4c4c-ae68-9b219cfef815 @ 10/14/25 02:50:37.019
  STEP: Creating the pod @ 10/14/25 02:50:37.032
  E1014 02:50:37.651684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:38.651824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-82502f0f-4f95-46fa-b7f3-79dee08b74b0 @ 10/14/25 02:50:39.106
  STEP: Updating configmap cm-test-opt-upd-640c03a6-b401-4c4c-ae68-9b219cfef815 @ 10/14/25 02:50:39.118
  STEP: Creating configMap with name cm-test-opt-create-146c6fc2-02ab-43ed-bc85-2e30f16db43d @ 10/14/25 02:50:39.13
  STEP: waiting to observe update in volume @ 10/14/25 02:50:39.142
  E1014 02:50:39.651939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:40.652217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:41.652345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:42.652836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:43.198415 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8018" for this suite. @ 10/14/25 02:50:43.203
â€¢ [6.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 10/14/25 02:50:43.219
  I1014 02:50:43.220106 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/25 02:50:43.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:43.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:43.244
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/25 02:50:43.252
  E1014 02:50:43.653495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:44.653576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/14/25 02:50:45.28
  E1014 02:50:45.653832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:46.654137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/14/25 02:50:47.325
  E1014 02:50:47.654555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:48.655719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/14/25 02:50:49.343
  I1014 02:50:49.365715 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5772" for this suite. @ 10/14/25 02:50:49.373
â€¢ [6.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/14/25 02:50:49.385
  I1014 02:50:49.385972 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 02:50:49.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:49.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:49.414
  I1014 02:50:49.443773 21 resource.go:81] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/25 02:50:49.443
  E1014 02:50:49.656774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:50.656919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:51.457596 21 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/14/25 02:50:51.469
  E1014 02:50:51.657850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:52.657979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:53.507942 21 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2336",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cb0fec7-fd9e-4db8-a065-87a5c806610b",
      ResourceVersion: (string) (len=4) "9761",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 02:50:53.597501 21 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2336",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba741969-e794-4bf9-8d7c-e9a66d984daa",
      ResourceVersion: (string) (len=4) "9751",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "5cb0fec7-fd9e-4db8-a065-87a5c806610b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 62 30 66 65  63 37 2d 66 64 39 65 2d  |\"5cb0fec7-fd9e-|
              00000120  34 64 62 38 2d 61 30 36  35 2d 38 37 61 35 63 38  |4db8-a065-87a5c8|
              00000130  30 36 36 31 30 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06610b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:50:53.603256 21 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-9vx6w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-9vx6w",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-2336",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "370eefe9-e1cc-497b-9154-3a76aa84d0fd",
      ResourceVersion: (string) (len=4) "9750",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "ba741969-e794-4bf9-8d7c-e9a66d984daa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  37 34 31 39 36 39 2d 65  |d\":\"ba741969-e|
              00000090  37 39 34 2d 34 62 66 39  2d 38 64 37 63 2d 65 39  |794-4bf9-8d7c-e9|
              000000a0  61 36 36 64 39 38 34 64  61 61 5c 22 7d 22 3a 7b  |a66d984daa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  30 5c 22 7d 22 3a 7b 22  |.42.1.150\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wn44p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wn44p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007052,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007051,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007051,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007052,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://a2d6e4ec861ae176efa94bf905e256662c6e737f463181b0aae2e4633605e3f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wn44p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:50:53.623981 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2336" for this suite. @ 10/14/25 02:50:53.629
â€¢ [4.250 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 10/14/25 02:50:53.635
  I1014 02:50:53.635914 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:50:53.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:50:53.654
  E1014 02:50:53.658409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:50:53.661
  STEP: Setting up server cert @ 10/14/25 02:50:53.688
  E1014 02:50:54.659629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:50:54.79
  STEP: Deploying the webhook pod @ 10/14/25 02:50:54.796
  STEP: Wait for the deployment to be ready @ 10/14/25 02:50:54.809
  I1014 02:50:54.851622 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 02:50:55.659737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:56.659887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 02:50:56.873
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:50:56.89
  E1014 02:50:57.669306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:50:57.892058 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/14/25 02:50:57.897
  STEP: create a pod @ 10/14/25 02:50:57.94
  E1014 02:50:58.669367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:50:59.669541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/14/25 02:50:59.97
  I1014 02:50:59.971323 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=webhook-1634 attach --namespace=webhook-1634 to-be-attached-pod -i -c=container1'
  I1014 02:51:00.108523 21 builder.go:135] rc: 1
  I1014 02:51:00.210464 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1634" for this suite. @ 10/14/25 02:51:00.226
  STEP: Destroying namespace "webhook-markers-7797" for this suite. @ 10/14/25 02:51:00.235
â€¢ [6.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/14/25 02:51:00.247
  I1014 02:51:00.247284 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:51:00.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:51:00.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:51:00.295
  STEP: Creating projection with secret that has name projected-secret-test-4bcfbc39-5c73-49b5-9d2a-8b08b0c5f6a0 @ 10/14/25 02:51:00.311
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:51:00.323
  E1014 02:51:00.669978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:01.670644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:02.671304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:03.672269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:51:04.371
  I1014 02:51:04.374904 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-secrets-27e78790-02d4-46c4-aeed-351b205eefa2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:51:04.383
  I1014 02:51:04.399322 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9974" for this suite. @ 10/14/25 02:51:04.404
â€¢ [4.164 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 10/14/25 02:51:04.411
  I1014 02:51:04.411327 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 02:51:04.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:51:04.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:51:04.436
  STEP: Creating pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740 @ 10/14/25 02:51:04.441
  E1014 02:51:04.672098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:05.672235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 02:51:06.466
  I1014 02:51:06.473778 21 container_probe.go:1748] Initial restart count of pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c is 0
  I1014 02:51:06.477098 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:06.672584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:07.673964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:08.482170 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:08.674771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:09.675318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:10.511055 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:10.678112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:11.678260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:12.516353 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:12.679826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:13.679991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:14.521522 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:14.680125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:15.680270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:16.534232 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:16.680875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:17.681295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:18.539269 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:18.682195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:19.682363      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:20.545466 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:20.683135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:21.683311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:22.551117 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:22.683466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:23.683622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:24.559855 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:24.684147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:25.684158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:26.568101 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:26.684635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:27.684828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:28.573282 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:28.684890      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:29.685007      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:30.578005 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:30.685638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:31.685647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:32.585134 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:32.686712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:33.686766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:34.590077 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:34.687060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:35.687458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:36.596671 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:36.688266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:37.688596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:38.602561 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:38.689084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:39.689434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:40.607200 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:40.689709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:41.690613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:42.611984 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:42.691513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:43.691612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:44.616784 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:44.692236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:45.692509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:46.621087 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:46.692630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:47.692714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:48.630632 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:48.692817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:49.693119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:50.635545 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:50.693924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:51.694036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:52.640738 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:52.694218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:53.694500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:54.645974 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  E1014 02:51:54.694375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:55.694563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:51:56.652975 21 container_probe.go:1758] Get pod busybox-52270a75-6013-40ca-bdf9-95d01f363e0c in namespace container-probe-9740
  I1014 02:51:56.653474 21 container_probe.go:1762] Restart count of pod container-probe-9740/busybox-52270a75-6013-40ca-bdf9-95d01f363e0c is now 1 (50.179624824s elapsed)
  STEP: deleting the pod @ 10/14/25 02:51:56.653
  I1014 02:51:56.679880 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9740" for this suite. @ 10/14/25 02:51:56.688
  E1014 02:51:56.695279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
â€¢ [52.296 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 10/14/25 02:51:56.708
  I1014 02:51:56.708117 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:51:56.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:51:56.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:51:56.747
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:51:56.764
  E1014 02:51:57.695452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:58.695716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:51:59.695858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:00.698176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:52:00.797
  I1014 02:52:00.802627 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-f9560638-8c97-4de7-9a28-b579dd773260 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:52:00.816
  I1014 02:52:00.846913 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2837" for this suite. @ 10/14/25 02:52:00.855
â€¢ [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/14/25 02:52:00.87
  I1014 02:52:00.870956 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 02:52:00.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:52:00.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:52:00.899
  I1014 02:52:00.932314 21 resource.go:81] Pod name rollover-pod: Found 0 pods out of 1
  E1014 02:52:01.698265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:02.698368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:03.698469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:04.698625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:05.698720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:05.980615 21 resource.go:81] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/14/25 02:52:05.98
  I1014 02:52:05.980860 21 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1014 02:52:06.699192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:07.699347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:07.987000 21 deployment.go:940] Creating deployment "test-rollover-deployment"
  I1014 02:52:07.999222 21 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1014 02:52:08.699445      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:09.700362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:10.014283 21 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I1014 02:52:10.030330 21 deployment.go:962] Ensure that both replica sets have 1 created replica
  I1014 02:52:10.045862 21 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1014 02:52:10.059206 21 deployment.go:314] Updating deployment test-rollover-deployment
  I1014 02:52:10.059694 21 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1014 02:52:10.702211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:11.702556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:12.068973 21 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1014 02:52:12.076606 21 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I1014 02:52:12.083101 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1014 02:52:12.083589 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 02:52:12.702833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:13.703247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:14.092511 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1014 02:52:14.092971 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 02:52:14.703237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:15.703698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:16.096010 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1014 02:52:16.096599 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 02:52:16.705921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:17.707016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:18.097419 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1014 02:52:18.097885 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 02:52:18.708000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:19.708112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:20.093682 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I1014 02:52:20.094320 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 2, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 2, 52, 8, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 02:52:20.708288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:21.708360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:22.092430 21 deployment.go:95] 
  I1014 02:52:22.092877 21 deployment.go:993] Ensure that both old replica sets have no replicas
  I1014 02:52:22.101865 21 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92dfe895-0421-4120-ace0-703324649edc",
      ResourceVersion: (string) (len=5) "10142",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 02:52:22.121055 21 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "770c0aa0-c8c3-40e6-9609-07ecb46ee05e",
      ResourceVersion: (string) (len=5) "10132",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "92dfe895-0421-4120-ace0-703324649edc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 64 66 65 38  39 35 2d 30 34 32 31 2d  |\"92dfe895-0421-|
              00000120  34 31 32 30 2d 61 63 65  30 2d 37 30 33 33 32 34  |4120-ace0-703324|
              00000130  36 34 39 65 64 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |649edc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:52:22.133678 21 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1014 02:52:22.134086 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cc23f6e-7e26-4794-896f-0205ce90cc1a",
      ResourceVersion: (string) (len=5) "10141",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007120,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "92dfe895-0421-4120-ace0-703324649edc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 32 64 66 65 38 39 35  2d 30 34 32 31 2d 34 31  |92dfe895-0421-41|
              000000c0  32 30 2d 61 63 65 30 2d  37 30 33 33 32 34 36 34  |20-ace0-70332464|
              000000d0  39 65 64 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9edc\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:52:22.135279 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ac518fc-5408-4719-8d7b-d583afdde633",
      ResourceVersion: (string) (len=5) "10107",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007128,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "92dfe895-0421-4120-ace0-703324649edc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 64 66 65 38  39 35 2d 30 34 32 31 2d  |\"92dfe895-0421-|
              00000120  34 31 32 30 2d 61 63 65  30 2d 37 30 33 33 32 34  |4120-ace0-703324|
              00000130  36 34 39 65 64 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |649edc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:52:22.157289 21 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-6hpvp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-6hpvp",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-2822",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b1cf700-ffdd-4833-8c6c-58619f15cd79",
      ResourceVersion: (string) (len=5) "10121",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "770c0aa0-c8c3-40e6-9609-07ecb46ee05e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  30 63 30 61 61 30 2d 63  |d\":\"770c0aa0-c|
              00000090  38 63 33 2d 34 30 65 36  2d 39 36 30 39 2d 30 37  |8c3-40e6-9609-07|
              000000a0  65 63 62 34 36 65 65 30  35 65 5c 22 7d 22 3a 7b  |ecb46ee05e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  38 5c 22 7d 22 3a 7b 22  |.42.1.158\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8hsd6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8hsd6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://61d69aaacb8318153a57187a416a815c9a75b76c3cb315b4d42de9a22f82b06b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8hsd6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:52:22.174664 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2822" for this suite. @ 10/14/25 02:52:22.184
â€¢ [21.329 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 10/14/25 02:52:22.196
  I1014 02:52:22.196775 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:52:22.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:52:22.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:52:22.221
  I1014 02:52:22.227715 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 create -f -'
  I1014 02:52:22.445215 21 builder.go:146] stderr: ""
  I1014 02:52:22.445257 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1014 02:52:22.445294 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 create -f -'
  I1014 02:52:22.643885 21 builder.go:146] stderr: ""
  I1014 02:52:22.643931 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/14/25 02:52:22.643
  E1014 02:52:22.709114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:23.648532 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 02:52:23.648581 21 framework.go:733] Found 1 / 1
  I1014 02:52:23.648604 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1014 02:52:23.652045 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 02:52:23.652411 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1014 02:52:23.652706 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 describe pod agnhost-primary-sntw2'
  E1014 02:52:23.709764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:52:23.760912 21 builder.go:146] stderr: ""
  I1014 02:52:23.761000 21 builder.go:147] stdout: "Name:             agnhost-primary-sntw2\nNamespace:        kubectl-3095\nPriority:         0\nService Account:  default\nNode:             k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm/192.168.1.10\nStart Time:       Tue, 14 Oct 2025 02:52:22 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.1.159\nIPs:\n  IP:           10.42.1.159\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c6926dfe89fcd1f5f114db36ccdcac42e4fcb202f662a3c50709abd33c908526\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 14 Oct 2025 02:52:23 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-p4vsg (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-p4vsg:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3095/agnhost-primary-sntw2 to k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I1014 02:52:23.761073 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 describe rc agnhost-primary'
  I1014 02:52:23.856032 21 builder.go:146] stderr: ""
  I1014 02:52:23.856092 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3095\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-sntw2\n"
  I1014 02:52:23.856210 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 describe service agnhost-primary'
  I1014 02:52:24.005890 21 builder.go:146] stderr: ""
  I1014 02:52:24.005967 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3095\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.222.109\nIPs:                      10.43.222.109\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.159:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1014 02:52:24.009956 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 describe node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e'
  I1014 02:52:24.141181 21 builder.go:146] stderr: ""
  I1014 02:52:24.141361 21 builder.go:147] stdout: "Name:               k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=g4s.kube.small\n                    beta.kubernetes.io/os=linux\n                    k3s.io/external-ip=31.28.88.161\n                    kubernetes.civo.com/civo-node-pool=c50f3080-85c5-4895-aab2-a26dfbfe2090\n                    kubernetes.civo.com/civo-node-size=g4s.kube.small\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=g4s.kube.small\n                    region=staging\n                    topology.kubernetes.io/region=staging\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 192.168.1.11\n                    civo.com/user-last-applied-pool-config: {\"taints\":null,\"labels\":{\"topology.kubernetes.io/region\":\"staging\"}}\n                    csi.volume.kubernetes.io/nodeid: {\"csi.civo.com\":\"ceb03f43-2a6e-4f14-830e-8bcd2cc9d64a\"}\n                    flannel.alpha.coreos.com/backend-data: null\n                    flannel.alpha.coreos.com/backend-type: host-gw\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.1.11\n                    k3s.io/node-args:\n                      [\"agent\",\"--kubelet-arg\",\"cloud-provider=external\",\"--kubelet-arg\",\"max-pods=24\",\"--server\",\"https://31.28.88.161:6443\",\"--token\",\"*******...\n                    k3s.io/node-config-hash: FV2FYDZ3BG6O32OJ3OBJLYPWJ76EN6X45GYUCLG3C2IUS2Y4GSYA====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 14 Oct 2025 02:16:25 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 14 Oct 2025 02:52:21 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  KernelDeadlock       False   Tue, 14 Oct 2025 02:51:38 +0000   Tue, 14 Oct 2025 02:16:34 +0000   KernelHasNoDeadlock          kernel has no deadlock\n  ReadonlyFilesystem   False   Tue, 14 Oct 2025 02:51:38 +0000   Tue, 14 Oct 2025 02:16:34 +0000   FilesystemIsNotReadOnly      Filesystem is not read-only\n  MemoryPressure       False   Tue, 14 Oct 2025 02:50:27 +0000   Tue, 14 Oct 2025 02:16:25 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 14 Oct 2025 02:50:27 +0000   Tue, 14 Oct 2025 02:16:25 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 14 Oct 2025 02:50:27 +0000   Tue, 14 Oct 2025 02:16:25 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 14 Oct 2025 02:50:27 +0000   Tue, 14 Oct 2025 02:16:25 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.1.11\n  ExternalIP:  31.28.88.161\n  Hostname:    k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e\nCapacity:\n  cpu:                1\n  ephemeral-storage:  38640352Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             1935152Ki\n  pods:               24\nAllocatable:\n  cpu:                820m\n  ephemeral-storage:  33463464697\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             1320752Ki\n  pods:               24\nSystem Info:\n  Machine ID:                 d4b43db4a6f41d3a477626bb68e5dd9e\n  System UUID:                cff44346-02d5-5920-93f2-81004d712cb7\n  Boot ID:                    f3de56f0-2ee5-49d2-8d20-a8ddf4ddd1b1\n  Kernel Version:             6.1.140-0-virt\n  OS Image:                   Alpine Linux v3.18\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.1.4-k3s1\n  Kubelet Version:            v1.33.5+k3s1\n  Kube-Proxy Version:         \nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   civo://ceb03f43-2a6e-4f14-830e-8bcd2cc9d64a\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                              CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                              ------------  ----------  ---------------  -------------  ---\n  kube-system                 civo-ccm-5759fbb5c6-pc5xw         0 (0%)        0 (0%)      0 (0%)           0 (0%)         35m\n  kube-system                 civo-csi-controller-0             0 (0%)        0 (0%)      0 (0%)           0 (0%)         35m\n  kube-system                 civo-csi-node-5ndmq               0 (0%)        0 (0%)      0 (0%)           0 (0%)         35m\n  kube-system                 coredns-64fd4b4794-zj4r6          100m (12%)    0 (0%)      70Mi (5%)        170Mi (13%)    35m\n  kube-system                 metrics-server-7bfffcd44-r2x5q    100m (12%)    0 (0%)      70Mi (5%)        0 (0%)         35m\n  kube-system                 traefik-dzn5b                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         35m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                200m (24%)   0 (0%)\n  memory             140Mi (10%)  170Mi (13%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type     Reason                   Age                From                   Message\n  ----     ------                   ----               ----                   -------\n  Normal   Starting                 35m                kube-proxy             \n  Normal   CertificateExpirationOK  36m                k3s-cert-monitor       Node and Certificate Authority certificates managed by k3s are OK\n  Normal   Starting                 36m                kubelet                Starting kubelet.\n  Warning  InvalidDiskCapacity      36m                kubelet                invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  36m                kubelet                Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  35m (x2 over 36m)  kubelet                Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    35m (x2 over 36m)  kubelet                Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     35m (x2 over 36m)  kubelet                Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e status is now: NodeHasSufficientPID\n  Normal   NodeReady                35m                kubelet                Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e status is now: NodeReady\n  Normal   RegisteredNode           35m                node-controller        Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e event: Registered Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e in Controller\n  Normal   Synced                   35m                cloud-node-controller  Node synced successfully\n"
  I1014 02:52:24.141431 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3095 describe namespace kubectl-3095'
  I1014 02:52:24.248621 21 builder.go:146] stderr: ""
  I1014 02:52:24.248673 21 builder.go:147] stdout: "Name:         kubectl-3095\nLabels:       e2e-framework=kubectl\n              e2e-run=e4e7049c-5f80-48b2-9217-1dd2a58718ae\n              kubernetes.io/metadata.name=kubectl-3095\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1014 02:52:24.248884 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3095" for this suite. @ 10/14/25 02:52:24.263
â€¢ [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 10/14/25 02:52:24.272
  I1014 02:52:24.272457 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 02:52:24.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:52:24.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:52:24.31
  E1014 02:52:24.709974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:25.710812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:26.710965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:27.712001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:28.713082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:29.713721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:30.713910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:31.714419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:32.715169      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:33.716195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:34.716875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:35.717706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:36.718618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:37.718821      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:38.719479      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:39.720130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:40.720583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:41.721429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:42.721495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:43.722522      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:44.723369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:45.724227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:46.725285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:47.725401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:48.726107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:49.726161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:50.726542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:51.727398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:52.728319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:53.729226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:54.730000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:55.730935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:56.731258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:57.731612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:58.733267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:52:59.733624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:00.733902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:01.735460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:02.735590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:03.735973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:04.737077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:05.738096      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:06.738634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:07.738895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:08.739581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:09.740716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:10.741025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:11.741577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:12.742327      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:13.742948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:14.743609      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:15.744542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:16.745963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:17.749914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:18.750154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:19.750945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:20.751355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:21.751421      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:22.752606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:23.753015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:24.388703 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9299" for this suite. @ 10/14/25 02:53:24.394
â€¢ [60.129 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 10/14/25 02:53:24.402
  I1014 02:53:24.403081 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 02:53:24.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:24.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:24.427
  STEP: Creating a pod to test env composition @ 10/14/25 02:53:24.433
  E1014 02:53:24.754092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:25.754128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:26.755119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:27.755237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:53:28.472
  I1014 02:53:28.476674 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod var-expansion-bc716dd7-65fd-4722-b404-bc51b65b7c3a container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 02:53:28.488
  I1014 02:53:28.505025 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-362" for this suite. @ 10/14/25 02:53:28.511
â€¢ [4.115 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1050
  STEP: Creating a kubernetes client @ 10/14/25 02:53:28.518
  I1014 02:53:28.518132 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:53:28.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:28.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:28.544
  STEP: create deployment with httpd image @ 10/14/25 02:53:28.55
  I1014 02:53:28.550257 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-6549 create -f -'
  I1014 02:53:28.751618 21 builder.go:146] stderr: ""
  I1014 02:53:28.751662 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/14/25 02:53:28.751
  I1014 02:53:28.751747 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-6549 diff -f -'
  E1014 02:53:28.761162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:28.991677 21 builder.go:135] rc: 1
  I1014 02:53:28.991784 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-6549 delete -f -'
  I1014 02:53:29.073510 21 builder.go:146] stderr: ""
  I1014 02:53:29.073574 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1014 02:53:29.073813 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6549" for this suite. @ 10/14/25 02:53:29.082
â€¢ [0.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:83
  STEP: Creating a kubernetes client @ 10/14/25 02:53:29.104
  I1014 02:53:29.104523 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 02:53:29.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:29.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:29.132
  STEP: Counting existing ResourceQuota @ 10/14/25 02:53:29.136
  E1014 02:53:29.761309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:30.762162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:31.762402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:32.762496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:33.762544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/25 02:53:34.145
  STEP: Ensuring resource quota status is calculated @ 10/14/25 02:53:34.151
  E1014 02:53:34.762715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:35.762829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:36.156437 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4441" for this suite. @ 10/14/25 02:53:36.16
â€¢ [7.063 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 10/14/25 02:53:36.167
  I1014 02:53:36.167349 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 02:53:36.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:36.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:36.19
  STEP: Creating a Serviceaccount "e2e-sa-mwbg9" in namespace "svcaccounts-7358" @ 10/14/25 02:53:36.195
  STEP: Creating a ServiceaccountToken "e2e-sa-mwbg9" in namespace "svcaccounts-7358" @ 10/14/25 02:53:36.201
  STEP: Creating a TokenReview for "e2e-sa-mwbg9" in namespace "svcaccounts-7358" @ 10/14/25 02:53:36.208
  I1014 02:53:36.211592 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7358" for this suite. @ 10/14/25 02:53:36.261
â€¢ [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 10/14/25 02:53:36.271
  I1014 02:53:36.271234 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:53:36.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:36.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:36.293
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/14/25 02:53:36.299
  E1014 02:53:36.762948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:37.763129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:38.763959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:39.764090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:53:40.328
  I1014 02:53:40.336144 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-bf3c4322-c57c-4acc-8ece-f3f357a33fdf container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:53:40.347
  I1014 02:53:40.368153 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5904" for this suite. @ 10/14/25 02:53:40.375
â€¢ [4.113 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1251
  STEP: Creating a kubernetes client @ 10/14/25 02:53:40.399
  I1014 02:53:40.399648 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:53:40.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:40.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:40.423
  STEP: creating service nodeport-test with type=NodePort in namespace services-3140 @ 10/14/25 02:53:40.427
  I1014 02:53:40.478266 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 02:53:40.765232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:41.765241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:42.485033 21 resource.go:361] Creating new exec pod
  E1014 02:53:42.765278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:43.765484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:44.534385 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1014 02:53:44.725167 21 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test (10.43.216.165) 80 port [tcp/http] succeeded!\n"
  I1014 02:53:44.725221 21 builder.go:147] stdout: ""
  E1014 02:53:44.766379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:45.535363 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E1014 02:53:45.766582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:45.773126 21 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test (10.43.216.165) 80 port [tcp/http] succeeded!\n"
  I1014 02:53:45.773172 21 builder.go:147] stdout: "nodeport-test-68d64cf559-fxxwr"
  I1014 02:53:45.773243 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.216.165 80'
  I1014 02:53:45.943378 21 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.216.165 80\necho hostName\nConnection to 10.43.216.165 80 port [tcp/http] succeeded!\n"
  I1014 02:53:45.943425 21 builder.go:147] stdout: ""
  E1014 02:53:46.767442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:46.773664 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.216.165 80'
  I1014 02:53:46.967015 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.216.165 80\n+ echo hostNameConnection to 10.43.216.165 80 port [tcp/http] succeeded!\n\n"
  I1014 02:53:46.967064 21 builder.go:147] stdout: "nodeport-test-68d64cf559-fxxwr"
  I1014 02:53:46.967140 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.11 31520'
  I1014 02:53:47.140457 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.11 31520\nConnection to 192.168.1.11 31520 port [tcp/*] succeeded!\n"
  I1014 02:53:47.140505 21 builder.go:147] stdout: ""
  E1014 02:53:47.768253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:47.967661 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.11 31520'
  I1014 02:53:48.124862 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.11 31520\nConnection to 192.168.1.11 31520 port [tcp/*] succeeded!\n"
  I1014 02:53:48.124910 21 builder.go:147] stdout: "nodeport-test-68d64cf559-fxxwr"
  I1014 02:53:48.124983 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-3140 exec execpod7kjbl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 31520'
  I1014 02:53:48.307944 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.10 31520\n+ echo hostNameConnection to 192.168.1.10 31520 port [tcp/*] succeeded!\n\n"
  I1014 02:53:48.307994 21 builder.go:147] stdout: "nodeport-test-68d64cf559-fxxwr"
  I1014 02:53:48.308113 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3140" for this suite. @ 10/14/25 02:53:48.315
â€¢ [7.931 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 10/14/25 02:53:48.328
  I1014 02:53:48.328162 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/25 02:53:48.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:48.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:48.351
  E1014 02:53:48.768878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:49.769128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:50.769286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:51.769268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:52.377779 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7083" for this suite. @ 10/14/25 02:53:52.382
â€¢ [4.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 10/14/25 02:53:52.391
  I1014 02:53:52.391317 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:53:52.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:52.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:52.411
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:53:52.415
  E1014 02:53:52.769937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:53.770051      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:54.770338      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:55.770355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:53:56.441
  I1014 02:53:56.446486 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-5dae7746-546a-488a-91f9-cd75c41ed8c0 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:53:56.456
  I1014 02:53:56.475683 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6644" for this suite. @ 10/14/25 02:53:56.481
â€¢ [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/14/25 02:53:56.489
  I1014 02:53:56.489209 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 02:53:56.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:56.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:56.517
  I1014 02:53:56.521892 21 deployment.go:798] Creating deployment "test-recreate-deployment"
  I1014 02:53:56.527001 21 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1014 02:53:56.550195 21 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E1014 02:53:56.771080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:53:57.774988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:58.559392 21 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I1014 02:53:58.562660 21 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I1014 02:53:58.571621 21 deployment.go:314] Updating deployment test-recreate-deployment
  I1014 02:53:58.571666 21 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1014 02:53:58.698309 21 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7374",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bcd949e1-789b-4adb-a959-cb157361c28a",
      ResourceVersion: (string) (len=5) "10626",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007236,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 02:53:58.754200 21 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7374",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45e3a790-8ab3-4c54-802c-6b25a7776bd5",
      ResourceVersion: (string) (len=5) "10625",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bcd949e1-789b-4adb-a959-cb157361c28a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 64 39 34 39  65 31 2d 37 38 39 62 2d  |\"bcd949e1-789b-|
              00000120  34 61 64 62 2d 61 39 35  39 2d 63 62 31 35 37 33  |4adb-a959-cb1573|
              00000130  36 31 63 32 38 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |61c28a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 02:53:58.755018 21 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1014 02:53:58.755342 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7374",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "611b4175-c463-4611-af57-20cb32822f21",
      ResourceVersion: (string) (len=5) "10614",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007236,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "bcd949e1-789b-4adb-a959-cb157361c28a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 64 39 34 39  65 31 2d 37 38 39 62 2d  |\"bcd949e1-789b-|
              00000120  34 61 64 62 2d 61 39 35  39 2d 63 62 31 35 37 33  |4adb-a959-cb1573|
              00000130  36 31 63 32 38 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |61c28a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E1014 02:53:58.774994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:53:58.776909 21 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-fqstn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-fqstn",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7374",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2040d64-e672-490e-b4ba-16051e8f76d8",
      ResourceVersion: (string) (len=5) "10627",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "45e3a790-8ab3-4c54-802c-6b25a7776bd5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  65 33 61 37 39 30 2d 38  |d\":\"45e3a790-8|
              00000090  61 62 33 2d 34 63 35 34  2d 38 30 32 63 2d 36 62  |ab3-4c54-802c-6b|
              000000a0  32 35 61 37 37 37 36 62  64 35 5c 22 7d 22 3a 7b  |25a7776bd5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f5gvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f5gvq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f5gvq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 02:53:58.824321 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7374" for this suite. @ 10/14/25 02:53:58.832
â€¢ [2.350 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/14/25 02:53:58.839
  I1014 02:53:58.839552 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:53:58.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:53:58.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:53:58.868
  STEP: Creating projection with secret that has name projected-secret-test-264de329-61db-4ef3-9369-d58d4cf0ce00 @ 10/14/25 02:53:58.872
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:53:58.878
  E1014 02:53:59.775216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:00.775344      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:01.775718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:02.775919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:54:02.917
  I1014 02:54:02.921737 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-secrets-4835b3bc-1c30-4dba-8878-cdd7f5c964a7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:54:02.931
  I1014 02:54:02.953300 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-629" for this suite. @ 10/14/25 02:54:02.958
â€¢ [4.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:769
  STEP: Creating a kubernetes client @ 10/14/25 02:54:02.966
  I1014 02:54:02.966513 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 02:54:02.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:54:02.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:54:02.992
  STEP: Creating service test in namespace statefulset-5331 @ 10/14/25 02:54:02.997
  STEP: Creating stateful set ss in namespace statefulset-5331 @ 10/14/25 02:54:03.003
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5331 @ 10/14/25 02:54:03.02
  I1014 02:54:03.029350 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E1014 02:54:03.776075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:04.776212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:05.776342      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:06.776492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:07.776594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:08.776792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:09.776949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:10.777125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:11.777242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:12.777364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:13.025883 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/14/25 02:54:13.026
  I1014 02:54:13.032391 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:54:13.232261 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:54:13.232307 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:54:13.232324 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:54:13.236259 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1014 02:54:13.778040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:14.778177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:15.778793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:16.778947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:17.779459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:18.786027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:19.786241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:20.786470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:21.787258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:22.787298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:23.241041 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:54:23.241208 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1014 02:54:23.266028 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 9.999999778s
  E1014 02:54:23.787904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:24.273534 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 8.986596483s
  E1014 02:54:24.788022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:25.281568 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 7.980466257s
  E1014 02:54:25.788355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:26.289486 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 6.970565739s
  E1014 02:54:26.789115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:27.303173 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 5.960304523s
  E1014 02:54:27.789099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:28.310573 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 4.950269841s
  E1014 02:54:28.789714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:29.316180 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 3.942925775s
  E1014 02:54:29.789934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:30.325976 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 2.93645768s
  E1014 02:54:30.790845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:31.335887 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 1.925024317s
  E1014 02:54:31.791871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:32.341691 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 3 for another 917.683262ms
  E1014 02:54:32.792663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5331 @ 10/14/25 02:54:33.342
  I1014 02:54:33.346971 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:54:33.551658 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:54:33.551708 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:54:33.551726 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:54:33.551770 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:54:33.714938 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1014 02:54:33.714984 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:54:33.715310 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:54:33.715958 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1014 02:54:33.792781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:33.901025 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1014 02:54:33.901119 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:54:33.901163 21 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1014 02:54:33.906759 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1014 02:54:34.792902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:35.793030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:36.794117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:37.794219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:38.795061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:39.795149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:40.795256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:41.795369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:42.796364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:43.796652      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:43.907057 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:54:43.907958 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:54:43.908600 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/14/25 02:54:43.909
  I1014 02:54:43.913610 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:54:44.080137 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:54:44.080184 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:54:44.080201 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:54:44.080246 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:54:44.233087 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:54:44.233133 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:54:44.233148 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:54:44.233200 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-5331 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:54:44.408641 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:54:44.408708 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:54:44.408734 21 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1014 02:54:44.408922 21 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I1014 02:54:44.413120 21 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1014 02:54:44.796963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:45.797088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:46.797239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:47.797369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:48.797495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:49.797635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:50.797768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:51.797852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:52.798030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:54:53.798156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:54.417037 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:54:54.417519 21 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:54:54.417795 21 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1014 02:54:54.459784 21 resource.go:168] POD   NODE                                                  PHASE    GRACE  CONDITIONS
  I1014 02:54:54.460293 21 resource.go:175] ss-0  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:04 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:03 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:03 +0000 UTC  }]
  I1014 02:54:54.460556 21 resource.go:175] ss-1  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm  Running         [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:24 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC  }]
  I1014 02:54:54.460809 21 resource.go:175] ss-2  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e  Running  30s    [{PodReadyToStartContainers 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:24 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC  } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC  }]
  I1014 02:54:54.461051 21 resource.go:178] 
  I1014 02:54:54.461367 21 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E1014 02:54:54.799035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:55.470008 21 resource.go:168] POD   NODE                                                  PHASE      GRACE  CONDITIONS
  I1014 02:54:55.471080 21 resource.go:175] ss-0  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:03 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:03 +0000 UTC  }]
  I1014 02:54:55.471869 21 resource.go:175] ss-1  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC  }]
  I1014 02:54:55.472659 21 resource.go:175] ss-2  k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e  Succeeded  30s    [{PodReadyToStartContainers 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:54 +0000 UTC  } {Initialized 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC PodCompleted } {Ready 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC PodCompleted } {ContainersReady 0 False 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:44 +0000 UTC PodCompleted } {PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-10-14 02:54:23 +0000 UTC  }]
  I1014 02:54:55.473303 21 resource.go:178] 
  I1014 02:54:55.474123 21 statefulset.go:2448] StatefulSet ss has not reached scale 0, at 3
  E1014 02:54:55.799986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:56.480349 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 7.952803634s
  E1014 02:54:56.800946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:57.484875 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 6.947228703s
  E1014 02:54:57.801409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:58.489626 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 5.942714958s
  E1014 02:54:58.801591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:54:59.496601 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 4.937590411s
  E1014 02:54:59.802333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:00.502353 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 3.9306356s
  E1014 02:55:00.805971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:01.513575 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 2.924668067s
  E1014 02:55:01.806084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:02.518617 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 1.913912816s
  E1014 02:55:02.808024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:03.528076 21 statefulset.go:2453] Verifying statefulset ss doesn't scale past 0 for another 908.763911ms
  E1014 02:55:03.808180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5331 @ 10/14/25 02:55:04.529
  I1014 02:55:04.540164 21 rest.go:153] Scaling statefulset ss to 0
  I1014 02:55:04.551021 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 02:55:04.555798 21 statefulset.go:138] Deleting all statefulset in ns statefulset-5331
  I1014 02:55:04.560452 21 rest.go:153] Scaling statefulset ss to 0
  I1014 02:55:04.567694 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 02:55:04.571425 21 rest.go:91] Deleting statefulset ss
  I1014 02:55:04.595363 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5331" for this suite. @ 10/14/25 02:55:04.603
â€¢ [61.644 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1464
  STEP: Creating a kubernetes client @ 10/14/25 02:55:04.613
  I1014 02:55:04.614362 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:55:04.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:04.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:04.649
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1316 @ 10/14/25 02:55:04.656
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/14/25 02:55:04.669
  STEP: creating service externalsvc in namespace services-1316 @ 10/14/25 02:55:04.67
  I1014 02:55:04.726392 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 02:55:04.809150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:05.809679      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 10/14/25 02:55:06.747
  I1014 02:55:06.769498 21 resource.go:361] Creating new exec pod
  E1014 02:55:06.810749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:07.810906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:08.804006 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-1316 exec execpodst7xt -- /bin/sh -x -c nslookup clusterip-service.services-1316.svc.cluster.local'
  E1014 02:55:08.811860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:09.018450 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-1316.svc.cluster.local\n"
  I1014 02:55:09.018531 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-1316.svc.cluster.local\tcanonical name = externalsvc.services-1316.svc.cluster.local.\nName:\texternalsvc.services-1316.svc.cluster.local\nAddress: 10.43.73.245\n\n"
  I1014 02:55:09.120794 21 service.go:1473] Cleaning up the ClusterIP to ExternalName test service
  I1014 02:55:09.149840 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1316" for this suite. @ 10/14/25 02:55:09.163
â€¢ [4.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 10/14/25 02:55:09.175
  I1014 02:55:09.175898 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 02:55:09.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:09.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:09.202
  STEP: Creating simple DaemonSet "daemon-set" @ 10/14/25 02:55:09.269
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/25 02:55:09.275
  I1014 02:55:09.351388 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:55:09.351564 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 02:55:09.812272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:10.298502 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 02:55:10.298963 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 02:55:10.813037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:11.287912 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 02:55:11.288067 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/14/25 02:55:11.294
  STEP: DeleteCollection of the DaemonSets @ 10/14/25 02:55:11.309
  STEP: Verify that ReplicaSets have been deleted @ 10/14/25 02:55:11.322
  I1014 02:55:11.410649 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11046"},"items":null}

  I1014 02:55:11.416931 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11046"},"items":[{"metadata":{"name":"daemon-set-mpdrs","generateName":"daemon-set-","namespace":"daemonsets-180","uid":"5cd2e224-2654-4cbe-8af1-a2f1d3b02aa5","resourceVersion":"11045","generation":2,"creationTimestamp":"2025-10-14T02:55:09Z","deletionTimestamp":"2025-10-14T02:55:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"53bb648f-b03b-4c80-8b82-dd02b0c6f620","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-10-14T02:55:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"53bb648f-b03b-4c80-8b82-dd02b0c6f620\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-10-14T02:55:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.173\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5spxd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5spxd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:09Z"}],"hostIP":"192.168.1.10","hostIPs":[{"ip":"192.168.1.10"}],"podIP":"10.42.1.173","podIPs":[{"ip":"10.42.1.173"}],"startTime":"2025-10-14T02:55:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-10-14T02:55:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cefef37b548791224dde81a4ba50fde0ec0f2743173bcc35e11d16e3f0100af5","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-5spxd","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wjxzq","generateName":"daemon-set-","namespace":"daemonsets-180","uid":"c5401abd-a6de-432c-a040-b15012f7f5aa","resourceVersion":"11046","generation":2,"creationTimestamp":"2025-10-14T02:55:09Z","deletionTimestamp":"2025-10-14T02:55:41Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"53bb648f-b03b-4c80-8b82-dd02b0c6f620","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-10-14T02:55:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"53bb648f-b03b-4c80-8b82-dd02b0c6f620\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-10-14T02:55:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.75\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-nkpsb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-nkpsb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-10-14T02:55:09Z"}],"hostIP":"192.168.1.11","hostIPs":[{"ip":"192.168.1.11"}],"podIP":"10.42.0.75","podIPs":[{"ip":"10.42.0.75"}],"startTime":"2025-10-14T02:55:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-10-14T02:55:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://b43d1a7dec0b80e98d90b0ab0571e42ad94283ca764347989d5cb3d702c4cf8e","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-nkpsb","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}],"user":{"linux":{"uid":0,"gid":0,"supplementalGroups":[0,1,2,3,4,6,10,11,20,26,27]}}}],"qosClass":"BestEffort"}}]}

  I1014 02:55:11.433361 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-180" for this suite. @ 10/14/25 02:55:11.438
â€¢ [2.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 10/14/25 02:55:11.448
  I1014 02:55:11.448487 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:55:11.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:11.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:11.478
  STEP: Setting up server cert @ 10/14/25 02:55:11.544
  E1014 02:55:11.813990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:12.842566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:55:13.23
  STEP: Deploying the webhook pod @ 10/14/25 02:55:13.239
  STEP: Wait for the deployment to be ready @ 10/14/25 02:55:13.253
  I1014 02:55:13.275856 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 02:55:13.843583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:14.845930      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 02:55:15.292
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:55:15.321
  E1014 02:55:15.848815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:16.321816 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/14/25 02:55:16.334
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/14/25 02:55:16.378
  STEP: Creating a dummy validating-webhook-configuration object @ 10/14/25 02:55:16.426
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/14/25 02:55:16.438
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/14/25 02:55:16.454
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/14/25 02:55:16.472
  I1014 02:55:16.593553 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6837" for this suite. @ 10/14/25 02:55:16.604
  STEP: Destroying namespace "webhook-markers-2076" for this suite. @ 10/14/25 02:55:16.614
â€¢ [5.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/14/25 02:55:16.63
  I1014 02:55:16.630702 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:55:16.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:16.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:16.683
  STEP: Creating secret with name secret-test-dd72577b-815c-43b5-bc4c-ef6f32c7f93d @ 10/14/25 02:55:16.757
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:55:16.763
  E1014 02:55:16.849222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:17.851401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:18.851486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:19.851644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:55:20.794
  I1014 02:55:20.798481 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-00977182-9bcd-4f59-ae6e-e1ea1d5b5bf4 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:55:20.807
  I1014 02:55:20.834565 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7714" for this suite. @ 10/14/25 02:55:20.839
  STEP: Destroying namespace "secret-namespace-326" for this suite. @ 10/14/25 02:55:20.847
  E1014 02:55:20.852072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
â€¢ [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 10/14/25 02:55:20.854
  I1014 02:55:20.854466 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 02:55:20.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:20.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:20.885
  STEP: Creating a pod to test substitution in container's command @ 10/14/25 02:55:20.89
  E1014 02:55:21.852177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:22.855732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:55:22.922
  I1014 02:55:22.927388 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod var-expansion-f75b6ba3-0e99-46da-86e9-69c2fdd09f18 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 02:55:22.936
  I1014 02:55:22.954837 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7261" for this suite. @ 10/14/25 02:55:22.961
â€¢ [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 10/14/25 02:55:22.968
  I1014 02:55:22.973374 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:55:22.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:22.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:23.001
  STEP: Setting up server cert @ 10/14/25 02:55:23.029
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:55:23.758
  STEP: Deploying the webhook pod @ 10/14/25 02:55:23.764
  STEP: Wait for the deployment to be ready @ 10/14/25 02:55:23.776
  I1014 02:55:23.803211 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 02:55:23.856489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:24.856601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 02:55:25.816
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:55:25.83
  E1014 02:55:25.857091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:26.830871 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 02:55:26.837668 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 02:55:26.857841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/14/25 02:55:27.348
  STEP: Creating a custom resource that should be denied by the webhook @ 10/14/25 02:55:27.383
  E1014 02:55:27.857937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:28.858059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/14/25 02:55:29.411
  STEP: Updating the custom resource with disallowed data should be denied @ 10/14/25 02:55:29.428
  STEP: Deleting the custom resource should be denied @ 10/14/25 02:55:29.444
  STEP: Remove the offending key and value from the custom resource data @ 10/14/25 02:55:29.451
  STEP: Deleting the updated custom resource should be successful @ 10/14/25 02:55:29.459
  E1014 02:55:29.858307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:30.053668 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8509" for this suite. @ 10/14/25 02:55:30.061
  STEP: Destroying namespace "webhook-markers-6425" for this suite. @ 10/14/25 02:55:30.071
â€¢ [7.110 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 10/14/25 02:55:30.079
  I1014 02:55:30.079455 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replicaset @ 10/14/25 02:55:30.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:30.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:30.103
  I1014 02:55:30.108544 21 replica_set.go:192] Creating ReplicaSet my-hostname-basic-d41b1a25-5d30-42b9-a7a3-db1ffd34b070
  I1014 02:55:30.130501 21 resource.go:81] Pod name my-hostname-basic-d41b1a25-5d30-42b9-a7a3-db1ffd34b070: Found 1 pods out of 1
  I1014 02:55:30.130672 21 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-d41b1a25-5d30-42b9-a7a3-db1ffd34b070" is running
  E1014 02:55:30.858298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:31.858419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:32.147077 21 replica_set.go:221] Pod "my-hostname-basic-d41b1a25-5d30-42b9-a7a3-db1ffd34b070-f2tkr" is running (conditions: [])
  I1014 02:55:32.148122 21 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/14/25 02:55:32.149
  I1014 02:55:32.173438 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9327" for this suite. @ 10/14/25 02:55:32.179
â€¢ [2.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 10/14/25 02:55:32.187
  I1014 02:55:32.187446 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:55:32.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:32.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:32.212
  STEP: Creating a pod to test downward api env vars @ 10/14/25 02:55:32.218
  E1014 02:55:32.858500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:33.858574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:34.859291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:35.859570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:55:36.265
  I1014 02:55:36.270757 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downward-api-7def07e5-61e1-4bdd-8de8-644ca073af4b container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 02:55:36.288
  I1014 02:55:36.313428 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9450" for this suite. @ 10/14/25 02:55:36.319
â€¢ [4.139 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 10/14/25 02:55:36.326
  I1014 02:55:36.326606 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 02:55:36.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:55:36.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:55:36.355
  STEP: Creating service test in namespace statefulset-49 @ 10/14/25 02:55:36.36
  STEP: Creating a new StatefulSet @ 10/14/25 02:55:36.367
  I1014 02:55:36.395714 21 wait.go:44] Found 0 stateful pods, waiting for 3
  E1014 02:55:36.859671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:37.859966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:38.860064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:39.860767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:40.860965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:41.861133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:42.861291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:43.861590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:44.861594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:45.862153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:55:46.390902 21 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:55:46.391103 21 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:55:46.391185 21 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1014 02:55:46.402976 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-49 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1014 02:55:46.591155 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:55:46.591204 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:55:46.591221 21 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1014 02:55:46.861923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:47.862039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:48.862340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:49.862392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:50.862525      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:51.862626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:52.862826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:53.862922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:54.863027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:55.863388      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/14/25 02:55:56.6
  I1014 02:55:56.612065 21 statefulset.go:2542] Updating stateful set ss2
  STEP: Creating a new revision @ 10/14/25 02:55:56.612
  E1014 02:55:56.863514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:57.863621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:58.863852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:55:59.863979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:00.863977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:01.864133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:02.864217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:03.864353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:04.864644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:05.864671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/14/25 02:56:06.624
  I1014 02:56:06.628783 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-49 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:56:06.804500 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:56:06.804546 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:56:06.804561 21 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1014 02:56:06.864701      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:07.866649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:08.867331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:09.867380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:10.867691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:11.867896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:12.867865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:13.867988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:14.868101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:15.868238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/14/25 02:56:16.834
  I1014 02:56:16.835465 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-49 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1014 02:56:16.868583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:56:17.057448 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1014 02:56:17.057497 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1014 02:56:17.057515 21 statefulset.go:2485] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1014 02:56:17.868619      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:18.868739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:19.868927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:20.869034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:21.869168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:22.869283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:23.869398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:24.869472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:25.869852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:26.870604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:56:27.073152 21 statefulset.go:2542] Updating stateful set ss2
  E1014 02:56:27.871485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:28.871593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:29.871702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:30.871872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:31.872155      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:32.872199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:33.872295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:34.872484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:35.872605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:36.872732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/14/25 02:56:37.084
  I1014 02:56:37.089137 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=statefulset-49 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1014 02:56:37.274389 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1014 02:56:37.274437 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1014 02:56:37.274452 21 statefulset.go:2509] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1014 02:56:37.872865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:38.873239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:39.873494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:40.873629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:41.873779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:42.874041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:43.874116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:44.874305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:45.877954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:46.878088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:56:47.314068 21 statefulset.go:138] Deleting all statefulset in ns statefulset-49
  I1014 02:56:47.318464 21 rest.go:153] Scaling statefulset ss2 to 0
  E1014 02:56:47.878210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:48.878533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:49.878872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:50.878832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:51.878953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:52.879079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:53.879253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:54.879328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:55.879428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:56.879509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:56:57.338511 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 02:56:57.342724 21 rest.go:91] Deleting statefulset ss2
  I1014 02:56:57.378181 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-49" for this suite. @ 10/14/25 02:56:57.386
â€¢ [81.068 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 10/14/25 02:56:57.394
  I1014 02:56:57.394234 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:56:57.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:56:57.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:56:57.425
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:56:57.431
  E1014 02:56:57.883001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:58.883142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:56:59.883720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:00.883847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:01.477
  I1014 02:57:01.498188 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-f5b5302b-a76a-49f1-b3c9-592d02ac164f container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:57:01.506
  I1014 02:57:01.519661 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1811" for this suite. @ 10/14/25 02:57:01.527
â€¢ [4.139 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 10/14/25 02:57:01.534
  I1014 02:57:01.534275 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:57:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:01.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:01.567
  STEP: Creating configMap with name configmap-test-volume-55713413-7b56-4a97-9085-c36b230e83e3 @ 10/14/25 02:57:01.577
  STEP: Creating a pod to test consume configMaps @ 10/14/25 02:57:01.582
  E1014 02:57:01.884366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:02.884499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:03.884989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:04.885121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:05.636
  I1014 02:57:05.640276 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-8121e01e-4fdc-4b03-828a-b03fd6fedbb5 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:57:05.648
  I1014 02:57:05.665620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6932" for this suite. @ 10/14/25 02:57:05.67
â€¢ [4.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 10/14/25 02:57:05.677
  I1014 02:57:05.677810 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:57:05.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:05.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:05.705
  STEP: Creating configMap with name projected-configmap-test-volume-map-8c4cf655-266d-4c8c-9d2d-165866b247a0 @ 10/14/25 02:57:05.71
  STEP: Creating a pod to test consume configMaps @ 10/14/25 02:57:05.715
  E1014 02:57:05.885364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:06.886262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:07.886454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:08.886554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:09.742
  I1014 02:57:09.746615 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-configmaps-e9ba74ac-ae26-4df4-a1df-2b81caad1f98 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 02:57:09.755
  I1014 02:57:09.774694 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2817" for this suite. @ 10/14/25 02:57:09.783
â€¢ [4.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/14/25 02:57:09.791
  I1014 02:57:09.791924 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename watch @ 10/14/25 02:57:09.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:09.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:09.826
  STEP: getting a starting resourceVersion @ 10/14/25 02:57:09.83
  STEP: starting a background goroutine to produce watch events @ 10/14/25 02:57:09.834
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/14/25 02:57:09.834
  E1014 02:57:09.886818      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:10.887347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:11.888197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:57:12.603192 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4309" for this suite. @ 10/14/25 02:57:12.653
â€¢ [2.916 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 10/14/25 02:57:12.712
  I1014 02:57:12.713034 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 02:57:12.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:12.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:12.741
  STEP: Creating a pod to test substitution in volume subpath @ 10/14/25 02:57:12.748
  E1014 02:57:12.888314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:13.888632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:14.890062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:15.890168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:16.79
  I1014 02:57:16.795226 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod var-expansion-f9288b94-4c4a-4596-b44f-93c8189c35c5 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 02:57:16.81
  I1014 02:57:16.830695 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3118" for this suite. @ 10/14/25 02:57:16.836
â€¢ [4.132 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 10/14/25 02:57:16.844
  I1014 02:57:16.844895 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename disruption @ 10/14/25 02:57:16.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:16.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:16.875
  E1014 02:57:16.891055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/14/25 02:57:16.892
  STEP: Waiting for the pdb to be processed @ 10/14/25 02:57:16.906
  E1014 02:57:17.893991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:18.894462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/14/25 02:57:18.918
  STEP: Waiting for all pods to be running @ 10/14/25 02:57:18.919
  I1014 02:57:18.925857 21 disruption.go:680] pods: 0 < 3
  E1014 02:57:19.894193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:20.894317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/14/25 02:57:20.926
  STEP: Updating the pdb to allow a pod to be evicted @ 10/14/25 02:57:20.936
  STEP: Waiting for the pdb to be processed @ 10/14/25 02:57:20.944
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/14/25 02:57:20.954
  STEP: Waiting for all pods to be running @ 10/14/25 02:57:20.954
  STEP: Waiting for the pdb to observed all healthy pods @ 10/14/25 02:57:21.025
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/14/25 02:57:21.049
  STEP: Waiting for the pdb to be processed @ 10/14/25 02:57:21.072
  E1014 02:57:21.894499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:22.896916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/14/25 02:57:23.077
  STEP: locating a running pod @ 10/14/25 02:57:23.081
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/14/25 02:57:23.092
  STEP: Waiting for the pdb to be deleted @ 10/14/25 02:57:23.097
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/14/25 02:57:23.101
  STEP: Waiting for all pods to be running @ 10/14/25 02:57:23.101
  I1014 02:57:23.124922 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2316" for this suite. @ 10/14/25 02:57:23.158
â€¢ [6.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 10/14/25 02:57:23.169
  I1014 02:57:23.169532 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-pred @ 10/14/25 02:57:23.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:23.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:23.201
  I1014 02:57:23.207717 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1014 02:57:23.254038 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I1014 02:57:23.260161 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e before test
  I1014 02:57:23.264949 21 predicates.go:958] rs-rf62b from disruption-2316 started at 2025-10-14 02:57:21 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.265073 21 predicates.go:960] 	Container donothing ready: true, restart count 0
  I1014 02:57:23.265154 21 predicates.go:958] rs-rx5qv from disruption-2316 started at 2025-10-14 02:57:18 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.265224 21 predicates.go:960] 	Container donothing ready: true, restart count 0
  I1014 02:57:23.265281 21 predicates.go:958] civo-ccm-5759fbb5c6-pc5xw from kube-system started at 2025-10-14 02:16:28 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.265358 21 predicates.go:960] 	Container civo-ccm ready: true, restart count 0
  I1014 02:57:23.265436 21 predicates.go:958] civo-csi-controller-0 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (4 container statuses recorded)
  I1014 02:57:23.273326 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 02:57:23.273413 21 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I1014 02:57:23.273490 21 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I1014 02:57:23.273564 21 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I1014 02:57:23.273637 21 predicates.go:958] civo-csi-node-5ndmq from kube-system started at 2025-10-14 02:16:38 +0000 UTC (2 container statuses recorded)
  I1014 02:57:23.273711 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 02:57:23.273804 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 02:57:23.273882 21 predicates.go:958] coredns-64fd4b4794-zj4r6 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.273950 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I1014 02:57:23.274008 21 predicates.go:958] metrics-server-7bfffcd44-r2x5q from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.274083 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I1014 02:57:23.274158 21 predicates.go:958] traefik-dzn5b from kube-system started at 2025-10-14 02:17:12 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.274230 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 02:57:23.274306 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm before test
  I1014 02:57:23.279647 21 predicates.go:958] rs-6rpqj from disruption-2316 started at 2025-10-14 02:57:23 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.279771 21 predicates.go:960] 	Container donothing ready: false, restart count 0
  I1014 02:57:23.279852 21 predicates.go:958] rs-l4h9v from disruption-2316 started at 2025-10-14 02:57:18 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.279922 21 predicates.go:960] 	Container donothing ready: true, restart count 0
  I1014 02:57:23.279980 21 predicates.go:958] civo-csi-node-47bkk from kube-system started at 2025-10-14 02:21:46 +0000 UTC (2 container statuses recorded)
  I1014 02:57:23.280054 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 02:57:23.280127 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 02:57:23.280202 21 predicates.go:958] traefik-5vwd9 from kube-system started at 2025-10-14 02:21:46 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.280276 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 02:57:23.280345 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-14 02:19:42 +0000 UTC (1 container statuses recorded)
  I1014 02:57:23.280401 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1014 02:57:23.280709 21 predicates.go:958] sonobuoy-e2e-job-cda78a766ac8494d from sonobuoy started at 2025-10-14 02:19:48 +0000 UTC (2 container statuses recorded)
  I1014 02:57:23.285624 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1014 02:57:23.285707 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: verifying the node has the label node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e @ 10/14/25 02:57:23.305
  STEP: verifying the node has the label node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm @ 10/14/25 02:57:23.327
  I1014 02:57:23.366610 21 predicates.go:373] Pod rs-6rpqj requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  I1014 02:57:23.370430 21 predicates.go:373] Pod rs-l4h9v requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  I1014 02:57:23.370523 21 predicates.go:373] Pod rs-rf62b requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.370602 21 predicates.go:373] Pod rs-rx5qv requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.370677 21 predicates.go:373] Pod civo-ccm-5759fbb5c6-pc5xw requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.370747 21 predicates.go:373] Pod civo-csi-controller-0 requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.370822 21 predicates.go:373] Pod civo-csi-node-47bkk requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  I1014 02:57:23.370878 21 predicates.go:373] Pod civo-csi-node-5ndmq requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.370992 21 predicates.go:373] Pod coredns-64fd4b4794-zj4r6 requesting resource cpu=100m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.371068 21 predicates.go:373] Pod metrics-server-7bfffcd44-r2x5q requesting resource cpu=100m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.371142 21 predicates.go:373] Pod traefik-5vwd9 requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  I1014 02:57:23.371211 21 predicates.go:373] Pod traefik-dzn5b requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.371268 21 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  I1014 02:57:23.371342 21 predicates.go:373] Pod sonobuoy-e2e-job-cda78a766ac8494d requesting resource cpu=0m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/14/25 02:57:23.374
  I1014 02:57:23.374251 21 predicates.go:383] Creating a pod which consumes cpu=434m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e
  I1014 02:57:23.384588 21 predicates.go:383] Creating a pod which consumes cpu=574m on Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm
  E1014 02:57:23.897458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:24.897759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/14/25 02:57:25.422
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416.186e3c27334f46cd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7193/filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416 to k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm] @ 10/14/25 02:57:25.427
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416.186e3c2751035736], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/14/25 02:57:25.427
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416.186e3c2752fbbfdb], Reason = [Created], Message = [Created container: filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416] @ 10/14/25 02:57:25.427
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416.186e3c2757e6b2bc], Reason = [Started], Message = [Started container filler-pod-d9d23ef7-3937-4653-99eb-f6fb9f8a1416] @ 10/14/25 02:57:25.427
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca.186e3c27325d052f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7193/filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca to k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e] @ 10/14/25 02:57:25.427
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca.186e3c275610e3d2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 10/14/25 02:57:25.428
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca.186e3c275a51245e], Reason = [Created], Message = [Created container: filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca] @ 10/14/25 02:57:25.428
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca.186e3c2764e678dc], Reason = [Started], Message = [Started container filler-pod-e527a06c-af1b-4a63-95fc-0dfd7aa047ca] @ 10/14/25 02:57:25.428
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186e3c27abee963a], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 10/14/25 02:57:25.442
  E1014 02:57:25.897805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e @ 10/14/25 02:57:26.443
  STEP: verifying the node doesn't have the label node @ 10/14/25 02:57:26.473
  STEP: removing the label node off the node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm @ 10/14/25 02:57:26.486
  STEP: verifying the node doesn't have the label node @ 10/14/25 02:57:26.505
  I1014 02:57:26.512386 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7193" for this suite. @ 10/14/25 02:57:26.52
â€¢ [3.358 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 10/14/25 02:57:26.527
  I1014 02:57:26.527484 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 02:57:26.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:26.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:26.546
  STEP: Creating configMap with name configmap-test-volume-936e1ab3-f713-4aa6-913d-86173fa74bbf @ 10/14/25 02:57:26.55
  STEP: Creating a pod to test consume configMaps @ 10/14/25 02:57:26.555
  E1014 02:57:26.898114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:27.898246      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:28.898772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:29.898855      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:30.585
  I1014 02:57:30.589074 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod pod-configmaps-0ebcbe00-a05a-4100-b8bb-6a930138d41e container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 02:57:30.617
  I1014 02:57:30.637410 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7872" for this suite. @ 10/14/25 02:57:30.641
â€¢ [4.121 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 10/14/25 02:57:30.649
  I1014 02:57:30.649226 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 02:57:30.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:30.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:30.675
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/14/25 02:57:30.683
  E1014 02:57:30.899198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:31.899388      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:32.899384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:33.899658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:34.711
  I1014 02:57:34.716308 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod pod-63085084-289d-463c-856d-b6dd345b55bd container test-container: <nil>
  STEP: delete the pod @ 10/14/25 02:57:34.723
  I1014 02:57:34.745315 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5445" for this suite. @ 10/14/25 02:57:34.75
â€¢ [4.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 10/14/25 02:57:34.759
  I1014 02:57:34.759111 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 02:57:34.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:34.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:34.791
  I1014 02:57:34.845225 21 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"249ff735-d9d0-485a-ad97-81d54958d128", Controller:(*bool)(0xc004182806), BlockOwnerDeletion:(*bool)(0xc004182807)}}
  I1014 02:57:34.862058 21 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"aa48f3a8-e2bb-467e-8db4-ff94c9e94dee", Controller:(*bool)(0xc0041829be), BlockOwnerDeletion:(*bool)(0xc0041829bf)}}
  I1014 02:57:34.874264 21 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"59ad17ac-e1be-449d-ad75-edff71401ce4", Controller:(*bool)(0xc004182b6e), BlockOwnerDeletion:(*bool)(0xc004182b6f)}}
  E1014 02:57:34.900612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:35.900721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:36.900918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:37.901021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:38.901146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:39.902647      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:57:39.907658 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1644" for this suite. @ 10/14/25 02:57:39.916
â€¢ [5.167 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 10/14/25 02:57:39.926
  I1014 02:57:39.926213 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 02:57:39.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:39.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:39.957
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 02:57:39.964
  E1014 02:57:40.902310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:41.902513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:42.902544      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:43.902662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:43.997
  I1014 02:57:44.004158 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-8d51f085-8596-4064-8885-849e515bd9b3 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 02:57:44.017
  I1014 02:57:44.038021 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8196" for this suite. @ 10/14/25 02:57:44.044
â€¢ [4.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 10/14/25 02:57:44.051
  I1014 02:57:44.051146 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 02:57:44.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:44.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:44.08
  STEP: creating Agnhost RC @ 10/14/25 02:57:44.084
  I1014 02:57:44.084717 21 kubectl.go:1540] namespace kubectl-7759
  I1014 02:57:44.084892 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-7759 create -f -'
  I1014 02:57:44.292070 21 builder.go:146] stderr: ""
  I1014 02:57:44.292114 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/14/25 02:57:44.292
  E1014 02:57:44.902721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:57:45.297476 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 02:57:45.297513 21 framework.go:733] Found 1 / 1
  I1014 02:57:45.297532 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1014 02:57:45.300657 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 02:57:45.300766 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1014 02:57:45.300815 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-7759 
  I1014 02:57:45.300857 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-7759 logs agnhost-primary-7jpvp agnhost-primary'
  I1014 02:57:45.394057 21 builder.go:146] stderr: ""
  I1014 02:57:45.394104 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 10/14/25 02:57:45.394
  I1014 02:57:45.394184 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-7759 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1014 02:57:45.508532 21 builder.go:146] stderr: ""
  I1014 02:57:45.508581 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I1014 02:57:45.519038 21 utils.go:1115] Service rm2 in namespace kubectl-7759 found.
  E1014 02:57:45.903710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:46.903979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: exposing service @ 10/14/25 02:57:47.527
  I1014 02:57:47.527750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-7759 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1014 02:57:47.649367 21 builder.go:146] stderr: ""
  I1014 02:57:47.649414 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I1014 02:57:47.662037 21 utils.go:1115] Service rm3 in namespace kubectl-7759 found.
  E1014 02:57:47.904540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:48.904796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:57:49.668942 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7759" for this suite. @ 10/14/25 02:57:49.672
â€¢ [5.628 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 10/14/25 02:57:49.679
  I1014 02:57:49.679079 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:57:49.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:49.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:49.702
  STEP: Creating secret with name secret-test-48d5b770-2d21-481c-993a-3b9ccd12e4cb @ 10/14/25 02:57:49.707
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:57:49.712
  E1014 02:57:49.905274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:50.905394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:51.906128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:52.914161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:53.742
  I1014 02:57:53.748411 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-24e0c55e-b673-4e65-ad23-740a2e8e9087 container secret-env-test: <nil>
  STEP: delete the pod @ 10/14/25 02:57:53.76
  I1014 02:57:53.777351 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6242" for this suite. @ 10/14/25 02:57:53.782
â€¢ [4.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 10/14/25 02:57:53.789
  I1014 02:57:53.789521 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 02:57:53.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:53.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:53.815
  STEP: Creating configMap with name projected-configmap-test-volume-d37ed1fa-3ac2-41e7-a446-0cde47be6827 @ 10/14/25 02:57:53.82
  STEP: Creating a pod to test consume configMaps @ 10/14/25 02:57:53.826
  E1014 02:57:53.914847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:54.914978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:55.915399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:56.915546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:57:57.858
  I1014 02:57:57.862127 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-configmaps-6fe8df62-e9bf-4c12-95e8-0d3d280da750 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:57:57.873
  I1014 02:57:57.893685 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7962" for this suite. @ 10/14/25 02:57:57.899
â€¢ [4.116 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2207
  STEP: Creating a kubernetes client @ 10/14/25 02:57:57.906
  I1014 02:57:57.906366 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 02:57:57.912
  E1014 02:57:57.916002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:57:57.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:57:57.934
  STEP: creating service in namespace services-9609 @ 10/14/25 02:57:57.939
  STEP: creating service affinity-clusterip-transition in namespace services-9609 @ 10/14/25 02:57:57.94
  I1014 02:57:57.989769 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 02:57:58.916665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:57:59.916757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:00.081145 21 resource.go:361] Creating new exec pod
  E1014 02:58:00.916883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:01.917000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:02.109997 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9609 exec execpod-affinitym2v2b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1014 02:58:02.310983 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition (10.43.146.18) 80 port [tcp/http] succeeded!\n"
  I1014 02:58:02.311035 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 02:58:02.311117 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9609 exec execpod-affinitym2v2b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.146.18 80'
  I1014 02:58:02.477741 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.146.18 80\n+ echo hostName\nConnection to 10.43.146.18 80 port [tcp/http] succeeded!\n"
  I1014 02:58:02.477801 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 02:58:02.487323 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9609 exec execpod-affinitym2v2b -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/ ; done'
  I1014 02:58:02.857870 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n"
  I1014 02:58:02.862154 21 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-2npzj\naffinity-clusterip-transition-5cffb65545-2npzj\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-4ssrs\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-2npzj\naffinity-clusterip-transition-5cffb65545-4ssrs\naffinity-clusterip-transition-5cffb65545-2npzj\naffinity-clusterip-transition-5cffb65545-2npzj\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp"
  I1014 02:58:02.862273 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862292 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862304 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862317 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862329 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862340 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2npzj
  I1014 02:58:02.862352 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2npzj
  I1014 02:58:02.862364 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862375 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-4ssrs
  I1014 02:58:02.862387 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862399 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2npzj
  I1014 02:58:02.862410 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-4ssrs
  I1014 02:58:02.862422 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2npzj
  I1014 02:58:02.862433 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-2npzj
  I1014 02:58:02.862444 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.862455 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:02.888903 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9609 exec execpod-affinitym2v2b -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/ ; done'
  E1014 02:58:02.917911      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:03.344608 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.146.18:80/\n"
  I1014 02:58:03.344671 21 builder.go:147] stdout: "\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp\naffinity-clusterip-transition-5cffb65545-tflqp"
  I1014 02:58:03.344692 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344707 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344719 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344731 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344743 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344753 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344765 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344776 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344788 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344798 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344809 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344833 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344844 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.344857 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.345074 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.345089 21 service.go:238] Received response from host: affinity-clusterip-transition-5cffb65545-tflqp
  I1014 02:58:03.345188 21 service.go:4352] Cleaning up the exec pod
  I1014 02:58:03.430182 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9609" for this suite. @ 10/14/25 02:58:03.457
â€¢ [5.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/14/25 02:58:03.488
  I1014 02:58:03.488912 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 02:58:03.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:58:03.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:58:03.537
  STEP: Creating secret with name secret-test-map-f8535702-b06c-42d0-bb5c-24bc39c47505 @ 10/14/25 02:58:03.541
  STEP: Creating a pod to test consume secrets @ 10/14/25 02:58:03.546
  E1014 02:58:03.918085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:04.918212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:58:05.57
  I1014 02:58:05.575171 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-311c7fea-6157-4ea5-b227-e9d1a1e623dd container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 02:58:05.583
  I1014 02:58:05.598054 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2511" for this suite. @ 10/14/25 02:58:05.603
â€¢ [2.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:209
  STEP: Creating a kubernetes client @ 10/14/25 02:58:05.611
  I1014 02:58:05.611421 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 02:58:05.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:58:05.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:58:05.64
  STEP: Creating a test headless service @ 10/14/25 02:58:05.646
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9266;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9266;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9266.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9266.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9266.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9266.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9266.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9266.svc;check="$$(dig +notcp +noall +answer +search 241.13.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.13.241_udp@PTR;check="$$(dig +tcp +noall +answer +search 241.13.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.13.241_tcp@PTR;sleep 1; done
   @ 10/14/25 02:58:05.678
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9266;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9266;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9266.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9266.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9266.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9266.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9266.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9266.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9266.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9266.svc;check="$$(dig +notcp +noall +answer +search 241.13.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.13.241_udp@PTR;check="$$(dig +tcp +noall +answer +search 241.13.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.13.241_tcp@PTR;sleep 1; done
   @ 10/14/25 02:58:05.678
  STEP: creating a pod to probe DNS @ 10/14/25 02:58:05.679
  STEP: submitting the pod to kubernetes @ 10/14/25 02:58:05.679
  E1014 02:58:05.919225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:06.919374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/25 02:58:07.725
  STEP: looking for the results for each expected name from probers @ 10/14/25 02:58:07.729
  I1014 02:58:07.739007 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.745196 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.749520 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9266 from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.755812 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9266 from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.759963 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.764101 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.768660 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.773169 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.793274 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.797702 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.804344 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9266 from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.808681 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9266 from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.813070 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.817666 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.822097 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.827719 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:07.845709 21 dns_common.go:506] Lookups using dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-9266 agnhost_tcp@dns-test-service.dns-9266 agnhost_udp@dns-test-service.dns-9266.svc agnhost_tcp@dns-test-service.dns-9266.svc agnhost_udp@_http._tcp.dns-test-service.dns-9266.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9266.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9266 jessie_tcp@dns-test-service.dns-9266 jessie_udp@dns-test-service.dns-9266.svc jessie_tcp@dns-test-service.dns-9266.svc jessie_udp@_http._tcp.dns-test-service.dns-9266.svc jessie_tcp@_http._tcp.dns-test-service.dns-9266.svc]

  I1014 02:58:07.855517 21 dns_common.go:514] Pod client logs for webserver: 
  I1014 02:58:07.863977 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1014 02:58:07.876266 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E1014 02:58:07.919380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:08.919762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:09.919932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:10.920025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:11.920143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:12.759030 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9266 from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:12.766133 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9266 from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:12.775295 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:12.779443 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:12.786473 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  I1014 02:58:12.796891 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9266.svc from pod dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00: the server could not find the requested resource (get pods dns-test-0108becd-a526-43ae-9240-e59bc4405f00)
  E1014 02:58:12.920976      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:12.946048 21 dns_common.go:506] Lookups using dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00 failed for: [agnhost_udp@dns-test-service.dns-9266 agnhost_tcp@dns-test-service.dns-9266 agnhost_udp@dns-test-service.dns-9266.svc agnhost_tcp@dns-test-service.dns-9266.svc agnhost_udp@_http._tcp.dns-test-service.dns-9266.svc agnhost_tcp@_http._tcp.dns-test-service.dns-9266.svc]

  I1014 02:58:12.960590 21 dns_common.go:514] Pod client logs for webserver: 
  I1014 02:58:12.969615 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I1014 02:58:12.978222 21 dns_common.go:514] Pod client logs for jessie-querier: 
  E1014 02:58:13.921386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:14.926173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:15.929964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:16.933984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:17.864615 21 dns_common.go:546] DNS probes using dns-9266/dns-test-0108becd-a526-43ae-9240-e59bc4405f00 succeeded

  STEP: deleting the pod @ 10/14/25 02:58:17.865
  STEP: deleting the test service @ 10/14/25 02:58:17.878
  STEP: deleting the test headless service @ 10/14/25 02:58:17.933
  E1014 02:58:17.934467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:17.951731 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9266" for this suite. @ 10/14/25 02:58:17.96
â€¢ [12.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 10/14/25 02:58:17.971
  I1014 02:58:17.971539 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 02:58:17.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:58:17.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:58:17.993
  E1014 02:58:18.934684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:19.934811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:20.942012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:21.942472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:22.942438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:23.942584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:24.942941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:25.943085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:26.943231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:27.943688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:28.943960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:29.944223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:30.944124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:31.944235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:32.944392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:33.944530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:34.944657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:35.945165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:36.946025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:37.946149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:38.946212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:39.946438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:40.947530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:41.947576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:58:42.099588 21 container_probe.go:91] Container started at 2025-10-14 02:58:18 +0000 UTC, pod became ready at 2025-10-14 02:58:40 +0000 UTC
  I1014 02:58:42.100187 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-819" for this suite. @ 10/14/25 02:58:42.104
â€¢ [24.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/14/25 02:58:42.111
  I1014 02:58:42.111332 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename subpath @ 10/14/25 02:58:42.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:58:42.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:58:42.133
  STEP: Setting up data @ 10/14/25 02:58:42.138
  STEP: Creating pod pod-subpath-test-configmap-dc8k @ 10/14/25 02:58:42.147
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/25 02:58:42.147
  E1014 02:58:42.947594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:43.947933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:44.948183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:45.948268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:46.949959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:47.950288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:48.950398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:49.950542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:50.950667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:51.950775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:52.950840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:53.950956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:54.952049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:55.952170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:56.952303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:57.953997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:58.954092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:58:59.956703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:00.957328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:01.957449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:02.957591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:03.957750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:04.957844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:05.957926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 02:59:06.233
  I1014 02:59:06.236737 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-subpath-test-configmap-dc8k container test-container-subpath-configmap-dc8k: <nil>
  STEP: delete the pod @ 10/14/25 02:59:06.253
  STEP: Deleting pod pod-subpath-test-configmap-dc8k @ 10/14/25 02:59:06.27
  I1014 02:59:06.270552 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-dc8k" in namespace "subpath-1172"
  I1014 02:59:06.275071 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1172" for this suite. @ 10/14/25 02:59:06.28
â€¢ [24.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:640
  STEP: Creating a kubernetes client @ 10/14/25 02:59:06.293
  I1014 02:59:06.293948 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 02:59:06.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:59:06.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:59:06.326
  STEP: Setting up server cert @ 10/14/25 02:59:06.354
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 02:59:06.874
  STEP: Deploying the webhook pod @ 10/14/25 02:59:06.882
  STEP: Wait for the deployment to be ready @ 10/14/25 02:59:06.9
  I1014 02:59:06.921353 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 02:59:06.958611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:07.958743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 02:59:08.934
  E1014 02:59:08.960536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 02:59:08.96
  E1014 02:59:09.960678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 02:59:09.961085 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/14/25 02:59:10.016
  STEP: Creating a configMap that should be mutated @ 10/14/25 02:59:10.044
  STEP: Deleting the collection of validation webhooks @ 10/14/25 02:59:10.1
  STEP: Creating a configMap that should not be mutated @ 10/14/25 02:59:10.148
  I1014 02:59:10.266488 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8666" for this suite. @ 10/14/25 02:59:10.275
  STEP: Destroying namespace "webhook-markers-5023" for this suite. @ 10/14/25 02:59:10.287
â€¢ [4.019 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 10/14/25 02:59:10.313
  I1014 02:59:10.313560 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 02:59:10.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 02:59:10.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 02:59:10.346
  STEP: Looking for a node to schedule job pods @ 10/14/25 02:59:10.35
  STEP: Creating a job @ 10/14/25 02:59:10.376
  STEP: Waiting for all the pods to be ready @ 10/14/25 02:59:10.383
  E1014 02:59:10.960787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:11.961085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:12.961027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:13.961950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 10/14/25 02:59:14.411
  STEP: Evict all the Pods @ 10/14/25 02:59:14.415
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-8d94n/job-7777 @ 10/14/25 02:59:14.416
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-wj482/job-7777 @ 10/14/25 02:59:14.416
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-vhd7t/job-7777 @ 10/14/25 02:59:14.416
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-wj482/job-7777 to be deleted @ 10/14/25 02:59:14.442
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-8d94n/job-7777 to be deleted @ 10/14/25 02:59:14.547
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-vhd7t/job-7777 to be deleted @ 10/14/25 02:59:14.547
  E1014 02:59:14.962034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:15.965957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:16.966372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:17.966483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:18.966552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:19.966684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 10/14/25 02:59:20.582
  E1014 02:59:20.966891      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:21.966977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:22.969947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:23.970164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:24.970898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:25.971173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:26.971941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:27.972078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:28.972833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:29.973129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:30.973139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:31.973300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:32.973953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:33.974083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:34.974583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:35.974984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:36.975391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:37.975779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:38.975802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:39.975913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:40.978033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:41.978954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:42.979850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:43.980216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:44.982490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:45.982750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:46.984690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:47.984810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:48.985843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:49.985923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:50.986761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:51.986874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:52.987098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:53.987292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:54.987405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:55.987464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:56.988432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:57.988466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:58.988556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 02:59:59.988735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:00.988748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:01.988885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:00:02.734280 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7777" for this suite. @ 10/14/25 03:00:02.738
â€¢ [52.432 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 10/14/25 03:00:02.747
  I1014 03:00:02.747699 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/14/25 03:00:02.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:00:02.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:00:02.771
  STEP: creating a target pod @ 10/14/25 03:00:02.776
  E1014 03:00:02.989676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:03.989806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/14/25 03:00:04.812
  E1014 03:00:04.994076      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:05.994283      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 10/14/25 03:00:06.849
  STEP: checking pod container endpoints @ 10/14/25 03:00:06.857
  I1014 03:00:06.857922 21 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1254 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:00:06.858202 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:00:06.858472 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-1254/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I1014 03:00:06.956121 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:00:06.956334 21 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/14/25 03:00:06.974
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/14/25 03:00:06.982
  E1014 03:00:06.994829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/14/25 03:00:06.997
  I1014 03:00:07.014144 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1254" for this suite. @ 10/14/25 03:00:07.026
â€¢ [4.291 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:892
  STEP: Creating a kubernetes client @ 10/14/25 03:00:07.038
  I1014 03:00:07.038939 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 03:00:07.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:00:07.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:00:07.088
  STEP: Creating a job @ 10/14/25 03:00:07.104
  STEP: Ensuring active pods == parallelism @ 10/14/25 03:00:07.117
  E1014 03:00:07.994977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:08.995145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete a job @ 10/14/25 03:00:09.132
  STEP: deleting Job.batch foo in namespace job-5404, will wait for the garbage collector to delete the pods @ 10/14/25 03:00:09.132
  I1014 03:00:09.196675 21 resources.go:139] Deleting Job.batch foo took: 8.710878ms
  I1014 03:00:09.298117 21 resources.go:163] Terminating Job.batch foo pods took: 101.456102ms
  E1014 03:00:09.995199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:10.995487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 10/14/25 03:00:11.898
  I1014 03:00:11.904539 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5404" for this suite. @ 10/14/25 03:00:11.91
â€¢ [4.885 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 10/14/25 03:00:11.924
  I1014 03:00:11.924271 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/25 03:00:11.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:00:11.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:00:11.965
  I1014 03:00:11.983918 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1014 03:00:11.995979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:12.996193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:13.997030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:14.998026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:16.002156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:17.005938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:18.008220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:19.008377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:20.008627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:21.009163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:22.009662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:23.012729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:24.013559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:25.014088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:26.015203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:27.015040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:28.015586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:29.023030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:30.023380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:31.024227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:32.025086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:33.025049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:34.025219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:35.025950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:36.026687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:37.026791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:38.027444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:39.027994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:40.030159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:41.030804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:42.030951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:43.031711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:44.032054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:45.032750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:46.032923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:47.033260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:48.033158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:49.033276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:50.033402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:51.034138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:52.034224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:53.034406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:54.035062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:55.035587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:56.035777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:57.035963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:58.036909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:00:59.037017      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:00.037831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:01.037953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:02.038216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:03.038396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:04.038452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:05.038566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:06.039631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:07.039835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:08.040746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:09.040882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:10.041665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:11.042145      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:11.993066 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/14/25 03:01:12.004
  STEP: Adding a custom resource @ 10/14/25 03:01:12.004
  I1014 03:01:12.038521 21 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  E1014 03:01:12.046494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:12.047181 21 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 10/14/25 03:01:12.047
  I1014 03:01:12.064086 21 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I1014 03:01:12.072567 21 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/14/25 03:01:12.072
  E1014 03:01:13.047040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:14.047174      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/14/25 03:01:14.098
  E1014 03:01:15.048480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:16.049499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 10/14/25 03:01:16.166
  STEP: Removing a custom resource @ 10/14/25 03:01:16.198
  I1014 03:01:16.220571 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2649" for this suite. @ 10/14/25 03:01:16.227
â€¢ [64.310 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 10/14/25 03:01:16.235
  I1014 03:01:16.235697 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename endpointslice @ 10/14/25 03:01:16.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:16.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:16.264
  STEP: getting /apis @ 10/14/25 03:01:16.27
  STEP: getting /apis/discovery.k8s.io @ 10/14/25 03:01:16.277
  STEP: getting /apis/discovery.k8s.iov1 @ 10/14/25 03:01:16.284
  STEP: creating @ 10/14/25 03:01:16.286
  STEP: getting @ 10/14/25 03:01:16.301
  STEP: listing @ 10/14/25 03:01:16.304
  STEP: watching @ 10/14/25 03:01:16.31
  I1014 03:01:16.310385 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 10/14/25 03:01:16.318
  STEP: cluster-wide watching @ 10/14/25 03:01:16.326
  I1014 03:01:16.326535 21 endpointslice.go:459] starting watch
  STEP: patching @ 10/14/25 03:01:16.334
  STEP: updating @ 10/14/25 03:01:16.342
  I1014 03:01:16.362440 21 endpointslice.go:482] waiting for watch events with expected annotations
  I1014 03:01:16.362859 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 10/14/25 03:01:16.363
  STEP: deleting a collection @ 10/14/25 03:01:16.386
  I1014 03:01:16.405435 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8089" for this suite. @ 10/14/25 03:01:16.413
â€¢ [0.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 10/14/25 03:01:16.431
  I1014 03:01:16.431537 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-selectable-fields @ 10/14/25 03:01:16.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:16.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:16.467
  STEP: Setting up server cert @ 10/14/25 03:01:16.48
  E1014 03:01:17.057634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/14/25 03:01:17.361
  STEP: Deploying the custom resource conversion webhook pod @ 10/14/25 03:01:17.367
  STEP: Wait for the deployment to be ready @ 10/14/25 03:01:17.382
  I1014 03:01:17.408751 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1014 03:01:18.057979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:19.059475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:01:19.42
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:01:19.442
  E1014 03:01:20.059831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:20.443765 21 util.go:418] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 10/14/25 03:01:20.45
  I1014 03:01:20.450198 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Creating a custom resource conversion webhook @ 10/14/25 03:01:20.961
  E1014 03:01:21.060250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:22.060398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 10/14/25 03:01:23.023
  STEP: Registering informers with field selectors @ 10/14/25 03:01:23.028
  STEP: Creating custom resources @ 10/14/25 03:01:23.029
  STEP: Listing v2 custom resources with field selector host=host1 @ 10/14/25 03:01:23.057
  E1014 03:01:23.060593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 10/14/25 03:01:23.061
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 10/14/25 03:01:23.065
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 10/14/25 03:01:23.069
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 10/14/25 03:01:23.073
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 10/14/25 03:01:23.078
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 10/14/25 03:01:23.078
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 10/14/25 03:01:23.078
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 10/14/25 03:01:23.078
  STEP: Deleting one custom resources to ensure that deletions are observed @ 10/14/25 03:01:23.078
  STEP: Updating one custom resources to ensure that deletions are observed @ 10/14/25 03:01:23.093
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 10/14/25 03:01:23.109
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 10/14/25 03:01:23.113
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 10/14/25 03:01:23.117
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 10/14/25 03:01:23.122
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 10/14/25 03:01:23.123
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 10/14/25 03:01:23.123
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 10/14/25 03:01:23.124
  I1014 03:01:23.737942 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-5136" for this suite. @ 10/14/25 03:01:23.742
â€¢ [7.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:811
  STEP: Creating a kubernetes client @ 10/14/25 03:01:23.761
  I1014 03:01:23.761523 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 03:01:23.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:23.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:23.789
  STEP: Creating service test in namespace statefulset-2637 @ 10/14/25 03:01:23.793
  STEP: Looking for a node to schedule stateful set and pod @ 10/14/25 03:01:23.798
  STEP: Creating pod with conflicting port in namespace statefulset-2637 @ 10/14/25 03:01:23.843
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2637 @ 10/14/25 03:01:23.876
  E1014 03:01:24.060747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:25.061071      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-2637 @ 10/14/25 03:01:25.886
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2637 @ 10/14/25 03:01:25.893
  I1014 03:01:25.905933 21 statefulset.go:860] Observed stateful pod in namespace: statefulset-2637, name: ss-0, uid: 79b78062-710e-43ce-99bb-9bff43566080, status phase: Pending. Waiting for statefulset controller to delete.
  I1014 03:01:25.984337 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-2637, name: ss-0, uid: 79b78062-710e-43ce-99bb-9bff43566080, status phase: Failed. Waiting for statefulset controller to delete.
  I1014 03:01:26.013053 21 statefulset.go:884] Observed stateful pod in namespace: statefulset-2637, name: ss-0, uid: 79b78062-710e-43ce-99bb-9bff43566080, status phase: Failed. Waiting for statefulset controller to delete.
  I1014 03:01:26.027453 21 statefulset.go:878] Observed delete event for stateful pod ss-0 in namespace statefulset-2637
  STEP: Removing pod with conflicting port in namespace statefulset-2637 @ 10/14/25 03:01:26.027
  E1014 03:01:26.061179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2637 and will be in running state @ 10/14/25 03:01:26.119
  E1014 03:01:27.061376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:28.061538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:28.135442 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2637
  I1014 03:01:28.139377 21 rest.go:153] Scaling statefulset ss to 0
  E1014 03:01:29.061628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:30.061777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:31.062060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:32.062352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:33.062555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:34.062467      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:35.062844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:36.062967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:37.063031      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:38.065964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:38.153128 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 03:01:38.156598 21 rest.go:91] Deleting statefulset ss
  I1014 03:01:38.176011 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2637" for this suite. @ 10/14/25 03:01:38.18
â€¢ [14.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 10/14/25 03:01:38.193
  I1014 03:01:38.194166 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 03:01:38.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:38.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:38.217
  STEP: creating the pod @ 10/14/25 03:01:38.221
  I1014 03:01:38.221867 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 create -f -'
  I1014 03:01:38.424788 21 builder.go:146] stderr: ""
  I1014 03:01:38.424828 21 builder.go:147] stdout: "pod/pause created\n"
  E1014 03:01:39.066691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:40.066805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/14/25 03:01:40.443
  I1014 03:01:40.445143 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 label pods pause testing-label=testing-label-value'
  I1014 03:01:40.526492 21 builder.go:146] stderr: ""
  I1014 03:01:40.526535 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/14/25 03:01:40.526
  I1014 03:01:40.526616 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 get pod pause -L testing-label'
  I1014 03:01:40.673570 21 builder.go:146] stderr: ""
  I1014 03:01:40.673616 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/14/25 03:01:40.673
  I1014 03:01:40.673709 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 label pods pause testing-label-'
  I1014 03:01:40.754590 21 builder.go:146] stderr: ""
  I1014 03:01:40.754638 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/14/25 03:01:40.754
  I1014 03:01:40.754699 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 get pod pause -L testing-label'
  I1014 03:01:40.842446 21 builder.go:146] stderr: ""
  I1014 03:01:40.842488 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 10/14/25 03:01:40.842
  I1014 03:01:40.842590 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 delete --grace-period=0 --force -f -'
  I1014 03:01:40.916268 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:01:40.916302 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1014 03:01:40.916339 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 get rc,svc -l name=pause --no-headers'
  I1014 03:01:41.047924 21 builder.go:146] stderr: "No resources found in kubectl-8094 namespace.\n"
  I1014 03:01:41.047960 21 builder.go:147] stdout: ""
  I1014 03:01:41.047997 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8094 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E1014 03:01:41.066832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:41.102343 21 builder.go:146] stderr: ""
  I1014 03:01:41.102380 21 builder.go:147] stdout: ""
  I1014 03:01:41.102470 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8094" for this suite. @ 10/14/25 03:01:41.106
â€¢ [2.922 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3630
  STEP: Creating a kubernetes client @ 10/14/25 03:01:41.115
  I1014 03:01:41.115937 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:01:41.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:41.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:41.146
  STEP: creating a collection of services @ 10/14/25 03:01:41.15
  I1014 03:01:41.150950 21 service.go:3666] Creating e2e-svc-a-hqg28
  I1014 03:01:41.177012 21 service.go:3666] Creating e2e-svc-b-hg8p9
  I1014 03:01:41.189072 21 service.go:3666] Creating e2e-svc-c-mlgmh
  STEP: deleting service collection @ 10/14/25 03:01:41.217
  I1014 03:01:41.270775 21 service.go:3701] Collection of services has been deleted
  I1014 03:01:41.271567 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8910" for this suite. @ 10/14/25 03:01:41.283
â€¢ [0.176 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/14/25 03:01:41.293
  I1014 03:01:41.293266 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename conformance-tests @ 10/14/25 03:01:41.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:41.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:41.323
  STEP: Getting node addresses @ 10/14/25 03:01:41.327
  I1014 03:01:41.327541 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1014 03:01:41.381813 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3506" for this suite. @ 10/14/25 03:01:41.386
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1049
  STEP: Creating a kubernetes client @ 10/14/25 03:01:41.401
  I1014 03:01:41.401925 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 03:01:41.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:01:41.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:01:41.433
  STEP: Creating service test in namespace statefulset-3719 @ 10/14/25 03:01:41.437
  STEP: Creating statefulset ss in namespace statefulset-3719 @ 10/14/25 03:01:41.457
  I1014 03:01:41.474809 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E1014 03:01:42.067003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:43.067161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:44.067323      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:45.067473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:46.067766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:47.067800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:48.068083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:49.068592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:50.068700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:51.069298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:01:51.470097 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/14/25 03:01:51.477
  STEP: Getting /status @ 10/14/25 03:01:51.484
  I1014 03:01:51.489573 21 statefulset.go:1085] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/14/25 03:01:51.489
  I1014 03:01:51.498441 21 statefulset.go:1105] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/14/25 03:01:51.498
  I1014 03:01:51.501112 21 statefulset.go:1133] Observed &StatefulSet event: ADDED
  I1014 03:01:51.501505 21 statefulset.go:1126] Found Statefulset ss in namespace statefulset-3719 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1014 03:01:51.501816 21 statefulset.go:1137] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/14/25 03:01:51.502
  I1014 03:01:51.502222 21 statefulset.go:1141] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1014 03:01:51.509037 21 statefulset.go:1145] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/14/25 03:01:51.509
  I1014 03:01:51.512869 21 statefulset.go:1170] Observed &StatefulSet event: ADDED
  I1014 03:01:51.513503 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3719
  I1014 03:01:51.517541 21 rest.go:153] Scaling statefulset ss to 0
  E1014 03:01:52.069489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:53.069606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:54.069680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:55.069844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:56.069955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:57.070377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:58.073213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:01:59.073355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:00.073374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:01.076700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:02:01.538961 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 03:02:01.544716 21 rest.go:91] Deleting statefulset ss
  I1014 03:02:01.578134 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3719" for this suite. @ 10/14/25 03:02:01.585
â€¢ [20.197 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:884
  STEP: Creating a kubernetes client @ 10/14/25 03:02:01.598
  I1014 03:02:01.598676 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 03:02:01.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:01.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:01.622
  STEP: validating api versions @ 10/14/25 03:02:01.628
  I1014 03:02:01.628723 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9232 api-versions'
  I1014 03:02:01.753802 21 builder.go:146] stderr: ""
  I1014 03:02:01.753859 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1014 03:02:01.753988 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9232" for this suite. @ 10/14/25 03:02:01.758
â€¢ [0.166 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 10/14/25 03:02:01.764
  I1014 03:02:01.764928 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/14/25 03:02:01.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:01.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:01.788
  STEP: creating the policy @ 10/14/25 03:02:01.8
  STEP: waiting until the marker is denied @ 10/14/25 03:02:01.831
  STEP: testing a replicated Deployment to be allowed @ 10/14/25 03:02:02.054
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/14/25 03:02:02.074
  E1014 03:02:02.078282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:02:02.223726 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8026" for this suite. @ 10/14/25 03:02:02.235
â€¢ [0.477 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:108
  STEP: Creating a kubernetes client @ 10/14/25 03:02:02.242
  I1014 03:02:02.242403 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:02:02.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:02.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:02.275
  STEP: Counting existing ResourceQuota @ 10/14/25 03:02:02.281
  E1014 03:02:03.078575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:04.079171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:05.079316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:06.079414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:07.079997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/25 03:02:07.294
  STEP: Ensuring resource quota status is calculated @ 10/14/25 03:02:07.305
  E1014 03:02:08.080087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:09.080218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 10/14/25 03:02:09.311
  STEP: Creating a NodePort Service @ 10/14/25 03:02:09.35
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/14/25 03:02:09.377
  STEP: Ensuring resource quota status captures service creation @ 10/14/25 03:02:09.406
  E1014 03:02:10.080440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:11.098151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 10/14/25 03:02:11.411
  STEP: Ensuring resource quota status released usage @ 10/14/25 03:02:11.488
  E1014 03:02:12.099032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:13.099148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:02:13.493483 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4569" for this suite. @ 10/14/25 03:02:13.498
â€¢ [11.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1504
  STEP: Creating a kubernetes client @ 10/14/25 03:02:13.51
  I1014 03:02:13.510375 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:02:13.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:13.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:13.532
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9876 @ 10/14/25 03:02:13.536
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/14/25 03:02:13.563
  STEP: creating service externalsvc in namespace services-9876 @ 10/14/25 03:02:13.563
  I1014 03:02:13.608126 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 03:02:14.099370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:15.101955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the NodePort service to type=ExternalName @ 10/14/25 03:02:15.628
  I1014 03:02:15.650249 21 resource.go:361] Creating new exec pod
  E1014 03:02:16.102747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:17.105990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:02:17.685342 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9876 exec execpodm2xtx -- /bin/sh -x -c nslookup nodeport-service.services-9876.svc.cluster.local'
  I1014 03:02:17.915819 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-9876.svc.cluster.local\n"
  I1014 03:02:17.915867 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-9876.svc.cluster.local\tcanonical name = externalsvc.services-9876.svc.cluster.local.\nName:\texternalsvc.services-9876.svc.cluster.local\nAddress: 10.43.119.12\n\n"
  I1014 03:02:18.028220 21 service.go:1515] Cleaning up the NodePort to ExternalName test service
  I1014 03:02:18.056927 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9876" for this suite. @ 10/14/25 03:02:18.075
â€¢ [4.573 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/14/25 03:02:18.095
  I1014 03:02:18.095329 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename subpath @ 10/14/25 03:02:18.101
  E1014 03:02:18.106995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:18.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:18.125
  STEP: Setting up data @ 10/14/25 03:02:18.135
  STEP: Creating pod pod-subpath-test-downwardapi-txf8 @ 10/14/25 03:02:18.147
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/25 03:02:18.147
  E1014 03:02:19.107106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:20.107498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:21.109979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:22.110108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:23.110262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:24.110294      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:25.110469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:26.110592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:27.110910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:28.110940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:29.111094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:30.111221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:31.111465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:32.111523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:33.111699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:34.112052      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:35.112101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:36.112153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:37.112273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:38.112423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:39.112618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:40.115704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:02:40.254
  I1014 03:02:40.259359 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-subpath-test-downwardapi-txf8 container test-container-subpath-downwardapi-txf8: <nil>
  STEP: delete the pod @ 10/14/25 03:02:40.276
  STEP: Deleting pod pod-subpath-test-downwardapi-txf8 @ 10/14/25 03:02:40.296
  I1014 03:02:40.296979 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-txf8" in namespace "subpath-4404"
  I1014 03:02:40.301349 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4404" for this suite. @ 10/14/25 03:02:40.307
â€¢ [22.223 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 10/14/25 03:02:40.314
  I1014 03:02:40.315010 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename containers @ 10/14/25 03:02:40.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:40.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:40.34
  STEP: Creating a pod to test override command @ 10/14/25 03:02:40.344
  E1014 03:02:41.115860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:42.116097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:02:42.366
  I1014 03:02:42.370113 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod client-containers-f2d2b20b-327a-4305-8811-741f1ec53459 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:02:42.377
  I1014 03:02:42.394273 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8070" for this suite. @ 10/14/25 03:02:42.4
â€¢ [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 10/14/25 03:02:42.436
  I1014 03:02:42.436374 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:02:42.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:42.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:42.474
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:02:42.48
  E1014 03:02:43.116110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:44.116252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:02:44.522
  I1014 03:02:44.526406 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-8b425694-c23b-4923-a19c-45725eb8e347 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:02:44.534
  I1014 03:02:44.564818 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-573" for this suite. @ 10/14/25 03:02:44.576
â€¢ [2.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 10/14/25 03:02:44.603
  I1014 03:02:44.603351 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/25 03:02:44.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:02:44.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:02:44.649
  STEP: Performing setup for networking test in namespace pod-network-test-1591 @ 10/14/25 03:02:44.654
  STEP: creating a selector @ 10/14/25 03:02:44.654
  STEP: Creating the service pods in kubernetes @ 10/14/25 03:02:44.654
  I1014 03:02:44.655069 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1014 03:02:45.117879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:46.118201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:47.118975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:48.119065      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:49.119213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:50.119622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:51.120111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:52.120274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:53.120481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:54.120838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:55.121210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:56.121368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:57.121970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:02:58.122175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/14/25 03:02:58.794
  E1014 03:02:59.122248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:00.122358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:00.846463 21 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1014 03:03:00.846902 21 utils.go:495] Going to poll 10.42.0.99 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1014 03:03:00.851372 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.99 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1591 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:03:00.851777 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:03:00.852053 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1591/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.99+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E1014 03:03:01.123562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:01.960793 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:03:01.960873 21 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I1014 03:03:01.960917 21 utils.go:495] Going to poll 10.42.1.216 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1014 03:03:01.965077 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.216 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1591 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:03:01.965108 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:03:01.965164 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1591/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.216+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E1014 03:03:02.123668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:03.062106 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:03:03.062447 21 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I1014 03:03:03.062674 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1591" for this suite. @ 10/14/25 03:03:03.068
â€¢ [18.473 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3714
  STEP: Creating a kubernetes client @ 10/14/25 03:03:03.077
  I1014 03:03:03.077503 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:03:03.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:03:03.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:03:03.102
  STEP: creating service multiprotocol-test in namespace services-4550 @ 10/14/25 03:03:03.106
  E1014 03:03:03.124543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating pod pod1 in namespace services-4550 @ 10/14/25 03:03:03.124
  STEP: Creating pod pod1 in namespace services-4550 @ 10/14/25 03:03:03.124
  E1014 03:03:04.124724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:05.124844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4550 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 10/14/25 03:03:05.167
  I1014 03:03:05.174642      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:03:05.182453 21 service.go:4729] successfully validated that service multiprotocol-test in namespace services-4550 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 10/14/25 03:03:05.182
  I1014 03:03:05.183042 21 resource.go:361] Creating new exec pod
  E1014 03:03:06.125124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:07.125085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:07.218704 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80'
  I1014 03:03:07.405132 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.107.13 80\n+ echo hostName\nConnection to 10.43.107.13 80 port [tcp/http] succeeded!\n"
  I1014 03:03:07.405181 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:03:07.405249 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.13 80'
  E1014 03:03:08.125313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:09.126466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:09.576129 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.107.13 80\n+ echo hostName\n"
  I1014 03:03:09.576177 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 10/14/25 03:03:09.576
  I1014 03:03:09.586841 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80'
  I1014 03:03:09.774024 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.107.13 80\n+ echo hostName\nConnection to 10.43.107.13 80 port [tcp/http] succeeded!\n"
  I1014 03:03:09.774071 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:03:09.774165 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.13 80'
  E1014 03:03:10.127361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:11.127524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:11.946262 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.107.13 80\n+ echo hostName\n"
  I1014 03:03:11.946316 21 builder.go:147] stdout: ""
  I1014 03:03:11.946381 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.13 80'
  E1014 03:03:12.128139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:13.128250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:14.128476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:14.130899 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.107.13 80\n"
  I1014 03:03:14.130938 21 builder.go:147] stdout: ""
  I1014 03:03:14.130988 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.13 80'
  E1014 03:03:15.128639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:16.129916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:16.269663 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.107.13 80\n+ echo hostName\n"
  I1014 03:03:16.269742 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 10/14/25 03:03:16.269
  I1014 03:03:16.296666 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.107.13 80'
  E1014 03:03:17.131098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:18.132634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:18.545733 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.107.13 80\n+ echo hostName\n"
  I1014 03:03:18.545782 21 builder.go:147] stdout: "pod1"
  I1014 03:03:18.545876 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80'
  E1014 03:03:19.132778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:20.133027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:20.756408 21 builder.go:135] rc: 1
  I1014 03:03:20.756470 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.107.13 80
  + echo hostName
  nc: connect to 10.43.107.13 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1014 03:03:20.756528 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80'
  E1014 03:03:21.133082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:22.133199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:22.906934 21 builder.go:135] rc: 1
  I1014 03:03:22.907002 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.107.13 80
  nc: connect to 10.43.107.13 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1014 03:03:22.907218 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80'
  E1014 03:03:23.133541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:24.133686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:03:25.063323 21 builder.go:135] rc: 1
  I1014 03:03:25.063864 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-4550 exec execpodmw9bj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.13 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.107.13 80
  + echo hostName
  nc: connect to 10.43.107.13 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1014 03:03:25.066473 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4550" for this suite. @ 10/14/25 03:03:25.071
â€¢ [22.000 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/14/25 03:03:25.077
  I1014 03:03:25.077179 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename cronjob @ 10/14/25 03:03:25.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:03:25.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:03:25.097
  STEP: Creating a ForbidConcurrent cronjob @ 10/14/25 03:03:25.102
  STEP: Ensuring a job is scheduled @ 10/14/25 03:03:25.108
  E1014 03:03:25.133918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:26.134110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:27.134979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:28.135171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:29.135458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:30.135702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:31.136272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:32.136565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:33.137322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:34.137526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:35.138476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:36.138668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:37.138778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:38.141983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:39.142553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:40.142570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:41.143153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:42.143198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:43.150556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:44.144827      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:45.145921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:46.146132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:47.146590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:48.146734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:49.146954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:50.147333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:51.147310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:52.147564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:53.147598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:54.147750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:55.148272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:56.148429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:57.148869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:58.149102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:03:59.149576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:00.149689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/14/25 03:04:01.121
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/14/25 03:04:01.125
  STEP: Ensuring no more jobs are scheduled @ 10/14/25 03:04:01.129
  STEP: Removing cronjob @ 10/14/25 03:04:01.142
  E1014 03:04:01.149802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:01.150487 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9662" for this suite. @ 10/14/25 03:04:01.161
â€¢ [36.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/14/25 03:04:01.189
  I1014 03:04:01.189623 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 03:04:01.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:04:01.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:04:01.217
  I1014 03:04:01.222332 21 deployment.go:1215] Creating deployment "webserver-deployment"
  I1014 03:04:01.227893 21 deployment.go:1219] Waiting for observed generation 1
  E1014 03:04:02.150279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:03.150518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:03.240729 21 deployment.go:1224] Waiting for all required pods to come up
  I1014 03:04:03.246876 21 resource.go:81] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/14/25 03:04:03.247
  E1014 03:04:04.150656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:05.150781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:05.295274 21 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I1014 03:04:05.301576 21 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I1014 03:04:05.309772 21 deployment.go:314] Updating deployment webserver-deployment
  I1014 03:04:05.309993 21 deployment.go:1243] Waiting for observed generation 2
  E1014 03:04:06.150859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:07.151033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:07.326703 21 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1014 03:04:07.330818 21 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1014 03:04:07.335660 21 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1014 03:04:07.347081 21 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1014 03:04:07.347508 21 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1014 03:04:07.353261 21 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1014 03:04:07.362086 21 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1014 03:04:07.362496 21 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1014 03:04:07.372467 21 deployment.go:314] Updating deployment webserver-deployment
  I1014 03:04:07.373787 21 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1014 03:04:07.381575 21 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1014 03:04:07.392954 21 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  E1014 03:04:08.151292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:09.152279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:09.403041 21 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7bb14482-84a7-4c07-8bd2-89d19cac8b3d",
      ResourceVersion: (string) (len=5) "14563",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1014 03:04:09.752791 21 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
      ResourceVersion: (string) (len=5) "14557",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "7bb14482-84a7-4c07-8bd2-89d19cac8b3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 62 62 31 34 34  38 32 2d 38 34 61 37 2d  |\"7bb14482-84a7-|
              00000120  34 63 30 37 2d 38 62 64  32 2d 38 39 64 31 39 63  |4c07-8bd2-89d19c|
              00000130  61 63 38 62 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ac8b3d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 03:04:09.753772 21 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I1014 03:04:09.754056 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
      ResourceVersion: (string) (len=5) "14610",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "7bb14482-84a7-4c07-8bd2-89d19cac8b3d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 62 62 31 34 34  38 32 2d 38 34 61 37 2d  |\"7bb14482-84a7-|
              00000120  34 63 30 37 2d 38 62 64  32 2d 38 39 64 31 39 63  |4c07-8bd2-89d19c|
              00000130  61 63 38 62 33 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ac8b3d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1014 03:04:09.945901 21 deployment.go:68] Pod "webserver-deployment-685b768f58-5d4wp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5d4wp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59411728-bdfb-47c2-8591-76a131ad656d",
      ResourceVersion: (string) (len=5) "14595",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-thdzh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-thdzh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-thdzh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:10.162675 21 deployment.go:68] Pod "webserver-deployment-685b768f58-6rkmv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6rkmv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8d127a2-7943-499f-aaef-906e136c9424",
      ResourceVersion: (string) (len=5) "14373",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  32 5c 22 7d 22 3a 7b 22  |.42.1.222\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6hgv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6hgv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007842,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ee1f1c41ae91e321490c4fc64c6934ab759eb9ae14f50f557caaf59af747619b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w6hgv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E1014 03:04:10.152916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:10.277559 21 deployment.go:68] Pod "webserver-deployment-685b768f58-7n9fx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7n9fx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06151577-6f83-475e-bad7-fd1eb710586c",
      ResourceVersion: (string) (len=5) "14385",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  31 5c 22 7d 22 3a 7b 22  |.42.1.221\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2bp8n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2bp8n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007842,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9b6ec34e9181b7920a2a5b43f3af4851fd204cffa6663413ab147a6b31223679",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2bp8n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:10.441334 21 deployment.go:68] Pod "webserver-deployment-685b768f58-8wzmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8wzmk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc9316cd-f591-4a6f-a054-5031050b2451",
      ResourceVersion: (string) (len=5) "14575",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vt4hf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vt4hf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vt4hf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:10.686442 21 deployment.go:68] Pod "webserver-deployment-685b768f58-9rfmm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9rfmm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcf766a8-04b3-4c3a-be00-4938c55f5cf4",
      ResourceVersion: (string) (len=5) "14400",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 30  32 5c 22 7d 22 3a 7b 22  |.42.0.102\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dvd4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dvd4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b3aae537d3273af054d1d9dbdd57e8b920ba93c16372a16478ebc719e0c122a9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dvd4q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:10.894025 21 deployment.go:68] Pod "webserver-deployment-685b768f58-c56dl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c56dl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d5b45e6-8fa4-487b-853b-989580ed01aa",
      ResourceVersion: (string) (len=5) "14597",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9nv9m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9nv9m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9nv9m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.006582 21 deployment.go:68] Pod "webserver-deployment-685b768f58-f57fp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-f57fp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6a7c948-d5cd-4c10-ab66-6e6614cc557f",
      ResourceVersion: (string) (len=5) "14579",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7q8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7q8f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k7q8f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.036555 21 deployment.go:68] Pod "webserver-deployment-685b768f58-jm7gn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jm7gn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2572518b-9970-483c-b0e9-ed1e953dead2",
      ResourceVersion: (string) (len=5) "14551",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vbfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vbfr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4vbfr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.062154 21 deployment.go:68] Pod "webserver-deployment-685b768f58-kzqxg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kzqxg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9f52585-cdfb-4f54-ad4f-c23a74aad0d3",
      ResourceVersion: (string) (len=5) "14609",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  37 5c 22 7d 22 3a 7b 22  |.42.1.227\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mpzj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mpzj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007849,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5a2a46a2cfbd56ea55d2e15d521211f8140df23f2b6f039e89dc60f30edbe06b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mpzj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.087228 21 deployment.go:68] Pod "webserver-deployment-685b768f58-l79sl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l79sl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a92ebb23-8a69-4b80-b400-854889e2ec5e",
      ResourceVersion: (string) (len=5) "14396",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 30  31 5c 22 7d 22 3a 7b 22  |.42.0.101\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7k5l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7k5l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://de7a1378e2778dba3c491e698ea9110011bc87db5320cc5ceb09bc281af8fd81",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n7k5l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.112172 21 deployment.go:68] Pod "webserver-deployment-685b768f58-lqg8j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lqg8j",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8df2aba-8b9f-41a1-ae4b-ed2f8f2215ee",
      ResourceVersion: (string) (len=5) "14379",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  33 5c 22 7d 22 3a 7b 22  |.42.1.223\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbqz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbqz6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d9181b882dff9274c34582ca461338649119594c1f6d2b0cd0fb7caf7f8e29c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rbqz6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.138838 21 deployment.go:68] Pod "webserver-deployment-685b768f58-mdbdt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mdbdt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6210b4af-ffbd-4dcd-a242-5d766ccc5dfc",
      ResourceVersion: (string) (len=5) "14568",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sjs8w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sjs8w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sjs8w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.162209 21 deployment.go:68] Pod "webserver-deployment-685b768f58-nn678" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nn678",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5e0dd41-2d87-4f7d-ae70-e0703e3b7948",
      ResourceVersion: (string) (len=5) "14587",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wln49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wln49",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wln49",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E1014 03:04:11.153256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:04:11.185027 21 deployment.go:68] Pod "webserver-deployment-685b768f58-plmnt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-plmnt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad7ee203-9581-4d3c-b1d5-b6725432df3f",
      ResourceVersion: (string) (len=5) "14570",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k57nq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k57nq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k57nq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.207075 21 deployment.go:68] Pod "webserver-deployment-685b768f58-qfntz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qfntz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9033fee7-2a4e-4e26-81a7-3086ab8bb8fc",
      ResourceVersion: (string) (len=5) "14580",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ks7j8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ks7j8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ks7j8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.231598 21 deployment.go:68] Pod "webserver-deployment-685b768f58-szwbl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-szwbl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb772d49-836d-4019-8301-cd1ee294a280",
      ResourceVersion: (string) (len=5) "14388",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 30  35 5c 22 7d 22 3a 7b 22  |.42.0.105\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fcnln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fcnln",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://78f79e7d0758fc53c0ba018c844dcfbc9be64484573e42c3d5ac6a2ddfad5c94",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fcnln",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.255806 21 deployment.go:68] Pod "webserver-deployment-685b768f58-wnnlb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wnnlb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50e13bb6-76f4-4994-85be-2db6103b1551",
      ResourceVersion: (string) (len=5) "14586",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nkkvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nkkvc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nkkvc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.276733 21 deployment.go:68] Pod "webserver-deployment-685b768f58-xbz85" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xbz85",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30a87c1a-5ec7-4c0f-8db1-b50e412cdb9c",
      ResourceVersion: (string) (len=5) "14376",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  34 5c 22 7d 22 3a 7b 22  |.42.1.224\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6mtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6mtg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1d52429fb134aafaad98d04a2a6735c3cc93f3a31bb0edd1a6c638a7fdeac66",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j6mtg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.285201 21 deployment.go:68] Pod "webserver-deployment-685b768f58-xqgxq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xqgxq",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67a1faf5-8a69-4cfd-87e2-13d02043c311",
      ResourceVersion: (string) (len=5) "14599",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6xdsw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6xdsw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6xdsw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.314640 21 deployment.go:68] Pod "webserver-deployment-685b768f58-z6jhc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z6jhc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02a4f54a-f683-4958-ae53-2cdbca8a0c35",
      ResourceVersion: (string) (len=5) "14394",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "52e6c8b1-e5ad-460b-a85e-1b7e623e4dfc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  65 36 63 38 62 31 2d 65  |d\":\"52e6c8b1-e|
              00000090  35 61 64 2d 34 36 30 62  2d 61 38 35 65 2d 31 62  |5ad-460b-a85e-1b|
              000000a0  37 65 36 32 33 65 34 64  66 63 5c 22 7d 22 3a 7b  |7e623e4dfc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 30  34 5c 22 7d 22 3a 7b 22  |.42.0.104\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79bqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79bqz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63896007843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ee8a96b8c81c23da10bd08cb0d358f2d01eb5ad675961edc7e8b63f1369e013a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-79bqz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)({
            Linux: (*v1.LinuxContainerUser)({
              UID: (int64) 0,
              GID: (int64) 0,
              SupplementalGroups: ([]int64) (len=11) {
                (int64) 0,
                (int64) 1,
                (int64) 2,
                (int64) 3,
                (int64) 4,
                (int64) 6,
                (int64) 10,
                (int64) 11,
                (int64) 20,
                (int64) 26,
                (int64) 27
              }
            })
          }),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.338302 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6sgsp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6sgsp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8aa358b6-7ffc-4b8e-89bd-cd2f80b9ac0e",
      ResourceVersion: (string) (len=5) "14583",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7ldj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7ldj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c7ldj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.361248 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bsk2q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bsk2q",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ff169ae-29ab-442f-8ff1-1812f9c9056f",
      ResourceVersion: (string) (len=5) "14576",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 30 38 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.108\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sr6z2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sr6z2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sr6z2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.383947 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dnd2b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dnd2b",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "569461f4-eca4-46d5-a5a3-b2d3dc8ab15c",
      ResourceVersion: (string) (len=5) "14573",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 30 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.106\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxbrp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxbrp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vxbrp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.410164 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f4lk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f4lk7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97be48c1-6236-48ea-8171-654012dc0153",
      ResourceVersion: (string) (len=5) "14590",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bw62m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bw62m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bw62m",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.434467 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-n6mts" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-n6mts",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cba1ba61-c9b4-4e44-8435-6ef8907729b5",
      ResourceVersion: (string) (len=5) "14506",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 32 32 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.226\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbrd6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbrd6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.226",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.226"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pbrd6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.459365 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-nvq2g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-nvq2g",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e825ffd3-0144-4aff-a5e1-94cdbc2074f6",
      ResourceVersion: (string) (len=5) "14485",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 32 32 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.225\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hwsfz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hwsfz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.1.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hwsfz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.485225 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-p82xt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-p82xt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a8a8521-f1ca-46fb-ada9-98ca9a9fc474",
      ResourceVersion: (string) (len=5) "14592",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-52qrl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-52qrl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-52qrl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.531143 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-t65zs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-t65zs",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e862988-0bf1-4d91-bfd8-0dc290c7cc5d",
      ResourceVersion: (string) (len=5) "14602",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kggpj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kggpj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kggpj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.584709 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wh69k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wh69k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd150004-7b59-47b9-87dc-1a17ebc2632b",
      ResourceVersion: (string) (len=5) "14584",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l6qv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l6qv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l6qv4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.630690 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-x4lzj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-x4lzj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "974daa5b-5632-4536-b2d9-4bcddee133c5",
      ResourceVersion: (string) (len=5) "14559",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ndhgx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ndhgx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ndhgx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.670821 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-x65fp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-x65fp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc8e8d83-8165-4734-84f9-1fafb70fcb2d",
      ResourceVersion: (string) (len=5) "14601",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5ts4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5ts4h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5ts4h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.717139 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xbrtf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xbrtf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5320bfe9-1c88-4500-8c42-e2a806e5bb27",
      ResourceVersion: (string) (len=5) "14562",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 30 37 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.107\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xqh7t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xqh7t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.11"
        }
      },
      PodIP: (string) (len=11) "10.42.0.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xqh7t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.761515 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zq2gl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zq2gl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-4280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c42861e8-b9be-429c-b0b6-4840bcfa0bfd",
      ResourceVersion: (string) (len=5) "14594",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "b7040f4d-46f3-4b17-acf6-7117aad089b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 37  30 34 30 66 34 64 2d 34  |d\":\"b7040f4d-4|
              00000090  36 66 33 2d 34 62 31 37  2d 61 63 66 36 2d 37 31  |6f3-4b17-acf6-71|
              000000a0  31 37 61 61 64 30 38 39  62 35 5c 22 7d 22 3a 7b  |17aad089b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dpcj9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dpcj9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=52) "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896007847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896007847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dpcj9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1014 03:04:11.796591 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4280" for this suite. @ 10/14/25 03:04:11.806
â€¢ [10.626 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 10/14/25 03:04:11.817
  I1014 03:04:11.817958 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename apf @ 10/14/25 03:04:11.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:04:11.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:04:11.842
  STEP: getting /apis @ 10/14/25 03:04:11.847
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/14/25 03:04:11.855
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/14/25 03:04:11.861
  STEP: creating @ 10/14/25 03:04:11.863
  STEP: getting @ 10/14/25 03:04:11.898
  STEP: listing @ 10/14/25 03:04:11.919
  STEP: watching @ 10/14/25 03:04:11.927
  I1014 03:04:11.927160 21 flowcontrol.go:394] starting watch
  STEP: patching @ 10/14/25 03:04:11.929
  STEP: updating @ 10/14/25 03:04:11.937
  I1014 03:04:11.950002 21 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 10/14/25 03:04:11.95
  STEP: patching /status @ 10/14/25 03:04:11.96
  STEP: updating /status @ 10/14/25 03:04:11.966
  STEP: deleting @ 10/14/25 03:04:11.981
  STEP: deleting a collection @ 10/14/25 03:04:11.994
  I1014 03:04:12.023941 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1857" for this suite. @ 10/14/25 03:04:12.028
â€¢ [0.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 10/14/25 03:04:12.045
  I1014 03:04:12.045929 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:04:12.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:04:12.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:04:12.098
  STEP: Creating configMap with name cm-test-opt-del-972110b1-1de9-4a1a-b1b4-c0bb9f34e887 @ 10/14/25 03:04:12.13
  STEP: Creating configMap with name cm-test-opt-upd-b403392c-892a-4f5b-97ca-58ea46d9d2c1 @ 10/14/25 03:04:12.139
  STEP: Creating the pod @ 10/14/25 03:04:12.152
  E1014 03:04:12.153249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:13.154682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:14.154965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-972110b1-1de9-4a1a-b1b4-c0bb9f34e887 @ 10/14/25 03:04:14.219
  STEP: Updating configmap cm-test-opt-upd-b403392c-892a-4f5b-97ca-58ea46d9d2c1 @ 10/14/25 03:04:14.225
  STEP: Creating configMap with name cm-test-opt-create-3d2bc230-2305-47f8-b9e9-be7624f7e748 @ 10/14/25 03:04:14.23
  STEP: waiting to observe update in volume @ 10/14/25 03:04:14.235
  E1014 03:04:15.158100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:16.159110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:17.164071      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:18.164253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:19.164376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:20.165040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:21.166075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:22.166466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:23.166610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:24.169964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:25.170097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:26.170214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:27.170339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:28.170409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:29.170613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:30.171206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:31.171075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:32.171146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:33.171253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:34.171374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:35.171804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:36.172217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:37.172365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:38.172519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:39.172631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:40.172806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:41.173128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:42.173167      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:43.175700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:44.175888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:45.176005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:46.176027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:47.176247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:48.176290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:49.176531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:50.176644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:51.177124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:52.177335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:53.177646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:54.177639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:55.178656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:56.179026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:57.180045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:58.180199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:04:59.180347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:00.180557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:01.181106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:02.181211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:03.181265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:04.181413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:05.182336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:06.183193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:07.183608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:08.183553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:09.183693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:10.183841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:11.184271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:12.184603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:13.184553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:14.184693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:15.185981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:16.189956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:17.190023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:18.194003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:19.194891      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:20.195235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:21.195706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:22.197190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:23.197462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:24.197967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:25.197427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:26.198073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:27.198271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:28.198601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:29.198640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:30.198830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:31.199752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:32.199896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:33.200661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:34.200760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:35.201046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:36.201194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:37.201368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:38.202893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:39.202993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:40.203173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:41.206006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:42.206251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:05:42.852374 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2613" for this suite. @ 10/14/25 03:05:42.857
â€¢ [90.823 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/14/25 03:05:42.866
  I1014 03:05:42.866150 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 03:05:42.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:05:42.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:05:42.899
  STEP: Creating secret with name secret-test-ec531884-1b82-426c-b340-be4d39ae1589 @ 10/14/25 03:05:42.904
  STEP: Creating a pod to test consume secrets @ 10/14/25 03:05:42.91
  E1014 03:05:43.207085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:44.207229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:45.208028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:46.208325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:05:46.951
  I1014 03:05:46.958151 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod pod-secrets-a0d5d4f9-dc17-451a-a6b0-3fbf9a943751 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 03:05:46.986
  I1014 03:05:47.002112 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9847" for this suite. @ 10/14/25 03:05:47.008
â€¢ [4.150 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:814
  STEP: Creating a kubernetes client @ 10/14/25 03:05:47.016
  I1014 03:05:47.017052 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:05:47.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:05:47.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:05:47.044
  STEP: creating service multi-endpoint-test in namespace services-9945 @ 10/14/25 03:05:47.054
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9945 to expose endpoints map[] @ 10/14/25 03:05:47.067
  I1014 03:05:47.097987      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:05:47.098176 21 service.go:4613] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1014 03:05:47.209043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:05:48.103708      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:05:48.110052 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-9945 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9945 @ 10/14/25 03:05:48.11
  E1014 03:05:48.209983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:49.210168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9945 to expose endpoints map[pod1:[100]] @ 10/14/25 03:05:50.145
  I1014 03:05:50.163241      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:05:50.170456 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-9945 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9945 @ 10/14/25 03:05:50.17
  E1014 03:05:50.211746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:51.212579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9945 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/14/25 03:05:52.195
  I1014 03:05:52.211249      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E1014 03:05:52.212780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:05:52.219789 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-9945 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/14/25 03:05:52.219
  I1014 03:05:52.219945 21 resource.go:361] Creating new exec pod
  E1014 03:05:53.213095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:54.217986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:05:54.246133 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9945 exec execpod7z2xd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1014 03:05:54.419876 21 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test (10.43.244.26) 80 port [tcp/http] succeeded!\n"
  I1014 03:05:54.419925 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:05:54.420001 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9945 exec execpod7z2xd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.244.26 80'
  I1014 03:05:54.596350 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.244.26 80\nConnection to 10.43.244.26 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I1014 03:05:54.596400 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:05:54.596475 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9945 exec execpod7z2xd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1014 03:05:54.773928 21 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.244.26) 81 port [tcp/*] succeeded!\n"
  I1014 03:05:54.773978 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:05:54.774051 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-9945 exec execpod7z2xd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.244.26 81'
  I1014 03:05:54.930379 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.244.26 81\n+ echo hostNameConnection to 10.43.244.26 81 port [tcp/*] succeeded!\n\n"
  I1014 03:05:54.930428 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9945 @ 10/14/25 03:05:54.93
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9945 to expose endpoints map[pod2:[101]] @ 10/14/25 03:05:54.942
  I1014 03:05:54.971788      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:05:54.977856 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-9945 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9945 @ 10/14/25 03:05:54.978
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9945 to expose endpoints map[] @ 10/14/25 03:05:54.988
  I1014 03:05:55.010705      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  E1014 03:05:55.218394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:05:56.016016      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:05:56.025717 21 service.go:4645] successfully validated that service multi-endpoint-test in namespace services-9945 exposes endpoints map[]
  I1014 03:05:56.071887 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9945" for this suite. @ 10/14/25 03:05:56.077
â€¢ [9.073 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 10/14/25 03:05:56.089
  I1014 03:05:56.089863 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/25 03:05:56.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:05:56.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:05:56.111
  I1014 03:05:56.116313 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:05:56.218877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:05:57.135850 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3868" for this suite. @ 10/14/25 03:05:57.144
â€¢ [1.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 10/14/25 03:05:57.162
  I1014 03:05:57.162072 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:05:57.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:05:57.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:05:57.189
  STEP: Creating configMap with name configmap-test-volume-map-6fd85e87-445c-420f-bd52-0b3dd491741d @ 10/14/25 03:05:57.194
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:05:57.199
  E1014 03:05:57.218957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:58.219161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:05:59.219282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:00.219393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:01.220126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:06:01.25
  I1014 03:06:01.258139 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-2033d68f-7c19-4791-b6b0-2f0ce30e94ef container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:06:01.272
  I1014 03:06:01.298825 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6667" for this suite. @ 10/14/25 03:06:01.312
â€¢ [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 10/14/25 03:06:01.327
  I1014 03:06:01.327438 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 03:06:01.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:06:01.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:06:01.365
  STEP: Creating pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084 @ 10/14/25 03:06:01.374
  E1014 03:06:02.220391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:03.220561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 03:06:03.404
  I1014 03:06:03.409116 21 container_probe.go:1748] Initial restart count of pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 is 0
  I1014 03:06:03.413256 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:04.220643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:05.220648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:05.421995 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:06.221076      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:07.221239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:07.428604 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:08.221395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:09.221899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:09.435783 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:10.222022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:11.222403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:11.442987 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:12.222390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:13.222563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:13.448854 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:14.222802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:15.238118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:15.454036 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:16.238218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:17.238355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:17.462253 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:18.239648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:19.239806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:19.467541 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:20.240837      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:21.241109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:21.472984 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:22.242241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:23.242672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:23.482999 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  I1014 03:06:23.483519 21 container_probe.go:1762] Restart count of pod container-probe-7084/liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 is now 1 (20.073964873s elapsed)
  E1014 03:06:24.243465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:25.243602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:25.488746 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:26.244281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:27.244405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:27.498198 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:28.244573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:29.244730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:29.503694 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:30.244843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:31.245212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:31.510661 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:32.246153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:33.246285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:33.515955 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:34.247186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:35.247263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:35.521469 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:36.247797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:37.247957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:37.530552 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:38.248474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:39.248359      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:39.536967 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:40.248742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:41.249136      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:41.542838 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:42.249162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:43.253954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:43.549049 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  I1014 03:06:43.549093 21 container_probe.go:1762] Restart count of pod container-probe-7084/liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 is now 2 (40.13956669s elapsed)
  E1014 03:06:44.254004      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:45.254130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:45.554585 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:46.255112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:47.255270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:47.560762 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:48.255534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:49.255634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:49.566223 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:50.255836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:51.256157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:51.571185 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:52.256370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:53.256472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:53.576090 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:54.256866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:55.256935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:55.581815 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:56.256802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:57.256967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:57.587221 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:06:58.257214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:06:59.257322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:06:59.592525 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:00.262232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:01.262366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:01.599718 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:02.262464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:03.262601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:03.607038 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  I1014 03:07:03.607205 21 container_probe.go:1762] Restart count of pod container-probe-7084/liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 is now 3 (1m0.197677439s elapsed)
  E1014 03:07:04.262749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:05.263070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:05.618098 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:06.263281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:07.263439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:07.626961 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:08.264355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:09.264788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:09.638672 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:10.264655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:11.264921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:11.646002 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:12.265048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:13.265178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:13.654308 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:14.266566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:15.269877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:15.670234 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:16.270001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:17.274039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:17.682319 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:18.275519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:19.275712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:19.687060 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:20.276541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:21.277093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:21.693223 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:22.278412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:23.278524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:23.698211 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  I1014 03:07:23.698375 21 container_probe.go:1762] Restart count of pod container-probe-7084/liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 is now 4 (1m20.288848159s elapsed)
  E1014 03:07:24.278569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:25.278750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:25.706936 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:26.279032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:27.279785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:27.712023 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:28.279937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:29.280042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:29.719214 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:30.280189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:31.281065      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:31.724174 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:32.286026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:33.286460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:33.729727 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:34.286576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:35.286710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:35.735117 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:36.287287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:37.289876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:37.739444 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:38.289990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:39.290159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:39.744434 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:40.290493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:41.291178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:41.749057 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:42.293869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:43.293980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:43.754593 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:44.294170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:45.294222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:45.759311 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:46.297897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:47.298161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:47.763857 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:48.298302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:49.298554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:49.769597 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:50.299429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:51.300188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:51.777815 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:52.300259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:53.300414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:53.782146 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:54.301055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:55.301200      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:55.787468 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:56.302121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:57.302725      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:57.795232 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:07:58.302847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:07:59.302945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:07:59.802147 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:00.303019      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:01.303108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:01.812882 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:02.305874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:03.306026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:03.819379 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:04.306321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:05.306514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:05.825589 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:06.306909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:07.307070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:07.830579 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:08.308040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:09.308068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:09.846126 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:10.309111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:11.309204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:11.851827 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:12.309628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:13.313971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:13.866274 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:14.317951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:15.321951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:15.874581 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:16.325974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:17.335721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:17.886233 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:18.337980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:19.338149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:19.891101 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:20.339077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:21.340092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:21.895612 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:22.340137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:23.340261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:23.901340 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:24.341253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:25.341403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:25.907389 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:26.342351      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:27.342470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:27.913516 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:28.343572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:29.343526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:29.919802 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:30.344122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:31.344165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:31.929641 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  E1014 03:08:32.344800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:33.344943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:33.942032 21 container_probe.go:1758] Get pod liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 in namespace container-probe-7084
  I1014 03:08:33.942200 21 container_probe.go:1762] Restart count of pod container-probe-7084/liveness-99984b65-5ab5-4a73-9b18-ac55944516f9 is now 5 (2m30.532672729s elapsed)
  STEP: deleting the pod @ 10/14/25 03:08:33.942
  I1014 03:08:33.959435 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7084" for this suite. @ 10/14/25 03:08:33.97
â€¢ [152.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 10/14/25 03:08:33.982
  I1014 03:08:33.982716 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 03:08:33.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:34.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:34.012
  STEP: Creating a pod to test service account token:  @ 10/14/25 03:08:34.021
  E1014 03:08:34.347281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:35.347517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:36.347630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:37.347789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:08:38.049
  I1014 03:08:38.054515 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod test-pod-5c6243be-3f1c-4f17-a88b-b13d53cb7dbe container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:08:38.076
  I1014 03:08:38.095604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3674" for this suite. @ 10/14/25 03:08:38.107
â€¢ [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 10/14/25 03:08:38.12
  I1014 03:08:38.120429 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename namespaces @ 10/14/25 03:08:38.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:38.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:38.146
  STEP: Updating Namespace "namespaces-9314" @ 10/14/25 03:08:38.149
  I1014 03:08:38.158056 21 namespace.go:390] Namespace "namespaces-9314" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"e4e7049c-5f80-48b2-9217-1dd2a58718ae", "kubernetes.io/metadata.name":"namespaces-9314", "namespaces-9314":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1014 03:08:38.158289 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9314" for this suite. @ 10/14/25 03:08:38.206
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:643
  STEP: Creating a kubernetes client @ 10/14/25 03:08:38.213
  I1014 03:08:38.213892 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 03:08:38.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:38.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:38.233
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 10/14/25 03:08:38.236
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 10/14/25 03:08:38.242
  E1014 03:08:38.348616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:39.348853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:40.349366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:41.350229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 10/14/25 03:08:42.265
  I1014 03:08:42.268723 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-119" for this suite. @ 10/14/25 03:08:42.272
â€¢ [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1081
  STEP: Creating a kubernetes client @ 10/14/25 03:08:42.308
  I1014 03:08:42.308605 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 03:08:42.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:42.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:42.333
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/25 03:08:42.337
  I1014 03:08:42.337884 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3050 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E1014 03:08:42.355809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:42.480712 21 builder.go:146] stderr: ""
  I1014 03:08:42.480763 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/14/25 03:08:42.48
  I1014 03:08:42.482324 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3050 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1014 03:08:42.635357 21 builder.go:146] stderr: ""
  I1014 03:08:42.635402 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/25 03:08:42.635
  I1014 03:08:42.640387 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-3050 delete pods e2e-test-httpd-pod'
  E1014 03:08:43.356115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:44.257737 21 builder.go:146] stderr: ""
  I1014 03:08:44.257782 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1014 03:08:44.257906 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3050" for this suite. @ 10/14/25 03:08:44.262
â€¢ [1.961 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 10/14/25 03:08:44.269
  I1014 03:08:44.269796 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:08:44.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:44.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:44.292
  STEP: Setting up server cert @ 10/14/25 03:08:44.326
  E1014 03:08:44.374975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:45.379332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:08:45.998
  STEP: Deploying the webhook pod @ 10/14/25 03:08:46.006
  STEP: Wait for the deployment to be ready @ 10/14/25 03:08:46.022
  I1014 03:08:46.041765 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:08:46.382030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:47.385774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:08:48.065
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:08:48.115
  E1014 03:08:48.386431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:49.116702 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/14/25 03:08:49.12
  I1014 03:08:49.206119 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7923" for this suite. @ 10/14/25 03:08:49.222
  STEP: Destroying namespace "webhook-markers-9709" for this suite. @ 10/14/25 03:08:49.25
â€¢ [4.989 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 10/14/25 03:08:49.264
  I1014 03:08:49.264857 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 03:08:49.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:49.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:49.296
  STEP: creating a ServiceAccount @ 10/14/25 03:08:49.303
  STEP: watching for the ServiceAccount to be added @ 10/14/25 03:08:49.316
  STEP: patching the ServiceAccount @ 10/14/25 03:08:49.319
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/14/25 03:08:49.326
  STEP: deleting the ServiceAccount @ 10/14/25 03:08:49.331
  I1014 03:08:49.350382 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9473" for this suite. @ 10/14/25 03:08:49.354
â€¢ [0.100 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 10/14/25 03:08:49.361
  I1014 03:08:49.361329 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pv @ 10/14/25 03:08:49.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:49.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:49.381
  STEP: Creating initial PV and PVC @ 10/14/25 03:08:49.385
  I1014 03:08:49.386031 21 pv.go:394] Creating a PV followed by a PVC
  E1014 03:08:49.386398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8297" @ 10/14/25 03:08:49.413
  STEP: Listing PVCs in namespace "pv-8297" @ 10/14/25 03:08:49.42
  STEP: Reading "pvc-62d27" Status @ 10/14/25 03:08:49.427
  STEP: Reading "pv-8297-qth8r" Status @ 10/14/25 03:08:49.432
  STEP: Patching "pvc-62d27" Status @ 10/14/25 03:08:49.437
  STEP: Patching "pv-8297-qth8r" Status @ 10/14/25 03:08:49.452
  STEP: Updating "pvc-62d27" Status @ 10/14/25 03:08:49.476
  STEP: Updating "pv-8297-qth8r" Status @ 10/14/25 03:08:49.515
  I1014 03:08:49.525397 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1014 03:08:49.525446 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-62d27"
  I1014 03:08:49.531730 21 pv.go:193] Deleting PersistentVolume "pv-8297-qth8r"
  I1014 03:08:49.542459 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8297" for this suite. @ 10/14/25 03:08:49.552
â€¢ [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 10/14/25 03:08:49.565
  I1014 03:08:49.565987 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:08:49.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:49.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:49.598
  STEP: Setting up server cert @ 10/14/25 03:08:49.624
  E1014 03:08:50.395378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:08:50.473
  STEP: Deploying the webhook pod @ 10/14/25 03:08:50.478
  STEP: Wait for the deployment to be ready @ 10/14/25 03:08:50.489
  I1014 03:08:50.512473 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:08:51.396397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:52.396527      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:08:52.524
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:08:52.544
  E1014 03:08:53.396545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:53.545842 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 03:08:53.550063 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8638-crds.webhook.example.com via the AdmissionRegistration API @ 10/14/25 03:08:54.061
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/14/25 03:08:54.097
  E1014 03:08:54.396744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:55.397305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:56.398156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:08:56.765246 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9993" for this suite. @ 10/14/25 03:08:56.77
  STEP: Destroying namespace "webhook-markers-354" for this suite. @ 10/14/25 03:08:56.778
â€¢ [7.220 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:743
  STEP: Creating a kubernetes client @ 10/14/25 03:08:56.786
  I1014 03:08:56.786326 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:08:56.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:56.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:56.809
  I1014 03:08:56.817599 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-780" for this suite. @ 10/14/25 03:08:56.871
â€¢ [0.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 10/14/25 03:08:56.88
  I1014 03:08:56.880666 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/14/25 03:08:56.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:56.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:56.905
  STEP: getting /apis @ 10/14/25 03:08:56.918
  STEP: getting /apis/admissionregistration.k8s.io @ 10/14/25 03:08:56.926
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/14/25 03:08:56.93
  STEP: creating @ 10/14/25 03:08:56.932
  STEP: getting @ 10/14/25 03:08:56.948
  STEP: listing @ 10/14/25 03:08:56.953
  STEP: watching @ 10/14/25 03:08:56.957
  I1014 03:08:56.957435 21 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 10/14/25 03:08:56.959
  STEP: updating @ 10/14/25 03:08:56.965
  I1014 03:08:56.974887 21 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 10/14/25 03:08:56.975
  STEP: deleting a collection @ 10/14/25 03:08:56.988
  I1014 03:08:57.007188 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8291" for this suite. @ 10/14/25 03:08:57.011
â€¢ [0.137 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/14/25 03:08:57.018
  I1014 03:08:57.018725 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:08:57.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:08:57.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:08:57.04
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:08:57.045
  E1014 03:08:57.399010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:58.402471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:08:59.403487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:00.404209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:09:01.074
  I1014 03:09:01.078860 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-57944f6c-0db4-4256-9730-cd1e0ee6f4f1 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:09:01.088
  I1014 03:09:01.111825 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8438" for this suite. @ 10/14/25 03:09:01.117
â€¢ [4.106 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 10/14/25 03:09:01.124
  I1014 03:09:01.124749 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/25 03:09:01.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:01.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:01.156
  E1014 03:09:01.405927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:02.406047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:03.199227 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-567" for this suite. @ 10/14/25 03:09:03.203
â€¢ [2.085 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/14/25 03:09:03.21
  I1014 03:09:03.210120 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename deployment @ 10/14/25 03:09:03.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:03.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:03.23
  STEP: creating a Deployment @ 10/14/25 03:09:03.238
  STEP: waiting for Deployment to be created @ 10/14/25 03:09:03.244
  STEP: waiting for all Replicas to be Ready @ 10/14/25 03:09:03.249
  I1014 03:09:03.261019 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.261162 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.263908 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.264039 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.278040 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.278187 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.353026 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1014 03:09:03.353279 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1014 03:09:03.406759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:04.350390 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1014 03:09:04.350600 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E1014 03:09:04.407400      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:04.686884 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/14/25 03:09:04.687
  I1014 03:09:04.700942 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/14/25 03:09:04.701
  I1014 03:09:04.710174 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.710325 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.710410 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.710487 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.710569 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.710659 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.711022 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.711106 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 0
  I1014 03:09:04.711185 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:04.711261 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:04.711334 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.711411 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.716261 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.716357 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.718428 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.718542 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.748000 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.748159 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:04.785652 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:04.785841 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:04.802449 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:04.802669 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:05.397613 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:05.397826 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  E1014 03:09:05.407367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:05.439653 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  STEP: listing Deployments @ 10/14/25 03:09:05.439
  I1014 03:09:05.447564 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/14/25 03:09:05.447
  I1014 03:09:05.485690 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/14/25 03:09:05.485
  I1014 03:09:05.537750 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:05.537920 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:05.668917 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:05.780351 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:05.818243 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1014 03:09:06.408432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:06.423981 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:06.462242 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:06.484079 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:06.497982 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1014 03:09:06.503900 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1014 03:09:07.408539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:07.738011 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/14/25 03:09:07.774
  STEP: fetching the DeploymentStatus @ 10/14/25 03:09:07.787
  I1014 03:09:07.806363 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:07.806517 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:07.806572 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:07.806941 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:07.807025 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 1
  I1014 03:09:07.807107 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:07.807423 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:07.812114 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:07.812197 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:07.812737 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 2
  I1014 03:09:07.812843 21 deployment.go:448] observed Deployment test-deployment in namespace deployment-9106 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/14/25 03:09:07.812
  I1014 03:09:07.827732 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.827852 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.827908 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.828087 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.828153 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.828401 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.828495 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.828553 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.830922 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.831026 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.831092 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.831539 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.833437 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.833493 21 deployment.go:474] observed event type MODIFIED
  I1014 03:09:07.846126 21 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I1014 03:09:07.873713 21 deployment.go:656] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9106",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9ae380b-5f04-499d-8ff9-4065367dedee",
      ResourceVersion: (string) (len=5) "15979",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63896008143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "a833a9b4-ac30-496d-930b-7be8042b3560",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896008145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 61 38 33 33  61 39 62 34 2d 61 63 33  |":\"a833a9b4-ac3|
              00000130  30 2d 34 39 36 64 2d 39  33 30 62 2d 37 62 65 38  |0-496d-930b-7be8|
              00000140  30 34 32 62 33 35 36 30  5c 22 7d 22 3a 7b 7d 7d  |042b3560\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63896008145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1014 03:09:07.924850 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9106" for this suite. @ 10/14/25 03:09:07.929
â€¢ [4.728 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 10/14/25 03:09:07.938
  I1014 03:09:07.938446 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 03:09:07.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:07.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:07.964
  I1014 03:09:07.969773 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:09:08.408597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/14/25 03:09:09.395
  I1014 03:09:09.395771 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 create -f -'
  E1014 03:09:09.408824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:09.518505 21 builder.go:146] stderr: ""
  I1014 03:09:09.518549 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8101-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1014 03:09:09.518598 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 delete e2e-test-crd-publish-openapi-8101-crds test-foo'
  I1014 03:09:09.610810 21 builder.go:146] stderr: ""
  I1014 03:09:09.610853 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8101-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1014 03:09:09.610900 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 apply -f -'
  I1014 03:09:09.731445 21 builder.go:146] stderr: ""
  I1014 03:09:09.731519 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8101-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1014 03:09:09.731606 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 delete e2e-test-crd-publish-openapi-8101-crds test-foo'
  I1014 03:09:09.842702 21 builder.go:146] stderr: ""
  I1014 03:09:09.842750 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8101-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/14/25 03:09:09.842
  I1014 03:09:09.842830 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 create -f -'
  I1014 03:09:09.917405 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/14/25 03:09:09.917
  I1014 03:09:09.917507 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 create -f -'
  I1014 03:09:09.994616 21 builder.go:135] rc: 1
  I1014 03:09:09.994702 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 apply -f -'
  I1014 03:09:10.074009 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/14/25 03:09:10.074
  I1014 03:09:10.074127 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 create -f -'
  I1014 03:09:10.142528 21 builder.go:135] rc: 1
  I1014 03:09:10.142597 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 --namespace=crd-publish-openapi-8782 apply -f -'
  I1014 03:09:10.221076 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/14/25 03:09:10.221
  I1014 03:09:10.221200 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 explain e2e-test-crd-publish-openapi-8101-crds'
  I1014 03:09:10.282700 21 builder.go:146] stderr: ""
  I1014 03:09:10.282754 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8101-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/14/25 03:09:10.283
  I1014 03:09:10.283102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 explain e2e-test-crd-publish-openapi-8101-crds.metadata'
  I1014 03:09:10.355027 21 builder.go:146] stderr: ""
  I1014 03:09:10.355142 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8101-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1014 03:09:10.355305 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 explain e2e-test-crd-publish-openapi-8101-crds.spec'
  E1014 03:09:10.409382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:10.442179 21 builder.go:146] stderr: ""
  I1014 03:09:10.442241 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8101-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1014 03:09:10.442348 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 explain e2e-test-crd-publish-openapi-8101-crds.spec.bars'
  I1014 03:09:10.532485 21 builder.go:146] stderr: ""
  I1014 03:09:10.532541 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8101-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/14/25 03:09:10.532
  I1014 03:09:10.532764 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=crd-publish-openapi-8782 explain e2e-test-crd-publish-openapi-8101-crds.spec.bars2'
  I1014 03:09:10.619912 21 builder.go:135] rc: 1
  E1014 03:09:11.410015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:12.015780 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8782" for this suite. @ 10/14/25 03:09:12.025
â€¢ [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 10/14/25 03:09:12.034
  I1014 03:09:12.034292 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/25 03:09:12.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:12.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:12.059
  I1014 03:09:12.093930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4074" for this suite. @ 10/14/25 03:09:12.13
â€¢ [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/14/25 03:09:12.141
  I1014 03:09:12.141932 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename tables @ 10/14/25 03:09:12.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:12.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:12.205
  I1014 03:09:12.214371 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1407" for this suite. @ 10/14/25 03:09:12.228
â€¢ [0.095 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 10/14/25 03:09:12.236
  I1014 03:09:12.236900 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:09:12.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:12.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:12.267
  STEP: Creating a pod to test downward api env vars @ 10/14/25 03:09:12.271
  E1014 03:09:12.411006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:13.411108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:14.411204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:15.411363      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:09:16.314
  I1014 03:09:16.319438 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downward-api-aded60ab-bdac-4ff2-8b4c-59cb65020a0c container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 03:09:16.335
  I1014 03:09:16.359180 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7310" for this suite. @ 10/14/25 03:09:16.371
â€¢ [4.145 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 10/14/25 03:09:16.382
  I1014 03:09:16.382234 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 03:09:16.401
  E1014 03:09:16.411305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:16.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:16.436
  E1014 03:09:17.411604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:18.411719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:18.474375 21 delete.go:62] Deleting pod "var-expansion-b43563f0-ec64-4133-807a-bf8c05c75bc7" in namespace "var-expansion-3206"
  I1014 03:09:18.487828 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-b43563f0-ec64-4133-807a-bf8c05c75bc7" to be fully deleted
  E1014 03:09:19.412742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:20.412859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:20.503342 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3206" for this suite. @ 10/14/25 03:09:20.507
â€¢ [4.132 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 10/14/25 03:09:20.514
  I1014 03:09:20.514067 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename server-version @ 10/14/25 03:09:20.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:20.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:20.536
  STEP: Request ServerVersion @ 10/14/25 03:09:20.541
  STEP: Confirm major version @ 10/14/25 03:09:20.543
  I1014 03:09:20.543874 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 10/14/25 03:09:20.543
  I1014 03:09:20.544032 21 server_version.go:58] cleanMinorVersion: 33
  I1014 03:09:20.544113 21 server_version.go:62] Minor version: 33
  I1014 03:09:20.544281 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3280" for this suite. @ 10/14/25 03:09:20.608
â€¢ [0.109 seconds]
------------------------------
S
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/14/25 03:09:20.624
  I1014 03:09:20.624230 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svc-latency @ 10/14/25 03:09:20.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:20.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:20.648
  I1014 03:09:20.653672 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  I1014 03:09:20.676492 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 03:09:21.412940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:22.413984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:22.684138      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:09:22.686246      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:09:22.797474 21 service_latency.go:351] Created: latency-svc-7g4ln
  I1014 03:09:22.815756 21 service_latency.go:358] Got endpoints: latency-svc-7g4ln [33.064468ms]
  I1014 03:09:22.857354 21 service_latency.go:351] Created: latency-svc-snqwh
  I1014 03:09:22.889870 21 service_latency.go:351] Created: latency-svc-6w7c6
  I1014 03:09:22.890478 21 service_latency.go:358] Got endpoints: latency-svc-snqwh [74.500135ms]
  I1014 03:09:22.911393 21 service_latency.go:351] Created: latency-svc-svprt
  I1014 03:09:22.961815 21 service_latency.go:358] Got endpoints: latency-svc-svprt [145.447345ms]
  I1014 03:09:22.962990 21 service_latency.go:358] Got endpoints: latency-svc-6w7c6 [146.759505ms]
  I1014 03:09:22.989214 21 service_latency.go:351] Created: latency-svc-x7qqt
  I1014 03:09:22.998095 21 service_latency.go:351] Created: latency-svc-zszfj
  I1014 03:09:23.017122 21 service_latency.go:358] Got endpoints: latency-svc-x7qqt [200.615982ms]
  I1014 03:09:23.017431 21 service_latency.go:351] Created: latency-svc-p99tg
  I1014 03:09:23.021288 21 service_latency.go:358] Got endpoints: latency-svc-zszfj [204.672071ms]
  I1014 03:09:23.043859 21 service_latency.go:351] Created: latency-svc-tr5n8
  I1014 03:09:23.046040 21 service_latency.go:358] Got endpoints: latency-svc-p99tg [228.681355ms]
  I1014 03:09:23.064266 21 service_latency.go:358] Got endpoints: latency-svc-tr5n8 [247.559146ms]
  I1014 03:09:23.071953 21 service_latency.go:351] Created: latency-svc-fv8mm
  I1014 03:09:23.091255 21 service_latency.go:358] Got endpoints: latency-svc-fv8mm [274.467907ms]
  I1014 03:09:23.098783 21 service_latency.go:351] Created: latency-svc-llsvc
  I1014 03:09:23.120589 21 service_latency.go:358] Got endpoints: latency-svc-llsvc [303.730849ms]
  I1014 03:09:23.122082 21 service_latency.go:351] Created: latency-svc-mhgsh
  I1014 03:09:23.147778 21 service_latency.go:358] Got endpoints: latency-svc-mhgsh [330.847723ms]
  I1014 03:09:23.148220 21 service_latency.go:351] Created: latency-svc-6d6t5
  I1014 03:09:23.168630 21 service_latency.go:351] Created: latency-svc-jj4pd
  I1014 03:09:23.172089 21 service_latency.go:358] Got endpoints: latency-svc-6d6t5 [355.08859ms]
  I1014 03:09:23.194272 21 service_latency.go:358] Got endpoints: latency-svc-jj4pd [377.197299ms]
  I1014 03:09:23.203200 21 service_latency.go:351] Created: latency-svc-vnd76
  I1014 03:09:23.212875 21 service_latency.go:351] Created: latency-svc-8qzdk
  I1014 03:09:23.222653 21 service_latency.go:358] Got endpoints: latency-svc-vnd76 [405.510798ms]
  I1014 03:09:23.236940 21 service_latency.go:358] Got endpoints: latency-svc-8qzdk [419.710505ms]
  I1014 03:09:23.238039 21 service_latency.go:351] Created: latency-svc-89ngv
  I1014 03:09:23.264017 21 service_latency.go:358] Got endpoints: latency-svc-89ngv [446.732133ms]
  I1014 03:09:23.268326 21 service_latency.go:351] Created: latency-svc-sbgjw
  I1014 03:09:23.288140 21 service_latency.go:351] Created: latency-svc-ntgrs
  I1014 03:09:23.292533 21 service_latency.go:358] Got endpoints: latency-svc-sbgjw [401.621225ms]
  I1014 03:09:23.313100 21 service_latency.go:358] Got endpoints: latency-svc-ntgrs [350.808482ms]
  I1014 03:09:23.324832 21 service_latency.go:351] Created: latency-svc-8kfbd
  I1014 03:09:23.342830 21 service_latency.go:351] Created: latency-svc-trgfn
  I1014 03:09:23.344546 21 service_latency.go:358] Got endpoints: latency-svc-8kfbd [381.138127ms]
  I1014 03:09:23.365278 21 service_latency.go:358] Got endpoints: latency-svc-trgfn [343.674629ms]
  I1014 03:09:23.366812 21 service_latency.go:351] Created: latency-svc-9dkzb
  I1014 03:09:23.380849 21 service_latency.go:358] Got endpoints: latency-svc-9dkzb [363.200789ms]
  I1014 03:09:23.393050 21 service_latency.go:351] Created: latency-svc-5vpbp
  I1014 03:09:23.411468 21 service_latency.go:358] Got endpoints: latency-svc-5vpbp [365.00951ms]
  I1014 03:09:23.411852 21 service_latency.go:351] Created: latency-svc-b44hz
  E1014 03:09:23.414075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:23.428411 21 service_latency.go:358] Got endpoints: latency-svc-b44hz [363.676184ms]
  I1014 03:09:23.429367 21 service_latency.go:351] Created: latency-svc-4rbm9
  I1014 03:09:23.448408 21 service_latency.go:358] Got endpoints: latency-svc-4rbm9 [356.736415ms]
  I1014 03:09:23.449177 21 service_latency.go:351] Created: latency-svc-wgcjq
  I1014 03:09:23.461988 21 service_latency.go:358] Got endpoints: latency-svc-wgcjq [340.473537ms]
  I1014 03:09:23.469462 21 service_latency.go:351] Created: latency-svc-vdvfg
  I1014 03:09:23.499928 21 service_latency.go:358] Got endpoints: latency-svc-vdvfg [351.453448ms]
  I1014 03:09:23.503496 21 service_latency.go:351] Created: latency-svc-f2pb8
  I1014 03:09:23.519112 21 service_latency.go:351] Created: latency-svc-qk9wz
  I1014 03:09:23.523292 21 service_latency.go:358] Got endpoints: latency-svc-f2pb8 [350.723855ms]
  I1014 03:09:23.565162 21 service_latency.go:351] Created: latency-svc-p598t
  I1014 03:09:23.570741 21 service_latency.go:358] Got endpoints: latency-svc-qk9wz [376.041605ms]
  I1014 03:09:23.595960 21 service_latency.go:351] Created: latency-svc-9xvkn
  I1014 03:09:23.600299 21 service_latency.go:358] Got endpoints: latency-svc-p598t [362.936426ms]
  I1014 03:09:23.602037 21 service_latency.go:351] Created: latency-svc-k55xq
  I1014 03:09:23.627441 21 service_latency.go:358] Got endpoints: latency-svc-k55xq [404.377735ms]
  I1014 03:09:23.628191 21 service_latency.go:358] Got endpoints: latency-svc-9xvkn [363.725823ms]
  I1014 03:09:23.639762 21 service_latency.go:351] Created: latency-svc-495zt
  I1014 03:09:23.657246 21 service_latency.go:358] Got endpoints: latency-svc-495zt [364.307109ms]
  I1014 03:09:23.677203 21 service_latency.go:351] Created: latency-svc-9f6dq
  I1014 03:09:23.689495 21 service_latency.go:358] Got endpoints: latency-svc-9f6dq [376.347335ms]
  I1014 03:09:23.821058 21 service_latency.go:351] Created: latency-svc-qt6kj
  I1014 03:09:23.821123 21 service_latency.go:351] Created: latency-svc-sxkhf
  I1014 03:09:23.821162 21 service_latency.go:351] Created: latency-svc-875vf
  I1014 03:09:23.821193 21 service_latency.go:351] Created: latency-svc-mcz2j
  I1014 03:09:23.826583 21 service_latency.go:351] Created: latency-svc-f97cz
  I1014 03:09:23.826729 21 service_latency.go:351] Created: latency-svc-7vwd8
  I1014 03:09:23.826772 21 service_latency.go:351] Created: latency-svc-wb2g5
  I1014 03:09:23.826801 21 service_latency.go:351] Created: latency-svc-rsfdq
  I1014 03:09:23.826882 21 service_latency.go:351] Created: latency-svc-fw7rz
  I1014 03:09:23.826913 21 service_latency.go:351] Created: latency-svc-zpw7b
  I1014 03:09:23.826942 21 service_latency.go:351] Created: latency-svc-zlwtg
  I1014 03:09:23.826970 21 service_latency.go:351] Created: latency-svc-vmsdw
  I1014 03:09:23.827001 21 service_latency.go:351] Created: latency-svc-mp68n
  I1014 03:09:23.827071 21 service_latency.go:351] Created: latency-svc-5x295
  I1014 03:09:23.827104 21 service_latency.go:351] Created: latency-svc-5hdmq
  I1014 03:09:23.870740 21 service_latency.go:358] Got endpoints: latency-svc-mcz2j [408.343254ms]
  I1014 03:09:23.871377 21 service_latency.go:358] Got endpoints: latency-svc-875vf [422.534278ms]
  I1014 03:09:23.871720 21 service_latency.go:358] Got endpoints: latency-svc-qt6kj [214.058321ms]
  I1014 03:09:23.883635 21 service_latency.go:358] Got endpoints: latency-svc-5hdmq [538.686939ms]
  I1014 03:09:23.884112 21 service_latency.go:358] Got endpoints: latency-svc-sxkhf [383.746648ms]
  I1014 03:09:23.936917 21 service_latency.go:358] Got endpoints: latency-svc-7vwd8 [309.050419ms]
  I1014 03:09:23.937711 21 service_latency.go:358] Got endpoints: latency-svc-rsfdq [572.388134ms]
  I1014 03:09:23.938356 21 service_latency.go:358] Got endpoints: latency-svc-f97cz [414.559067ms]
  I1014 03:09:23.939895 21 service_latency.go:358] Got endpoints: latency-svc-fw7rz [338.782273ms]
  I1014 03:09:23.940513 21 service_latency.go:358] Got endpoints: latency-svc-wb2g5 [312.006559ms]
  I1014 03:09:23.999478 21 service_latency.go:358] Got endpoints: latency-svc-zlwtg [587.406201ms]
  I1014 03:09:24.001230 21 service_latency.go:358] Got endpoints: latency-svc-5x295 [620.032173ms]
  I1014 03:09:24.001423 21 service_latency.go:358] Got endpoints: latency-svc-vmsdw [311.437201ms]
  I1014 03:09:24.007059 21 service_latency.go:358] Got endpoints: latency-svc-mp68n [435.51672ms]
  I1014 03:09:24.007657 21 service_latency.go:358] Got endpoints: latency-svc-zpw7b [578.795744ms]
  I1014 03:09:24.023431 21 service_latency.go:351] Created: latency-svc-hkskt
  I1014 03:09:24.034566 21 service_latency.go:351] Created: latency-svc-5rjgb
  I1014 03:09:24.055044 21 service_latency.go:358] Got endpoints: latency-svc-hkskt [184.067276ms]
  I1014 03:09:24.063479 21 service_latency.go:358] Got endpoints: latency-svc-5rjgb [191.984257ms]
  I1014 03:09:24.066468 21 service_latency.go:351] Created: latency-svc-4qx82
  I1014 03:09:24.085764 21 service_latency.go:358] Got endpoints: latency-svc-4qx82 [209.795739ms]
  I1014 03:09:24.093265 21 service_latency.go:351] Created: latency-svc-lfx2q
  I1014 03:09:24.117953 21 service_latency.go:358] Got endpoints: latency-svc-lfx2q [233.721604ms]
  I1014 03:09:24.124230 21 service_latency.go:351] Created: latency-svc-lcqpz
  I1014 03:09:24.141049 21 service_latency.go:351] Created: latency-svc-gvdxp
  I1014 03:09:24.141428 21 service_latency.go:358] Got endpoints: latency-svc-lcqpz [257.626819ms]
  I1014 03:09:24.164945 21 service_latency.go:358] Got endpoints: latency-svc-gvdxp [227.567704ms]
  I1014 03:09:24.175364 21 service_latency.go:351] Created: latency-svc-j4fkf
  I1014 03:09:24.185963 21 service_latency.go:351] Created: latency-svc-fq8jv
  I1014 03:09:24.200859 21 service_latency.go:358] Got endpoints: latency-svc-j4fkf [259.996416ms]
  I1014 03:09:24.203465 21 service_latency.go:358] Got endpoints: latency-svc-fq8jv [265.351429ms]
  I1014 03:09:24.212560 21 service_latency.go:351] Created: latency-svc-w4grz
  I1014 03:09:24.229851 21 service_latency.go:358] Got endpoints: latency-svc-w4grz [290.205704ms]
  I1014 03:09:24.230157 21 service_latency.go:351] Created: latency-svc-l2hgh
  I1014 03:09:24.246850 21 service_latency.go:358] Got endpoints: latency-svc-l2hgh [306.651189ms]
  I1014 03:09:24.247809 21 service_latency.go:351] Created: latency-svc-2jxld
  I1014 03:09:24.258840 21 service_latency.go:351] Created: latency-svc-ht82v
  I1014 03:09:24.272491 21 service_latency.go:358] Got endpoints: latency-svc-2jxld [271.578381ms]
  I1014 03:09:24.320183 21 service_latency.go:358] Got endpoints: latency-svc-ht82v [316.802494ms]
  I1014 03:09:24.352122 21 service_latency.go:351] Created: latency-svc-mxntc
  I1014 03:09:24.352566 21 service_latency.go:351] Created: latency-svc-g9pmq
  E1014 03:09:24.415035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:24.435183 21 service_latency.go:358] Got endpoints: latency-svc-mxntc [204.826214ms]
  I1014 03:09:24.442421 21 service_latency.go:351] Created: latency-svc-8sjtl
  I1014 03:09:24.442570 21 service_latency.go:351] Created: latency-svc-klxpf
  I1014 03:09:24.442655 21 service_latency.go:351] Created: latency-svc-prlq9
  I1014 03:09:24.442681 21 service_latency.go:351] Created: latency-svc-9t5rv
  I1014 03:09:24.442704 21 service_latency.go:351] Created: latency-svc-sqmj2
  I1014 03:09:24.443325 21 service_latency.go:351] Created: latency-svc-cklbg
  I1014 03:09:24.448784 21 service_latency.go:351] Created: latency-svc-th97b
  I1014 03:09:24.449118 21 service_latency.go:351] Created: latency-svc-v2z5l
  I1014 03:09:24.449730 21 service_latency.go:351] Created: latency-svc-zp7xb
  I1014 03:09:24.449773 21 service_latency.go:351] Created: latency-svc-2bw8d
  I1014 03:09:24.449801 21 service_latency.go:351] Created: latency-svc-q6hzh
  I1014 03:09:24.449844 21 service_latency.go:351] Created: latency-svc-mkq2t
  I1014 03:09:24.449913 21 service_latency.go:351] Created: latency-svc-j79nn
  I1014 03:09:24.460792 21 service_latency.go:358] Got endpoints: latency-svc-g9pmq [459.189127ms]
  I1014 03:09:24.473740 21 service_latency.go:358] Got endpoints: latency-svc-j79nn [409.856382ms]
  I1014 03:09:24.499926 21 service_latency.go:351] Created: latency-svc-f7cf2
  I1014 03:09:24.516096 21 service_latency.go:351] Created: latency-svc-vrrkz
  I1014 03:09:24.524734 21 service_latency.go:358] Got endpoints: latency-svc-8sjtl [438.352581ms]
  I1014 03:09:24.536949 21 service_latency.go:351] Created: latency-svc-hm2kr
  I1014 03:09:24.552043 21 service_latency.go:351] Created: latency-svc-f6q9n
  I1014 03:09:24.566887 21 service_latency.go:358] Got endpoints: latency-svc-prlq9 [448.515131ms]
  I1014 03:09:24.586022 21 service_latency.go:351] Created: latency-svc-t2bm4
  I1014 03:09:24.618407 21 service_latency.go:358] Got endpoints: latency-svc-mkq2t [476.423702ms]
  I1014 03:09:24.637306 21 service_latency.go:351] Created: latency-svc-dlrjx
  I1014 03:09:24.667599 21 service_latency.go:358] Got endpoints: latency-svc-th97b [502.225016ms]
  I1014 03:09:24.684096 21 service_latency.go:351] Created: latency-svc-lq9mq
  I1014 03:09:24.716999 21 service_latency.go:358] Got endpoints: latency-svc-cklbg [515.732028ms]
  I1014 03:09:24.785041 21 service_latency.go:351] Created: latency-svc-gfmct
  I1014 03:09:24.825799 21 service_latency.go:358] Got endpoints: latency-svc-q6hzh [577.697242ms]
  I1014 03:09:24.827010 21 service_latency.go:358] Got endpoints: latency-svc-v2z5l [771.553413ms]
  I1014 03:09:24.894497 21 service_latency.go:358] Got endpoints: latency-svc-klxpf [690.649791ms]
  I1014 03:09:24.897108 21 service_latency.go:351] Created: latency-svc-59jnm
  I1014 03:09:24.914416 21 service_latency.go:351] Created: latency-svc-9hrnr
  I1014 03:09:24.948004 21 service_latency.go:358] Got endpoints: latency-svc-9t5rv [627.124993ms]
  I1014 03:09:24.981659 21 service_latency.go:358] Got endpoints: latency-svc-sqmj2 [708.76491ms]
  I1014 03:09:24.990951 21 service_latency.go:351] Created: latency-svc-pgvwr
  I1014 03:09:25.039536 21 service_latency.go:351] Created: latency-svc-t96cb
  I1014 03:09:25.050305 21 service_latency.go:358] Got endpoints: latency-svc-2bw8d [1.042370218s]
  I1014 03:09:25.067704 21 service_latency.go:351] Created: latency-svc-p5pn5
  I1014 03:09:25.078649 21 service_latency.go:358] Got endpoints: latency-svc-zp7xb [1.071223998s]
  I1014 03:09:25.111118 21 service_latency.go:351] Created: latency-svc-fd786
  I1014 03:09:25.123283 21 service_latency.go:358] Got endpoints: latency-svc-f7cf2 [687.530237ms]
  I1014 03:09:25.161051 21 service_latency.go:351] Created: latency-svc-6hczp
  I1014 03:09:25.196455 21 service_latency.go:358] Got endpoints: latency-svc-vrrkz [735.622191ms]
  I1014 03:09:25.221621 21 service_latency.go:351] Created: latency-svc-k859d
  I1014 03:09:25.236419 21 service_latency.go:358] Got endpoints: latency-svc-hm2kr [762.294966ms]
  I1014 03:09:25.269008 21 service_latency.go:351] Created: latency-svc-smr6g
  I1014 03:09:25.286444 21 service_latency.go:358] Got endpoints: latency-svc-f6q9n [761.207379ms]
  I1014 03:09:25.339950 21 service_latency.go:351] Created: latency-svc-8jp26
  I1014 03:09:25.342816 21 service_latency.go:358] Got endpoints: latency-svc-t2bm4 [775.535038ms]
  I1014 03:09:25.358263 21 service_latency.go:351] Created: latency-svc-7cd2s
  I1014 03:09:25.374334 21 service_latency.go:358] Got endpoints: latency-svc-dlrjx [755.46338ms]
  I1014 03:09:25.404968 21 service_latency.go:351] Created: latency-svc-w98fx
  E1014 03:09:25.415732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:25.422772 21 service_latency.go:358] Got endpoints: latency-svc-lq9mq [754.734058ms]
  I1014 03:09:25.442617 21 service_latency.go:351] Created: latency-svc-tf5xc
  I1014 03:09:25.462772 21 service_latency.go:351] Created: latency-svc-j5784
  I1014 03:09:25.473425 21 service_latency.go:358] Got endpoints: latency-svc-gfmct [755.988315ms]
  I1014 03:09:25.512854 21 service_latency.go:351] Created: latency-svc-7ztvj
  I1014 03:09:25.520572 21 service_latency.go:358] Got endpoints: latency-svc-59jnm [694.608191ms]
  I1014 03:09:25.547649 21 service_latency.go:351] Created: latency-svc-5bwlq
  I1014 03:09:25.570045 21 service_latency.go:358] Got endpoints: latency-svc-9hrnr [742.8617ms]
  I1014 03:09:25.595887 21 service_latency.go:351] Created: latency-svc-26llg
  I1014 03:09:25.618449 21 service_latency.go:358] Got endpoints: latency-svc-pgvwr [723.788483ms]
  I1014 03:09:25.650373 21 service_latency.go:351] Created: latency-svc-zgrlj
  I1014 03:09:25.668715 21 service_latency.go:358] Got endpoints: latency-svc-t96cb [720.229981ms]
  I1014 03:09:25.685967 21 service_latency.go:351] Created: latency-svc-bbqmm
  I1014 03:09:25.719024 21 service_latency.go:358] Got endpoints: latency-svc-p5pn5 [736.907524ms]
  I1014 03:09:25.739085 21 service_latency.go:351] Created: latency-svc-g96zx
  I1014 03:09:25.768131 21 service_latency.go:358] Got endpoints: latency-svc-fd786 [717.281016ms]
  I1014 03:09:25.792025 21 service_latency.go:351] Created: latency-svc-xqcqm
  I1014 03:09:25.818303 21 service_latency.go:358] Got endpoints: latency-svc-6hczp [739.221948ms]
  I1014 03:09:25.855271 21 service_latency.go:351] Created: latency-svc-zmx6w
  I1014 03:09:25.873106 21 service_latency.go:358] Got endpoints: latency-svc-k859d [748.796234ms]
  I1014 03:09:25.900001 21 service_latency.go:351] Created: latency-svc-q6548
  I1014 03:09:25.918467 21 service_latency.go:358] Got endpoints: latency-svc-smr6g [721.062091ms]
  I1014 03:09:25.941945 21 service_latency.go:351] Created: latency-svc-b9j26
  I1014 03:09:25.967383 21 service_latency.go:358] Got endpoints: latency-svc-8jp26 [730.528513ms]
  I1014 03:09:25.998683 21 service_latency.go:351] Created: latency-svc-95ppt
  I1014 03:09:26.051078 21 service_latency.go:358] Got endpoints: latency-svc-7cd2s [764.218958ms]
  I1014 03:09:26.078644 21 service_latency.go:358] Got endpoints: latency-svc-w98fx [735.443915ms]
  I1014 03:09:26.102194 21 service_latency.go:351] Created: latency-svc-lgjnt
  I1014 03:09:26.127564 21 service_latency.go:358] Got endpoints: latency-svc-tf5xc [752.793631ms]
  I1014 03:09:26.154747 21 service_latency.go:351] Created: latency-svc-sdwn9
  I1014 03:09:26.162895 21 service_latency.go:351] Created: latency-svc-vh42s
  I1014 03:09:26.172502 21 service_latency.go:358] Got endpoints: latency-svc-j5784 [749.290104ms]
  I1014 03:09:26.197875 21 service_latency.go:351] Created: latency-svc-kl84n
  I1014 03:09:26.218777 21 service_latency.go:358] Got endpoints: latency-svc-7ztvj [744.921493ms]
  I1014 03:09:26.237565 21 service_latency.go:351] Created: latency-svc-v7w9s
  I1014 03:09:26.268823 21 service_latency.go:358] Got endpoints: latency-svc-5bwlq [747.83125ms]
  I1014 03:09:26.304954 21 service_latency.go:351] Created: latency-svc-lmq59
  I1014 03:09:26.318102 21 service_latency.go:358] Got endpoints: latency-svc-26llg [747.624714ms]
  I1014 03:09:26.339488 21 service_latency.go:351] Created: latency-svc-f42f2
  I1014 03:09:26.369316 21 service_latency.go:358] Got endpoints: latency-svc-zgrlj [750.4176ms]
  I1014 03:09:26.388593 21 service_latency.go:351] Created: latency-svc-zfk4s
  E1014 03:09:26.416220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:26.420541 21 service_latency.go:358] Got endpoints: latency-svc-bbqmm [751.35631ms]
  I1014 03:09:26.448560 21 service_latency.go:351] Created: latency-svc-kq5d8
  I1014 03:09:26.470783 21 service_latency.go:358] Got endpoints: latency-svc-g96zx [751.704302ms]
  I1014 03:09:26.494403 21 service_latency.go:351] Created: latency-svc-prmv4
  I1014 03:09:26.519035 21 service_latency.go:358] Got endpoints: latency-svc-xqcqm [750.851973ms]
  I1014 03:09:26.541009 21 service_latency.go:351] Created: latency-svc-w2f2x
  I1014 03:09:26.567959 21 service_latency.go:358] Got endpoints: latency-svc-zmx6w [749.205007ms]
  I1014 03:09:26.590596 21 service_latency.go:351] Created: latency-svc-z5pwj
  I1014 03:09:26.618829 21 service_latency.go:358] Got endpoints: latency-svc-q6548 [745.527984ms]
  I1014 03:09:26.649358 21 service_latency.go:351] Created: latency-svc-wsr9l
  I1014 03:09:26.667716 21 service_latency.go:358] Got endpoints: latency-svc-b9j26 [748.838964ms]
  I1014 03:09:26.687521 21 service_latency.go:351] Created: latency-svc-k649r
  I1014 03:09:26.718705 21 service_latency.go:358] Got endpoints: latency-svc-95ppt [750.882876ms]
  I1014 03:09:26.741770 21 service_latency.go:351] Created: latency-svc-64xzs
  I1014 03:09:26.770461 21 service_latency.go:358] Got endpoints: latency-svc-lgjnt [718.835028ms]
  I1014 03:09:26.796738 21 service_latency.go:351] Created: latency-svc-nq88q
  I1014 03:09:26.824933 21 service_latency.go:358] Got endpoints: latency-svc-sdwn9 [745.883922ms]
  I1014 03:09:26.839662 21 service_latency.go:351] Created: latency-svc-pqg94
  I1014 03:09:26.867949 21 service_latency.go:358] Got endpoints: latency-svc-vh42s [739.92648ms]
  I1014 03:09:26.893810 21 service_latency.go:351] Created: latency-svc-vk852
  I1014 03:09:26.917934 21 service_latency.go:358] Got endpoints: latency-svc-kl84n [745.00012ms]
  I1014 03:09:26.943654 21 service_latency.go:351] Created: latency-svc-7mm6x
  I1014 03:09:26.981354 21 service_latency.go:358] Got endpoints: latency-svc-v7w9s [762.153017ms]
  I1014 03:09:27.019811 21 service_latency.go:351] Created: latency-svc-gdpmt
  I1014 03:09:27.027821 21 service_latency.go:358] Got endpoints: latency-svc-lmq59 [758.62732ms]
  I1014 03:09:27.054736 21 service_latency.go:351] Created: latency-svc-xlgd6
  I1014 03:09:27.068098 21 service_latency.go:358] Got endpoints: latency-svc-f42f2 [749.565888ms]
  I1014 03:09:27.088067 21 service_latency.go:351] Created: latency-svc-w9p6j
  I1014 03:09:27.122566 21 service_latency.go:358] Got endpoints: latency-svc-zfk4s [753.197527ms]
  I1014 03:09:27.154680 21 service_latency.go:351] Created: latency-svc-sg9tv
  I1014 03:09:27.167998 21 service_latency.go:358] Got endpoints: latency-svc-kq5d8 [746.961391ms]
  I1014 03:09:27.184633 21 service_latency.go:351] Created: latency-svc-hfcr2
  I1014 03:09:27.223462 21 service_latency.go:358] Got endpoints: latency-svc-prmv4 [751.901399ms]
  I1014 03:09:27.244540 21 service_latency.go:351] Created: latency-svc-wz5hv
  I1014 03:09:27.270333 21 service_latency.go:358] Got endpoints: latency-svc-w2f2x [750.852521ms]
  I1014 03:09:27.327616 21 service_latency.go:358] Got endpoints: latency-svc-z5pwj [759.234594ms]
  I1014 03:09:27.332636 21 service_latency.go:351] Created: latency-svc-crdbl
  I1014 03:09:27.348602 21 service_latency.go:351] Created: latency-svc-njffh
  I1014 03:09:27.368626 21 service_latency.go:358] Got endpoints: latency-svc-wsr9l [749.385932ms]
  I1014 03:09:27.392142 21 service_latency.go:351] Created: latency-svc-qxw5q
  E1014 03:09:27.417040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:27.421339 21 service_latency.go:358] Got endpoints: latency-svc-k649r [753.025499ms]
  I1014 03:09:27.450844 21 service_latency.go:351] Created: latency-svc-lj5vs
  I1014 03:09:27.470376 21 service_latency.go:358] Got endpoints: latency-svc-64xzs [751.250787ms]
  I1014 03:09:27.490857 21 service_latency.go:351] Created: latency-svc-xzdn2
  I1014 03:09:27.517365 21 service_latency.go:358] Got endpoints: latency-svc-nq88q [746.468122ms]
  I1014 03:09:27.539901 21 service_latency.go:351] Created: latency-svc-k8tlq
  I1014 03:09:27.574129 21 service_latency.go:358] Got endpoints: latency-svc-pqg94 [749.070631ms]
  I1014 03:09:27.593577 21 service_latency.go:351] Created: latency-svc-s5php
  I1014 03:09:27.622787 21 service_latency.go:358] Got endpoints: latency-svc-vk852 [754.672844ms]
  I1014 03:09:27.641416 21 service_latency.go:351] Created: latency-svc-glrrx
  I1014 03:09:27.669086 21 service_latency.go:358] Got endpoints: latency-svc-7mm6x [750.640211ms]
  I1014 03:09:27.689842 21 service_latency.go:351] Created: latency-svc-59vwg
  I1014 03:09:27.719230 21 service_latency.go:358] Got endpoints: latency-svc-gdpmt [737.325082ms]
  I1014 03:09:27.737554 21 service_latency.go:351] Created: latency-svc-2295l
  I1014 03:09:27.769834 21 service_latency.go:358] Got endpoints: latency-svc-xlgd6 [741.602603ms]
  I1014 03:09:27.787766 21 service_latency.go:351] Created: latency-svc-9zjhk
  I1014 03:09:27.825227 21 service_latency.go:358] Got endpoints: latency-svc-w9p6j [756.677713ms]
  I1014 03:09:27.841513 21 service_latency.go:351] Created: latency-svc-5xf4h
  I1014 03:09:27.885035 21 service_latency.go:358] Got endpoints: latency-svc-sg9tv [761.838058ms]
  I1014 03:09:27.908449 21 service_latency.go:351] Created: latency-svc-5jzhl
  I1014 03:09:27.917108 21 service_latency.go:358] Got endpoints: latency-svc-hfcr2 [748.085132ms]
  I1014 03:09:27.935750 21 service_latency.go:351] Created: latency-svc-n28gj
  I1014 03:09:27.971848 21 service_latency.go:358] Got endpoints: latency-svc-wz5hv [747.933624ms]
  I1014 03:09:27.991915 21 service_latency.go:351] Created: latency-svc-8bmfj
  I1014 03:09:28.019172 21 service_latency.go:358] Got endpoints: latency-svc-crdbl [732.658011ms]
  I1014 03:09:28.036005 21 service_latency.go:351] Created: latency-svc-v7m62
  I1014 03:09:28.067166 21 service_latency.go:358] Got endpoints: latency-svc-njffh [734.982536ms]
  I1014 03:09:28.084712 21 service_latency.go:351] Created: latency-svc-r8lh7
  I1014 03:09:28.116538 21 service_latency.go:358] Got endpoints: latency-svc-qxw5q [747.740848ms]
  I1014 03:09:28.133945 21 service_latency.go:351] Created: latency-svc-wrlt2
  I1014 03:09:28.167843 21 service_latency.go:358] Got endpoints: latency-svc-lj5vs [746.054799ms]
  I1014 03:09:28.188275 21 service_latency.go:351] Created: latency-svc-g695f
  I1014 03:09:28.218801 21 service_latency.go:358] Got endpoints: latency-svc-xzdn2 [748.249551ms]
  I1014 03:09:28.239101 21 service_latency.go:351] Created: latency-svc-4pl77
  I1014 03:09:28.268441 21 service_latency.go:358] Got endpoints: latency-svc-k8tlq [750.904302ms]
  I1014 03:09:28.287739 21 service_latency.go:351] Created: latency-svc-9ssml
  I1014 03:09:28.317244 21 service_latency.go:358] Got endpoints: latency-svc-s5php [743.066257ms]
  I1014 03:09:28.336014 21 service_latency.go:351] Created: latency-svc-grhpk
  I1014 03:09:28.369506 21 service_latency.go:358] Got endpoints: latency-svc-glrrx [746.668996ms]
  I1014 03:09:28.388889 21 service_latency.go:351] Created: latency-svc-8bnwt
  E1014 03:09:28.417904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:28.418412 21 service_latency.go:358] Got endpoints: latency-svc-59vwg [748.873431ms]
  I1014 03:09:28.442362 21 service_latency.go:351] Created: latency-svc-zgkm7
  I1014 03:09:28.468321 21 service_latency.go:358] Got endpoints: latency-svc-2295l [748.672444ms]
  I1014 03:09:28.488186 21 service_latency.go:351] Created: latency-svc-sskpf
  I1014 03:09:28.517815 21 service_latency.go:358] Got endpoints: latency-svc-9zjhk [747.554939ms]
  I1014 03:09:28.537223 21 service_latency.go:351] Created: latency-svc-ks5z2
  I1014 03:09:28.567503 21 service_latency.go:358] Got endpoints: latency-svc-5xf4h [742.12211ms]
  I1014 03:09:28.595321 21 service_latency.go:351] Created: latency-svc-2qcn9
  I1014 03:09:28.618952 21 service_latency.go:358] Got endpoints: latency-svc-5jzhl [733.684104ms]
  I1014 03:09:28.637914 21 service_latency.go:351] Created: latency-svc-smknp
  I1014 03:09:28.676618 21 service_latency.go:358] Got endpoints: latency-svc-n28gj [759.100351ms]
  I1014 03:09:28.689370 21 service_latency.go:351] Created: latency-svc-f59zc
  I1014 03:09:28.718421 21 service_latency.go:358] Got endpoints: latency-svc-8bmfj [746.154149ms]
  I1014 03:09:28.734534 21 service_latency.go:351] Created: latency-svc-5fp82
  I1014 03:09:28.778810 21 service_latency.go:358] Got endpoints: latency-svc-v7m62 [759.218083ms]
  I1014 03:09:28.797167 21 service_latency.go:351] Created: latency-svc-69r6c
  I1014 03:09:28.823999 21 service_latency.go:358] Got endpoints: latency-svc-r8lh7 [756.400361ms]
  I1014 03:09:28.852428 21 service_latency.go:351] Created: latency-svc-rgjwl
  I1014 03:09:28.867695 21 service_latency.go:358] Got endpoints: latency-svc-wrlt2 [750.561764ms]
  I1014 03:09:28.886498 21 service_latency.go:351] Created: latency-svc-4j2hq
  I1014 03:09:28.919160 21 service_latency.go:358] Got endpoints: latency-svc-g695f [750.88503ms]
  I1014 03:09:28.938946 21 service_latency.go:351] Created: latency-svc-br5q6
  I1014 03:09:28.968102 21 service_latency.go:358] Got endpoints: latency-svc-4pl77 [748.750472ms]
  I1014 03:09:28.987378 21 service_latency.go:351] Created: latency-svc-txwc9
  I1014 03:09:29.017434 21 service_latency.go:358] Got endpoints: latency-svc-9ssml [748.94415ms]
  I1014 03:09:29.036782 21 service_latency.go:351] Created: latency-svc-9nz4t
  I1014 03:09:29.068302 21 service_latency.go:358] Got endpoints: latency-svc-grhpk [750.572261ms]
  I1014 03:09:29.085295 21 service_latency.go:351] Created: latency-svc-l74xg
  I1014 03:09:29.122565 21 service_latency.go:358] Got endpoints: latency-svc-8bnwt [752.579865ms]
  I1014 03:09:29.142737 21 service_latency.go:351] Created: latency-svc-v9wkz
  I1014 03:09:29.171895 21 service_latency.go:358] Got endpoints: latency-svc-zgkm7 [753.222679ms]
  I1014 03:09:29.190601 21 service_latency.go:351] Created: latency-svc-zb2gv
  I1014 03:09:29.218709 21 service_latency.go:358] Got endpoints: latency-svc-sskpf [749.95422ms]
  I1014 03:09:29.239225 21 service_latency.go:351] Created: latency-svc-tgqt8
  I1014 03:09:29.269361 21 service_latency.go:358] Got endpoints: latency-svc-ks5z2 [751.095651ms]
  I1014 03:09:29.289552 21 service_latency.go:351] Created: latency-svc-s2wts
  I1014 03:09:29.323945 21 service_latency.go:358] Got endpoints: latency-svc-2qcn9 [755.984809ms]
  I1014 03:09:29.347342 21 service_latency.go:351] Created: latency-svc-fr5pz
  I1014 03:09:29.369253 21 service_latency.go:358] Got endpoints: latency-svc-smknp [749.807109ms]
  I1014 03:09:29.392017 21 service_latency.go:351] Created: latency-svc-h5vhg
  E1014 03:09:29.418049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:29.418516 21 service_latency.go:358] Got endpoints: latency-svc-f59zc [741.76114ms]
  I1014 03:09:29.441969 21 service_latency.go:351] Created: latency-svc-mt5ds
  I1014 03:09:29.468408 21 service_latency.go:358] Got endpoints: latency-svc-5fp82 [749.807345ms]
  I1014 03:09:29.489300 21 service_latency.go:351] Created: latency-svc-bz2pt
  I1014 03:09:29.517808 21 service_latency.go:358] Got endpoints: latency-svc-69r6c [738.501302ms]
  I1014 03:09:29.537534 21 service_latency.go:351] Created: latency-svc-2vnbg
  I1014 03:09:29.567575 21 service_latency.go:358] Got endpoints: latency-svc-rgjwl [743.404804ms]
  I1014 03:09:29.586468 21 service_latency.go:351] Created: latency-svc-x7tdf
  I1014 03:09:29.623901 21 service_latency.go:358] Got endpoints: latency-svc-4j2hq [755.774894ms]
  I1014 03:09:29.654058 21 service_latency.go:351] Created: latency-svc-jlwbk
  I1014 03:09:29.668337 21 service_latency.go:358] Got endpoints: latency-svc-br5q6 [749.123316ms]
  I1014 03:09:29.686943 21 service_latency.go:351] Created: latency-svc-vkcg5
  I1014 03:09:29.718348 21 service_latency.go:358] Got endpoints: latency-svc-txwc9 [750.184722ms]
  I1014 03:09:29.738321 21 service_latency.go:351] Created: latency-svc-bl8ls
  I1014 03:09:29.767843 21 service_latency.go:358] Got endpoints: latency-svc-9nz4t [749.901916ms]
  I1014 03:09:29.788606 21 service_latency.go:351] Created: latency-svc-gmnv8
  I1014 03:09:29.823849 21 service_latency.go:358] Got endpoints: latency-svc-l74xg [755.119772ms]
  I1014 03:09:29.850321 21 service_latency.go:351] Created: latency-svc-26v82
  I1014 03:09:29.868142 21 service_latency.go:358] Got endpoints: latency-svc-v9wkz [744.433739ms]
  I1014 03:09:29.904194 21 service_latency.go:351] Created: latency-svc-g97dr
  I1014 03:09:29.919127 21 service_latency.go:358] Got endpoints: latency-svc-zb2gv [746.386431ms]
  I1014 03:09:29.944435 21 service_latency.go:351] Created: latency-svc-bkknx
  I1014 03:09:29.968798 21 service_latency.go:358] Got endpoints: latency-svc-tgqt8 [750.037496ms]
  I1014 03:09:29.989111 21 service_latency.go:351] Created: latency-svc-bmz9t
  I1014 03:09:30.019886 21 service_latency.go:358] Got endpoints: latency-svc-s2wts [749.486837ms]
  I1014 03:09:30.035400 21 service_latency.go:351] Created: latency-svc-6qfs8
  I1014 03:09:30.078442 21 service_latency.go:358] Got endpoints: latency-svc-fr5pz [753.592355ms]
  I1014 03:09:30.108276 21 service_latency.go:351] Created: latency-svc-w5sr8
  I1014 03:09:30.117743 21 service_latency.go:358] Got endpoints: latency-svc-h5vhg [747.55506ms]
  I1014 03:09:30.140248 21 service_latency.go:351] Created: latency-svc-l7lp4
  I1014 03:09:30.167555 21 service_latency.go:358] Got endpoints: latency-svc-mt5ds [748.306344ms]
  I1014 03:09:30.187054 21 service_latency.go:351] Created: latency-svc-s9wpz
  I1014 03:09:30.218684 21 service_latency.go:358] Got endpoints: latency-svc-bz2pt [749.933819ms]
  I1014 03:09:30.239929 21 service_latency.go:351] Created: latency-svc-p9v8t
  I1014 03:09:30.269187 21 service_latency.go:358] Got endpoints: latency-svc-2vnbg [750.95301ms]
  I1014 03:09:30.289608 21 service_latency.go:351] Created: latency-svc-2t9rp
  I1014 03:09:30.317521 21 service_latency.go:358] Got endpoints: latency-svc-x7tdf [749.525341ms]
  I1014 03:09:30.336046 21 service_latency.go:351] Created: latency-svc-qvks7
  I1014 03:09:30.367569 21 service_latency.go:358] Got endpoints: latency-svc-jlwbk [734.564472ms]
  I1014 03:09:30.389020 21 service_latency.go:351] Created: latency-svc-mpbk8
  E1014 03:09:30.419229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:30.422923 21 service_latency.go:358] Got endpoints: latency-svc-vkcg5 [754.54206ms]
  I1014 03:09:30.448076 21 service_latency.go:351] Created: latency-svc-dbhvl
  I1014 03:09:30.470080 21 service_latency.go:358] Got endpoints: latency-svc-bl8ls [750.487576ms]
  I1014 03:09:30.493869 21 service_latency.go:351] Created: latency-svc-vrl4z
  I1014 03:09:30.519218 21 service_latency.go:358] Got endpoints: latency-svc-gmnv8 [750.194934ms]
  I1014 03:09:30.538144 21 service_latency.go:351] Created: latency-svc-7274q
  I1014 03:09:30.569787 21 service_latency.go:358] Got endpoints: latency-svc-26v82 [741.876665ms]
  I1014 03:09:30.584935 21 service_latency.go:351] Created: latency-svc-xqqwz
  I1014 03:09:30.618310 21 service_latency.go:358] Got endpoints: latency-svc-g97dr [750.006345ms]
  I1014 03:09:30.637651 21 service_latency.go:351] Created: latency-svc-6nfm7
  I1014 03:09:30.669152 21 service_latency.go:358] Got endpoints: latency-svc-bkknx [748.75441ms]
  I1014 03:09:30.718789 21 service_latency.go:358] Got endpoints: latency-svc-bmz9t [749.918332ms]
  I1014 03:09:30.769081 21 service_latency.go:358] Got endpoints: latency-svc-6qfs8 [747.88514ms]
  I1014 03:09:30.835123 21 service_latency.go:358] Got endpoints: latency-svc-w5sr8 [755.750916ms]
  I1014 03:09:30.868133 21 service_latency.go:358] Got endpoints: latency-svc-l7lp4 [750.000344ms]
  I1014 03:09:30.918222 21 service_latency.go:358] Got endpoints: latency-svc-s9wpz [750.615258ms]
  I1014 03:09:30.968521 21 service_latency.go:358] Got endpoints: latency-svc-p9v8t [749.312925ms]
  I1014 03:09:31.018488 21 service_latency.go:358] Got endpoints: latency-svc-2t9rp [748.542626ms]
  I1014 03:09:31.073776 21 service_latency.go:358] Got endpoints: latency-svc-qvks7 [756.200154ms]
  I1014 03:09:31.117796 21 service_latency.go:358] Got endpoints: latency-svc-mpbk8 [749.784325ms]
  I1014 03:09:31.167852 21 service_latency.go:358] Got endpoints: latency-svc-dbhvl [743.101761ms]
  I1014 03:09:31.222219 21 service_latency.go:358] Got endpoints: latency-svc-vrl4z [751.597092ms]
  I1014 03:09:31.280591 21 service_latency.go:358] Got endpoints: latency-svc-7274q [760.590299ms]
  I1014 03:09:31.327632 21 service_latency.go:358] Got endpoints: latency-svc-xqqwz [756.880128ms]
  I1014 03:09:31.374999 21 service_latency.go:358] Got endpoints: latency-svc-6nfm7 [756.270126ms]
  I1014 03:09:31.375986 21 service_latency.go:114] Latencies: [74.500135ms 145.447345ms 146.759505ms 184.067276ms 191.984257ms 200.615982ms 204.672071ms 204.826214ms 209.795739ms 214.058321ms 227.567704ms 228.681355ms 233.721604ms 247.559146ms 257.626819ms 259.996416ms 265.351429ms 271.578381ms 274.467907ms 290.205704ms 303.730849ms 306.651189ms 309.050419ms 311.437201ms 312.006559ms 316.802494ms 330.847723ms 338.782273ms 340.473537ms 343.674629ms 350.723855ms 350.808482ms 351.453448ms 355.08859ms 356.736415ms 362.936426ms 363.200789ms 363.676184ms 363.725823ms 364.307109ms 365.00951ms 376.041605ms 376.347335ms 377.197299ms 381.138127ms 383.746648ms 401.621225ms 404.377735ms 405.510798ms 408.343254ms 409.856382ms 414.559067ms 419.710505ms 422.534278ms 435.51672ms 438.352581ms 446.732133ms 448.515131ms 459.189127ms 476.423702ms 502.225016ms 515.732028ms 538.686939ms 572.388134ms 577.697242ms 578.795744ms 587.406201ms 620.032173ms 627.124993ms 687.530237ms 690.649791ms 694.608191ms 708.76491ms 717.281016ms 718.835028ms 720.229981ms 721.062091ms 723.788483ms 730.528513ms 732.658011ms 733.684104ms 734.564472ms 734.982536ms 735.443915ms 735.622191ms 736.907524ms 737.325082ms 738.501302ms 739.221948ms 739.92648ms 741.602603ms 741.76114ms 741.876665ms 742.12211ms 742.8617ms 743.066257ms 743.101761ms 743.404804ms 744.433739ms 744.921493ms 745.00012ms 745.527984ms 745.883922ms 746.054799ms 746.154149ms 746.386431ms 746.468122ms 746.668996ms 746.961391ms 747.554939ms 747.55506ms 747.624714ms 747.740848ms 747.83125ms 747.88514ms 747.933624ms 748.085132ms 748.249551ms 748.306344ms 748.542626ms 748.672444ms 748.750472ms 748.75441ms 748.796234ms 748.838964ms 748.873431ms 748.94415ms 749.070631ms 749.123316ms 749.205007ms 749.290104ms 749.312925ms 749.385932ms 749.486837ms 749.525341ms 749.565888ms 749.784325ms 749.807109ms 749.807345ms 749.901916ms 749.918332ms 749.933819ms 749.95422ms 750.000344ms 750.006345ms 750.037496ms 750.184722ms 750.194934ms 750.4176ms 750.487576ms 750.561764ms 750.572261ms 750.615258ms 750.640211ms 750.851973ms 750.852521ms 750.882876ms 750.88503ms 750.904302ms 750.95301ms 751.095651ms 751.250787ms 751.35631ms 751.597092ms 751.704302ms 751.901399ms 752.579865ms 752.793631ms 753.025499ms 753.197527ms 753.222679ms 753.592355ms 754.54206ms 754.672844ms 754.734058ms 755.119772ms 755.46338ms 755.750916ms 755.774894ms 755.984809ms 755.988315ms 756.200154ms 756.270126ms 756.400361ms 756.677713ms 756.880128ms 758.62732ms 759.100351ms 759.218083ms 759.234594ms 760.590299ms 761.207379ms 761.838058ms 762.153017ms 762.294966ms 764.218958ms 771.553413ms 775.535038ms 1.042370218s 1.071223998s]
  I1014 03:09:31.377436 21 service_latency.go:118] 50 %ile: 745.00012ms
  I1014 03:09:31.377626 21 service_latency.go:119] 90 %ile: 755.988315ms
  I1014 03:09:31.377897 21 service_latency.go:120] 99 %ile: 1.042370218s
  I1014 03:09:31.378050 21 service_latency.go:121] Total sample count: 200
  I1014 03:09:31.378260 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8221" for this suite. @ 10/14/25 03:09:31.39
â€¢ [10.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 10/14/25 03:09:31.402
  I1014 03:09:31.402782 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:09:31.404
  E1014 03:09:31.419390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:31.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:31.438
  STEP: Setting up server cert @ 10/14/25 03:09:31.482
  E1014 03:09:32.431752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:09:32.803
  STEP: Deploying the webhook pod @ 10/14/25 03:09:32.809
  STEP: Wait for the deployment to be ready @ 10/14/25 03:09:32.822
  I1014 03:09:32.855529 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:09:33.433957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:34.434161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:09:34.868
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:09:34.899
  E1014 03:09:35.434172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:35.901903 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/14/25 03:09:35.915
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/14/25 03:09:35.917
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/14/25 03:09:35.917
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/14/25 03:09:35.917
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/14/25 03:09:35.919
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/14/25 03:09:35.919
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/14/25 03:09:35.921
  I1014 03:09:36.010808 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2908" for this suite. @ 10/14/25 03:09:36.022
  STEP: Destroying namespace "webhook-markers-2803" for this suite. @ 10/14/25 03:09:36.052
â€¢ [4.657 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 10/14/25 03:09:36.06
  I1014 03:09:36.060311 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 03:09:36.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:36.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:36.095
  I1014 03:09:36.101734 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  W1014 03:09:36.102929      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000864520 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1014 03:09:36.434474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:37.435331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:38.436903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:38.719139      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I1014 03:09:38.719289      21 warnings.go:110] "Warning: unknown field \"beta\""
  I1014 03:09:38.719370      21 warnings.go:110] "Warning: unknown field \"delta\""
  I1014 03:09:38.719449      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1014 03:09:38.719527      21 warnings.go:110] "Warning: unknown field \"gamma\""
  I1014 03:09:39.304543 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1368" for this suite. @ 10/14/25 03:09:39.312
â€¢ [3.259 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 10/14/25 03:09:39.32
  I1014 03:09:39.321174 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:09:39.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:39.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:39.375
  E1014 03:09:39.436949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/14/25 03:09:39.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:09:40.13
  STEP: Deploying the webhook pod @ 10/14/25 03:09:40.158
  STEP: Wait for the deployment to be ready @ 10/14/25 03:09:40.198
  I1014 03:09:40.290537 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:09:40.438298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:41.440059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:09:42.339
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:09:42.381
  E1014 03:09:42.440800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:43.381768 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 03:09:43.400187 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E1014 03:09:43.440893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:44.381625 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 03:09:44.400457 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E1014 03:09:44.441333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:45.381947 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 03:09:45.395891 21 util.go:426] Waiting for at least 1 EndpointSlice to exist
  E1014 03:09:45.441877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:46.383547 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/14/25 03:09:46.398
  E1014 03:09:46.444168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:46.492213 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:46.649781 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:46.724002 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:46.818848 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:46.950180 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:47.043498 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:47.139089 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:47.233745 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  I1014 03:09:47.343809 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/14/25 03:09:47.443
  I1014 03:09:47.443660 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:09:47.444816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:09:47.708177 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8652" for this suite. @ 10/14/25 03:09:47.738
  STEP: Destroying namespace "webhook-markers-1829" for this suite. @ 10/14/25 03:09:47.758
â€¢ [8.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/14/25 03:09:47.779
  I1014 03:09:47.779546 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename cronjob @ 10/14/25 03:09:47.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:09:47.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:09:47.843
  STEP: Creating a cronjob @ 10/14/25 03:09:47.859
  STEP: Ensuring more than one job is running at a time @ 10/14/25 03:09:47.873
  E1014 03:09:48.445212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:49.445358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:50.445552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:51.446347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:52.447139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:53.447457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:54.448440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:55.448499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:56.448975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:57.449396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:58.449424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:09:59.449549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:00.449638      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:01.450238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:02.450331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:03.450833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:04.450974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:05.451093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:06.451201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:07.451524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:08.459581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:09.459721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:10.460800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:11.462085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:12.463037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:13.463373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:14.463589      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:15.465948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:16.466898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:17.467089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:18.467234      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:19.467678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:20.467503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:21.468246      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:22.468417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:23.468549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:24.469748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:25.469787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:26.470047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:27.470199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:28.470336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:29.470475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:30.470777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:31.471352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:32.471494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:33.471625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:34.471822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:35.472190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:36.472773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:37.473040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:38.473776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:39.473968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:40.474090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:41.474144      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:42.474352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:43.474512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:44.474664      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:45.474807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:46.475451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:47.475755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:48.476128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:49.476265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:50.476374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:51.476784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:52.476580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:53.476737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:54.477595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:55.477499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:56.477784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:57.477863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:58.477866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:10:59.478016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:00.478621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:01.478817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/14/25 03:11:01.88
  STEP: Removing cronjob @ 10/14/25 03:11:01.886
  I1014 03:11:01.893963 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2866" for this suite. @ 10/14/25 03:11:01.91
â€¢ [74.165 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:570
  STEP: Creating a kubernetes client @ 10/14/25 03:11:01.946
  I1014 03:11:01.946365 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename security-context-test @ 10/14/25 03:11:01.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:01.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:02
  E1014 03:11:02.478983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:03.479059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:04.479191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:05.479316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:06.034894 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2560" for this suite. @ 10/14/25 03:11:06.04
â€¢ [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 10/14/25 03:11:06.049
  I1014 03:11:06.049959 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 03:11:06.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:06.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:06.074
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/14/25 03:11:06.077
  I1014 03:11:06.078324 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:11:06.480271      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:07.480116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:08.480295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:09.481191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:10.481906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:11.482084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/14/25 03:11:11.94
  I1014 03:11:11.941300 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:11:12.483190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:13.296711 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:11:13.483592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:14.485015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:15.490111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:16.494027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:17.495755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:18.496277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:19.309357 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6327" for this suite. @ 10/14/25 03:11:19.319
â€¢ [13.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 10/14/25 03:11:19.327
  I1014 03:11:19.327781 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename disruption @ 10/14/25 03:11:19.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:19.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:19.352
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:11:19.362
  STEP: Waiting for all pods to be running @ 10/14/25 03:11:19.422
  I1014 03:11:19.448358 21 disruption.go:691] running pods: 0 < 3
  E1014 03:11:19.496091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:20.496221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:21.432986 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2468" for this suite. @ 10/14/25 03:11:21.438
â€¢ [2.117 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 10/14/25 03:11:21.445
  I1014 03:11:21.445014 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename chunking @ 10/14/25 03:11:21.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:21.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:21.47
  STEP: creating a large number of resources @ 10/14/25 03:11:21.474
  E1014 03:11:21.496219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:22.496661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:23.496915      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:24.269879      21 request.go:752] "Waited before sending request" delay="1.016186068s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.43.0.1:443/api/v1/namespaces/chunking-9617/podtemplates"
  E1014 03:11:24.497857      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:25.498662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:26.498738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:27.499031      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:28.500164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:29.500458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:30.501310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:31.501635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:32.502551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:33.503111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:34.503479      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:35.503856      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:36.504211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:37.304237      21 request.go:752] "Waited before sending request" delay="1.000345001s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.43.0.1:443/api/v1/namespaces/chunking-9617/podtemplates"
  E1014 03:11:37.504299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:38.504623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 10/14/25 03:11:39.157
  I1014 03:11:39.201730 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1014 03:11:39.254192 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1014 03:11:39.304270 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1014 03:11:39.354673 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1014 03:11:39.403762 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1014 03:11:39.454066 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1014 03:11:39.504049 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E1014 03:11:39.504644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:39.553176 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1014 03:11:39.604171 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1014 03:11:39.653035 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1014 03:11:39.703266 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1014 03:11:39.753238 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1014 03:11:39.803787 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1014 03:11:39.853579 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1014 03:11:39.911870 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1014 03:11:39.956875 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1014 03:11:40.007010 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1014 03:11:40.054131 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1014 03:11:40.103848 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1014 03:11:40.153017 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1014 03:11:40.204186 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1014 03:11:40.253592 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1014 03:11:40.308972 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1014 03:11:40.352804 21 chunking.go:98] Retrieved 9/17 results with rv 19430 and continue 
  I1014 03:11:40.401877 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1014 03:11:40.454820 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1014 03:11:40.504122 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E1014 03:11:40.504815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:40.560705 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1014 03:11:40.606198 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1014 03:11:40.653949 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1014 03:11:40.704803 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1014 03:11:40.757022 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1014 03:11:40.811288 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1014 03:11:40.854585 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1014 03:11:40.905215 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1014 03:11:40.963612 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1014 03:11:41.012660 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1014 03:11:41.055554 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1014 03:11:41.107460 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1014 03:11:41.154121 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1014 03:11:41.204111 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1014 03:11:41.253418 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1014 03:11:41.302663 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1014 03:11:41.352950 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1014 03:11:41.404243 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1014 03:11:41.453987 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E1014 03:11:41.505358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:41.506734 21 chunking.go:98] Retrieved 17/17 results with rv 19430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1014 03:11:41.562494 21 chunking.go:98] Retrieved 9/17 results with rv 19430 and continue 
  I1014 03:11:41.606403 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I1014 03:11:41.655792 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1014 03:11:41.710253 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1014 03:11:41.754330 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1014 03:11:41.804239 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1014 03:11:41.854599 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1014 03:11:41.903634 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1014 03:11:41.954001 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1014 03:11:42.004997 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1014 03:11:42.055346 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1014 03:11:42.104204 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1014 03:11:42.154320 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1014 03:11:42.203838 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1014 03:11:42.253425 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1014 03:11:42.305343 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1014 03:11:42.352878 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1014 03:11:42.404155 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1014 03:11:42.454181 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1014 03:11:42.503484 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E1014 03:11:42.506301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:42.553504 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1014 03:11:42.602878 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1014 03:11:42.654272 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1014 03:11:42.704920 21 chunking.go:98] Retrieved 17/17 results with rv 19432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTk0MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1014 03:11:42.752286 21 chunking.go:98] Retrieved 9/17 results with rv 19432 and continue 
  STEP: retrieving those results all at once @ 10/14/25 03:11:42.752
  I1014 03:11:42.807725 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9617" for this suite. @ 10/14/25 03:11:42.852
â€¢ [21.469 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 10/14/25 03:11:42.916
  I1014 03:11:42.916264 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:11:42.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:42.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:42.944
  STEP: Creating a pod to test downward api env vars @ 10/14/25 03:11:42.954
  E1014 03:11:43.506552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:44.507631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:11:44.985
  I1014 03:11:44.989737 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downward-api-863e1540-76ff-4bbb-aec0-35cc5920b582 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 03:11:45.005
  I1014 03:11:45.021309 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1242" for this suite. @ 10/14/25 03:11:45.026
â€¢ [2.117 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 10/14/25 03:11:45.033
  I1014 03:11:45.033232 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 03:11:45.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:45.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:45.067
  STEP: Create set of pods @ 10/14/25 03:11:45.075
  I1014 03:11:45.087137 21 pods.go:874] created test-pod-1
  I1014 03:11:45.098052 21 pods.go:874] created test-pod-2
  I1014 03:11:45.111722 21 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/14/25 03:11:45.111
  E1014 03:11:45.507708      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:46.508153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 10/14/25 03:11:47.155
  I1014 03:11:47.162108 21 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E1014 03:11:47.508989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:48.165155 21 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E1014 03:11:48.509163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:49.160061 21 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E1014 03:11:49.509339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:50.172834 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8478" for this suite. @ 10/14/25 03:11:50.183
â€¢ [5.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 10/14/25 03:11:50.203
  I1014 03:11:50.203808 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:11:50.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:50.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:50.234
  STEP: Setting up server cert @ 10/14/25 03:11:50.262
  E1014 03:11:50.513059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:11:50.9
  STEP: Deploying the webhook pod @ 10/14/25 03:11:50.907
  STEP: Wait for the deployment to be ready @ 10/14/25 03:11:50.922
  I1014 03:11:50.950384 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:11:51.514242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:52.514557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:11:52.963
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:11:52.99
  E1014 03:11:53.514542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:53.991009 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/14/25 03:11:53.996
  I1014 03:11:54.093989 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2612" for this suite. @ 10/14/25 03:11:54.108
  STEP: Destroying namespace "webhook-markers-48" for this suite. @ 10/14/25 03:11:54.122
â€¢ [3.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 10/14/25 03:11:54.13
  I1014 03:11:54.130433 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 03:11:54.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:11:54.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:11:54.164
  STEP: creating the pod @ 10/14/25 03:11:54.17
  STEP: waiting for pod running @ 10/14/25 03:11:54.179
  E1014 03:11:54.514982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:55.515141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 10/14/25 03:11:56.21
  I1014 03:11:56.217652 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9872 PodName:var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:11:56.217809 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:11:56.217951 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-9872/pods/var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I1014 03:11:56.309239 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: test for file in mounted path @ 10/14/25 03:11:56.309
  I1014 03:11:56.314988 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9872 PodName:var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:11:56.315382 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:11:56.315718 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/var-expansion-9872/pods/var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  I1014 03:11:56.426062 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  STEP: updating the annotation value @ 10/14/25 03:11:56.426
  E1014 03:11:56.515325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:11:56.946617 21 pod_client.go:173] Successfully updated pod "var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05"
  STEP: waiting for annotated pod running @ 10/14/25 03:11:56.947
  STEP: deleting the pod gracefully @ 10/14/25 03:11:56.951
  I1014 03:11:56.951896 21 delete.go:62] Deleting pod "var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05" in namespace "var-expansion-9872"
  I1014 03:11:56.962675 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-d7c01918-babf-4f00-8ede-8bda0357ff05" to be fully deleted
  E1014 03:11:57.515481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:58.515595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:11:59.515727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:00.516123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:01.516875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:02.516990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:03.517071      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:04.517221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:05.518419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:06.518986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:07.519273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:08.519315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:09.522034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:10.522278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:11.522386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:12.522502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:13.522595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:14.522914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:15.522900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:16.523666      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:17.524677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:18.525061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:19.526040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:20.526150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:21.526972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:22.527146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:23.533977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:24.534258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:25.534377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:26.535133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:27.536458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:28.536601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:29.078115 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9872" for this suite. @ 10/14/25 03:12:29.085
â€¢ [34.963 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/14/25 03:12:29.108
  I1014 03:12:29.108567 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename certificates @ 10/14/25 03:12:29.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:12:29.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:12:29.14
  E1014 03:12:29.547757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:30.549977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting /apis @ 10/14/25 03:12:30.663
  STEP: getting /apis/certificates.k8s.io @ 10/14/25 03:12:30.67
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/14/25 03:12:30.671
  STEP: creating @ 10/14/25 03:12:30.673
  STEP: getting @ 10/14/25 03:12:30.69
  STEP: listing @ 10/14/25 03:12:30.699
  STEP: watching @ 10/14/25 03:12:30.705
  I1014 03:12:30.705850 21 certificates.go:316] starting watch
  STEP: patching @ 10/14/25 03:12:30.707
  STEP: updating @ 10/14/25 03:12:30.713
  I1014 03:12:30.719143 21 certificates.go:332] waiting for watch events with expected annotations
  I1014 03:12:30.719470 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 10/14/25 03:12:30.719
  STEP: patching /approval @ 10/14/25 03:12:30.723
  STEP: updating /approval @ 10/14/25 03:12:30.728
  STEP: getting /status @ 10/14/25 03:12:30.732
  STEP: patching /status @ 10/14/25 03:12:30.736
  STEP: updating /status @ 10/14/25 03:12:30.741
  STEP: deleting @ 10/14/25 03:12:30.747
  STEP: deleting a collection @ 10/14/25 03:12:30.757
  I1014 03:12:30.776523 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1652" for this suite. @ 10/14/25 03:12:30.782
â€¢ [1.683 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 10/14/25 03:12:30.796
  I1014 03:12:30.797000 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 03:12:30.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:12:30.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:12:30.823
  STEP: Creating pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614 @ 10/14/25 03:12:30.826
  E1014 03:12:31.551116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:32.551260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 03:12:32.859
  I1014 03:12:32.865913 21 container_probe.go:1748] Initial restart count of pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 is 0
  I1014 03:12:32.871329 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:33.551347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:34.551478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:34.877383 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:35.552465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:36.553491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:36.886408 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:37.553491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:38.553707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:38.891980 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:39.553805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:40.553921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:40.901016 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:41.554435      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:42.554539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:42.908312 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:43.555691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:44.555741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:44.913700 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:45.555865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:46.556515      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:46.919198 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:47.556636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:48.556847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:48.924149 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:49.556956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:50.557290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:50.930316 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:51.558119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:52.558316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:52.938290 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:53.558339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:54.558487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:54.944929 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:55.559224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:56.559375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:56.951308 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:57.559452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:12:58.559763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:12:58.959331 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:12:59.560689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:00.566000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:00.965312 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:01.566921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:02.567050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:02.971931 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:03.568111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:04.568168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:04.985382 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:05.568410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:06.569202      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:06.993910 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:07.569305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:08.569502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:08.999789 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:09.574000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:10.574116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:11.006571 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:11.575016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:12.575327      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:13.013770 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:13.575353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:14.575472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:15.029995 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:15.577861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:16.577919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:17.052613 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:17.578928      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:18.579110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:19.058517 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:19.579207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:20.579319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:21.064264 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:21.580222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:22.580363      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:23.070590 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:23.581209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:24.581368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:25.076805 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:25.582130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:26.582491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:27.087362 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:27.583262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:28.583184      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:29.092291 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:29.584048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:30.584149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:31.097619 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:31.584835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:32.584912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:33.103759 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:33.585899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:34.586321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:35.110852 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:35.586369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:36.586657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:37.117438 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:37.587383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:38.587999      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:39.131899 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:39.588226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:40.588371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:41.138995 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:41.588466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:42.588561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:43.150773 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:43.589209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:44.589195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:45.156187 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:45.589093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:46.589219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:47.164373 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:47.590205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:48.590378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:49.171496 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:49.591386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:50.591520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:51.177731 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:51.591508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:52.591608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:53.189522 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:53.592427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:54.592549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:55.196664 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:55.592668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:56.593581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:57.203237 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:57.594084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:13:58.594191      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:13:59.208987 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:13:59.594899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:00.595015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:01.219789 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:01.595659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:02.595761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:03.228726 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:03.595963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:04.595925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:05.234379 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:05.596245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:06.596407      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:07.242450 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:07.596750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:08.597047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:09.246944 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:09.597855      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:10.597919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:11.252647 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:11.598613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:12.598586      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:13.257738 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:13.599545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:14.600007      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:15.262580 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:15.600607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:16.601598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:17.268868 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:17.601648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:18.601763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:19.273569 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:19.601940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:20.602090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:21.279201 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:21.602781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:22.602908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:23.283782 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:23.603676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:24.604152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:25.291443 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:25.604464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:26.605970      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:27.306055 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:27.606094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:28.606156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:29.311935 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:29.606865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:30.606850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:31.320140 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:31.606913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:32.607006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:33.327063 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:33.607587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:34.607773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:35.337171 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:35.608665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:36.609650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:37.344042 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:37.610146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:38.610320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:39.354061 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:39.610775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:40.610944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:41.364253 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:41.611359      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:42.611831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:43.370103 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:43.611660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:44.611978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:45.379841 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:45.612791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:46.613561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:47.387374 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:47.613729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:48.618278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:49.394927 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:49.618785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:50.618905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:51.400419 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:51.619362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:52.619472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:53.405763 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:53.620451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:54.620590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:55.410703 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:55.621672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:56.622534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:57.416196 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:57.622921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:14:58.623481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:14:59.422054 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:14:59.624092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:00.629980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:01.430522 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:01.630437      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:02.630549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:03.435983 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:03.637020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:04.637182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:05.442698 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:05.638080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:06.638154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:07.455317 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:07.638899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:08.639009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:09.460364 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:09.641983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:10.645992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:11.478236 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:11.646211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:12.646394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:13.491151 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:13.647317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:14.647917      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:15.501930 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:15.648849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:16.649610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:17.513364 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:17.649929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:18.650143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:19.521734 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:19.650837      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:20.650807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:21.528428 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:21.651300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:22.651605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:23.534987 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:23.651826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:24.651927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:25.545642 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:25.652458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:26.653232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:27.551652 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:27.654582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:28.655724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:29.557441 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:29.656005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:30.656120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:31.567802 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:31.656626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:32.656950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:33.578075 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:33.657862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:34.657756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:35.589083 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:35.658592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:36.659344      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:37.596778 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:37.660264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:38.660359      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:39.606228 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:39.661967      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:40.662608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:41.611006 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:41.662837      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:42.663061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:43.615781 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:43.663165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:44.663308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:45.621594 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:45.664079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:46.664235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:47.626977 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:47.664426      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:48.665878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:49.639943 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:49.666715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:50.666923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:51.645592 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:51.666929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:52.667026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:53.650983 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:53.667451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:54.667606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:55.656999 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:55.668409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:56.670016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:57.662903 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:57.670346      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:15:58.670484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:15:59.667798 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:15:59.671213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:00.671383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:01.671747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:01.674156 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:02.671939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:03.672371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:03.679872 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:04.672476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:05.672579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:05.686362 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:06.673555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:07.673743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:07.692543 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:08.673901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:09.674080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:09.702061 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:10.674226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:11.674529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:11.708364 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:12.674670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:13.683046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:13.713501 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:14.683173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:15.685942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:15.731343 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:16.687336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:17.687435      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:17.736620 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:18.689045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:19.689109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:19.742354 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:20.689620      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:21.689894      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:21.751738 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:22.689881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:23.690042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:23.756367 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:24.690180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:25.690289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:25.761288 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:26.690977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:27.691131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:27.767286 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:28.691239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:29.691347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:29.771539 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:30.691643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:31.692086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:31.776317 21 container_probe.go:1758] Get pod liveness-8e4e6b1f-a10e-4ced-917e-92e98777f532 in namespace container-probe-9614
  E1014 03:16:32.692217      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:33.693027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/14/25 03:16:33.777
  I1014 03:16:33.791930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9614" for this suite. @ 10/14/25 03:16:33.802
â€¢ [243.013 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2244
  STEP: Creating a kubernetes client @ 10/14/25 03:16:33.814
  I1014 03:16:33.814836 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:16:33.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:16:33.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:16:33.835
  STEP: creating service in namespace services-6108 @ 10/14/25 03:16:33.839
  STEP: creating service affinity-nodeport-transition in namespace services-6108 @ 10/14/25 03:16:33.839
  I1014 03:16:33.884722 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 03:16:34.694663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:35.694862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:35.917810 21 resource.go:361] Creating new exec pod
  E1014 03:16:36.695585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:37.695787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:37.954365 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-6108 exec execpod-affinity9lh9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1014 03:16:38.145845 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition (10.43.197.23) 80 port [tcp/http] succeeded!\n"
  I1014 03:16:38.145898 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:16:38.145973 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-6108 exec execpod-affinity9lh9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.197.23 80'
  I1014 03:16:38.382763 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.197.23 80\nConnection to 10.43.197.23 80 port [tcp/http] succeeded!\n"
  I1014 03:16:38.382818 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:16:38.382901 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-6108 exec execpod-affinity9lh9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.11 31155'
  I1014 03:16:38.549142 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.11 31155\n+ Connection to 192.168.1.11 31155 port [tcp/*] succeeded!\necho hostName\n"
  I1014 03:16:38.549216 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:16:38.549328 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-6108 exec execpod-affinity9lh9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 31155'
  E1014 03:16:38.695778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:38.721056 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.10 31155\nConnection to 192.168.1.10 31155 port [tcp/*] succeeded!\n"
  I1014 03:16:38.721108 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:16:38.733311 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-6108 exec execpod-affinity9lh9w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/ ; done'
  I1014 03:16:39.137412 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n"
  I1014 03:16:39.137476 21 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-ttddh\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-wsvqc\naffinity-nodeport-transition-7d57658b6c-wsvqc\naffinity-nodeport-transition-7d57658b6c-wsvqc\naffinity-nodeport-transition-7d57658b6c-ttddh\naffinity-nodeport-transition-7d57658b6c-wsvqc\naffinity-nodeport-transition-7d57658b6c-ttddh\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-ttddh\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-wsvqc\naffinity-nodeport-transition-7d57658b6c-ttddh\naffinity-nodeport-transition-7d57658b6c-wsvqc\naffinity-nodeport-transition-7d57658b6c-ttddh"
  I1014 03:16:39.137496 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ttddh
  I1014 03:16:39.137510 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.137525 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-wsvqc
  I1014 03:16:39.137536 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-wsvqc
  I1014 03:16:39.137549 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-wsvqc
  I1014 03:16:39.137560 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ttddh
  I1014 03:16:39.137572 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-wsvqc
  I1014 03:16:39.137583 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ttddh
  I1014 03:16:39.137596 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.137607 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.137619 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ttddh
  I1014 03:16:39.137714 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.137729 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-wsvqc
  I1014 03:16:39.137766 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ttddh
  I1014 03:16:39.137780 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-wsvqc
  I1014 03:16:39.137791 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-ttddh
  I1014 03:16:39.155679 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-6108 exec execpod-affinity9lh9w -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/ ; done'
  I1014 03:16:39.575319 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://192.168.1.11:31155/\n"
  I1014 03:16:39.575381 21 builder.go:147] stdout: "\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw\naffinity-nodeport-transition-7d57658b6c-tcnnw"
  I1014 03:16:39.575402 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575418 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575430 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575443 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575456 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575471 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575482 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.575965 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576001 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576013 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576026 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576037 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576049 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576060 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576073 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576084 21 service.go:238] Received response from host: affinity-nodeport-transition-7d57658b6c-tcnnw
  I1014 03:16:39.576151 21 service.go:4352] Cleaning up the exec pod
  I1014 03:16:39.645916 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6108" for this suite. @ 10/14/25 03:16:39.671
  E1014 03:16:39.701392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
â€¢ [5.898 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/14/25 03:16:39.715
  I1014 03:16:39.715196 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 03:16:39.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:16:39.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:16:39.753
  I1014 03:16:39.776160 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/25 03:16:39.781
  I1014 03:16:39.876772 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 03:16:39.876918 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 03:16:40.701455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:40.790473 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 03:16:40.790886 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 03:16:41.703514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:41.789938 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 03:16:41.790107 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/14/25 03:16:41.804
  STEP: Check that daemon pods images are updated. @ 10/14/25 03:16:41.887
  I1014 03:16:41.891024 21 daemon_set.go:1193] Wrong image for pod: daemon-set-hq7mr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E1014 03:16:42.703622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:42.892931 21 daemon_set.go:1193] Wrong image for pod: daemon-set-hq7mr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1014 03:16:42.893375 21 daemon_set.go:1198] Pod daemon-set-s4gg5 is not available
  E1014 03:16:43.704501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:43.891608 21 daemon_set.go:1198] Pod daemon-set-2kd98 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/14/25 03:16:43.895
  I1014 03:16:43.901133 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 03:16:43.902063 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm is running 0 daemon pod, expected 1
  E1014 03:16:44.704667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:44.909561 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 03:16:44.910004 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/25 03:16:44.963
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9935, will wait for the garbage collector to delete the pods @ 10/14/25 03:16:44.964
  I1014 03:16:45.032770 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.970539ms
  I1014 03:16:45.133811 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.038344ms
  E1014 03:16:45.704650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:46.543682 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 03:16:46.543835 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1014 03:16:46.548971 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20538"},"items":null}

  I1014 03:16:46.552600 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20538"},"items":null}

  I1014 03:16:46.564964 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9935" for this suite. @ 10/14/25 03:16:46.568
â€¢ [6.865 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/14/25 03:16:46.579
  I1014 03:16:46.579410 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename init-container @ 10/14/25 03:16:46.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:16:46.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:16:46.602
  STEP: creating the pod @ 10/14/25 03:16:46.607
  I1014 03:16:46.607746 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1014 03:16:46.704844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:47.704993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:48.705835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:49.649846 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8326" for this suite. @ 10/14/25 03:16:49.658
â€¢ [3.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 10/14/25 03:16:49.67
  I1014 03:16:49.670966 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pv @ 10/14/25 03:16:49.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:16:49.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:16:49.698
  STEP: Creating initial PV and PVC @ 10/14/25 03:16:49.704
  I1014 03:16:49.704170 21 pv.go:394] Creating a PV followed by a PVC
  E1014 03:16:49.706650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4637" @ 10/14/25 03:16:49.722
  STEP: Listing PVCs in namespace "pv-4637" @ 10/14/25 03:16:49.729
  STEP: Patching the PV "pv-4637-bvhb5" @ 10/14/25 03:16:49.74
  STEP: Patching the PVC "pvc-pw5xq" @ 10/14/25 03:16:49.77
  STEP: Getting PV "pv-4637-bvhb5" @ 10/14/25 03:16:49.783
  STEP: Getting PVC "pvc-pw5xq" @ 10/14/25 03:16:49.785
  STEP: Deleting PVC "pvc-pw5xq" @ 10/14/25 03:16:49.79
  STEP: Confirm deletion of PVC "pvc-pw5xq" @ 10/14/25 03:16:49.795
  E1014 03:16:50.706787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:51.706878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-4637-bvhb5" @ 10/14/25 03:16:51.808
  STEP: Confirm deletion of PV "pv-4637-bvhb5" @ 10/14/25 03:16:51.817
  E1014 03:16:52.707161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:53.707113      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 10/14/25 03:16:53.835
  I1014 03:16:53.835688 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4637-pbs9d" @ 10/14/25 03:16:53.85
  STEP: Updating the PVC "pvc-c54zp" @ 10/14/25 03:16:53.892
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-c54zp=updated" @ 10/14/25 03:16:53.92
  STEP: Deleting PVC "pvc-c54zp" via DeleteCollection @ 10/14/25 03:16:53.925
  STEP: Confirm deletion of PVC "pvc-c54zp" @ 10/14/25 03:16:53.934
  E1014 03:16:54.707365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:55.707481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-4637-pbs9d" via DeleteCollection @ 10/14/25 03:16:55.943
  STEP: Confirm deletion of PV "pv-4637-pbs9d" @ 10/14/25 03:16:55.953
  E1014 03:16:56.708868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:16:57.717956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:16:57.964013 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1014 03:16:57.964169 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-c54zp"
  I1014 03:16:57.968449 21 pv.go:193] Deleting PersistentVolume "pv-4637-pbs9d"
  I1014 03:16:57.972635 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4637" for this suite. @ 10/14/25 03:16:57.977
â€¢ [8.312 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 10/14/25 03:16:57.985
  I1014 03:16:57.985680 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/14/25 03:16:57.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:16:58.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:16:58.019
  STEP: creating a policy with variables @ 10/14/25 03:16:58.043
  STEP: waiting until the marker is denied @ 10/14/25 03:16:58.098
  E1014 03:16:58.718622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 10/14/25 03:16:58.809
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/14/25 03:16:58.833
  I1014 03:16:59.004888 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4746" for this suite. @ 10/14/25 03:16:59.031
â€¢ [1.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/14/25 03:16:59.044
  I1014 03:16:59.044166 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 03:16:59.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:16:59.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:16:59.079
  E1014 03:16:59.719549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:00.721959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:01.722831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:02.723026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:03.723109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:04.723289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:17:05.207
  I1014 03:17:05.211431 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod client-envvars-fadff14f-b9e6-48d6-9001-9707bf458bfc container env3cont: <nil>
  STEP: delete the pod @ 10/14/25 03:17:05.235
  I1014 03:17:05.254598 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4492" for this suite. @ 10/14/25 03:17:05.26
â€¢ [6.223 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 10/14/25 03:17:05.266
  I1014 03:17:05.267052 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/14/25 03:17:05.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:05.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:05.293
  I1014 03:17:05.308007 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4778" for this suite. @ 10/14/25 03:17:05.359
â€¢ [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:394
  STEP: Creating a kubernetes client @ 10/14/25 03:17:05.367
  I1014 03:17:05.367378 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 03:17:05.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:05.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:05.393
  STEP: creating all guestbook components @ 10/14/25 03:17:05.398
  I1014 03:17:05.398949 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1014 03:17:05.404320 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 create -f -'
  I1014 03:17:05.635883 21 builder.go:146] stderr: ""
  I1014 03:17:05.635928 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1014 03:17:05.635979 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1014 03:17:05.636061 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 create -f -'
  E1014 03:17:05.724163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:05.847380 21 builder.go:146] stderr: ""
  I1014 03:17:05.847424 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1014 03:17:05.847478 21 kubectl.go:400] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1014 03:17:05.847564 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 create -f -'
  I1014 03:17:06.085290 21 builder.go:146] stderr: ""
  I1014 03:17:06.085337 21 builder.go:147] stdout: "service/frontend created\n"
  I1014 03:17:06.085407 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1014 03:17:06.086008 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 create -f -'
  I1014 03:17:06.217210 21 builder.go:146] stderr: ""
  I1014 03:17:06.217254 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1014 03:17:06.217326 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1014 03:17:06.217443 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 create -f -'
  I1014 03:17:06.523470 21 builder.go:146] stderr: ""
  I1014 03:17:06.523517 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1014 03:17:06.523591 21 kubectl.go:400] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1014 03:17:06.523707 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 create -f -'
  E1014 03:17:06.724714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:07.034367 21 builder.go:146] stderr: ""
  I1014 03:17:07.034403 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/14/25 03:17:07.034
  I1014 03:17:07.034456 21 kubectl.go:2275] Waiting for all frontend pods to be Running.
  E1014 03:17:07.731139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:08.735335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:09.735425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:10.735572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:11.736313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:12.118704 21 kubectl.go:2279] Waiting for frontend to serve content.
  I1014 03:17:12.148251 21 kubectl.go:2284] Trying to add a new entry to the guestbook.
  I1014 03:17:12.161622 21 kubectl.go:2289] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/14/25 03:17:12.198
  I1014 03:17:12.198305 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 delete --grace-period=0 --force -f -'
  I1014 03:17:12.364479 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:17:12.364525 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/25 03:17:12.364
  I1014 03:17:12.364642 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 delete --grace-period=0 --force -f -'
  I1014 03:17:12.479106 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:17:12.479183 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/25 03:17:12.479
  I1014 03:17:12.479361 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 delete --grace-period=0 --force -f -'
  I1014 03:17:12.615556 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:17:12.615600 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/25 03:17:12.615
  I1014 03:17:12.615760 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 delete --grace-period=0 --force -f -'
  I1014 03:17:12.703682 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:17:12.703728 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/25 03:17:12.703
  I1014 03:17:12.703858 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 delete --grace-period=0 --force -f -'
  E1014 03:17:12.745683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:12.942438 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:17:12.942482 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/14/25 03:17:12.942
  I1014 03:17:12.942609 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-9480 delete --grace-period=0 --force -f -'
  I1014 03:17:13.335024 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 03:17:13.335070 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1014 03:17:13.335187 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9480" for this suite. @ 10/14/25 03:17:13.347
â€¢ [7.995 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 10/14/25 03:17:13.363
  I1014 03:17:13.363113 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:17:13.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:13.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:13.395
  STEP: Setting up server cert @ 10/14/25 03:17:13.428
  E1014 03:17:13.786087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:14.803205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:17:15.469
  STEP: Deploying the webhook pod @ 10/14/25 03:17:15.478
  STEP: Wait for the deployment to be ready @ 10/14/25 03:17:15.506
  I1014 03:17:15.539561 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:17:15.805938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:16.806138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:17:17.555
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:17:17.569
  E1014 03:17:17.806378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:18.570024 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/14/25 03:17:18.577
  STEP: create a pod that should be updated by the webhook @ 10/14/25 03:17:18.621
  E1014 03:17:18.806443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:18.838290 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1074" for this suite. @ 10/14/25 03:17:18.843
  STEP: Destroying namespace "webhook-markers-5840" for this suite. @ 10/14/25 03:17:18.849
â€¢ [5.493 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 10/14/25 03:17:18.856
  I1014 03:17:18.856736 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:17:18.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:18.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:18.883
  STEP: Creating configMap with name projected-configmap-test-volume-956552b3-1f31-41a4-b255-e6394503a983 @ 10/14/25 03:17:18.888
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:17:18.894
  E1014 03:17:19.806918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:20.807118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:17:20.923
  I1014 03:17:20.927114 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-configmaps-7456a059-e372-424e-bc34-be9a8cdab8eb container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:17:20.935
  I1014 03:17:20.951411 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9995" for this suite. @ 10/14/25 03:17:20.956
â€¢ [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 10/14/25 03:17:20.991
  I1014 03:17:20.991887 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename endpointslice @ 10/14/25 03:17:20.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:21.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:21.017
  E1014 03:17:21.809813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:22.810132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 10/14/25 03:17:23.162
  I1014 03:17:23.169538      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 10/14/25 03:17:23.169
  I1014 03:17:23.175766      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/14/25 03:17:23.175
  I1014 03:17:23.182234      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 10/14/25 03:17:23.182
  I1014 03:17:23.201967 21 endpointslice.go:938] EndpointSlice for Service endpointslice-7180/example-named-port not found
  E1014 03:17:23.810231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:24.810370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:25.206629      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:17:25.207310 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7180" for this suite. @ 10/14/25 03:17:25.211
â€¢ [4.227 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 10/14/25 03:17:25.219
  I1014 03:17:25.219999 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubelet-test @ 10/14/25 03:17:25.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:25.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:25.243
  STEP: Waiting for pod completion @ 10/14/25 03:17:25.257
  E1014 03:17:25.811073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:26.811171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:27.812727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:28.812872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:17:29.293192 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4747" for this suite. @ 10/14/25 03:17:29.298
â€¢ [4.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 10/14/25 03:17:29.305
  I1014 03:17:29.305295 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 03:17:29.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:29.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:29.327
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/14/25 03:17:29.332
  E1014 03:17:29.813042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:30.813640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:31.814301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:32.814545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:17:33.36
  I1014 03:17:33.365196 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod pod-0e666938-88c3-428a-8e88-2f1646b78338 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:17:33.391
  I1014 03:17:33.419152 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2794" for this suite. @ 10/14/25 03:17:33.424
â€¢ [4.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 10/14/25 03:17:33.432
  I1014 03:17:33.432297 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename containers @ 10/14/25 03:17:33.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:33.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:33.457
  STEP: Creating a pod to test override arguments @ 10/14/25 03:17:33.46
  E1014 03:17:33.815367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:34.815727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:35.816606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:36.816733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:17:37.489
  I1014 03:17:37.493491 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod client-containers-ffbe18d7-accf-4af5-b268-9a8e42074478 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:17:37.501
  I1014 03:17:37.532633 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1216" for this suite. @ 10/14/25 03:17:37.537
â€¢ [4.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 10/14/25 03:17:37.546
  I1014 03:17:37.547032 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:17:37.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:37.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:37.577
  STEP: Creating configMap with name projected-configmap-test-volume-c100f75c-3d38-4ce1-a72f-895cc0a9e1b2 @ 10/14/25 03:17:37.586
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:17:37.605
  E1014 03:17:37.817492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:38.817548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:39.817613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:40.817812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:17:41.643
  I1014 03:17:41.647116 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-configmaps-ef61ae5e-e912-4a18-a7b2-8a703e291e26 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:17:41.654
  I1014 03:17:41.673089 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1526" for this suite. @ 10/14/25 03:17:41.678
â€¢ [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/14/25 03:17:41.686
  I1014 03:17:41.686587 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename watch @ 10/14/25 03:17:41.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:41.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:41.729
  STEP: creating a watch on configmaps with a certain label @ 10/14/25 03:17:41.733
  STEP: creating a new configmap @ 10/14/25 03:17:41.736
  STEP: modifying the configmap once @ 10/14/25 03:17:41.741
  STEP: changing the label value of the configmap @ 10/14/25 03:17:41.75
  STEP: Expecting to observe a delete notification for the watched object @ 10/14/25 03:17:41.76
  I1014 03:17:41.760449 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6349  9c0058d0-bce0-475b-a196-36575728763a 21508 0 2025-10-14 03:17:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-14 03:17:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:17:41.760707 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6349  9c0058d0-bce0-475b-a196-36575728763a 21509 0 2025-10-14 03:17:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-14 03:17:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:17:41.760926 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6349  9c0058d0-bce0-475b-a196-36575728763a 21510 0 2025-10-14 03:17:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-14 03:17:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/14/25 03:17:41.761
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/14/25 03:17:41.771
  E1014 03:17:41.818772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:42.819049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:43.819181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:44.819231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:45.819453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:46.819577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:47.819736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:48.819869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:49.820068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:50.820603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 10/14/25 03:17:51.772
  STEP: modifying the configmap a third time @ 10/14/25 03:17:51.781
  STEP: deleting the configmap @ 10/14/25 03:17:51.788
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/14/25 03:17:51.793
  I1014 03:17:51.795218 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6349  9c0058d0-bce0-475b-a196-36575728763a 21565 0 2025-10-14 03:17:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-14 03:17:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:17:51.795704 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6349  9c0058d0-bce0-475b-a196-36575728763a 21566 0 2025-10-14 03:17:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-14 03:17:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:17:51.796095 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6349  9c0058d0-bce0-475b-a196-36575728763a 21567 0 2025-10-14 03:17:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-10-14 03:17:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:17:51.796440 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6349" for this suite. @ 10/14/25 03:17:51.8
â€¢ [10.120 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 10/14/25 03:17:51.807
  I1014 03:17:51.807523 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:17:51.808
  E1014 03:17:51.821583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:51.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:51.832
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:17:51.837
  E1014 03:17:52.821908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:53.824364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:54.824613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:55.824696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:17:55.873
  I1014 03:17:55.877081 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-f5fe721b-a8ff-47da-af0f-829720d6dc69 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:17:55.884
  I1014 03:17:55.922274 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2206" for this suite. @ 10/14/25 03:17:55.931
â€¢ [4.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:750
  STEP: Creating a kubernetes client @ 10/14/25 03:17:55.941
  I1014 03:17:55.941084 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:17:55.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:17:55.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:17:55.969
  STEP: Creating a ResourceQuota with terminating scope @ 10/14/25 03:17:55.974
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/25 03:17:55.979
  E1014 03:17:56.825886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:57.825780      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 10/14/25 03:17:57.985
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/25 03:17:57.994
  E1014 03:17:58.825843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:17:59.828314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 10/14/25 03:17:59.998
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/14/25 03:18:00.012
  E1014 03:18:00.829345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:01.830282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/14/25 03:18:02.018
  E1014 03:18:02.830386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:03.830583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/25 03:18:04.022
  STEP: Ensuring resource quota status released the pod usage @ 10/14/25 03:18:04.04
  E1014 03:18:04.830863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:05.830955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 10/14/25 03:18:06.046
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/14/25 03:18:06.063
  E1014 03:18:06.831107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:07.831492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/14/25 03:18:08.069
  E1014 03:18:08.831490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:09.831632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/25 03:18:10.081
  STEP: Ensuring resource quota status released the pod usage @ 10/14/25 03:18:10.099
  E1014 03:18:10.831749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:11.832039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:12.104812 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7092" for this suite. @ 10/14/25 03:18:12.108
â€¢ [16.174 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 10/14/25 03:18:12.117
  I1014 03:18:12.117716 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 03:18:12.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:18:12.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:18:12.139
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/14/25 03:18:12.143
  E1014 03:18:12.833927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:13.834109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:18:14.173
  I1014 03:18:14.176768 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-6121de15-b034-4d97-8c6c-324f9a9e60ac container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:18:14.184
  I1014 03:18:14.201025 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2271" for this suite. @ 10/14/25 03:18:14.206
â€¢ [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 10/14/25 03:18:14.213
  I1014 03:18:14.213552 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename volumeattachment @ 10/14/25 03:18:14.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:18:14.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:18:14.249
  STEP: Create VolumeAttachment "va-e2e-k285c" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 03:18:14.306
  STEP: Patch VolumeAttachment "va-e2e-k285c" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 03:18:14.31
  STEP: Reading "va-e2e-k285c" Status @ 10/14/25 03:18:14.315
  STEP: Patching "va-e2e-k285c" Status @ 10/14/25 03:18:14.318
  I1014 03:18:14.322424 21 volume_attachment.go:224] "va-e2e-k285c" Status.Attached: true
  STEP: Updating "va-e2e-k285c" Status @ 10/14/25 03:18:14.322
  I1014 03:18:14.335791 21 volume_attachment.go:240] "va-e2e-k285c" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-k285c" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 03:18:14.335
  STEP: Confirm deletion of VolumeAttachment "va-e2e-k285c" on node "k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e" @ 10/14/25 03:18:14.342
  I1014 03:18:14.345823 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6025" for this suite. @ 10/14/25 03:18:14.408
â€¢ [0.208 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 10/14/25 03:18:14.421
  I1014 03:18:14.421446 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename namespaces @ 10/14/25 03:18:14.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:18:14.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:18:14.448
  STEP: creating a Namespace @ 10/14/25 03:18:14.451
  STEP: patching the Namespace @ 10/14/25 03:18:14.47
  STEP: get the Namespace and ensuring it has the label @ 10/14/25 03:18:14.476
  I1014 03:18:14.480048 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1334" for this suite. @ 10/14/25 03:18:14.507
  STEP: Destroying namespace "nspatchtest-bb56977e-6044-4d07-a93d-8b7626bbd98c-48" for this suite. @ 10/14/25 03:18:14.515
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1836
  STEP: Creating a kubernetes client @ 10/14/25 03:18:14.524
  I1014 03:18:14.524762 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 03:18:14.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:18:14.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:18:14.547
  STEP: starting the proxy server @ 10/14/25 03:18:14.552
  I1014 03:18:14.553184 21 util.go:541] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-8731 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/14/25 03:18:14.652
  I1014 03:18:14.661983 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1014 03:18:14.664318 21 kubectl.go:2232] kubectl proxy stderr: W1014 03:18:14.632020     649 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I1014 03:18:14.664655 21 kubectl.go:2227] kubectl proxy stdout: Starting to serve on 127.0.0.1:34675

  STEP: Destroying namespace "kubectl-8731" for this suite. @ 10/14/25 03:18:14.667
â€¢ [0.150 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 10/14/25 03:18:14.678
  I1014 03:18:14.678813 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 03:18:14.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:18:14.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:18:14.708
  STEP: Creating pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891 @ 10/14/25 03:18:14.714
  E1014 03:18:14.835416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:15.837952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 03:18:16.738
  I1014 03:18:16.742768 21 container_probe.go:1748] Initial restart count of pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 is 0
  I1014 03:18:16.750324 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:16.839771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:17.839920      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:18.755781 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:18.840163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:19.840292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:20.761343 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:20.841286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:21.841476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:22.766720 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:22.842280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:23.842657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:24.771291 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:24.842803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:25.843004      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:26.779547 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:26.843565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:27.843676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:28.785832 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:28.844364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:29.844735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:30.790989 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:30.844857      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:31.844875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:32.796275 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:32.845804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:33.845989      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:34.800838 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:34.846334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:35.846686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:36.805750 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:36.847269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:37.847608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:38.810987 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:38.847507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:39.847661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:40.817863 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:40.849944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:41.850754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:42.826846 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:42.851509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:43.852512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:44.831866 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:44.853204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:45.853344      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:46.837315 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:46.853805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:47.853965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:48.842998 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:48.854498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:49.854728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:50.847825 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:50.855429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:51.855690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:52.853036 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:52.855680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:53.856064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:54.856178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:54.858485 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:55.856721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:56.856619      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:56.863537 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:57.856757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:18:58.856888      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:18:58.868622 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:18:59.857020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:00.857101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:00.875066 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:01.857212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:02.857376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:02.881309 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:03.857549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:04.857782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:04.886310 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:05.857881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:06.858079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:06.892752 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:07.858243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:08.858597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:08.902440 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:09.858514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:10.858707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:10.921352 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:11.859677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:12.859896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:12.926894 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:13.860085      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:14.860208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:14.936594 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:15.861921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:16.865942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:16.945663 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:17.866812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:18.866925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:18.950507 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:19.867876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:20.868414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:20.954456 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:21.868785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:22.868918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:22.960237 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:23.869542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:24.869740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:24.965967 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:25.870268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:26.870101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:26.972985 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:27.870248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:28.870498      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:28.984211 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:29.870791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:30.870801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:30.991247 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:31.870832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:32.871064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:32.997843 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:33.871210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:34.871329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:35.003025 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:35.871533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:36.872138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:37.009247 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:37.872266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:38.872751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:39.016285 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:39.872811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:40.874050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:41.030133 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:41.873250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:42.873386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:43.036721 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:43.873611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:44.873921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:45.047218 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:45.877979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:46.878134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:47.058625 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:47.878405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:48.878588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:49.065018 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:49.878571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:50.878765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:51.071641 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:51.878886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:52.879101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:53.079940 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:53.879274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:54.879391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:55.086026 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:55.879669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:56.879761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:57.096394 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:57.879937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:19:58.880080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:19:59.101930 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:19:59.880220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:00.880356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:01.108469 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:01.881305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:02.882710      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:03.115946 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:03.882823      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:04.882971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:05.123533 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:05.883001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:06.883366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:07.129988 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:07.884170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:08.884290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:09.135179 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:09.887398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:10.887513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:11.151140 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:11.888526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:12.888616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:13.156468 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:13.889039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:14.889659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:15.165528 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:15.889757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:16.889886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:17.172612 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:17.890802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:18.890937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:19.186385 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:19.891786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:20.891923      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:21.195081 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:21.891983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:22.892208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:23.201016 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:23.892318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:24.892484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:25.206427 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:25.892614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:26.893636      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:27.215132 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:27.894115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:28.894196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:29.220133 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:29.894195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:30.894333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:31.225785 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:31.895156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:32.895335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:33.231816 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:33.895742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:34.895910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:35.237467 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:35.896204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:36.896197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:37.243509 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:37.896317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:38.896851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:39.251347 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:39.897481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:40.897874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:41.256588 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:41.897992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:42.898198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:43.261330 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:43.898416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:44.898634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:45.266644 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:45.898659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:46.898763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:47.294385 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:47.899531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:48.899810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:49.303282 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:49.899838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:50.899887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:51.312990 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:51.900066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:52.900201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:53.319626 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:53.900451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:54.900455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:55.324791 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:55.900577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:56.900709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:57.330409 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:57.901074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:20:58.901176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:20:59.335353 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:20:59.901317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:00.901464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:01.341258 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:01.902288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:02.902688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:03.347657 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:03.903606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:04.903722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:05.352953 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:05.903841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:06.903941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:07.359017 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:07.905022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:08.909937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:09.364864 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:09.910832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:10.910992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:11.379486 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:11.913321      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:12.913775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:13.385176 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:13.913915      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:14.917128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:15.390688 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:15.921985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:16.922949      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:17.401327 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:17.923030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:18.923188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:19.406225 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:19.924830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:20.925008      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:21.411508 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:21.925088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:22.925239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:23.417145 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:23.925915      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:24.926047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:25.422952 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:25.927048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:26.927528      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:27.429027 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:27.927245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:28.927372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:29.436993 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:29.927491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:30.927660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:31.442469 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:31.928794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:32.928842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:33.447739 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:33.929631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:34.930140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:35.454186 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:35.930193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:36.930205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:37.458289 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:37.930394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:38.930507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:39.467557 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:39.930568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:40.931075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:41.473096 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:41.930892      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:42.946063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:43.478121 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:43.947108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:44.947458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:45.483288 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:45.948177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:46.948268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:47.495328 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:47.948877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:48.948986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:49.504010 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:49.949914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:50.949991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:51.511121 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:51.950973      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:52.951132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:53.518126 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:53.951978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:54.952088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:55.525148 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:55.952487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:56.952670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:57.532529 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:57.953396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:21:58.952794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:21:59.537393 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:21:59.952909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:00.953073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:01.542891 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:01.953983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:02.954087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:03.555586 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:03.954229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:04.954343      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:05.561136 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:05.955223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:06.955739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:07.566082 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:07.956203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:08.957902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:09.572266 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:09.958204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:10.958273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:11.578235 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:11.959146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:12.959207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:13.585822 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:13.959336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:14.963441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:15.591435 21 container_probe.go:1758] Get pod test-grpc-1a5e800d-70ae-455a-a7c0-2a2f93e19f05 in namespace container-probe-7891
  E1014 03:22:15.969050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:16.969197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/14/25 03:22:17.592
  I1014 03:22:17.605489 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7891" for this suite. @ 10/14/25 03:22:17.618
â€¢ [242.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:239
  STEP: Creating a kubernetes client @ 10/14/25 03:22:17.632
  I1014 03:22:17.632205 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:22:17.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:17.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:17.667
  STEP: Counting existing ResourceQuota @ 10/14/25 03:22:17.674
  E1014 03:22:17.971168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:18.971298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:19.971369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:20.972315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:21.976486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/25 03:22:22.681
  STEP: Ensuring resource quota status is calculated @ 10/14/25 03:22:22.687
  E1014 03:22:22.976629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:23.976740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 10/14/25 03:22:24.692
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/14/25 03:22:24.705
  E1014 03:22:24.977396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:25.978066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/14/25 03:22:26.71
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/14/25 03:22:26.714
  STEP: Ensuring a pod cannot update its resource requirements @ 10/14/25 03:22:26.717
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/14/25 03:22:26.723
  E1014 03:22:26.978190      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:27.978269      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/25 03:22:28.728
  STEP: Ensuring resource quota status released the pod usage @ 10/14/25 03:22:28.738
  E1014 03:22:28.978919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:29.979051      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:30.743556 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5204" for this suite. @ 10/14/25 03:22:30.748
â€¢ [13.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 10/14/25 03:22:30.758
  I1014 03:22:30.758531 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:22:30.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:30.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:30.782
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:22:30.787
  E1014 03:22:30.979587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:31.979724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:22:32.812
  I1014 03:22:32.816891 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-689e5fbb-963c-4c7d-b9fb-0b76c87e5609 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:22:32.838
  I1014 03:22:32.865395 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6507" for this suite. @ 10/14/25 03:22:32.871
â€¢ [2.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 10/14/25 03:22:32.886
  I1014 03:22:32.891184 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:22:32.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:32.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:32.921
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:22:32.928
  E1014 03:22:32.980765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:33.980957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:34.981675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:35.981775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:22:36.961
  I1014 03:22:36.965374 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-0aab2d8b-fc72-4737-9616-19bda878b193 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:22:36.974
  E1014 03:22:36.981944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:36.993330 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1423" for this suite. @ 10/14/25 03:22:36.998
â€¢ [4.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:196
  STEP: Creating a kubernetes client @ 10/14/25 03:22:37.006
  I1014 03:22:37.006159 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename servicecidr @ 10/14/25 03:22:37.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:37.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:37.032
  STEP: creating @ 10/14/25 03:22:37.036
  STEP: patching @ 10/14/25 03:22:37.045
  STEP: updating @ 10/14/25 03:22:37.052
  STEP: getting @ 10/14/25 03:22:37.061
  STEP: listing @ 10/14/25 03:22:37.065
  STEP: watching @ 10/14/25 03:22:37.069
  STEP: deleting @ 10/14/25 03:22:37.07
  STEP: deleting a collection @ 10/14/25 03:22:37.076
  I1014 03:22:37.086368 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-232" for this suite. @ 10/14/25 03:22:37.099
â€¢ [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 10/14/25 03:22:37.107
  I1014 03:22:37.107419 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 03:22:37.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:37.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:37.132
  STEP: Creating Indexed job @ 10/14/25 03:22:37.138
  STEP: Ensuring job reaches completions @ 10/14/25 03:22:37.144
  E1014 03:22:37.982757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:38.982850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:39.983028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:40.983239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:41.983376      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:42.983548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:43.983881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:44.983880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 10/14/25 03:22:45.221
  I1014 03:22:45.227466 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2001" for this suite. @ 10/14/25 03:22:45.232
â€¢ [8.132 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 10/14/25 03:22:45.239
  I1014 03:22:45.239745 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 03:22:45.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:45.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:45.262
  STEP: set up a multi version CRD @ 10/14/25 03:22:45.266
  I1014 03:22:45.267212 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:22:45.984179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:46.984195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:47.984668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 10/14/25 03:22:48.906
  STEP: check the unserved version gets removed @ 10/14/25 03:22:48.925
  E1014 03:22:48.985665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/14/25 03:22:49.782
  E1014 03:22:49.986265      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:50.987264      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:51.987414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:52.717537 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6364" for this suite. @ 10/14/25 03:22:52.729
â€¢ [7.498 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 10/14/25 03:22:52.737
  I1014 03:22:52.738000 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/14/25 03:22:52.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:52.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:52.759
  I1014 03:22:52.764465 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:22:52.988281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:22:53.320252 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6915" for this suite. @ 10/14/25 03:22:53.329
â€¢ [0.601 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/14/25 03:22:53.339
  I1014 03:22:53.339079 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pods @ 10/14/25 03:22:53.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:53.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:53.358
  I1014 03:22:53.363006 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: creating the pod @ 10/14/25 03:22:53.363
  STEP: submitting the pod to kubernetes @ 10/14/25 03:22:53.363
  E1014 03:22:53.988358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:54.988460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 10/14/25 03:22:55.393
  I1014 03:22:55.416115 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-903" for this suite. @ 10/14/25 03:22:55.421
â€¢ [2.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 10/14/25 03:22:55.432
  I1014 03:22:55.433598 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 03:22:55.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:22:55.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:22:55.46
  STEP: create the rc @ 10/14/25 03:22:55.522
  I1014 03:22:55.529270      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E1014 03:22:55.988712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:56.989575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/14/25 03:22:57.552
  STEP: wait for the rc to be deleted @ 10/14/25 03:22:57.563
  E1014 03:22:57.990287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:58.990398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:22:59.996001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:00.996138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:01.996236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/14/25 03:23:02.568
  E1014 03:23:02.997267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:03.997417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:04.997530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:05.997650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:06.997822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:07.997904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:08.998193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:09.998293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:10.998473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:11.998738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:12.998859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:13.998959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:14.999041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:15.999161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:17.000214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:18.001285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:19.017899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:20.018777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:21.019609      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:22.020101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:23.020281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:24.020370      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:25.020487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:26.020714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:27.020835      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:28.020958      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:29.021188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:30.021372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:31.021476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:32.021601      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/14/25 03:23:32.573
  W1014 03:23:32.578193      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1014 03:23:32.578623 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1014 03:23:32.582805 21 delete.go:95] Deleting pod "simpletest.rc-45vkm" in namespace "gc-5324"
  I1014 03:23:32.593543 21 delete.go:95] Deleting pod "simpletest.rc-6l6rr" in namespace "gc-5324"
  I1014 03:23:32.614026 21 delete.go:95] Deleting pod "simpletest.rc-7g9pg" in namespace "gc-5324"
  I1014 03:23:32.641845 21 delete.go:95] Deleting pod "simpletest.rc-89pmz" in namespace "gc-5324"
  I1014 03:23:32.652026 21 delete.go:95] Deleting pod "simpletest.rc-8pvzz" in namespace "gc-5324"
  I1014 03:23:32.670921 21 delete.go:95] Deleting pod "simpletest.rc-9hgrk" in namespace "gc-5324"
  I1014 03:23:32.690439 21 delete.go:95] Deleting pod "simpletest.rc-fsvhw" in namespace "gc-5324"
  I1014 03:23:32.721229 21 delete.go:95] Deleting pod "simpletest.rc-khm8w" in namespace "gc-5324"
  I1014 03:23:32.741835 21 delete.go:95] Deleting pod "simpletest.rc-khpdf" in namespace "gc-5324"
  I1014 03:23:32.754132 21 delete.go:95] Deleting pod "simpletest.rc-lthh2" in namespace "gc-5324"
  I1014 03:23:32.767061 21 delete.go:95] Deleting pod "simpletest.rc-mrqmk" in namespace "gc-5324"
  I1014 03:23:32.824099 21 delete.go:95] Deleting pod "simpletest.rc-qftt9" in namespace "gc-5324"
  I1014 03:23:32.908614 21 delete.go:95] Deleting pod "simpletest.rc-t8dfb" in namespace "gc-5324"
  I1014 03:23:32.927482 21 delete.go:95] Deleting pod "simpletest.rc-vxcl4" in namespace "gc-5324"
  I1014 03:23:32.964458 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5324" for this suite. @ 10/14/25 03:23:32.971
â€¢ [37.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/14/25 03:23:32.98
  I1014 03:23:32.980134 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename subpath @ 10/14/25 03:23:32.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:23:33.016
  E1014 03:23:33.021957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:23:33.022
  STEP: Setting up data @ 10/14/25 03:23:33.028
  STEP: Creating pod pod-subpath-test-configmap-kvp6 @ 10/14/25 03:23:33.055
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/25 03:23:33.055
  E1014 03:23:34.022263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:35.022398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:36.022583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:37.022730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:38.025857      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:39.026004      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:40.026131      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:41.029474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:42.029564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:43.030003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:44.030064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:45.030110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:46.030324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:47.030455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:48.030574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:49.030834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:50.031124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:51.031178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:52.031300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:53.031422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:54.031518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:55.031641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:56.031753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:57.031913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:23:57.147
  I1014 03:23:57.151703 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-subpath-test-configmap-kvp6 container test-container-subpath-configmap-kvp6: <nil>
  STEP: delete the pod @ 10/14/25 03:23:57.161
  STEP: Deleting pod pod-subpath-test-configmap-kvp6 @ 10/14/25 03:23:57.187
  I1014 03:23:57.187771 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-kvp6" in namespace "subpath-7454"
  I1014 03:23:57.191671 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7454" for this suite. @ 10/14/25 03:23:57.197
â€¢ [24.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 10/14/25 03:23:57.209
  I1014 03:23:57.209518 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 03:23:57.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:23:57.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:23:57.244
  I1014 03:23:57.249759 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:23:58.032099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:23:59.032198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:23:59.787541      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I1014 03:23:59.787689      21 warnings.go:110] "Warning: unknown field \"beta\""
  I1014 03:23:59.787769      21 warnings.go:110] "Warning: unknown field \"delta\""
  I1014 03:23:59.787846      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1014 03:23:59.788146      21 warnings.go:110] "Warning: unknown field \"gamma\""
  E1014 03:24:00.032842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:00.336023 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1327" for this suite. @ 10/14/25 03:24:00.34
â€¢ [3.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 10/14/25 03:24:00.347
  I1014 03:24:00.347428 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:24:00.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:24:00.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:24:00.37
  STEP: Creating configMap configmap-1445/configmap-test-d38ce739-aa57-43f3-91c2-6e915ff1dc8f @ 10/14/25 03:24:00.376
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:24:00.381
  E1014 03:24:01.032971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:02.033574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:03.033662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:04.033848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:24:04.413
  I1014 03:24:04.416984 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-46a8dc15-802b-4303-bfd8-2eecd465b8cf container env-test: <nil>
  STEP: delete the pod @ 10/14/25 03:24:04.427
  I1014 03:24:04.444939 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1445" for this suite. @ 10/14/25 03:24:04.449
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/14/25 03:24:04.456
  I1014 03:24:04.456159 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename events @ 10/14/25 03:24:04.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:24:04.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:24:04.483
  STEP: creating a test event @ 10/14/25 03:24:04.49
  STEP: listing events in all namespaces @ 10/14/25 03:24:04.495
  STEP: listing events in test namespace @ 10/14/25 03:24:04.501
  STEP: listing events with field selection filtering on source @ 10/14/25 03:24:04.506
  STEP: listing events with field selection filtering on reportingController @ 10/14/25 03:24:04.51
  STEP: getting the test event @ 10/14/25 03:24:04.513
  STEP: patching the test event @ 10/14/25 03:24:04.517
  STEP: getting the test event @ 10/14/25 03:24:04.526
  STEP: updating the test event @ 10/14/25 03:24:04.531
  STEP: getting the test event @ 10/14/25 03:24:04.539
  STEP: deleting the test event @ 10/14/25 03:24:04.543
  STEP: listing events in all namespaces @ 10/14/25 03:24:04.552
  STEP: listing events in test namespace @ 10/14/25 03:24:04.556
  I1014 03:24:04.561690 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5911" for this suite. @ 10/14/25 03:24:04.57
â€¢ [0.121 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 10/14/25 03:24:04.576
  I1014 03:24:04.576726 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename aggregator @ 10/14/25 03:24:04.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:24:04.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:24:04.6
  I1014 03:24:04.605229 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Registering the sample API server. @ 10/14/25 03:24:04.606
  E1014 03:24:05.040446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:05.517329 21 helpers.go:184] Found ClusterRoles; assuming RBAC is enabled.
  I1014 03:24:05.556218 21 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1014 03:24:06.043447      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:07.043759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:07.632268 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:08.044136      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:09.045756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:09.642377 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:10.065801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:11.065898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:11.637242 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:12.066112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:13.066535      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:13.637030 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:14.066678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:15.069932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:15.642452 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:16.069960      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:17.070069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:17.638179 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:18.070235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:19.070330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:19.637588 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:20.070409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:21.070510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:21.637264 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:22.071507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:23.071631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:23.638411 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:24.072559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:25.072860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:25.637491 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:26.074270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:27.076551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:27.638802 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6fc8d58968\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:24:28.078822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:29.079314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:29.770063 21 aggregator.go:756] Waited 121.112107ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/14/25 03:24:29.858
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/14/25 03:24:29.867
  STEP: List APIServices @ 10/14/25 03:24:29.877
  I1014 03:24:29.884421 21 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/14/25 03:24:29.887
  I1014 03:24:29.904601 21 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/14/25 03:24:29.905
  I1014 03:24:29.912410 21 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 29, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/14/25 03:24:29.912
  I1014 03:24:29.916890 21 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-10-14 03:24:29 +0000 UTC Passed all checks passed}
  I1014 03:24:29.917293 21 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1014 03:24:29.917533 21 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/14/25 03:24:29.917
  I1014 03:24:29.926876 21 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1594371560" @ 10/14/25 03:24:29.927
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/14/25 03:24:29.956
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/14/25 03:24:29.988
  STEP: Patch APIService Status @ 10/14/25 03:24:29.995
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/14/25 03:24:30.008
  I1014 03:24:30.016553 21 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-10-14 03:24:29 +0000 UTC Passed all checks passed}
  I1014 03:24:30.016972 21 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1014 03:24:30.017248 21 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1014 03:24:30.017523 21 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 10/14/25 03:24:30.017
  STEP: Confirm that the generated APIService has been deleted @ 10/14/25 03:24:30.028
  I1014 03:24:30.028416 21 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I1014 03:24:30.031636 21 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1014 03:24:30.032026 21 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  E1014 03:24:30.079530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:24:30.170648 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5305" for this suite. @ 10/14/25 03:24:30.173
â€¢ [25.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 10/14/25 03:24:30.182
  I1014 03:24:30.182139 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:24:30.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:24:30.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:24:30.2
  STEP: Creating configMap with name configmap-test-volume-map-95bf3210-3c18-48b1-ab38-7b9d7abca138 @ 10/14/25 03:24:30.203
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:24:30.207
  E1014 03:24:31.082381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:32.082554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:33.083201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:34.083306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:24:34.241
  I1014 03:24:34.244624 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-4a59cc3b-3ea0-490d-b50c-04c02af36083 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:24:34.253
  I1014 03:24:34.271029 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4503" for this suite. @ 10/14/25 03:24:34.275
â€¢ [4.100 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 10/14/25 03:24:34.282
  I1014 03:24:34.282099 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:24:34.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:24:34.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:24:34.317
  STEP: Creating a pod to test downward api env vars @ 10/14/25 03:24:34.321
  E1014 03:24:35.083481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:36.083765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:24:36.344
  I1014 03:24:36.348890 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downward-api-25c56703-6df3-404e-a952-e4f7c0c542af container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 03:24:36.358
  I1014 03:24:36.374992 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7746" for this suite. @ 10/14/25 03:24:36.38
â€¢ [2.105 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/14/25 03:24:36.387
  I1014 03:24:36.387425 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename init-container @ 10/14/25 03:24:36.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:24:36.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:24:36.416
  STEP: creating the pod @ 10/14/25 03:24:36.42
  I1014 03:24:36.420993 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1014 03:24:37.084027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:38.084575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:39.084574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:40.084703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:41.084770      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:42.084899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:43.085179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:44.085156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:45.085234      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:46.085306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:47.085574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:48.085713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:49.085758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:50.086107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:51.086164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:52.086277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:53.086347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:54.087268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:55.087235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:56.087235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:57.087355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:58.087779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:24:59.088125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:00.088275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:01.088348      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:02.089798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:03.089912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:04.090028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:05.090159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:06.091060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:07.092021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:08.092063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:09.092094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:10.092212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:11.092349      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:12.092985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:13.093080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:14.093196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:15.093796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:16.093919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:17.094058      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:18.094167      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:19.094272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:20.094392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:21.094511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:25:21.278070 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-f944d7a7-abfb-4f44-bb5f-c46ba66d3555", GenerateName:"", Namespace:"init-container-742", SelfLink:"", UID:"9a9e0973-3dcb-47be-8eb0-e3b4891165d0", ResourceVersion:"22935", Generation:1, CreationTimestamp:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"420966012"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006d92870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 25, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006d928b8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-xd82p", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00562c580), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xd82p", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xd82p", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-xd82p", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003cf4d30), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0039de480), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003cf4db0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003cf4dd0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003cf4dd8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003cf4ddc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc006f280a0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{ObservedGeneration:0, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 37, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:0, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:0, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.1.10", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.1.10"}}, PodIP:"10.42.1.56", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.56"}}, StartTime:time.Date(2025, time.October, 14, 3, 24, 36, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003a91dc0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003a91e30)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://bb675e3bdff0bb9e1e0483eb19b551a91eff5326ae3c6ca21263cb4b8374df38", Started:(*bool)(0xc003cf4e8a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0004b9410), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xd82p", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc006f280d0)}}, User:(*v1.ContainerUser)(0xc000656100), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00562c5e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003cf4eb5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xd82p", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc006f280e0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00562c5c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc003cf4e5f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-xd82p", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc006f280b0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1014 03:25:21.278394 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-742" for this suite. @ 10/14/25 03:25:21.286
â€¢ [44.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 10/14/25 03:25:21.293
  I1014 03:25:21.293682 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:25:21.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:21.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:21.315
  STEP: Creating configMap with name configmap-test-upd-db2c4d80-aae3-445b-a7df-5c5c99451a55 @ 10/14/25 03:25:21.39
  STEP: Creating the pod @ 10/14/25 03:25:21.398
  E1014 03:25:22.094662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:23.094767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 10/14/25 03:25:23.425
  STEP: Waiting for pod with binary data @ 10/14/25 03:25:23.433
  I1014 03:25:23.440731 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7176" for this suite. @ 10/14/25 03:25:23.444
â€¢ [2.157 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 10/14/25 03:25:23.451
  I1014 03:25:23.451871 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sysctl @ 10/14/25 03:25:23.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:23.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:23.472
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/14/25 03:25:23.477
  I1014 03:25:23.484575 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-556" for this suite. @ 10/14/25 03:25:23.545
â€¢ [0.100 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/14/25 03:25:23.552
  I1014 03:25:23.553003 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:25:23.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:23.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:23.574
  STEP: Creating secret with name projected-secret-test-e4993c06-51d2-4ec4-868f-1d92bef99d77 @ 10/14/25 03:25:23.578
  STEP: Creating a pod to test consume secrets @ 10/14/25 03:25:23.584
  E1014 03:25:24.096644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:25.097137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:25:25.618
  I1014 03:25:25.623091 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-secrets-c2d8a575-952d-4fe1-a711-836264685826 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 03:25:25.632
  I1014 03:25:25.652697 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1604" for this suite. @ 10/14/25 03:25:25.658
â€¢ [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 10/14/25 03:25:25.666
  I1014 03:25:25.666916 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 03:25:25.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:25.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:25.701
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/14/25 03:25:25.707
  I1014 03:25:25.708239 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:25:26.097010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:27.097086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:25:27.471011 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:25:28.097281      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:29.097279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:30.098108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:31.099051      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:32.099773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:33.106425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:25:33.184296 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7904" for this suite. @ 10/14/25 03:25:33.192
â€¢ [7.532 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 10/14/25 03:25:33.199
  I1014 03:25:33.199423 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename security-context @ 10/14/25 03:25:33.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:33.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:33.224
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/14/25 03:25:33.228
  E1014 03:25:34.107570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:35.107881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:36.107886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:37.107998      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:25:37.265
  I1014 03:25:37.269473 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod security-context-5c7de4ae-eea6-4a60-ab26-e22dcbed58d4 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:25:37.296
  I1014 03:25:37.316937 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6950" for this suite. @ 10/14/25 03:25:37.321
â€¢ [4.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 10/14/25 03:25:37.329
  I1014 03:25:37.329398 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 03:25:37.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:37.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:37.359
  STEP: create the rc @ 10/14/25 03:25:37.363
  I1014 03:25:37.369978      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E1014 03:25:38.108154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:39.108424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:40.108583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:41.108616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:42.108796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/14/25 03:25:42.376
  STEP: wait for all pods to be garbage collected @ 10/14/25 03:25:42.387
  E1014 03:25:43.108841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:44.108969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:45.109364      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:46.114279      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:47.114411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/14/25 03:25:47.397
  W1014 03:25:47.403521      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1014 03:25:47.403562 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1014 03:25:47.403742 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6372" for this suite. @ 10/14/25 03:25:47.408
â€¢ [10.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 10/14/25 03:25:47.418
  I1014 03:25:47.418586 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:25:47.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:47.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:47.441
  STEP: Creating a pod to test downward api env vars @ 10/14/25 03:25:47.447
  E1014 03:25:48.114499      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:49.115429      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:50.115646      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:51.115941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:25:51.479
  I1014 03:25:51.486331 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downward-api-7b923871-16fb-492a-8400-91fc3f3efe32 container dapi-container: <nil>
  STEP: delete the pod @ 10/14/25 03:25:51.501
  I1014 03:25:51.523312 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9022" for this suite. @ 10/14/25 03:25:51.528
â€¢ [4.119 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 10/14/25 03:25:51.537
  I1014 03:25:51.537495 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/25 03:25:51.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:25:51.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:25:51.574
  I1014 03:25:51.610878 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1014 03:25:52.116628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:53.116889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:54.116914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:55.117024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:56.117723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:57.117898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:58.118194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:25:59.118523      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:00.119060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:01.119929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:02.120367      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:03.121199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:04.122098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:05.122233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:06.122966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:07.123068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:08.123263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:09.123411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:10.133852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:11.134083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:12.135141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:13.135183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:14.135875      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:15.135981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:16.137843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:17.138903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:18.139057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:19.139196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:20.139353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:21.139447      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:22.139625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:23.139763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:24.140722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:25.140935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:26.141044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:27.141543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:28.141884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:29.142273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:30.142286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:31.142393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:32.143034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:33.143178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:34.144090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:35.144225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:36.144317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:37.144524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:38.145550      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:39.145698      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:40.146677      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:41.146626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:42.146814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:43.155717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:44.156664      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:45.156766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:46.157768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:47.158164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:48.158371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:49.158604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:50.158540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:51.158953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:26:51.615721 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/14/25 03:26:51.62
  I1014 03:26:51.621229 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/14/25 03:26:51.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:26:51.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:26:51.643
  I1014 03:26:51.672821 21 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1014 03:26:51.678642 21 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 10/14/25 03:26:51.721
  STEP: Removing a custom resource @ 10/14/25 03:26:51.734
  I1014 03:26:51.744581 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4834" for this suite. @ 10/14/25 03:26:51.75
  I1014 03:26:51.757894 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4107" for this suite. @ 10/14/25 03:26:51.85
â€¢ [60.322 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 10/14/25 03:26:51.86
  I1014 03:26:51.860948 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replication-controller @ 10/14/25 03:26:51.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:26:51.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:26:51.891
  STEP: Creating replication controller my-hostname-basic-b18a003a-eb58-415a-a8e1-4f5c426cc541 @ 10/14/25 03:26:51.896
  I1014 03:26:51.909092 21 resource.go:81] Pod name my-hostname-basic-b18a003a-eb58-415a-a8e1-4f5c426cc541: Found 0 pods out of 1
  E1014 03:26:52.159984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:53.159969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:54.160490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:55.160595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:56.161178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:26:56.914886 21 resource.go:81] Pod name my-hostname-basic-b18a003a-eb58-415a-a8e1-4f5c426cc541: Found 1 pods out of 1
  I1014 03:26:56.915029 21 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-b18a003a-eb58-415a-a8e1-4f5c426cc541" are running
  I1014 03:26:56.921483 21 rc.go:525] Pod "my-hostname-basic-b18a003a-eb58-415a-a8e1-4f5c426cc541-6lk8j" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-14 03:26:52 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-14 03:26:51 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-14 03:26:52 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-14 03:26:52 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:0 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-10-14 03:26:51 +0000 UTC Reason: Message:}])
  I1014 03:26:56.922055 21 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/14/25 03:26:56.922
  I1014 03:26:56.952736 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5817" for this suite. @ 10/14/25 03:26:56.96
â€¢ [5.113 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 10/14/25 03:26:56.975
  I1014 03:26:56.975295 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 03:26:56.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:26:56.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:26:56.995
  STEP: Creating projection with secret that has name secret-emptykey-test-60d2396b-b0be-489d-b13b-fa4f57ace9ee @ 10/14/25 03:26:56.999
  I1014 03:26:57.002140 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7328" for this suite. @ 10/14/25 03:26:57.06
â€¢ [0.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 10/14/25 03:26:57.066
  I1014 03:26:57.067127 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename discovery @ 10/14/25 03:26:57.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:26:57.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:26:57.089
  STEP: Setting up server cert @ 10/14/25 03:26:57.097
  E1014 03:26:57.171267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:26:58.171406      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 10/14/25 03:26:58.752
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/14/25 03:26:58.755
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/14/25 03:26:58.756
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/14/25 03:26:58.757
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/14/25 03:26:58.758
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/14/25 03:26:58.76
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/14/25 03:26:58.761
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/14/25 03:26:58.763
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/14/25 03:26:58.764
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/14/25 03:26:58.766
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/14/25 03:26:58.767
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/14/25 03:26:58.768
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/14/25 03:26:58.77
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/14/25 03:26:58.771
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/14/25 03:26:58.773
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/14/25 03:26:58.774
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/14/25 03:26:58.776
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/14/25 03:26:58.777
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/14/25 03:26:58.779
  I1014 03:26:58.780836 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7646" for this suite. @ 10/14/25 03:26:58.785
â€¢ [1.725 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 10/14/25 03:26:58.793
  I1014 03:26:58.793272 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/25 03:26:58.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:26:58.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:26:58.814
  STEP: Performing setup for networking test in namespace pod-network-test-4829 @ 10/14/25 03:26:58.819
  STEP: creating a selector @ 10/14/25 03:26:58.819
  STEP: Creating the service pods in kubernetes @ 10/14/25 03:26:58.819
  I1014 03:26:58.819525 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1014 03:26:59.171639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:00.171853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:01.172852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:02.177916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:03.178568      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:04.178781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:05.179322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:06.180022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:07.180194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:08.180352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:09.181093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:10.182456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/14/25 03:27:10.971
  E1014 03:27:11.182137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:12.182109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:12.994363 21 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1014 03:27:12.994793 21 networking.go:42] Breadth first check of 10.42.0.142 on host 192.168.1.11...
  I1014 03:27:12.998372 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.64:9080/dial?request=hostname&protocol=http&host=10.42.0.142&port=8083&tries=1'] Namespace:pod-network-test-4829 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:27:12.998780 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:27:12.999088 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4829/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.64%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.142%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1014 03:27:13.122984 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:27:13.123244 21 utils.go:355] Waiting for responses: map[]
  I1014 03:27:13.123664 21 utils.go:359] reached 10.42.0.142 after 0/1 tries
  I1014 03:27:13.123930 21 networking.go:42] Breadth first check of 10.42.1.63 on host 192.168.1.10...
  I1014 03:27:13.128280 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.64:9080/dial?request=hostname&protocol=http&host=10.42.1.63&port=8083&tries=1'] Namespace:pod-network-test-4829 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:27:13.128315 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:27:13.128375 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4829/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.64%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.63%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E1014 03:27:13.182159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:13.224468 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:27:13.224688 21 utils.go:355] Waiting for responses: map[]
  I1014 03:27:13.224807 21 utils.go:359] reached 10.42.1.63 after 0/1 tries
  I1014 03:27:13.224887 21 networking.go:53] Going to retry 0 out of 2 pods....
  I1014 03:27:13.225079 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4829" for this suite. @ 10/14/25 03:27:13.24
â€¢ [14.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 10/14/25 03:27:13.247
  I1014 03:27:13.247640 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename discovery @ 10/14/25 03:27:13.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:27:13.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:27:13.275
  STEP: Setting up server cert @ 10/14/25 03:27:13.284
  E1014 03:27:14.191728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:14.699130 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1014 03:27:14.700627 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1014 03:27:14.700662 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1014 03:27:14.700673 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1014 03:27:14.700684 21 discovery.go:139] Checking APIGroup: apps
  I1014 03:27:14.701953 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1014 03:27:14.701980 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I1014 03:27:14.701992 21 discovery.go:154] apps/v1 matches apps/v1
  I1014 03:27:14.702005 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I1014 03:27:14.702962 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1014 03:27:14.702987 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1014 03:27:14.702997 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1014 03:27:14.703007 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1014 03:27:14.703945 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1014 03:27:14.704191 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1014 03:27:14.704209 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1014 03:27:14.704219 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1014 03:27:14.705461 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1014 03:27:14.705837 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1014 03:27:14.706071 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1014 03:27:14.706290 21 discovery.go:139] Checking APIGroup: autoscaling
  I1014 03:27:14.707534 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1014 03:27:14.707880 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1014 03:27:14.708109 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1014 03:27:14.708328 21 discovery.go:139] Checking APIGroup: batch
  I1014 03:27:14.709539 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1014 03:27:14.709836 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I1014 03:27:14.710061 21 discovery.go:154] batch/v1 matches batch/v1
  I1014 03:27:14.710278 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1014 03:27:14.711645 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1014 03:27:14.711929 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1014 03:27:14.712156 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1014 03:27:14.712374 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1014 03:27:14.713745 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1014 03:27:14.714073 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1014 03:27:14.714344 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1014 03:27:14.714603 21 discovery.go:139] Checking APIGroup: policy
  I1014 03:27:14.716027 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1014 03:27:14.716442 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I1014 03:27:14.716691 21 discovery.go:154] policy/v1 matches policy/v1
  I1014 03:27:14.716926 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1014 03:27:14.718254 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1014 03:27:14.719146 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1014 03:27:14.719549 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1014 03:27:14.719874 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1014 03:27:14.721521 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1014 03:27:14.721546 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1014 03:27:14.721557 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1014 03:27:14.721568 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1014 03:27:14.727292 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1014 03:27:14.727817 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1014 03:27:14.728161 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1014 03:27:14.728456 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1014 03:27:14.730857 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1014 03:27:14.731348 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1014 03:27:14.731635 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1014 03:27:14.731945 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1014 03:27:14.734008 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1014 03:27:14.734451 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1014 03:27:14.734707 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1014 03:27:14.735021 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1014 03:27:14.736860 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1014 03:27:14.736887 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1014 03:27:14.736899 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1014 03:27:14.736914 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I1014 03:27:14.738731 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1014 03:27:14.739152 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1014 03:27:14.739419 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1014 03:27:14.739667 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1014 03:27:14.741171 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1014 03:27:14.741563 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1014 03:27:14.741923 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1014 03:27:14.742273 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1014 03:27:14.743819 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1014 03:27:14.743842 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I1014 03:27:14.744160 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1014 03:27:14.744515 21 discovery.go:139] Checking APIGroup: helm.cattle.io
  I1014 03:27:14.746184 21 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I1014 03:27:14.746209 21 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I1014 03:27:14.746219 21 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I1014 03:27:14.746428 21 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I1014 03:27:14.747749 21 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I1014 03:27:14.748136 21 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I1014 03:27:14.748416 21 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I1014 03:27:14.748728 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1014 03:27:14.750283 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1014 03:27:14.750308 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1014 03:27:14.750720 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1014 03:27:14.751171 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1815" for this suite. @ 10/14/25 03:27:14.756
â€¢ [1.524 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 10/14/25 03:27:14.773
  I1014 03:27:14.773978 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/25 03:27:14.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:27:14.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:27:14.812
  STEP: Performing setup for networking test in namespace pod-network-test-8502 @ 10/14/25 03:27:14.824
  STEP: creating a selector @ 10/14/25 03:27:14.824
  STEP: Creating the service pods in kubernetes @ 10/14/25 03:27:14.824
  I1014 03:27:14.824733 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1014 03:27:15.193892      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:16.194160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:17.197483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:18.197866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:19.198068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:20.198195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:21.198354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:22.198748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:23.198723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:24.199002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:25.200021      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:26.200121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/14/25 03:27:26.949
  E1014 03:27:27.200921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:28.200961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:28.970926 21 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1014 03:27:28.971390 21 networking.go:42] Breadth first check of 10.42.0.143 on host 192.168.1.11...
  I1014 03:27:28.974457 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.66:9080/dial?request=hostname&protocol=udp&host=10.42.0.143&port=8081&tries=1'] Namespace:pod-network-test-8502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:27:28.974830 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:27:28.975111 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.66%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.143%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1014 03:27:29.054499 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:27:29.055195 21 utils.go:355] Waiting for responses: map[]
  I1014 03:27:29.055438 21 utils.go:359] reached 10.42.0.143 after 0/1 tries
  I1014 03:27:29.055727 21 networking.go:42] Breadth first check of 10.42.1.65 on host 192.168.1.10...
  I1014 03:27:29.060473 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.66:9080/dial?request=hostname&protocol=udp&host=10.42.1.65&port=8081&tries=1'] Namespace:pod-network-test-8502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:27:29.060508 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:27:29.060577 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.66%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.65%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I1014 03:27:29.162217 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:27:29.163483 21 utils.go:355] Waiting for responses: map[]
  I1014 03:27:29.163918 21 utils.go:359] reached 10.42.1.65 after 0/1 tries
  I1014 03:27:29.164139 21 networking.go:53] Going to retry 0 out of 2 pods....
  I1014 03:27:29.164486 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8502" for this suite. @ 10/14/25 03:27:29.169
â€¢ [14.402 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:168
  STEP: Creating a kubernetes client @ 10/14/25 03:27:29.176
  I1014 03:27:29.176406 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:27:29.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:27:29.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:27:29.197
  E1014 03:27:29.200938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Discovering how many secrets are in namespace by default @ 10/14/25 03:27:29.203
  E1014 03:27:30.201361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:31.202032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:32.202164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:33.202461      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:34.205657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/14/25 03:27:34.216
  E1014 03:27:35.205773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:36.206163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:37.206577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:38.206519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:39.206926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/25 03:27:39.221
  STEP: Ensuring resource quota status is calculated @ 10/14/25 03:27:39.228
  E1014 03:27:40.206828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:41.209929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 10/14/25 03:27:41.238
  STEP: Ensuring resource quota status captures secret creation @ 10/14/25 03:27:41.254
  E1014 03:27:42.210043      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:43.210148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 10/14/25 03:27:43.259
  STEP: Ensuring resource quota status released usage @ 10/14/25 03:27:43.265
  E1014 03:27:44.210533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:45.210644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:45.270671 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1858" for this suite. @ 10/14/25 03:27:45.273
â€¢ [16.107 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 10/14/25 03:27:45.288
  I1014 03:27:45.288527 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 03:27:45.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:27:45.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:27:45.313
  I1014 03:27:45.319200 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:27:46.211453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:47.215678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:47.855614      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I1014 03:27:47.855759      21 warnings.go:110] "Warning: unknown field \"beta\""
  I1014 03:27:47.855841      21 warnings.go:110] "Warning: unknown field \"delta\""
  I1014 03:27:47.855920      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1014 03:27:47.855998      21 warnings.go:110] "Warning: unknown field \"gamma\""
  E1014 03:27:48.216314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:48.397537 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5676" for this suite. @ 10/14/25 03:27:48.401
â€¢ [3.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 10/14/25 03:27:48.408
  I1014 03:27:48.408497 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:27:48.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:27:48.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:27:48.431
  STEP: Setting up server cert @ 10/14/25 03:27:48.456
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:27:49.13
  STEP: Deploying the webhook pod @ 10/14/25 03:27:49.139
  STEP: Wait for the deployment to be ready @ 10/14/25 03:27:49.151
  I1014 03:27:49.191532 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:27:49.217328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:50.217830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:27:51.204
  E1014 03:27:51.218082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:27:51.229
  E1014 03:27:52.218272      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:27:52.230913 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/14/25 03:27:52.235
  STEP: create a pod that should be denied by the webhook @ 10/14/25 03:27:52.256
  STEP: create a pod that causes the webhook to hang @ 10/14/25 03:27:52.287
  E1014 03:27:53.218427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:54.218661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:55.218750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:56.219298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:57.219413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:58.220099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:27:59.220230      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:00.220310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:01.221214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:02.221340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 10/14/25 03:28:02.31
  STEP: create a configmap that should be admitted by the webhook @ 10/14/25 03:28:02.35
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/14/25 03:28:02.376
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/14/25 03:28:02.386
  STEP: create a namespace that bypass the webhook @ 10/14/25 03:28:02.393
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/14/25 03:28:02.409
  I1014 03:28:02.547010 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-985" for this suite. @ 10/14/25 03:28:02.553
  STEP: Destroying namespace "webhook-markers-3211" for this suite. @ 10/14/25 03:28:02.559
  STEP: Destroying namespace "exempted-namespace-2757" for this suite. @ 10/14/25 03:28:02.564
â€¢ [14.162 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:458
  STEP: Creating a kubernetes client @ 10/14/25 03:28:02.57
  I1014 03:28:02.570992 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:28:02.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:28:02.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:28:02.601
  STEP: Counting existing ResourceQuota @ 10/14/25 03:28:02.606
  E1014 03:28:03.221446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:04.221651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:05.221808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:06.221927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:07.222012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/25 03:28:07.618
  STEP: Ensuring resource quota status is calculated @ 10/14/25 03:28:07.629
  E1014 03:28:08.222832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:09.223082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/14/25 03:28:09.635
  STEP: Ensuring resource quota status captures replicaset creation @ 10/14/25 03:28:09.647
  E1014 03:28:10.223241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:11.225569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/14/25 03:28:11.662
  STEP: Ensuring resource quota status released usage @ 10/14/25 03:28:11.685
  E1014 03:28:12.225699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:13.233922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:28:13.693436 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4759" for this suite. @ 10/14/25 03:28:13.701
â€¢ [11.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 10/14/25 03:28:13.714
  I1014 03:28:13.714192 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 03:28:13.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:28:13.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:28:13.743
  I1014 03:28:13.759828 21 service_accounts.go:646] created pod
  E1014 03:28:14.234323      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:15.237934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:16.241925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:17.242060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:28:17.798
  E1014 03:28:18.243024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:19.243312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:20.243369      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:21.244152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:22.244317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:23.244686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:24.244797      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:25.245125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:26.245291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:27.245241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:28.245953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:29.246081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:30.246402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:31.247149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:32.247297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:33.247433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:34.247501      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:35.248471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:36.249112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:37.249278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:38.249318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:39.249931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:40.249733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:41.253069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:42.253216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:43.253317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:44.253876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:45.253997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:46.261832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:47.262045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:28:47.798440 21 service_accounts.go:652] polling logs
  I1014 03:28:47.827147 21 service_accounts.go:662] Pod logs: 
  I1014 03:28:14.343535       1 log.go:245] OK: Got token
  I1014 03:28:14.343770       1 log.go:245] validating with in-cluster discovery
  I1014 03:28:14.344459       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1014 03:28:14.344598       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5701:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003f3930), NotBefore:(*jwt.NumericDate)(0xc0003f3a20), IssuedAt:(*jwt.NumericDate)(0xc0003f3940), ID:"e3dd36ef-eb80-481a-98ab-f4db9781e4c0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5701", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4eaa2ba0-cfdd-43ec-bced-c04a3cee4d98"}}}
  I1014 03:28:14.372808       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1014 03:28:14.379404       1 log.go:245] OK: Validated signature on JWT
  I1014 03:28:14.379646       1 log.go:245] OK: Got valid claims from token!
  I1014 03:28:14.379747       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5701:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000133d8), NotBefore:(*jwt.NumericDate)(0xc000013400), IssuedAt:(*jwt.NumericDate)(0xc0000133e0), ID:"e3dd36ef-eb80-481a-98ab-f4db9781e4c0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5701", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4eaa2ba0-cfdd-43ec-bced-c04a3cee4d98"}}}

  I1014 03:28:47.827756 21 service_accounts.go:666] completed pod
  I1014 03:28:47.833941 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5701" for this suite. @ 10/14/25 03:28:47.839
â€¢ [34.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/14/25 03:28:47.847
  I1014 03:28:47.847820 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename watch @ 10/14/25 03:28:47.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:28:47.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:28:47.871
  STEP: creating a watch on configmaps with label A @ 10/14/25 03:28:47.876
  STEP: creating a watch on configmaps with label B @ 10/14/25 03:28:47.88
  STEP: creating a watch on configmaps with label A or B @ 10/14/25 03:28:47.882
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/14/25 03:28:47.884
  I1014 03:28:47.890334 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23675 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:28:47.890603 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23675 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/14/25 03:28:47.89
  I1014 03:28:47.900185 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23676 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:28:47.900450 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23676 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/14/25 03:28:47.9
  I1014 03:28:47.909589 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23677 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:28:47.909908 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23677 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/14/25 03:28:47.91
  I1014 03:28:47.916033 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23678 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:28:47.916258 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6500  24e4c681-836a-4779-932b-1af128c7ec52 23678 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/14/25 03:28:47.916
  I1014 03:28:47.921754 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6500  0be6728a-a1da-449e-b640-986bf8a1e12b 23679 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:28:47.922013 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6500  0be6728a-a1da-449e-b640-986bf8a1e12b 23679 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1014 03:28:48.263026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:49.263164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:50.263625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:51.264240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:52.264377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:53.264575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:54.264690      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:55.264902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:56.265221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:57.265558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/14/25 03:28:57.929
  I1014 03:28:57.940106 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6500  0be6728a-a1da-449e-b640-986bf8a1e12b 23699 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:28:57.940637 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6500  0be6728a-a1da-449e-b640-986bf8a1e12b 23699 0 2025-10-14 03:28:47 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-10-14 03:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1014 03:28:58.265779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:28:59.265722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:00.265852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:01.266266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:02.266411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:03.266485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:04.266681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:05.266814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:06.267212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:07.267355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:07.941387 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6500" for this suite. @ 10/14/25 03:29:07.946
â€¢ [20.104 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 10/14/25 03:29:07.952
  I1014 03:29:07.952850 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/25 03:29:07.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:07.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:07.972
  STEP: Deleting RuntimeClass runtimeclass-4448-delete-me @ 10/14/25 03:29:07.982
  STEP: Waiting for the RuntimeClass to disappear @ 10/14/25 03:29:07.987
  I1014 03:29:07.997456 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4448" for this suite. @ 10/14/25 03:29:08.047
â€¢ [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/14/25 03:29:08.057
  I1014 03:29:08.057712 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 03:29:08.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:08.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:08.091
  STEP: Creating secret with name secret-test-c6be9d79-0094-46f9-bcc6-3ca847aa9c46 @ 10/14/25 03:29:08.099
  STEP: Creating a pod to test consume secrets @ 10/14/25 03:29:08.122
  E1014 03:29:08.268278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:09.268494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:29:10.174
  I1014 03:29:10.177929 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-b0495c05-18a4-48df-a999-dd5b0811811b container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 03:29:10.185
  I1014 03:29:10.199747 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5830" for this suite. @ 10/14/25 03:29:10.204
â€¢ [2.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 10/14/25 03:29:10.216
  I1014 03:29:10.216696 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 03:29:10.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:10.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:10.251
  E1014 03:29:10.268452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:11.269212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:12.269869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 10/14/25 03:29:12.302
  I1014 03:29:12.302921 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5492 pod-service-account-81ee5847-0bf6-4b67-9be4-e2ae46b02218 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 10/14/25 03:29:12.488
  I1014 03:29:12.488535 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5492 pod-service-account-81ee5847-0bf6-4b67-9be4-e2ae46b02218 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/14/25 03:29:12.651
  I1014 03:29:12.651158 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5492 pod-service-account-81ee5847-0bf6-4b67-9be4-e2ae46b02218 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1014 03:29:12.781887 21 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-5492"
  I1014 03:29:12.784357 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5492" for this suite. @ 10/14/25 03:29:12.788
â€¢ [2.582 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/14/25 03:29:12.8
  I1014 03:29:12.800975 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 03:29:12.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:12.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:12.832
  STEP: Creating secret with name secret-test-f8f55ff7-87f2-4fac-a85f-dc5c917f5d39 @ 10/14/25 03:29:12.839
  STEP: Creating a pod to test consume secrets @ 10/14/25 03:29:12.843
  E1014 03:29:13.269901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:14.270026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:15.270621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:16.285918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:29:16.882
  I1014 03:29:16.889683 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-0c7081f9-43f2-4b64-9cb2-ebfb84399bd8 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 03:29:16.909
  I1014 03:29:16.935843 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9565" for this suite. @ 10/14/25 03:29:16.95
â€¢ [4.160 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 10/14/25 03:29:16.96
  I1014 03:29:16.960884 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:29:16.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:16.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:16.995
  STEP: Creating configMap with name configmap-test-volume-map-7869a79d-a4a9-4a29-a310-630fa4ea75d6 @ 10/14/25 03:29:17.002
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:29:17.007
  E1014 03:29:17.315753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:18.317922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:19.321866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:20.322023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:29:21.037
  I1014 03:29:21.040633 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-0ffa96c0-154a-4a8a-b4df-890008145217 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:29:21.048
  I1014 03:29:21.079137 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5909" for this suite. @ 10/14/25 03:29:21.084
â€¢ [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 10/14/25 03:29:21.091
  I1014 03:29:21.091372 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/14/25 03:29:21.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:21.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:21.119
  STEP: Creating 50 configmaps @ 10/14/25 03:29:21.123
  E1014 03:29:21.322362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 10/14/25 03:29:21.377
  I1014 03:29:21.620726 21 resource.go:81] Pod name wrapped-volume-race-ca83477f-fe26-4afb-94eb-5901c7e242f6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/14/25 03:29:21.621
  E1014 03:29:22.322418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:23.322720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:24.322880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:25.323044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 10/14/25 03:29:25.715
  I1014 03:29:25.738293 21 resource.go:81] Pod name wrapped-volume-race-929fa250-bc4b-4ecb-a93f-b00d669096f8: Found 1 pods out of 5
  E1014 03:29:26.324081      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:27.325111      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:28.325270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:29.325444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:30.325782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:30.745191 21 resource.go:81] Pod name wrapped-volume-race-929fa250-bc4b-4ecb-a93f-b00d669096f8: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/14/25 03:29:30.745
  STEP: Creating RC which spawns configmap-volume pods @ 10/14/25 03:29:30.772
  I1014 03:29:30.806004 21 resource.go:81] Pod name wrapped-volume-race-7c049409-64db-4417-9d75-c2444d690592: Found 1 pods out of 5
  E1014 03:29:31.326175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:32.326289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:33.326878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:34.326503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:35.326571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:35.814363 21 resource.go:81] Pod name wrapped-volume-race-7c049409-64db-4417-9d75-c2444d690592: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/14/25 03:29:35.814
  STEP: deleting ReplicationController wrapped-volume-race-7c049409-64db-4417-9d75-c2444d690592 in namespace emptydir-wrapper-9947, will wait for the garbage collector to delete the pods @ 10/14/25 03:29:35.835
  I1014 03:29:35.902050 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-7c049409-64db-4417-9d75-c2444d690592 took: 7.286969ms
  I1014 03:29:36.003034 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-7c049409-64db-4417-9d75-c2444d690592 pods took: 100.912204ms
  E1014 03:29:36.327375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:37.328430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-929fa250-bc4b-4ecb-a93f-b00d669096f8 in namespace emptydir-wrapper-9947, will wait for the garbage collector to delete the pods @ 10/14/25 03:29:38.118
  I1014 03:29:38.182249 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-929fa250-bc4b-4ecb-a93f-b00d669096f8 took: 8.783023ms
  I1014 03:29:38.284659 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-929fa250-bc4b-4ecb-a93f-b00d669096f8 pods took: 102.415008ms
  E1014 03:29:38.328480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:39.328549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-ca83477f-fe26-4afb-94eb-5901c7e242f6 in namespace emptydir-wrapper-9947, will wait for the garbage collector to delete the pods @ 10/14/25 03:29:40.086
  I1014 03:29:40.154789 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-ca83477f-fe26-4afb-94eb-5901c7e242f6 took: 9.426764ms
  I1014 03:29:40.255568 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-ca83477f-fe26-4afb-94eb-5901c7e242f6 pods took: 100.776102ms
  E1014 03:29:40.329451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:41.330284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/14/25 03:29:41.957
  E1014 03:29:42.330729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:42.463923 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9947" for this suite. @ 10/14/25 03:29:42.469
â€¢ [21.386 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 10/14/25 03:29:42.479
  I1014 03:29:42.479577 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replication-controller @ 10/14/25 03:29:42.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:42.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:42.515
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/14/25 03:29:42.524
  E1014 03:29:43.330975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:44.331502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 10/14/25 03:29:44.561
  STEP: Then the orphan pod is adopted @ 10/14/25 03:29:44.566
  E1014 03:29:45.332430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:45.578332 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1447" for this suite. @ 10/14/25 03:29:45.59
â€¢ [3.120 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 10/14/25 03:29:45.601
  I1014 03:29:45.602255 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:29:45.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:45.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:45.634
  STEP: Creating the pod @ 10/14/25 03:29:45.641
  E1014 03:29:46.333358      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:47.333251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:48.212567 21 pod_client.go:173] Successfully updated pod "labelsupdate20a9b97a-8e8b-4545-b3d6-d1ba0352c82f"
  E1014 03:29:48.333994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:49.334087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:29:50.231137 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4649" for this suite. @ 10/14/25 03:29:50.236
â€¢ [4.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/14/25 03:29:50.248
  I1014 03:29:50.248895 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename subpath @ 10/14/25 03:29:50.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:29:50.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:29:50.275
  STEP: Setting up data @ 10/14/25 03:29:50.282
  STEP: Creating pod pod-subpath-test-projected-dvqg @ 10/14/25 03:29:50.295
  STEP: Creating a pod to test atomic-volume-subpath @ 10/14/25 03:29:50.295
  E1014 03:29:50.335007      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:51.335914      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:52.335654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:53.335796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:54.336492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:55.338492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:56.338510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:57.338644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:58.338884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:29:59.339091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:00.339484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:01.340163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:02.341822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:03.341962      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:04.342117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:05.342300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:06.343181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:07.343729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:08.343661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:09.343816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:10.344026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:11.344288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:12.344263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:30:12.373
  I1014 03:30:12.377770 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-subpath-test-projected-dvqg container test-container-subpath-projected-dvqg: <nil>
  STEP: delete the pod @ 10/14/25 03:30:12.387
  STEP: Deleting pod pod-subpath-test-projected-dvqg @ 10/14/25 03:30:12.406
  I1014 03:30:12.407110 21 delete.go:62] Deleting pod "pod-subpath-test-projected-dvqg" in namespace "subpath-7062"
  I1014 03:30:12.411380 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7062" for this suite. @ 10/14/25 03:30:12.416
â€¢ [22.174 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 10/14/25 03:30:12.423
  I1014 03:30:12.423195 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename gc @ 10/14/25 03:30:12.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:12.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:12.451
  STEP: create the deployment @ 10/14/25 03:30:12.456
  I1014 03:30:12.461540      21 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/14/25 03:30:12.461
  STEP: delete the deployment @ 10/14/25 03:30:12.469
  STEP: wait for all rs to be garbage collected @ 10/14/25 03:30:12.489
  STEP: expected 0 rs, got 1 rs @ 10/14/25 03:30:12.52
  STEP: expected 0 pods, got 2 pods @ 10/14/25 03:30:12.552
  STEP: Gathering metrics @ 10/14/25 03:30:13.003
  W1014 03:30:13.010140      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1014 03:30:13.010545 21 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1014 03:30:13.015258 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8536" for this suite. @ 10/14/25 03:30:13.019
â€¢ [0.607 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/14/25 03:30:13.03
  I1014 03:30:13.030358 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/14/25 03:30:13.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:13.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:13.064
  STEP: creating @ 10/14/25 03:30:13.068
  STEP: getting @ 10/14/25 03:30:13.091
  STEP: listing in namespace @ 10/14/25 03:30:13.103
  STEP: patching @ 10/14/25 03:30:13.116
  STEP: deleting @ 10/14/25 03:30:13.125
  I1014 03:30:13.137231 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1492" for this suite. @ 10/14/25 03:30:13.14
â€¢ [0.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 10/14/25 03:30:13.147
  I1014 03:30:13.147982 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 03:30:13.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:13.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:13.173
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/14/25 03:30:13.177
  E1014 03:30:13.345245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:14.345813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:15.345909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:16.349816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:30:17.225
  I1014 03:30:17.235863 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-8f04aa60-13c5-41a9-b7a2-0ec7a12b8446 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:30:17.253
  I1014 03:30:17.305958 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2110" for this suite. @ 10/14/25 03:30:17.326
  E1014 03:30:17.349899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
â€¢ [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 10/14/25 03:30:17.377
  I1014 03:30:17.377918 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 03:30:17.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:17.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:17.411
  I1014 03:30:17.428127 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:30:18.352193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:19.352472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:20.355984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:20.511850 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6394" for this suite. @ 10/14/25 03:30:20.516
â€¢ [3.146 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 10/14/25 03:30:20.525
  I1014 03:30:20.525859 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:30:20.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:20.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:20.549
  STEP: Creating configMap with name configmap-test-volume-a417e8d7-11e0-411d-91ed-f76007c40278 @ 10/14/25 03:30:20.554
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:30:20.559
  E1014 03:30:21.356785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:22.357138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:30:22.582
  I1014 03:30:22.587385 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-configmaps-c22023e3-8c06-4b98-803a-da9c4d2cbb5d container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:30:22.595
  I1014 03:30:22.613176 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9525" for this suite. @ 10/14/25 03:30:22.618
â€¢ [2.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 10/14/25 03:30:22.625
  I1014 03:30:22.625311 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename cronjob @ 10/14/25 03:30:22.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:22.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:22.653
  STEP: Creating a cronjob @ 10/14/25 03:30:22.657
  STEP: creating @ 10/14/25 03:30:22.657
  STEP: getting @ 10/14/25 03:30:22.663
  STEP: listing @ 10/14/25 03:30:22.667
  STEP: watching @ 10/14/25 03:30:22.671
  I1014 03:30:22.671270 21 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 10/14/25 03:30:22.672
  STEP: cluster-wide watching @ 10/14/25 03:30:22.676
  I1014 03:30:22.676790 21 cronjob.go:407] starting watch
  STEP: patching @ 10/14/25 03:30:22.678
  STEP: updating @ 10/14/25 03:30:22.685
  I1014 03:30:22.698673 21 cronjob.go:431] waiting for watch events with expected annotations
  I1014 03:30:22.698713 21 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 10/14/25 03:30:22.698
  STEP: updating /status @ 10/14/25 03:30:22.704
  STEP: get /status @ 10/14/25 03:30:22.713
  STEP: deleting @ 10/14/25 03:30:22.719
  STEP: deleting a collection @ 10/14/25 03:30:22.74
  I1014 03:30:22.752120 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5313" for this suite. @ 10/14/25 03:30:22.758
â€¢ [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/14/25 03:30:22.765
  I1014 03:30:22.765844 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:30:22.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:22.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:22.792
  STEP: Creating configMap with name configmap-projected-all-test-volume-cc840e39-255a-4123-9973-56c2ecd145f1 @ 10/14/25 03:30:22.803
  STEP: Creating secret with name secret-projected-all-test-volume-1b88e2ef-3a41-42a7-8751-abc74ae42eb5 @ 10/14/25 03:30:22.81
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/14/25 03:30:22.817
  I1014 03:30:22.826775      21 warnings.go:110] "Warning: volume \"podinfo\" (Projected): overlapping paths: \"podname\" (DownwardAPI) with \"podname\" (DownwardAPI)"
  E1014 03:30:23.357302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:24.358531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:25.358936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:26.359107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:30:26.85
  I1014 03:30:26.855878 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod projected-volume-4e88cf27-0980-40ad-9c02-27d874727afe container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 03:30:26.864
  I1014 03:30:26.885394 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7743" for this suite. @ 10/14/25 03:30:26.894
â€¢ [4.136 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 10/14/25 03:30:26.902
  I1014 03:30:26.902439 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:30:26.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:26.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:26.93
  STEP: Setting up server cert @ 10/14/25 03:30:26.956
  E1014 03:30:27.377750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:30:28.045
  STEP: Deploying the webhook pod @ 10/14/25 03:30:28.058
  STEP: Wait for the deployment to be ready @ 10/14/25 03:30:28.068
  I1014 03:30:28.104876 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:30:28.378583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:29.378833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:30:30.124
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:30:30.138
  E1014 03:30:30.379619      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:31.138287 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/14/25 03:30:31.153
  STEP: create the configmap with a random name @ 10/14/25 03:30:31.182
  STEP: verify the configmap is mutated @ 10/14/25 03:30:31.218
  STEP: create the configmap with 'skip-me' name @ 10/14/25 03:30:31.218
  I1014 03:30:31.310970 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-901" for this suite. @ 10/14/25 03:30:31.317
  STEP: Destroying namespace "webhook-markers-4711" for this suite. @ 10/14/25 03:30:31.323
â€¢ [4.435 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 10/14/25 03:30:31.337
  I1014 03:30:31.337798 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename endpointslice @ 10/14/25 03:30:31.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:31.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:31.364
  E1014 03:30:31.380066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:31.393761      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:30:31.434888      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:30:31.439858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9818" for this suite. @ 10/14/25 03:30:31.443
â€¢ [0.116 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 10/14/25 03:30:31.454
  I1014 03:30:31.455058 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/14/25 03:30:31.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:31.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:31.477
  I1014 03:30:31.487138 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4628" for this suite. @ 10/14/25 03:30:31.544
â€¢ [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 10/14/25 03:30:31.57
  I1014 03:30:31.571025 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/14/25 03:30:31.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:31.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:31.595
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/14/25 03:30:31.6
  I1014 03:30:31.601469 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:30:32.381223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:32.916294 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:30:33.382304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:34.396086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:35.396216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:36.397207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:37.433713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:38.434794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:38.984833 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7412" for this suite. @ 10/14/25 03:30:38.993
â€¢ [7.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 10/14/25 03:30:39.003
  I1014 03:30:39.003808 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/14/25 03:30:39.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:39.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:39.026
  I1014 03:30:39.032541 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:30:39.435731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:40.435686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:41.436345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:42.091029 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1561" for this suite. @ 10/14/25 03:30:42.097
â€¢ [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 10/14/25 03:30:42.107
  I1014 03:30:42.108149 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/14/25 03:30:42.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:42.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:42.137
  STEP: getting /apis @ 10/14/25 03:30:42.148
  STEP: getting /apis/admissionregistration.k8s.io @ 10/14/25 03:30:42.16
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/14/25 03:30:42.162
  STEP: creating @ 10/14/25 03:30:42.164
  STEP: getting @ 10/14/25 03:30:42.206
  STEP: listing @ 10/14/25 03:30:42.226
  STEP: watching @ 10/14/25 03:30:42.232
  I1014 03:30:42.232183 21 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 10/14/25 03:30:42.233
  STEP: updating @ 10/14/25 03:30:42.242
  I1014 03:30:42.422896 21 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 10/14/25 03:30:42.423
  E1014 03:30:42.436584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/14/25 03:30:42.448
  STEP: updating /status @ 10/14/25 03:30:42.455
  STEP: deleting @ 10/14/25 03:30:42.482
  STEP: deleting a collection @ 10/14/25 03:30:42.496
  I1014 03:30:42.517861 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9861" for this suite. @ 10/14/25 03:30:42.536
â€¢ [0.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 10/14/25 03:30:42.547
  I1014 03:30:42.547639 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/25 03:30:42.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:42.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:42.586
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/25 03:30:42.656
  E1014 03:30:43.436748      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:44.437056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/14/25 03:30:44.688
  E1014 03:30:45.437214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:46.437913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/14/25 03:30:46.711
  STEP: delete the pod with lifecycle hook @ 10/14/25 03:30:46.719
  E1014 03:30:47.438292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:48.438404      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:30:48.733179 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-840" for this suite. @ 10/14/25 03:30:48.741
â€¢ [6.210 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 10/14/25 03:30:48.758
  I1014 03:30:48.759020 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/14/25 03:30:48.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:30:48.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:30:48.784
  I1014 03:30:48.790119 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1014 03:30:49.438782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:50.438734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:51.441446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:52.441993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:53.442110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:54.442225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:55.442350      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:56.443329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:57.443363      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:58.443506      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:30:59.452177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:00.452322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:01.452872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:02.453012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:03.453816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:04.454212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:05.455072      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:06.455852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:07.456027      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:08.456723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:09.457773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:10.457886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:11.458102      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:12.458971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:13.459083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:14.459184      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:15.460556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:16.461862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:17.462744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:18.465956      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:19.466916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:20.467539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:21.468182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:22.468678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:23.468946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:24.468952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:25.469064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:26.469116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:27.471298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:28.471491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:29.471715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:30.471979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:31.472417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:32.472520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:33.473483      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:34.473582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:35.473745      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:36.474649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:37.474603      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:38.474966      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:39.475957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:40.476328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:41.476926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:42.477093      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:43.477223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:44.477419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:45.478460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:46.479470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:47.479575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:48.479813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:31:48.790536 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I1014 03:31:48.795465 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 10/14/25 03:31:48.795
  I1014 03:31:48.824564 21 taints.go:463] Pod1 is running on k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm. Tainting Node
  E1014 03:31:49.480087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:50.480291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:31:51.052515 21 taints.go:471] Pod2 is running on k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/14/25 03:31:51.052
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/25 03:31:51.067
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/14/25 03:31:51.083
  E1014 03:31:51.481198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:52.481352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:53.481458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:54.481660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:55.481854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:56.482850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:31:56.585837 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E1014 03:31:57.482979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:58.483022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:31:59.483157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:00.483338      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:01.485931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:02.486036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:03.486178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:04.486341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:05.486591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:06.487260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:07.487425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:08.487591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:09.487728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:10.488476      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:11.489341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:12.489457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:13.490084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:14.489878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:15.493929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:16.497859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:16.618044 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/14/25 03:32:16.64
  I1014 03:32:16.654397 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8149" for this suite. @ 10/14/25 03:32:16.69
â€¢ [87.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 10/14/25 03:32:16.728
  I1014 03:32:16.729161 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename disruption @ 10/14/25 03:32:16.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:16.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:16.793
  STEP: Creating a kubernetes client @ 10/14/25 03:32:16.8
  I1014 03:32:16.800823 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename disruption-2 @ 10/14/25 03:32:16.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:16.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:16.847
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:32:16.863
  E1014 03:32:17.498122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:18.498035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:32:18.877
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:32:18.894
  E1014 03:32:19.501754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:20.501907      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 10/14/25 03:32:20.899
  STEP: listing a collection of PDBs in namespace disruption-827 @ 10/14/25 03:32:20.904
  STEP: deleting a collection of PDBs @ 10/14/25 03:32:20.907
  STEP: Waiting for the PDB collection to be deleted @ 10/14/25 03:32:20.919
  I1014 03:32:20.924202 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6812" for this suite. @ 10/14/25 03:32:20.928
  I1014 03:32:20.934607 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-827" for this suite. @ 10/14/25 03:32:21.029
â€¢ [4.308 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1003
  STEP: Creating a kubernetes client @ 10/14/25 03:32:21.037
  I1014 03:32:21.037957 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:32:21.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:21.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:21.063
  STEP: Creating a ResourceQuota @ 10/14/25 03:32:21.068
  STEP: Getting a ResourceQuota @ 10/14/25 03:32:21.073
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/14/25 03:32:21.082
  STEP: Patching the ResourceQuota @ 10/14/25 03:32:21.086
  STEP: Deleting a Collection of ResourceQuotas @ 10/14/25 03:32:21.096
  STEP: Verifying the deleted ResourceQuota @ 10/14/25 03:32:21.104
  I1014 03:32:21.106866 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7024" for this suite. @ 10/14/25 03:32:21.123
â€¢ [0.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 10/14/25 03:32:21.131
  I1014 03:32:21.131359 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:32:21.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:21.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:21.153
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:32:21.157
  E1014 03:32:21.502105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:22.502239      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:23.502381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:24.502469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:32:25.192
  I1014 03:32:25.196594 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-957278d9-1fb5-4d77-bc45-63b3850b4294 container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:32:25.213
  I1014 03:32:25.230085 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8443" for this suite. @ 10/14/25 03:32:25.235
â€¢ [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 10/14/25 03:32:25.265
  I1014 03:32:25.265933 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 03:32:25.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:25.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:25.314
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/14/25 03:32:25.327
  E1014 03:32:25.502541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:26.503368      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:27.503719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:28.503847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:32:29.374
  I1014 03:32:29.378560 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-a64702e7-ba27-4682-a5dd-12f565cb342b container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:32:29.386
  I1014 03:32:29.408548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1328" for this suite. @ 10/14/25 03:32:29.414
â€¢ [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1387
  STEP: Creating a kubernetes client @ 10/14/25 03:32:29.422
  I1014 03:32:29.427409 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:32:29.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:29.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:29.452
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5007 @ 10/14/25 03:32:29.455
  STEP: changing the ExternalName service to type=ClusterIP @ 10/14/25 03:32:29.461
  E1014 03:32:29.504120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:29.524435 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 03:32:30.504275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:31.504299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:31.531996 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.October, 14, 3, 32, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 32, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.October, 14, 3, 32, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.October, 14, 3, 32, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"externalname-service-65bd887696\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1014 03:32:32.504319      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:33.504674      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:33.532423 21 resource.go:361] Creating new exec pod
  E1014 03:32:34.506146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:35.506289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:35.579697 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-5007 exec execpodfdllx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1014 03:32:35.762367 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.108.155) 80 port [tcp/http] succeeded!\n"
  I1014 03:32:35.762408 21 builder.go:147] stdout: ""
  E1014 03:32:36.506417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:36.579715 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-5007 exec execpodfdllx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1014 03:32:36.774852 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.108.155) 80 port [tcp/http] succeeded!\n"
  I1014 03:32:36.774901 21 builder.go:147] stdout: "externalname-service-65bd887696-nbrvr"
  I1014 03:32:36.774979 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-5007 exec execpodfdllx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.108.155 80'
  I1014 03:32:36.934222 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.108.155 80\nConnection to 10.43.108.155 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I1014 03:32:36.934270 21 builder.go:147] stdout: "externalname-service-65bd887696-lb6m7"
  I1014 03:32:36.934350 21 service.go:1396] Cleaning up the ExternalName to ClusterIP test service
  I1014 03:32:36.949428 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5007" for this suite. @ 10/14/25 03:32:36.972
â€¢ [7.557 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 10/14/25 03:32:36.98
  I1014 03:32:36.980820 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:32:36.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:37.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:37.008
  STEP: Setting up server cert @ 10/14/25 03:32:37.035
  E1014 03:32:37.511340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:32:38.23
  STEP: Deploying the webhook pod @ 10/14/25 03:32:38.239
  STEP: Wait for the deployment to be ready @ 10/14/25 03:32:38.253
  I1014 03:32:38.270693 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:32:38.511496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:39.511731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:32:40.284
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:32:40.295
  E1014 03:32:40.512947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:41.297057 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1014 03:32:41.303696 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:32:41.513135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3192-crds.webhook.example.com via the AdmissionRegistration API @ 10/14/25 03:32:41.817
  I1014 03:32:41.842417 21 webhook.go:2704] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/14/25 03:32:41.972
  E1014 03:32:42.513297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:43.513537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:44.513613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:32:44.606214 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3611" for this suite. @ 10/14/25 03:32:44.616
  STEP: Destroying namespace "webhook-markers-3212" for this suite. @ 10/14/25 03:32:44.626
â€¢ [7.653 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 10/14/25 03:32:44.64
  I1014 03:32:44.641503 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename pod-network-test @ 10/14/25 03:32:44.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:32:44.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:32:44.667
  STEP: Performing setup for networking test in namespace pod-network-test-6850 @ 10/14/25 03:32:44.671
  STEP: creating a selector @ 10/14/25 03:32:44.671
  STEP: Creating the service pods in kubernetes @ 10/14/25 03:32:44.671
  I1014 03:32:44.671690 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1014 03:32:45.514475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:46.515151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:47.515257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:48.515414      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:49.515790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:50.515719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:51.516628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:52.516576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:53.517534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:54.517918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:55.518778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:56.519640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:57.519790      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:32:58.519929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/14/25 03:32:58.827
  E1014 03:32:59.520890      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:00.521008      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:33:00.887456 21 utils.go:802] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1014 03:33:00.887895 21 utils.go:495] Going to poll 10.42.0.156 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1014 03:33:00.893194 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.156:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6850 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:00.893629 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:00.893984 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6850/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.156%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I1014 03:33:01.023989 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:01.024545 21 utils.go:512] Found all 1 expected endpoints: [netserver-0]
  I1014 03:33:01.024793 21 utils.go:495] Going to poll 10.42.1.93 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1014 03:33:01.029431 21 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.93:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6850 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:01.029903 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:01.030272 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6850/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.93%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I1014 03:33:01.108487 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:01.109003 21 utils.go:512] Found all 1 expected endpoints: [netserver-1]
  I1014 03:33:01.109357 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6850" for this suite. @ 10/14/25 03:33:01.114
â€¢ [16.481 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 10/14/25 03:33:01.123
  I1014 03:33:01.123711 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename lease-test @ 10/14/25 03:33:01.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:33:01.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:33:01.147
  I1014 03:33:01.219160 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8926" for this suite. @ 10/14/25 03:33:01.222
â€¢ [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 10/14/25 03:33:01.232
  I1014 03:33:01.232359 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/14/25 03:33:01.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:33:01.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:33:01.27
  STEP: Setting up the test @ 10/14/25 03:33:01.275
  STEP: Creating hostNetwork=false pod @ 10/14/25 03:33:01.276
  E1014 03:33:01.521727      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:02.521828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 10/14/25 03:33:03.313
  E1014 03:33:03.522120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:04.522401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 10/14/25 03:33:05.342
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/14/25 03:33:05.342
  I1014 03:33:05.343332 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.344035 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.344770 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I1014 03:33:05.441229 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.441413 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:05.441491 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.441541 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.441651 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I1014 03:33:05.505082 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.505641 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:05.505908 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.506153 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.506481 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  E1014 03:33:05.522719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:33:05.594914 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.595395 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:05.596980 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.597346 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.597739 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I1014 03:33:05.663095 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.663376 21 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/14/25 03:33:05.663
  I1014 03:33:05.663929 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.664189 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.664528 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I1014 03:33:05.749417 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.749817 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:05.749941 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.750012 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.750158 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I1014 03:33:05.814844 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.815401 21 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/14/25 03:33:05.815
  I1014 03:33:05.815849 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.816097 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.816376 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I1014 03:33:05.914033 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:05.914940 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:05.915673 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:05.916442 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:05.917230 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I1014 03:33:06.001480 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:06.002488 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:06.003259 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:06.003943 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:06.004685 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I1014 03:33:06.080703 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:06.081183 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:06.081442 21 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4721 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1014 03:33:06.081716 21 exec_util.go:68] ExecWithOptions: Clientset creation
  I1014 03:33:06.082060 21 exec_util.go:84] ExecWithOptions: execute(https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4721/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I1014 03:33:06.321175 21 exec_util.go:201] unexpected error trying to use websockets for pod exec: <nil>
  I1014 03:33:06.321364 21 exec_util.go:112] Exec stderr: ""
  I1014 03:33:06.321651 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4721" for this suite. @ 10/14/25 03:33:06.328
â€¢ [5.109 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 10/14/25 03:33:06.341
  I1014 03:33:06.341959 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-preemption @ 10/14/25 03:33:06.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:33:06.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:33:06.371
  I1014 03:33:06.394441 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E1014 03:33:06.523988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:07.524181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:08.525228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:09.525277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:10.525850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:11.526912      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:12.527379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:13.527541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:14.530107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:15.533852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:16.537838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:17.537968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:18.539008      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:19.539537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:20.539938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:21.540151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:22.545400      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:23.545781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:24.545841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:25.545988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:26.546108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:27.546303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:28.553858      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:29.554116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:30.554147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:31.554273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:32.554340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:33.554904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:34.555242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:35.556221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:36.556609      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:37.556794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:38.557657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:39.557767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:40.558011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:41.558604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:42.559562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:43.559731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:44.560767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:45.560854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:46.560957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:47.561118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:48.562225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:49.562533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:50.562508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:51.563192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:52.563325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:53.563437      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:54.564403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:55.564813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:56.565305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:57.565441      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:58.567488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:33:59.567680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:00.567720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:01.568432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:02.568839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:03.569003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:04.569164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:05.569301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:34:06.400319 21 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 10/14/25 03:34:06.404
  STEP: Adding a custom resource @ 10/14/25 03:34:06.404
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 10/14/25 03:34:06.422
  I1014 03:34:06.437181 21 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 10/14/25 03:34:06.437
  E1014 03:34:06.569490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:07.569629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 10/14/25 03:34:08.448
  I1014 03:34:08.456722 21 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 10/14/25 03:34:08.456
  E1014 03:34:08.570182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:09.570352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 10/14/25 03:34:10.483
  I1014 03:34:10.487262 21 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E1014 03:34:10.570990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:34:11.009138 21 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 10/14/25 03:34:11.027
  STEP: Removing a custom resource @ 10/14/25 03:34:11.042
  I1014 03:34:11.057867 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5171" for this suite. @ 10/14/25 03:34:11.061
â€¢ [64.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 10/14/25 03:34:11.074
  I1014 03:34:11.074921 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:34:11.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:34:11.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:34:11.096
  STEP: Setting up server cert @ 10/14/25 03:34:11.124
  E1014 03:34:11.572130      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:34:12.01
  STEP: Deploying the webhook pod @ 10/14/25 03:34:12.015
  STEP: Wait for the deployment to be ready @ 10/14/25 03:34:12.028
  I1014 03:34:12.054736 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:34:12.572644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:13.573997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:34:14.071
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:34:14.1
  E1014 03:34:14.574642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:34:15.101235 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/14/25 03:34:15.114
  STEP: create a configmap that should be updated by the webhook @ 10/14/25 03:34:15.163
  I1014 03:34:15.330285 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6892" for this suite. @ 10/14/25 03:34:15.338
  STEP: Destroying namespace "webhook-markers-8655" for this suite. @ 10/14/25 03:34:15.345
â€¢ [4.281 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 10/14/25 03:34:15.357
  I1014 03:34:15.364395 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename runtimeclass @ 10/14/25 03:34:15.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:34:15.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:34:15.391
  STEP: getting /apis @ 10/14/25 03:34:15.397
  STEP: getting /apis/node.k8s.io @ 10/14/25 03:34:15.409
  STEP: getting /apis/node.k8s.io/v1 @ 10/14/25 03:34:15.412
  STEP: creating @ 10/14/25 03:34:15.415
  STEP: watching @ 10/14/25 03:34:15.432
  I1014 03:34:15.432777 21 runtimeclass.go:278] starting watch
  STEP: getting @ 10/14/25 03:34:15.443
  STEP: listing @ 10/14/25 03:34:15.448
  STEP: patching @ 10/14/25 03:34:15.452
  STEP: updating @ 10/14/25 03:34:15.458
  I1014 03:34:15.464036 21 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 10/14/25 03:34:15.464
  STEP: deleting a collection @ 10/14/25 03:34:15.477
  I1014 03:34:15.494205 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4335" for this suite. @ 10/14/25 03:34:15.498
â€¢ [0.152 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 10/14/25 03:34:15.509
  I1014 03:34:15.509647 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename configmap @ 10/14/25 03:34:15.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:34:15.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:34:15.561
  STEP: Creating configMap that has name configmap-test-emptyKey-b5ab07d1-d033-4785-bb9e-ca70ea672d8a @ 10/14/25 03:34:15.574
  E1014 03:34:15.574576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:34:15.582594 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5873" for this suite. @ 10/14/25 03:34:15.599
â€¢ [0.097 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 10/14/25 03:34:15.607
  I1014 03:34:15.607860 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 03:34:15.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:34:15.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:34:15.642
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/14/25 03:34:15.648
  I1014 03:34:15.648431 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-6701 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1014 03:34:15.773351 21 builder.go:146] stderr: ""
  I1014 03:34:15.773396 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/14/25 03:34:15.773
  I1014 03:34:15.778746 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-6701 delete pods e2e-test-httpd-pod'
  E1014 03:34:16.577796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:17.578067      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:34:17.955753 21 builder.go:146] stderr: ""
  I1014 03:34:17.955799 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1014 03:34:17.955927 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6701" for this suite. @ 10/14/25 03:34:17.966
â€¢ [2.368 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/14/25 03:34:17.975
  I1014 03:34:17.975817 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename cronjob @ 10/14/25 03:34:17.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:34:17.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:34:18.007
  STEP: Creating a suspended cronjob @ 10/14/25 03:34:18.012
  STEP: Ensuring no jobs are scheduled @ 10/14/25 03:34:18.023
  E1014 03:34:18.579608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:19.580034      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:20.580182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:21.580739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:22.581720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:23.581854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:24.582507      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:25.582616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:26.583186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:27.583373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:28.584218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:29.584588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:30.585424      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:31.585313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:32.585855      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:33.586013      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:34.586786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:35.586906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:36.587006      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:37.587116      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:38.588228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:39.588359      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:40.589549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:41.590237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:42.590273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:43.593843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:44.594105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:45.594213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:46.594931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:47.595066      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:48.595304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:49.595357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:50.596073      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:51.596114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:52.596382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:53.596391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:54.596502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:55.596612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:56.596742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:57.596916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:58.597768      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:34:59.597900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:00.598593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:01.599162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:02.600075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:03.600262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:04.601201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:05.601322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:06.601356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:07.601493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:08.601696      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:09.601803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:10.601977      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:11.602608      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:12.602658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:13.602802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:14.602935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:15.605852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:16.608305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:17.609849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:18.610868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:19.611267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:20.611419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:21.611631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:22.611878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:23.612060      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:24.612851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:25.612957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:26.613338      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:27.613433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:28.613430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:29.613500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:30.614223      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:31.614338      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:32.614419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:33.614785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:34.614693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:35.614955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:36.615535      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:37.615779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:38.616260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:39.616580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:40.616619      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:41.616872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:42.617490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:43.617687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:44.618488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:45.621793      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:46.622053      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:47.622189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:48.622755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:49.622938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:50.624931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:51.624541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:52.624723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:53.624819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:54.624883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:55.625022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:56.625076      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:57.625213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:58.625909      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:35:59.626020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:00.626127      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:01.626218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:02.626332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:03.626678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:04.627628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:05.628033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:06.628075      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:07.628233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:08.628937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:09.629090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:10.630157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:11.630325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:12.631162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:13.631296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:14.633242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:15.633379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:16.633942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:17.634385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:18.635860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:19.635995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:20.636828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:21.637307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:22.638380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:23.638192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:24.638908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:25.639301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:26.640154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:27.640336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:28.640815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:29.640986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:30.641235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:31.641307      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:32.641935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:33.642078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:34.642557      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:35.642682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:36.643121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:37.643325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:38.644169      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:39.644395      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:40.644894      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:41.645042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:42.645494      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:43.645743      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:44.646617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:45.646605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:46.647612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:47.647648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:48.648000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:49.648088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:50.648850      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:51.649503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:52.650099      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:53.650205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:54.650222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:55.650327      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:56.651041      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:57.651426      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:58.651502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:36:59.651628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:00.651699      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:01.653464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:02.651896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:03.652046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:04.652656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:05.652957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:06.653293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:07.653547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:08.655757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:09.655844      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:10.656208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:11.656320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:12.656713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:13.658118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:14.659089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:15.659213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:16.659724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:17.659905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:18.660723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:19.661229      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:20.661448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:21.662108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:22.662488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:23.662599      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:24.663610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:25.663913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:26.664160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:27.664048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:28.664869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:29.664950      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:30.665541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:31.666554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:32.667611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:33.667711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:34.668018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:35.668089      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:36.668456      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:37.668633      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:38.669443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:39.673904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:40.674741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:41.674829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:42.675268      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:43.675408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:44.675951      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:45.676090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:46.676163      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:47.676433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:48.676871      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:49.677078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:50.677371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:51.678267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:52.678302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:53.679261      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:54.679394      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:55.679496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:56.680471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:57.681860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:58.681982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:37:59.682203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:00.685872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:01.686681      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:02.686787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:03.686931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:04.687069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:05.687222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:06.687500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:07.687440      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:08.687558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:09.688513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:10.688964      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:11.689325      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:12.689819      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:13.689943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:14.690068      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:15.690170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:16.690282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:17.690533      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:18.695720      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:19.695861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:20.696193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:21.696482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:22.696399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:23.696529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:24.696842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:25.696749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:26.696957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:27.697091      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:28.697166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:29.697372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:30.697894      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:31.698565      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:32.698685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:33.698849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:34.699226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:35.699927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:36.700323      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:37.702335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:38.702577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:39.702645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:40.702851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:41.703290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:42.703445      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:43.703932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:44.703988      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:45.712438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:46.713330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:47.713645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:48.713640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:49.713958      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:50.716800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:51.717643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:52.717784      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:53.717940      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:54.718061      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:55.718165      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:56.718332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:57.721782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:58.721944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:38:59.722055      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:00.723425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:01.723521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:02.723676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:03.723789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:04.723954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:05.724017      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:06.724171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:07.724282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:08.724488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:09.724623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:10.724755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:11.725431      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:12.725625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:13.725816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:14.725937      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:15.726795      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:16.726894      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:17.727096      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/14/25 03:39:18.023
  STEP: Removing cronjob @ 10/14/25 03:39:18.027
  I1014 03:39:18.033423 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7474" for this suite. @ 10/14/25 03:39:18.037
â€¢ [300.068 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 10/14/25 03:39:18.046
  I1014 03:39:18.047284 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename field-validation @ 10/14/25 03:39:18.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:18.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:18.076
  I1014 03:39:18.081966 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:39:18.727154      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:19.727295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:39:20.619469      21 warnings.go:110] "Warning: unknown field \"alpha\""
  I1014 03:39:20.619644      21 warnings.go:110] "Warning: unknown field \"beta\""
  I1014 03:39:20.619725      21 warnings.go:110] "Warning: unknown field \"delta\""
  I1014 03:39:20.619806      21 warnings.go:110] "Warning: unknown field \"epsilon\""
  I1014 03:39:20.619883      21 warnings.go:110] "Warning: unknown field \"gamma\""
  E1014 03:39:20.727552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:39:21.174941 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-410" for this suite. @ 10/14/25 03:39:21.179
â€¢ [3.138 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 10/14/25 03:39:21.184
  I1014 03:39:21.184665 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename disruption @ 10/14/25 03:39:21.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:21.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:21.208
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:39:21.217
  STEP: Updating PodDisruptionBudget status @ 10/14/25 03:39:21.229
  STEP: Waiting for all pods to be running @ 10/14/25 03:39:21.24
  I1014 03:39:21.250919 21 disruption.go:691] running pods: 0 < 1
  E1014 03:39:21.727672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:22.727841      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/14/25 03:39:23.246
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:39:23.261
  STEP: Patching PodDisruptionBudget status @ 10/14/25 03:39:23.268
  STEP: Waiting for the pdb to be processed @ 10/14/25 03:39:23.276
  I1014 03:39:23.283345 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4565" for this suite. @ 10/14/25 03:39:23.287
â€¢ [2.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 10/14/25 03:39:23.292
  I1014 03:39:23.292667 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 03:39:23.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:23.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:23.313
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/14/25 03:39:23.318
  E1014 03:39:23.728311      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:24.728500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:25.729176      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:26.729382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:39:27.349
  I1014 03:39:27.353607 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-d8ea803f-1a19-4d14-88cf-296b2372a5a5 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:39:27.374
  I1014 03:39:27.388429 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7716" for this suite. @ 10/14/25 03:39:27.392
â€¢ [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 10/14/25 03:39:27.406
  I1014 03:39:27.406421 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename limitrange @ 10/14/25 03:39:27.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:27.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:27.441
  STEP: Creating LimitRange "e2e-limitrange-95qgb" in namespace "limitrange-2711" @ 10/14/25 03:39:27.448
  STEP: Creating another limitRange in another namespace @ 10/14/25 03:39:27.452
  I1014 03:39:27.466941 21 limit_range.go:299] Namespace "e2e-limitrange-95qgb-5501" created
  I1014 03:39:27.467066 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-95qgb" in namespace "e2e-limitrange-95qgb-5501"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-95qgb" @ 10/14/25 03:39:27.471
  I1014 03:39:27.474989 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-95qgb" in "limitrange-2711" namespace @ 10/14/25 03:39:27.475
  I1014 03:39:27.483435 21 limit_range.go:335] LimitRange "e2e-limitrange-95qgb" has been patched
  STEP: Delete LimitRange "e2e-limitrange-95qgb" by Collection with labelSelector: "e2e-limitrange-95qgb=patched" @ 10/14/25 03:39:27.483
  STEP: Confirm that the limitRange "e2e-limitrange-95qgb" has been deleted @ 10/14/25 03:39:27.49
  I1014 03:39:27.490568 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1014 03:39:27.493536 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-95qgb=patched"
  I1014 03:39:27.493706 21 limit_range.go:344] LimitRange "e2e-limitrange-95qgb" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-95qgb" @ 10/14/25 03:39:27.493
  I1014 03:39:27.496682 21 limit_range.go:350] Found 1 limitRange
  I1014 03:39:27.496882 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2711" for this suite. @ 10/14/25 03:39:27.501
  STEP: Destroying namespace "e2e-limitrange-95qgb-5501" for this suite. @ 10/14/25 03:39:27.506
â€¢ [0.106 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 10/14/25 03:39:27.512
  I1014 03:39:27.512931 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:39:27.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:27.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:27.542
  STEP: Creating configMap with name projected-configmap-test-volume-89eed2ec-6e83-4195-9561-2ce94c2e2c18 @ 10/14/25 03:39:27.546
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:39:27.55
  E1014 03:39:27.730315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:28.730425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:29.731020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:30.731210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:39:31.586
  I1014 03:39:31.589203 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-configmaps-e3fcaab6-5a01-4081-aea5-3c9ba8a02e59 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:39:31.596
  I1014 03:39:31.609922 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8250" for this suite. @ 10/14/25 03:39:31.614
â€¢ [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 10/14/25 03:39:31.625
  I1014 03:39:31.626035 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename namespaces @ 10/14/25 03:39:31.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:31.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:31.651
  STEP: Read namespace status @ 10/14/25 03:39:31.657
  I1014 03:39:31.661137 21 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/14/25 03:39:31.661
  I1014 03:39:31.667048 21 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/14/25 03:39:31.667
  I1014 03:39:31.674984 21 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1014 03:39:31.675228 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4049" for this suite. @ 10/14/25 03:39:31.715
â€¢ [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 10/14/25 03:39:31.722
  I1014 03:39:31.722997 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:39:31.724
  E1014 03:39:31.731890      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:31.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:31.746
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:39:31.75
  E1014 03:39:32.732097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:33.732317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:39:33.771
  I1014 03:39:33.775126 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-66447244-ec46-4298-8a9f-ed77ab99dddb container client-container: <nil>
  STEP: delete the pod @ 10/14/25 03:39:33.782
  I1014 03:39:33.794698 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-933" for this suite. @ 10/14/25 03:39:33.799
â€¢ [2.100 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 10/14/25 03:39:33.823
  I1014 03:39:33.823510 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename var-expansion @ 10/14/25 03:39:33.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:39:33.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:39:33.862
  STEP: creating the pod with failed condition @ 10/14/25 03:39:33.866
  E1014 03:39:34.732458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:35.732746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:36.732855      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:37.733016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:38.733032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:39.733252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:40.733842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:41.733942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:42.734120      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:43.734379      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:44.734714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:45.734668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:46.735590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:47.735756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:48.735865      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:49.735990      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:50.736629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:51.736203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:52.736313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:53.736491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:54.736563      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:55.736689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:56.737580      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:57.737782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:58.737902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:39:59.738029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:00.745769      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:01.745889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:02.746010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:03.746182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:04.747137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:05.747278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:06.747347      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:07.747571      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:08.747588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:09.747712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:10.747849      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:11.747969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:12.748139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:13.748289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:14.749760      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:15.750731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:16.751326      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:17.751686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:18.755077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:19.755650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:20.755785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:21.755920      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:22.756240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:23.756332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:24.756417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:25.757901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:26.758829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:27.758934      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:28.759050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:29.759172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:30.760117      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:31.760315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:32.760453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:33.760547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:34.760675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:35.760880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:36.761119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:37.761298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:38.761399      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:39.761513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:40.761691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:41.761822      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:42.762713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:43.762938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:44.763794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:45.764029      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:46.764110      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:47.764195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:48.764360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:49.764512      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:50.765488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:51.765704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:52.766610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:53.766732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:54.766775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:55.766885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:56.767046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:57.769405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:58.769519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:40:59.769686      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:00.770590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:01.771439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:02.772509      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:03.772623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:04.772737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:05.772883      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:06.772992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:07.773137      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:08.774148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:09.774255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:10.774384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:11.774511      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:12.774610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:13.774755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:14.775783      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:15.775916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:16.776122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:17.776270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:18.776756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:19.776876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:20.776971      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:21.777222      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:22.778014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:23.778127      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:24.778880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:25.778954      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:26.779036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:27.779126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:28.779355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:29.779670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:30.780260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:31.780306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:32.780430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:33.780542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/14/25 03:41:33.876
  I1014 03:41:34.400064 21 pod_client.go:173] Successfully updated pod "var-expansion-eaa4e919-4a77-4f75-9ea9-a50c90947333"
  STEP: waiting for pod running @ 10/14/25 03:41:34.4
  E1014 03:41:34.780859      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:35.780935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/14/25 03:41:36.417
  I1014 03:41:36.417205 21 delete.go:62] Deleting pod "var-expansion-eaa4e919-4a77-4f75-9ea9-a50c90947333" in namespace "var-expansion-591"
  I1014 03:41:36.427614 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-eaa4e919-4a77-4f75-9ea9-a50c90947333" to be fully deleted
  E1014 03:41:36.781742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:37.781824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:38.781942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:39.782094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:40.782965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:41.782617      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:42.783126      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:43.783243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:44.784328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:45.784340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:46.784938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:47.785152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:48.785198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:49.785340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:50.785365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:51.786169      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:52.786290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:53.786460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:54.786672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:55.786830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:56.787779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:57.789752      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:58.789860      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:41:59.789978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:00.790059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:01.793728      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:02.793771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:03.793901      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:04.794047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:05.794252      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:06.795382      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:07.795391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:42:08.540476 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-591" for this suite. @ 10/14/25 03:42:08.544
â€¢ [154.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:131
  STEP: Creating a kubernetes client @ 10/14/25 03:42:08.557
  I1014 03:42:08.558004 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename dns @ 10/14/25 03:42:08.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:42:08.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:42:08.581
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-550.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-550.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 10/14/25 03:42:08.587
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-550.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-550.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/14/25 03:42:08.587
  STEP: creating a pod to probe /etc/hosts @ 10/14/25 03:42:08.587
  STEP: submitting the pod to kubernetes @ 10/14/25 03:42:08.587
  E1014 03:42:08.796564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:09.796577      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/14/25 03:42:10.614
  STEP: looking for the results for each expected name from probers @ 10/14/25 03:42:10.625
  I1014 03:42:10.663331 21 dns_common.go:546] DNS probes using dns-550/dns-test-72c84623-0423-4f64-b881-9b0367838c22 succeeded

  STEP: deleting the pod @ 10/14/25 03:42:10.664
  I1014 03:42:10.674330 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-550" for this suite. @ 10/14/25 03:42:10.68
â€¢ [2.128 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 10/14/25 03:42:10.686
  I1014 03:42:10.686609 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-pred @ 10/14/25 03:42:10.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:42:10.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:42:10.715
  I1014 03:42:10.721217 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1014 03:42:10.790590 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I1014 03:42:10.794602 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e before test
  E1014 03:42:10.799040      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:42:10.802124 21 predicates.go:958] civo-ccm-5759fbb5c6-pc5xw from kube-system started at 2025-10-14 02:16:28 +0000 UTC (1 container statuses recorded)
  I1014 03:42:10.802156 21 predicates.go:960] 	Container civo-ccm ready: true, restart count 0
  I1014 03:42:10.802169 21 predicates.go:958] civo-csi-controller-0 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (4 container statuses recorded)
  I1014 03:42:10.802177 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 03:42:10.802187 21 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I1014 03:42:10.802195 21 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I1014 03:42:10.802204 21 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I1014 03:42:10.802214 21 predicates.go:958] civo-csi-node-5ndmq from kube-system started at 2025-10-14 02:16:38 +0000 UTC (2 container statuses recorded)
  I1014 03:42:10.802222 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 03:42:10.802230 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 03:42:10.802239 21 predicates.go:958] coredns-64fd4b4794-zj4r6 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 03:42:10.802247 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I1014 03:42:10.802257 21 predicates.go:958] metrics-server-7bfffcd44-r2x5q from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 03:42:10.802268 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I1014 03:42:10.802278 21 predicates.go:958] traefik-dzn5b from kube-system started at 2025-10-14 02:17:12 +0000 UTC (1 container statuses recorded)
  I1014 03:42:10.802286 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 03:42:10.802297 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm before test
  I1014 03:42:10.808026 21 predicates.go:958] civo-csi-node-fvs99 from kube-system started at 2025-10-14 03:32:16 +0000 UTC (2 container statuses recorded)
  I1014 03:42:10.808406 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 03:42:10.808629 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 03:42:10.808850 21 predicates.go:958] traefik-9v2gm from kube-system started at 2025-10-14 03:32:16 +0000 UTC (1 container statuses recorded)
  I1014 03:42:10.809070 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 03:42:10.809286 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-14 02:19:42 +0000 UTC (1 container statuses recorded)
  I1014 03:42:10.809507 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1014 03:42:10.809749 21 predicates.go:958] sonobuoy-e2e-job-cda78a766ac8494d from sonobuoy started at 2025-10-14 02:19:48 +0000 UTC (2 container statuses recorded)
  I1014 03:42:10.809961 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1014 03:42:10.810177 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/14/25 03:42:10.81
  E1014 03:42:11.801802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:12.802002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/14/25 03:42:12.853
  STEP: Trying to apply a random label on the found node. @ 10/14/25 03:42:12.879
  STEP: verifying the node has the label kubernetes.io/e2e-57ae58f9-ad4d-47c1-b34c-dd98b8b40153 95 @ 10/14/25 03:42:12.892
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/14/25 03:42:12.9
  E1014 03:42:13.802046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:14.802238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.1.10 on the node which pod4 resides and expect not scheduled @ 10/14/25 03:42:14.921
  E1014 03:42:15.805791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:16.808284      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:17.808422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:18.809156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:19.810192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:20.810318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:21.810484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:22.810593      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:23.810751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:24.811022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:25.811208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:26.811418      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:27.812582      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:28.812480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:29.812645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:30.812687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:31.813715      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:32.814024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:33.814049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:34.814290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:35.814292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:36.814417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:37.814757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:38.814817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:39.814983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:40.815135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:41.815270      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:42.815421      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:43.815614      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:44.815869      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:45.815813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:46.816767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:47.816740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:48.816851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:49.817026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:50.817139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:51.817282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:52.817411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:53.817994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:54.817825      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:55.818372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:56.818224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:57.821817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:58.821972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:42:59.834772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:00.834943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:01.835078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:02.835210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:03.835333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:04.835492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:05.835640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:06.835815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:07.835838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:08.835945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:09.836881      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:10.837074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:11.837182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:12.837833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:13.837936      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:14.838345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:15.841775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:16.841944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:17.842464      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:18.842602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:19.842773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:20.842839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:21.842996      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:22.843064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:23.843227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:24.843335      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:25.843459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:26.844150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:27.844030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:28.844228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:29.844457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:30.844477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:31.844736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:32.844913      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:33.845842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:34.845963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:35.846968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:36.847225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:37.847469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:38.847542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:39.847672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:40.847786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:41.848724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:42.849890      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:43.850170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:44.850471      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:45.851138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:46.853430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:47.853502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:48.853675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:49.853776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:50.853834      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:51.854172      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:52.854142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:53.855095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:54.855225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:55.856295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:56.857216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:57.858266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:58.858385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:43:59.859257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:00.859391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:01.859513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:02.859648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:03.859773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:04.859907      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:05.860032      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:06.860188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:07.860338      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:08.860454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:09.860566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:10.860757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:11.860864      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:12.860984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:13.861065      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:14.861713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:15.861939      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:16.862661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:17.863607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:18.863737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:19.863862      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:20.863984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:21.865141      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:22.865673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:23.866373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:24.866491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:25.867402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:26.867650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:27.867872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:28.867944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:29.869001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:30.869158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:31.870322      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:32.870389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:33.871166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:34.871339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:35.872323      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:36.872480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:37.872594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:38.872733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:39.873746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:40.874692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:41.875485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:42.875641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:43.875796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:44.875931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:45.876738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:46.876890      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:47.877007      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:48.877198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:49.877291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:50.877503      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:51.877583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:52.877683      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:53.879342      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:54.879803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:55.880765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:56.880921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:57.881200      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:58.881350      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:44:59.881465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:00.881598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:01.882591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:02.882751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:03.883764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:04.883899      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:05.884396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:06.884553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:07.884682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:08.884816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:09.885613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:10.885833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:11.886736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:12.886851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:13.886961      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:14.888873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:15.889643      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:16.893724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:17.894484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:18.897240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:19.898419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:20.898541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:21.898618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:22.898730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:23.899736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:24.899978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:25.900751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:26.900895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:27.901020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:28.901129      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:29.901212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:30.901428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:31.902168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:32.902320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:33.903045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:34.903135      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:35.903260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:36.903324      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:37.904212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:38.904411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:39.905103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:40.905302      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:41.905401      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:42.905493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:43.905981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:44.906194      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:45.907001      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:46.907152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:47.907298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:48.907371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:49.907490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:50.907632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:51.908505      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:52.908598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:53.909762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:54.909828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:55.910486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:56.910546      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:57.913667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:58.913884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:45:59.914746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:00.914887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:01.915774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:02.915872      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:03.916924      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:04.917097      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:05.918050      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:06.918056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:07.918209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:08.918348      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:09.918466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:10.921753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:11.922798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:12.923931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:13.924469      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:14.925782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:15.927893      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:16.929770      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:17.930632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:18.930772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:19.931716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:20.931861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:21.932868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:22.933286      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:23.933845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:24.934391      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:25.934810      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:26.934820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:27.934955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:28.935267      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:29.935258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:30.935381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:31.935880      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:32.936025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:33.936170      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:34.936795      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:35.936814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:36.937014      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:37.937624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:38.937903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:39.938371      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:40.938497      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:41.938884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:42.939138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:43.939517      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:44.939659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:45.940139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:46.940328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:47.940729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:48.940785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:49.941187      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:50.941700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:51.942098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:52.942203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:53.943125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:54.943262      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:55.943792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:56.943493      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:57.944159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:58.944274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:46:59.945295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:00.945739      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:01.946300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:02.947613      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:03.947703      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:04.957737      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:05.948310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:06.948411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:07.949318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:08.949320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:09.949897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:10.949904      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:11.950408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:12.950531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:13.951417      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-57ae58f9-ad4d-47c1-b34c-dd98b8b40153 off the node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm @ 10/14/25 03:47:14.939
  E1014 03:47:14.953676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-57ae58f9-ad4d-47c1-b34c-dd98b8b40153 @ 10/14/25 03:47:14.968
  I1014 03:47:14.976260 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-575" for this suite. @ 10/14/25 03:47:14.985
â€¢ [304.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:329
  STEP: Creating a kubernetes client @ 10/14/25 03:47:14.996
  I1014 03:47:15.000804 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename proxy @ 10/14/25 03:47:15.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:15.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:15.031
  I1014 03:47:15.036593 21 proxy.go:336] Creating pod...
  E1014 03:47:15.954249      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:16.957799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:17.066172 21 proxy.go:360] Creating service...
  I1014 03:47:17.092348 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/DELETE
  I1014 03:47:17.122534 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1014 03:47:17.122693 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/GET
  I1014 03:47:17.158011 21 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1014 03:47:17.158197 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/HEAD
  I1014 03:47:17.173733 21 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I1014 03:47:17.173894 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/OPTIONS
  I1014 03:47:17.189848 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1014 03:47:17.190340 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/PATCH
  I1014 03:47:17.206529 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1014 03:47:17.207004 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/POST
  I1014 03:47:17.221795 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1014 03:47:17.222210 21 proxy.go:397] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/pods/agnhost/proxy/some/path/with/PUT
  I1014 03:47:17.238000 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1014 03:47:17.238416 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/DELETE
  I1014 03:47:17.254693 21 proxy.go:573] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1014 03:47:17.255109 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/GET
  I1014 03:47:17.281886 21 proxy.go:573] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1014 03:47:17.282420 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/HEAD
  I1014 03:47:17.297800 21 proxy.go:560] http.Client request:HEAD | StatusCode:200
  I1014 03:47:17.298301 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/OPTIONS
  I1014 03:47:17.313742 21 proxy.go:573] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1014 03:47:17.314256 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/PATCH
  I1014 03:47:17.329835 21 proxy.go:573] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1014 03:47:17.330281 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/POST
  I1014 03:47:17.341979 21 proxy.go:573] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1014 03:47:17.342396 21 proxy.go:408] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2583/services/test-service/proxy/some/path/with/PUT
  I1014 03:47:17.355206 21 proxy.go:573] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1014 03:47:17.355816 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2583" for this suite. @ 10/14/25 03:47:17.36
â€¢ [2.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 10/14/25 03:47:17.366
  I1014 03:47:17.366846 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:47:17.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:17.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:17.407
  STEP: Creating configMap with name projected-configmap-test-volume-map-f015c8e1-9c50-4cfd-9b91-b15f1125442b @ 10/14/25 03:47:17.423
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:47:17.434
  E1014 03:47:17.961813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:18.961918      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:19.962878      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:20.963062      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:47:21.48
  I1014 03:47:21.486519 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e pod pod-projected-configmaps-3f8ac97d-73eb-4a44-b5b2-aa7587584ce1 container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:47:21.517
  I1014 03:47:21.540053 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3586" for this suite. @ 10/14/25 03:47:21.545
â€¢ [4.185 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 10/14/25 03:47:21.552
  I1014 03:47:21.552139 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename containers @ 10/14/25 03:47:21.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:21.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:21.58
  E1014 03:47:21.963174      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:22.963243      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:23.634782 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4259" for this suite. @ 10/14/25 03:47:23.639
â€¢ [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/14/25 03:47:23.645
  I1014 03:47:23.650342 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename watch @ 10/14/25 03:47:23.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:23.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:23.676
  STEP: creating a watch on configmaps @ 10/14/25 03:47:23.684
  STEP: creating a new configmap @ 10/14/25 03:47:23.686
  STEP: modifying the configmap once @ 10/14/25 03:47:23.69
  STEP: closing the watch once it receives two notifications @ 10/14/25 03:47:23.697
  I1014 03:47:23.697810 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2053  d2750604-694f-4d0b-abb3-e2458eed741f 26755 0 2025-10-14 03:47:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-14 03:47:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:47:23.698061 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2053  d2750604-694f-4d0b-abb3-e2458eed741f 26756 0 2025-10-14 03:47:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-14 03:47:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/14/25 03:47:23.698
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/14/25 03:47:23.707
  STEP: deleting the configmap @ 10/14/25 03:47:23.71
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/14/25 03:47:23.718
  I1014 03:47:23.718993 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2053  d2750604-694f-4d0b-abb3-e2458eed741f 26757 0 2025-10-14 03:47:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-14 03:47:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:47:23.719230 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2053  d2750604-694f-4d0b-abb3-e2458eed741f 26758 0 2025-10-14 03:47:23 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-10-14 03:47:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1014 03:47:23.719406 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2053" for this suite. @ 10/14/25 03:47:23.739
â€¢ [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 10/14/25 03:47:23.748
  I1014 03:47:23.748498 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 03:47:23.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:23.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:23.77
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/14/25 03:47:23.775
  E1014 03:47:23.964023      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:24.964157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:47:25.792
  I1014 03:47:25.796079 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-187c9c59-6b4e-46c0-a0f3-6ded8d2014fe container test-container: <nil>
  STEP: delete the pod @ 10/14/25 03:47:25.804
  I1014 03:47:25.822069 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5874" for this suite. @ 10/14/25 03:47:25.826
â€¢ [2.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:753
  STEP: Creating a kubernetes client @ 10/14/25 03:47:25.833
  I1014 03:47:25.833987 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:47:25.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:25.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:25.871
  STEP: creating service endpoint-test2 in namespace services-8778 @ 10/14/25 03:47:25.875
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8778 to expose endpoints map[] @ 10/14/25 03:47:25.891
  I1014 03:47:25.905972      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:47:25.913158 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8778 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8778 @ 10/14/25 03:47:25.913
  E1014 03:47:25.964216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:26.964393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8778 to expose endpoints map[pod1:[80]] @ 10/14/25 03:47:27.938
  I1014 03:47:27.948938      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:47:27.954124 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8778 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/14/25 03:47:27.955
  I1014 03:47:27.956198 21 resource.go:361] Creating new exec pod
  E1014 03:47:27.965079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:28.965662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:29.965882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:29.986129 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8778 exec execpoddrfqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1014 03:47:30.165292 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.114.7) 80 port [tcp/http] succeeded!\n"
  I1014 03:47:30.165342 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:47:30.165419 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8778 exec execpoddrfqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.114.7 80'
  I1014 03:47:30.344865 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.114.7 80\nConnection to 10.43.114.7 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I1014 03:47:30.344915 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8778 @ 10/14/25 03:47:30.344
  E1014 03:47:30.966036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:31.966136      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8778 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/14/25 03:47:32.375
  I1014 03:47:32.393386      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:47:32.400406 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8778 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/14/25 03:47:32.4
  I1014 03:47:32.403869 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8778 exec execpoddrfqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1014 03:47:32.579892 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.114.7) 80 port [tcp/http] succeeded!\n"
  I1014 03:47:32.579944 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:47:32.580001 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8778 exec execpoddrfqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.114.7 80'
  I1014 03:47:32.717703 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.114.7 80\n+ echo hostName\nConnection to 10.43.114.7 80 port [tcp/http] succeeded!\n"
  I1014 03:47:32.717754 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8778 @ 10/14/25 03:47:32.717
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8778 to expose endpoints map[pod2:[80]] @ 10/14/25 03:47:32.733
  I1014 03:47:32.756763      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:47:32.766168 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8778 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/14/25 03:47:32.766
  I1014 03:47:32.770136 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8778 exec execpoddrfqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E1014 03:47:32.967142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:33.129143 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.114.7) 80 port [tcp/http] succeeded!\n"
  I1014 03:47:33.129193 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:47:33.129266 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-8778 exec execpoddrfqv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.114.7 80'
  I1014 03:47:33.281620 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.114.7 80\n+ echo hostNameConnection to 10.43.114.7 80 port [tcp/http] succeeded!\n\n"
  I1014 03:47:33.281761 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8778 @ 10/14/25 03:47:33.281
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8778 to expose endpoints map[] @ 10/14/25 03:47:33.299
  I1014 03:47:33.309869      21 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I1014 03:47:33.315959 21 service.go:4645] successfully validated that service endpoint-test2 in namespace services-8778 exposes endpoints map[]
  I1014 03:47:33.346607 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8778" for this suite. @ 10/14/25 03:47:33.357
â€¢ [7.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 10/14/25 03:47:33.365
  I1014 03:47:33.365260 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:47:33.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:33.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:33.387
  STEP: Setting up server cert @ 10/14/25 03:47:33.409
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:47:33.92
  STEP: Deploying the webhook pod @ 10/14/25 03:47:33.926
  STEP: Wait for the deployment to be ready @ 10/14/25 03:47:33.937
  I1014 03:47:33.956361 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:47:33.968056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:34.968285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:35.968561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:47:35.969
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:47:35.98
  E1014 03:47:36.968762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:36.981355 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/14/25 03:47:36.986
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/25 03:47:37.013
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/14/25 03:47:37.04
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/25 03:47:37.055
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/14/25 03:47:37.067
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/14/25 03:47:37.076
  I1014 03:47:37.174448 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4593" for this suite. @ 10/14/25 03:47:37.187
  STEP: Destroying namespace "webhook-markers-9865" for this suite. @ 10/14/25 03:47:37.193
â€¢ [3.834 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 10/14/25 03:47:37.199
  I1014 03:47:37.199702 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename replication-controller @ 10/14/25 03:47:37.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:37.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:37.231
  STEP: Creating ReplicationController "e2e-rc-27x6c" @ 10/14/25 03:47:37.236
  I1014 03:47:37.245396 21 rc.go:795] Get Replication Controller "e2e-rc-27x6c" to confirm replicas
  E1014 03:47:37.969309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:38.245805 21 rc.go:795] Get Replication Controller "e2e-rc-27x6c" to confirm replicas
  I1014 03:47:38.250767 21 rc.go:804] Found 1 replicas for "e2e-rc-27x6c" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-27x6c" @ 10/14/25 03:47:38.25
  STEP: Updating a scale subresource @ 10/14/25 03:47:38.254
  STEP: Verifying replicas where modified for replication controller "e2e-rc-27x6c" @ 10/14/25 03:47:38.258
  I1014 03:47:38.258830 21 rc.go:795] Get Replication Controller "e2e-rc-27x6c" to confirm replicas
  E1014 03:47:38.969387      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:39.258969 21 rc.go:795] Get Replication Controller "e2e-rc-27x6c" to confirm replicas
  I1014 03:47:39.263402 21 rc.go:804] Found 2 replicas for "e2e-rc-27x6c" replication controller
  I1014 03:47:39.263905 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1480" for this suite. @ 10/14/25 03:47:39.268
â€¢ [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 10/14/25 03:47:39.284
  I1014 03:47:39.285578 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-runtime @ 10/14/25 03:47:39.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:39.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:39.309
  STEP: create the container @ 10/14/25 03:47:39.314
  I1014 03:47:39.328573      21 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 10/14/25 03:47:39.328
  E1014 03:47:39.969575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:40.969751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:41.970478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/14/25 03:47:42.365
  STEP: the container should be terminated @ 10/14/25 03:47:42.371
  STEP: the termination message should be set @ 10/14/25 03:47:42.371
  I1014 03:47:42.371881 21 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/14/25 03:47:42.372
  I1014 03:47:42.397575 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4012" for this suite. @ 10/14/25 03:47:42.403
â€¢ [3.127 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1070
  STEP: Creating a kubernetes client @ 10/14/25 03:47:42.412
  I1014 03:47:42.412657 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:47:42.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:47:42.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:47:42.444
  STEP: Creating resourceQuota "e2e-rq-status-n2cmc" @ 10/14/25 03:47:42.46
  I1014 03:47:42.472651 21 resource_quota.go:1106] Resource quota "e2e-rq-status-n2cmc" reports spec: hard cpu limit of 500m
  I1014 03:47:42.472800 21 resource_quota.go:1108] Resource quota "e2e-rq-status-n2cmc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-n2cmc" /status @ 10/14/25 03:47:42.472
  STEP: Confirm /status for "e2e-rq-status-n2cmc" resourceQuota via watch @ 10/14/25 03:47:42.497
  I1014 03:47:42.503516 21 resource_quota.go:1135] observed resourceQuota "e2e-rq-status-n2cmc" in namespace "resourcequota-6314" with hard status: v1.ResourceList(nil)
  I1014 03:47:42.503722 21 resource_quota.go:1138] Found resourceQuota "e2e-rq-status-n2cmc" in namespace "resourcequota-6314" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1014 03:47:42.503815 21 resource_quota.go:1145] ResourceQuota "e2e-rq-status-n2cmc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/14/25 03:47:42.562
  I1014 03:47:42.567729 21 resource_quota.go:1156] Resource quota "e2e-rq-status-n2cmc" reports spec: hard cpu limit of 1
  I1014 03:47:42.568121 21 resource_quota.go:1157] Resource quota "e2e-rq-status-n2cmc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-n2cmc" /status @ 10/14/25 03:47:42.568
  STEP: Confirm /status for "e2e-rq-status-n2cmc" resourceQuota via watch @ 10/14/25 03:47:42.578
  I1014 03:47:42.582000 21 resource_quota.go:1179] observed resourceQuota "e2e-rq-status-n2cmc" in namespace "resourcequota-6314" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1014 03:47:42.582193 21 resource_quota.go:1182] Found resourceQuota "e2e-rq-status-n2cmc" in namespace "resourcequota-6314" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1014 03:47:42.582279 21 resource_quota.go:1189] ResourceQuota "e2e-rq-status-n2cmc" /status was patched
  STEP: Get "e2e-rq-status-n2cmc" /status @ 10/14/25 03:47:42.582
  I1014 03:47:42.586725 21 resource_quota.go:1200] Resourcequota "e2e-rq-status-n2cmc" reports status: hard cpu of 1
  I1014 03:47:42.587270 21 resource_quota.go:1202] Resourcequota "e2e-rq-status-n2cmc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-n2cmc" /status before checking Spec is unchanged @ 10/14/25 03:47:42.591
  I1014 03:47:42.596099 21 resource_quota.go:1222] Resourcequota "e2e-rq-status-n2cmc" reports status: hard cpu of 2
  I1014 03:47:42.596137 21 resource_quota.go:1224] Resourcequota "e2e-rq-status-n2cmc" reports status: hard memory of 2Gi
  I1014 03:47:42.597787 21 resource_quota.go:1236] Found resourceQuota "e2e-rq-status-n2cmc" in namespace "resourcequota-6314" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1014 03:47:42.600991 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c23d10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c23d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c23d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:47:42.971028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:43.971092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:44.973962      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:45.974077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:46.974213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:47.605975 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c23f50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2030), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:47:47.974536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:48.974747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:49.975025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:50.975621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:51.975008      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:52.607268 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc20d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:47:52.975659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:53.975811      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:54.975946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:55.976042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:56.976189      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:47:57.602491 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc23c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:47:57.976304      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:58.976452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:47:59.976576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:00.976687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:01.976817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:02.602669 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc25a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc25d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:02.977416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:03.977529      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:04.977671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:05.977782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:06.977926      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:07.601900 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc27e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:07.978761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:08.978927      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:09.979037      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:10.979183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:11.979334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:12.601817 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2a50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2a80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:12.979451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:13.979569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:14.981679      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:15.981796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:16.985209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:17.602535 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2c60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2c90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:17.989719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:18.989945      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:19.990030      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:20.990153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:21.992746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:22.602432 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2ea0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2ed0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:22.993723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:23.993873      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:24.994315      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:25.994457      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:26.994588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:27.601666 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc30e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:27.994755      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:28.994906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:29.995118      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:30.995786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:31.995925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:32.603020 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc33b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc33e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:32.996879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:33.997329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:34.997635      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:35.997685      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:36.997847      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:37.603025 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc35c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc35f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:37.998824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:38.999046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:39.999248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:40.999320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:41.999451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:42.602306 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:43.000114      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:44.000312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:45.000416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:46.000545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:47.000766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:47.604233 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3ab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3ae8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3b18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:48.000876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:49.001039      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:50.001313      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:51.001392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:52.001572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:52.601955 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3d10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:53.001723      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:54.001925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:55.002022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:56.002164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:57.002316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:48:57.602009 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053420c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:48:58.005712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:48:59.012840      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:00.012984      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:01.013169      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:02.013285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:02.603882 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:03.013436      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:04.013604      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:05.013738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:06.013898      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:07.014065      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:07.601841 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:08.015180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:09.015242      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:10.015386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:11.015572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:12.016903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:12.601709 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053428a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053428d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:13.017011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:14.017724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:15.017886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:16.019756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:17.019908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:17.601699 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342b58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342b88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342bb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:18.020323      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:19.021341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:20.021747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:21.021874      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:22.022108      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:22.601700 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342d98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342dc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:23.022235      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:24.022361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:25.022490      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:26.022756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:27.022946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:27.604740 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343008), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:28.023757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:29.024132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:30.024238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:31.024609      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:32.024754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:32.605810 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053432c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053432f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:33.025481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:34.025566      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:35.025713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:36.025866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:37.026219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:37.601954 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343560), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343590), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053435c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:38.026813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:39.026948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:40.029734      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:41.031854      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:42.033736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:42.612905 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053437e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:43.038153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:44.039495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:45.040587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:46.040693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:47.043781      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:47.604667 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343b30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:48.044384      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:49.044475      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:50.049718      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:51.049807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:52.049925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:52.604540 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053420d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:53.050088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:54.050240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:55.050318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:56.050439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:57.050693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:49:57.603177 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053423a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:49:58.050806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:49:59.051074      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:00.051112      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:01.051224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:02.051357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:02.603866 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053426a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053426d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:03.051480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:04.051611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:05.051716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:06.051836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:07.051948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:07.606353 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053428e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:08.052796      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:09.061687      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:10.061800      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:11.064296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:12.065891      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:12.610990 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:13.066933      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:14.067080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:15.067207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:16.069747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:17.073726      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:17.602991 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342e40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342e70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005342ea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:18.073929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:19.073995      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:20.077805      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:21.077905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:22.078025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:22.604808 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053430c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053430f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:23.078602      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:24.078680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:25.078978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:26.080255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:27.080348      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:27.606421 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:28.080357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:29.080485      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:30.080583      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:31.080695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:32.080802      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:32.603462 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053435d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343650), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:33.080975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:34.081292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:35.081333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:36.081432      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:37.081560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:37.602755 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343848), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053438c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:38.081705      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:39.081809      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:40.081920      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:41.082590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:42.082969      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:42.606321 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343b30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343b78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:43.083356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:44.083455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:45.083584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:46.084173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:47.084416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:47.602115 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343de8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343e30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005343e60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:48.085069      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:49.085179      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:50.085332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:51.085448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:52.085548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:52.601764 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc20d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:53.086181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:54.086238      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:55.086366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:56.086539      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:57.086651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:50:57.605069 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:50:58.087301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:50:59.087398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:00.087534      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:01.087634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:02.087756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:02.602860 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc25a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc25d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:51:03.088738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:04.089017      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:05.089077      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:06.089451      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:07.089282      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:07.602518 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc27b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc27e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:51:08.093836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:09.093980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:10.094086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:11.094210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:12.097744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:12.601880 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc29f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:51:13.101754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:14.101832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:15.102203      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:16.102459      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:17.103721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:17.602350 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:51:18.104377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:19.104439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:20.105474      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:21.105627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:22.105983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:22.602578 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2e70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2ea0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc2ed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:51:23.106504      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:24.106592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:25.106700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:26.106853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:27.106996      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:27.605784 21 resource_quota.go:1267] ResourceQuota "e2e-rq-status-n2cmc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-n2cmc", GenerateName:"", Namespace:"resourcequota-6314", SelfLink:"", UID:"964bff43-cdad-4eb1-8d2c-496caab5dd59", ResourceVersion:"27044", Generation:0, CreationTimestamp:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-n2cmc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc30b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc30e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.October, 14, 3, 47, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003cc3110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1014 03:51:28.108028      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:29.108419      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:30.108393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:31.108518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:32.108684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:51:32.602283 21 resource_quota.go:1264] ResourceQuota "e2e-rq-status-n2cmc" Spec was unchanged and /status reset
  I1014 03:51:32.602575 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6314" for this suite. @ 10/14/25 03:51:32.606
â€¢ [230.201 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/14/25 03:51:32.614
  I1014 03:51:32.614137 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename crd-watch @ 10/14/25 03:51:32.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:51:32.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:51:32.634
  I1014 03:51:32.639700 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:51:33.109312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:34.109433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:35.109631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 10/14/25 03:51:35.167
  I1014 03:51:35.173276 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-14T03:51:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-14T03:51:35Z]] name:name1 resourceVersion:27298 uid:931091e0-70a8-4f3f-93ed-a39c080fc175] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 03:51:36.109669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:37.109838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:38.109942      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:39.110065      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:40.110195      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:41.110328      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:42.110641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:43.110656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:44.110758      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:45.111592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 10/14/25 03:51:45.174
  I1014 03:51:45.182205 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-14T03:51:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-14T03:51:45Z]] name:name2 resourceVersion:27314 uid:258efb74-7f04-4b14-ad92-7f4fa4c96a95] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 03:51:46.111916      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:47.115719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:48.116143      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:49.116366      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:50.116393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:51.116704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:52.116929      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:53.117038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:54.117149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:55.117276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 10/14/25 03:51:55.182
  I1014 03:51:55.189942 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-14T03:51:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-14T03:51:55Z]] name:name1 resourceVersion:27325 uid:931091e0-70a8-4f3f-93ed-a39c080fc175] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 03:51:56.117393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:57.117549      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:58.117695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:51:59.117824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:00.117943      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:01.118088      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:02.118221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:03.118339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:04.118955      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:05.119298      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 10/14/25 03:52:05.191
  I1014 03:52:05.197681 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-14T03:51:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-14T03:52:05Z]] name:name2 resourceVersion:27335 uid:258efb74-7f04-4b14-ad92-7f4fa4c96a95] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 03:52:06.119412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:07.119623      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:08.119693      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:09.121709      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:10.121861      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:11.123446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:12.123588      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:13.123733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:14.123868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:15.125084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 10/14/25 03:52:15.201
  I1014 03:52:15.214054 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-14T03:51:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-14T03:51:55Z]] name:name1 resourceVersion:27346 uid:931091e0-70a8-4f3f-93ed-a39c080fc175] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 03:52:16.129732      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:17.135680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:18.135831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:19.137688      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:20.137806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:21.137952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:22.138159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:23.139352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:24.139455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:25.139744      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 10/14/25 03:52:25.215
  I1014 03:52:25.226646 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-10-14T03:51:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-10-14T03:52:05Z]] name:name2 resourceVersion:27356 uid:258efb74-7f04-4b14-ad92-7f4fa4c96a95] num:map[num1:9223372036854775807 num2:1000000]]}
  E1014 03:52:26.139843      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:27.140109      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:28.141149      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:29.141216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:30.141314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:31.141423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:32.141538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:33.141651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:34.141986      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:35.141974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:52:35.737315 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2679" for this suite. @ 10/14/25 03:52:35.741
â€¢ [63.133 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2185
  STEP: Creating a kubernetes client @ 10/14/25 03:52:35.749
  I1014 03:52:35.749408 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename services @ 10/14/25 03:52:35.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:52:35.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:52:35.77
  STEP: creating service in namespace services-466 @ 10/14/25 03:52:35.774
  STEP: creating service affinity-clusterip in namespace services-466 @ 10/14/25 03:52:35.774
  I1014 03:52:35.816004 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E1014 03:52:36.142771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:37.142947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:52:37.834266 21 resource.go:361] Creating new exec pod
  E1014 03:52:38.143484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:39.143556      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:52:39.860720 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-466 exec execpod-affinityzbmd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1014 03:52:40.059194 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.43.194.105) 80 port [tcp/http] succeeded!\n"
  I1014 03:52:40.059250 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:52:40.059327 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-466 exec execpod-affinityzbmd8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.194.105 80'
  E1014 03:52:40.144428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:52:40.217033 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.194.105 80\nConnection to 10.43.194.105 80 port [tcp/http] succeeded!\n"
  I1014 03:52:40.217084 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1014 03:52:40.217153 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=services-466 exec execpod-affinityzbmd8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/ ; done'
  I1014 03:52:40.540821 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.43.194.105:80/\n"
  I1014 03:52:40.540882 21 builder.go:147] stdout: "\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p\naffinity-clusterip-6dd57cf8dc-7bs5p"
  I1014 03:52:40.540903 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540917 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540930 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540941 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540954 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540966 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540977 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.540989 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541000 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541011 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541023 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541034 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541045 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541057 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541068 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541143 21 service.go:238] Received response from host: affinity-clusterip-6dd57cf8dc-7bs5p
  I1014 03:52:40.541219 21 service.go:4352] Cleaning up the exec pod
  I1014 03:52:40.672432 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-466" for this suite. @ 10/14/25 03:52:40.684
â€¢ [4.941 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/14/25 03:52:40.696
  I1014 03:52:40.696862 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename secrets @ 10/14/25 03:52:40.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:52:40.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:52:40.723
  STEP: Creating secret with name secret-test-9e159b5f-9233-48b0-93ca-283fe3a95c86 @ 10/14/25 03:52:40.73
  STEP: Creating a pod to test consume secrets @ 10/14/25 03:52:40.736
  E1014 03:52:41.145357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:42.145578      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:43.145670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:44.145778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:52:44.766
  I1014 03:52:44.771236 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-secrets-fc17138e-e08e-4210-a7a7-47f497e26f0d container secret-volume-test: <nil>
  STEP: delete the pod @ 10/14/25 03:52:44.799
  I1014 03:52:44.814894 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3820" for this suite. @ 10/14/25 03:52:44.818
â€¢ [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/14/25 03:52:44.824
  I1014 03:52:44.824246 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename prestop @ 10/14/25 03:52:44.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:52:44.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:52:44.868
  STEP: Creating server pod server in namespace prestop-6340 @ 10/14/25 03:52:44.873
  STEP: Waiting for pods to come up. @ 10/14/25 03:52:44.879
  E1014 03:52:45.146579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:46.146905      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-6340 @ 10/14/25 03:52:46.897
  E1014 03:52:47.147756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:48.148153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 10/14/25 03:52:48.932
  E1014 03:52:49.148887      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:50.149026      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:51.149151      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:52.149316      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:53.149559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:52:53.949817 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 10/14/25 03:52:53.952
  I1014 03:52:53.968603 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6340" for this suite. @ 10/14/25 03:52:53.976
â€¢ [9.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 10/14/25 03:52:53.991
  I1014 03:52:53.991888 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:52:53.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:52:54.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:52:54.024
  STEP: Creating the pod @ 10/14/25 03:52:54.032
  E1014 03:52:54.152333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:55.152489      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:56.153122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:52:56.583917 21 pod_client.go:173] Successfully updated pod "annotationupdatef56cebfa-1a91-4775-bbc9-553cc8dec4c4"
  E1014 03:52:57.154171      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:58.157717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:52:59.157826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:00.157992      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:53:00.617149 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3366" for this suite. @ 10/14/25 03:53:00.628
â€¢ [6.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 10/14/25 03:53:00.659
  I1014 03:53:00.659478 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename podtemplate @ 10/14/25 03:53:00.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:00.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:00.688
  STEP: Create set of pod templates @ 10/14/25 03:53:00.694
  I1014 03:53:00.700868 21 podtemplates.go:143] created test-podtemplate-1
  I1014 03:53:00.705668 21 podtemplates.go:143] created test-podtemplate-2
  I1014 03:53:00.711296 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/14/25 03:53:00.711
  STEP: delete collection of pod templates @ 10/14/25 03:53:00.715
  I1014 03:53:00.715324 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/14/25 03:53:00.725
  I1014 03:53:00.726155 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1014 03:53:00.733789 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7172" for this suite. @ 10/14/25 03:53:00.737
â€¢ [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:863
  STEP: Creating a kubernetes client @ 10/14/25 03:53:00.759
  I1014 03:53:00.759734 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:53:00.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:00.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:00.799
  STEP: Creating a ResourceQuota with best effort scope @ 10/14/25 03:53:00.806
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/25 03:53:00.828
  E1014 03:53:01.158997      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:02.159161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 10/14/25 03:53:02.832
  STEP: Ensuring ResourceQuota status is calculated @ 10/14/25 03:53:02.837
  E1014 03:53:03.159263      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:04.159409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 10/14/25 03:53:04.845
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/14/25 03:53:04.858
  E1014 03:53:05.159518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:06.160095      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/14/25 03:53:06.868
  E1014 03:53:07.161175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:08.161754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/25 03:53:08.875
  STEP: Ensuring resource quota status released the pod usage @ 10/14/25 03:53:08.897
  E1014 03:53:09.162397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:10.162508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 10/14/25 03:53:10.907
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/14/25 03:53:10.918
  E1014 03:53:11.162885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:12.163015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/14/25 03:53:12.926
  E1014 03:53:13.165655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:14.165767      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/14/25 03:53:14.932
  STEP: Ensuring resource quota status released the pod usage @ 10/14/25 03:53:14.942
  E1014 03:53:15.169260      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:16.170287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:53:16.948161 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5517" for this suite. @ 10/14/25 03:53:16.953
â€¢ [16.201 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 10/14/25 03:53:16.962
  I1014 03:53:16.962358 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename namespaces @ 10/14/25 03:53:16.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:16.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:16.995
  STEP: Creating a test namespace @ 10/14/25 03:53:17.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:17.023
  STEP: Creating a pod in the namespace @ 10/14/25 03:53:17.035
  STEP: Waiting for the pod to have running status @ 10/14/25 03:53:17.049
  E1014 03:53:17.171193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:18.171360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/14/25 03:53:19.062
  STEP: Waiting for the namespace to be removed. @ 10/14/25 03:53:19.068
  E1014 03:53:19.172357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:20.173410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:21.173622      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:22.174569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:23.174972      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:24.175775      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:25.176005      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:26.176063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:27.176979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:28.178059      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:29.178632      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/14/25 03:53:30.074
  STEP: Verifying there are no pods in the namespace @ 10/14/25 03:53:30.097
  I1014 03:53:30.101676 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6715" for this suite. @ 10/14/25 03:53:30.106
  STEP: Destroying namespace "nsdeletetest-3658" for this suite. @ 10/14/25 03:53:30.112
  I1014 03:53:30.116366 21 framework.go:370] Namespace nsdeletetest-3658 was already deleted
  STEP: Destroying namespace "nsdeletetest-9268" for this suite. @ 10/14/25 03:53:30.116
â€¢ [13.160 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 10/14/25 03:53:30.122
  I1014 03:53:30.122888 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename downward-api @ 10/14/25 03:53:30.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:30.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:30.145
  STEP: Creating a pod to test downward API volume plugin @ 10/14/25 03:53:30.148
  E1014 03:53:30.181216      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:31.181625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:32.183520      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:33.183670      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:53:34.177
  I1014 03:53:34.181584 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod downwardapi-volume-4563b5a8-2082-4ed6-b626-61662c375b77 container client-container: <nil>
  E1014 03:53:34.184434      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod @ 10/14/25 03:53:34.189
  I1014 03:53:34.205827 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6341" for this suite. @ 10/14/25 03:53:34.21
â€¢ [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 10/14/25 03:53:34.218
  I1014 03:53:34.218413 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename projected @ 10/14/25 03:53:34.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:34.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:34.244
  STEP: Creating configMap with name projected-configmap-test-volume-map-2a598e1e-6444-4c52-988a-4ceb9324cfbe @ 10/14/25 03:53:34.251
  STEP: Creating a pod to test consume configMaps @ 10/14/25 03:53:34.259
  E1014 03:53:35.184650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:36.185207      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:37.185329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:38.185653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 03:53:38.292
  I1014 03:53:38.296384 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-projected-configmaps-303c60a8-efa3-4a01-bf94-bf3ac9e962cc container agnhost-container: <nil>
  STEP: delete the pod @ 10/14/25 03:53:38.308
  I1014 03:53:38.326876 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5125" for this suite. @ 10/14/25 03:53:38.331
â€¢ [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:709
  STEP: Creating a kubernetes client @ 10/14/25 03:53:38.337
  I1014 03:53:38.337772 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename webhook @ 10/14/25 03:53:38.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:38.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:38.364
  STEP: Setting up server cert @ 10/14/25 03:53:38.396
  E1014 03:53:39.198412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/14/25 03:53:39.45
  STEP: Deploying the webhook pod @ 10/14/25 03:53:39.456
  STEP: Wait for the deployment to be ready @ 10/14/25 03:53:39.468
  I1014 03:53:39.493151 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1014 03:53:40.199256      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:41.200106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/14/25 03:53:41.506
  STEP: Verifying the service has paired with the endpoint @ 10/14/25 03:53:41.517
  E1014 03:53:42.200162      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:53:42.517731 21 util.go:418] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/14/25 03:53:42.526
  STEP: verifying the validating webhook match conditions @ 10/14/25 03:53:42.533
  STEP: updating the validating webhook match conditions @ 10/14/25 03:53:42.537
  STEP: verifying the validating webhook match conditions @ 10/14/25 03:53:42.547
  I1014 03:53:42.629554 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4118" for this suite. @ 10/14/25 03:53:42.641
  STEP: Destroying namespace "webhook-markers-9860" for this suite. @ 10/14/25 03:53:42.646
â€¢ [4.314 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:802
  STEP: Creating a kubernetes client @ 10/14/25 03:53:42.652
  I1014 03:53:42.652842 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename job @ 10/14/25 03:53:42.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:42.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:42.688
  STEP: Creating a job @ 10/14/25 03:53:42.692
  STEP: Ensuring job reaches completions @ 10/14/25 03:53:42.7
  E1014 03:53:43.200329      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:44.200513      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:45.200839      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:46.201228      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:47.202658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:48.202764      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:49.203625      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:50.203626      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:51.206644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:52.206695      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:53:52.746842 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6915" for this suite. @ 10/14/25 03:53:52.753
â€¢ [10.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:402
  STEP: Creating a kubernetes client @ 10/14/25 03:53:52.76
  I1014 03:53:52.760899 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename resourcequota @ 10/14/25 03:53:52.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:53:52.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:53:52.782
  STEP: Counting existing ResourceQuota @ 10/14/25 03:53:52.786
  E1014 03:53:53.206885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:54.207101      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:55.207762      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:56.208166      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:57.208352      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/14/25 03:53:57.798
  STEP: Ensuring resource quota status is calculated @ 10/14/25 03:53:57.809
  E1014 03:53:58.208491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:53:59.208612      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 10/14/25 03:53:59.815
  STEP: Ensuring resource quota status captures replication controller creation @ 10/14/25 03:53:59.824
  E1014 03:54:00.209702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:01.210193      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 10/14/25 03:54:01.828
  STEP: Ensuring resource quota status released usage @ 10/14/25 03:54:01.835
  E1014 03:54:02.211070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:03.211206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:54:03.840713 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7861" for this suite. @ 10/14/25 03:54:03.845
â€¢ [11.091 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 10/14/25 03:54:03.853
  I1014 03:54:03.854079 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 03:54:03.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:54:03.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:54:03.875
  STEP: Creating ServiceAccount "e2e-sa-6rz76"  @ 10/14/25 03:54:03.881
  I1014 03:54:03.889765 21 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-6rz76"  @ 10/14/25 03:54:03.889
  I1014 03:54:03.898198 21 service_accounts.go:867] AutomountServiceAccountToken: true
  I1014 03:54:03.898450 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3836" for this suite. @ 10/14/25 03:54:03.902
â€¢ [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 10/14/25 03:54:03.908
  I1014 03:54:03.908531 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/14/25 03:54:03.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:54:03.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:54:03.937
  I1014 03:54:03.941896 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  E1014 03:54:04.212142      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:05.212213      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:06.213090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:54:06.991150 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3360" for this suite. @ 10/14/25 03:54:06.995
â€¢ [3.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 10/14/25 03:54:07.002
  I1014 03:54:07.002248 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename chunking @ 10/14/25 03:54:07.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 03:54:07.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 03:54:07.024
  STEP: creating a large number of resources @ 10/14/25 03:54:07.028
  E1014 03:54:07.213161      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:08.214196      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:09.214277      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:10.215226      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:11.215541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:12.216002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:13.216706      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:14.217241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:15.217885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:16.218247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:54:16.909648      21 request.go:752] "Waited before sending request" delay="1.000746349s" reason="client-side throttling, not priority and fairness" verb="POST" URL="https://10.43.0.1:443/api/v1/namespaces/chunking-7728/podtemplates"
  E1014 03:54:17.218965      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:18.219920      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:19.220910      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:20.221375      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:21.221537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:22.230735      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:23.231724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:24.232057      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 10/14/25 03:54:24.709
  I1014 03:54:24.758676 21 chunking.go:163] Retrieved 40/40 results with rv 28439 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 10/14/25 03:54:24.759
  E1014 03:54:25.232607      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:26.233020      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:27.233433      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:28.233754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:29.233692      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:30.233812      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:31.234146      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:32.234285      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:33.234711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:34.234700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:35.234863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:36.235851      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:37.236036      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:38.237774      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:39.237879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:40.245295      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:41.246177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:42.246788      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:43.247159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:44.247314      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:54:44.768145 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:54:45.248232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:46.249002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:47.249248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:48.249360      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:49.250018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:50.250159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:51.251180      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:52.251258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:53.251365      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:54.251482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:55.251518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:56.252124      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:57.252257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:58.252385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:54:59.252722      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:00.252803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:01.253092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:02.253208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:03.253318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:04.253438      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:55:04.771484 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:55:05.254455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:06.255221      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:07.255381      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:08.255470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:09.255600      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:10.255721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:11.257776      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:12.258167      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:13.259443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:14.261856      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:15.262002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:16.265785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:17.269773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:18.271870      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:19.273657      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:20.273806      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:21.274105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:22.286204      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:23.286318      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:24.286458      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:55:24.772571 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:55:25.287553      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:26.288150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:27.293771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:28.294048      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:29.294056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:30.294185      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:31.295212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:32.297305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:33.297332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:34.297530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:35.297866      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:36.298443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:37.298449      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:38.298691      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:39.298798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:40.298931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:41.299500      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:42.299389      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:43.299526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:44.301922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:55:44.774153 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:55:45.302198      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:46.302181      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:47.305808      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:48.307390      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:49.307531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:50.309763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:51.310396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:52.309994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:53.310178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:54.310386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:55.310466      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:56.311153      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:57.312846      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:58.312978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:55:59.313100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:00.314848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:01.315303      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:02.321673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:03.321900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:04.322106      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:56:04.768164 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:56:05.323132      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:06.324209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:07.324380      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:08.324590      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:09.324682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:10.325697      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:11.326178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:12.326353      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:13.326477      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:14.326594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:15.329665      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:16.329719      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:17.329803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:18.329941      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:19.330025      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:20.330160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:21.330838      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:22.331002      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:23.331156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:24.331276      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:56:24.768159 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:56:25.332148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:26.333236      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:27.333351      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:28.333581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:29.333672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:30.333801      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:31.334326      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:32.334605      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:33.334751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:34.334877      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:35.335003      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:36.335147      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:37.335658      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:38.335817      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:39.335959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:40.336080      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:41.337168      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:42.337340      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:43.337570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:44.337714      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:56:44.766977 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:56:45.337842      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:46.338254      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:47.341148      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:48.341292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:49.341548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:50.341672      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:51.342231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:52.342403      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:53.349789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:54.349902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:55.350009      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:56.351115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:57.351292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:58.351453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:56:59.351585      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:00.351707      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:01.352233      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:02.352491      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:03.352615      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:04.352745      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:57:04.766751 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:57:05.353778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:06.354185      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:07.354274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:08.354415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:09.355981      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:10.356046      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:11.356173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:12.356278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:13.357766      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:14.357828      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:15.357958      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:16.358516      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:17.358656      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:18.358777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:19.358902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:20.361675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:21.362122      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:22.362345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:23.362425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:24.362554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:57:24.771871 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:57:25.362792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:26.363540      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:27.363560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:28.363660      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:29.363759      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:30.363863      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:31.364218      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:32.364554      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:33.364579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:34.364886      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:35.366010      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:36.366211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:37.366536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:38.366771      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:39.366816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:40.367011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:41.367152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:42.367305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:43.367445      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:44.367675      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:57:44.773191 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:57:45.367610      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:46.371959      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:47.372362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:48.372487      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:49.372412      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:50.372627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:51.374354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:52.373953      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:53.374042      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:54.374177      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:55.374297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:56.375183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:57.375326      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:58.375452      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:57:59.375824      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:00.375917      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:01.376453      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:02.376574      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:03.376661      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:04.376798      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:58:04.767145 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:58:05.377634      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:06.378290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:07.378416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:08.378562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:09.378777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:10.378845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:11.379386      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:12.379514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:13.379741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:14.379791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:15.381680      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:16.385649      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:17.388592      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:18.389712      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:19.392650      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:20.392757      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:21.393293      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:22.393410      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:23.393537      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:24.393640      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:58:24.770567 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:58:25.393772      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:26.394357      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:27.394562      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:28.394799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:29.394921      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:30.395033      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:31.395159      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:32.395278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:33.395383      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:34.395700      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:35.395799      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:36.396250      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:37.396374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:38.396526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:39.396676      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:40.396815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:41.397289      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:42.397408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:43.397559      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:44.397659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:58:44.767205 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:58:45.397820      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:46.398245      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:47.398524      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:48.400697      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:49.400779      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:50.400897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:51.401015      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:52.401123      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:53.401232      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:54.401345      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:55.401482      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:56.405425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:57.405579      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:58.405648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:58:59.405769      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:00.405974      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:01.406711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:02.406833      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:03.406944      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:04.407078      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:59:04.766668 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:59:05.407985      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:06.408125      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:07.408275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:08.408402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:09.408521      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:10.408648      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:11.409773      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:12.409938      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:13.410064      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:14.410178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:15.413644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:16.417663      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:17.417814      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:18.419182      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:19.419312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:20.419425      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:21.420721      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:22.420829      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:23.420963      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:24.421092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:59:24.766732 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:59:25.421227      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:26.421334      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:27.421538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:28.421754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:29.421868      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:30.421991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:31.422107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:32.422299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:33.422374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:34.422510      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:35.422741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:36.423290      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:37.423518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:38.423573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:39.423736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:40.423906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:41.425224      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:42.425659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:43.425777      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:44.425884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 03:59:44.786907 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 03:59:45.429673      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:46.433644      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:47.437662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:48.437816      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:49.437908      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:50.438428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:51.439094      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:52.438655      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:53.439092      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:54.439188      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:55.439413      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:56.440054      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:57.440160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:58.440288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 03:59:59.440428      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:00.446807      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:01.450753      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:02.450826      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:03.450932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:04.451049      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:00:04.767096 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 04:00:05.451259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:06.452158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:07.452209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:08.452320      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:09.452575      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:10.453496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:11.453659      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:12.457731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:13.461639      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:14.461763      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:15.465756      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:16.468105      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:17.468212      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:18.469667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:19.469813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:20.469957      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:21.470128      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:22.470273      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:23.470409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:24.470530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:00:24.767570 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 04:00:25.470653      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:26.471339      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:27.471514      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:28.471751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:29.471882      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:30.472035      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:31.472107      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:32.472385      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:33.472454      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:34.472606      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:35.472733      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:36.473398      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:37.473587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:38.473738      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:39.473884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:40.474152      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:41.474274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:42.475594      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:43.475651      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:44.475785      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:00:44.767867 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 04:00:45.475836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:46.476333      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:47.476573      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:48.478100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:49.478119      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:50.478275      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:51.479343      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:52.479473      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:53.479624      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:54.479761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:55.479896      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:56.480038      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:57.480201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:58.480287      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:00:59.480443      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:00.485803      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:01.486922      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:02.487047      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:03.487192      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:04.487300      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:04.767616 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjg0MzksInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E1014 04:01:05.487561      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:06.488308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:07.488455      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:08.488591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:09.488751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:10.488906      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:11.489045      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:12.497702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:13.497845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:14.497975      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:15.498134      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:16.498994      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:17.499090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:18.499408      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:19.499460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:20.499611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:21.500175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:22.500259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:23.500572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:24.500662      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:24.766821 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1014 04:01:24.767091 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 10/14/25 04:01:24.767
  STEP: retrieving all remaining pages @ 10/14/25 04:01:24.779
  I1014 04:01:24.787271 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1014 04:01:24.794224 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1014 04:01:24.803577 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1014 04:01:24.811732 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1014 04:01:24.820385 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1014 04:01:24.831301 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1014 04:01:24.843686 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA4MjEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1014 04:01:24.850038 21 chunking.go:221] Retrieved 40/40 results with rv 30821 and continue 
  I1014 04:01:24.850744 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7728" for this suite. @ 10/14/25 04:01:24.855
â€¢ [437.860 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 10/14/25 04:01:24.863
  I1014 04:01:24.863895 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 04:01:24.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:01:24.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:01:24.89
  STEP: creating Agnhost RC @ 10/14/25 04:01:24.897
  I1014 04:01:24.897285 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-5448 create -f -'
  I1014 04:01:25.128972 21 builder.go:146] stderr: ""
  I1014 04:01:25.129005 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/14/25 04:01:25.129
  E1014 04:01:25.500751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:26.133792 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 04:01:26.133831 21 framework.go:733] Found 0 / 1
  E1014 04:01:26.501616      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:27.136642 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 04:01:27.136726 21 framework.go:733] Found 1 / 1
  I1014 04:01:27.136758 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/14/25 04:01:27.136
  I1014 04:01:27.143423 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 04:01:27.144409 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1014 04:01:27.145836 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-5448 patch pod agnhost-primary-sd6zm -p {"metadata":{"annotations":{"x":"y"}}}'
  I1014 04:01:27.218446 21 builder.go:146] stderr: ""
  I1014 04:01:27.218493 21 builder.go:147] stdout: "pod/agnhost-primary-sd6zm patched\n"
  STEP: checking annotations @ 10/14/25 04:01:27.218
  I1014 04:01:27.222040 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1014 04:01:27.222083 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1014 04:01:27.222179 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5448" for this suite. @ 10/14/25 04:01:27.227
â€¢ [2.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 10/14/25 04:01:27.234
  I1014 04:01:27.234181 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/14/25 04:01:27.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:01:27.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:01:27.259
  E1014 04:01:27.502150      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:28.502587      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 10/14/25 04:01:29.316
  STEP: Cleaning up the configmap @ 10/14/25 04:01:29.332
  STEP: Cleaning up the pod @ 10/14/25 04:01:29.338
  I1014 04:01:29.348724 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8383" for this suite. @ 10/14/25 04:01:29.363
â€¢ [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 10/14/25 04:01:29.377
  I1014 04:01:29.377834 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename svcaccounts @ 10/14/25 04:01:29.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:01:29.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:01:29.403
  I1014 04:01:29.411279 21 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-6824"
  I1014 04:01:29.418757 21 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-6824"
  E1014 04:01:29.503378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 10/14/25 04:01:29.919
  I1014 04:01:29.923901 21 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-6824"
  I1014 04:01:29.930176 21 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-6824"
  STEP: waiting for the root ca configmap reconciled @ 10/14/25 04:01:30.43
  I1014 04:01:30.436406 21 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-6824"
  I1014 04:01:30.436958 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6824" for this suite. @ 10/14/25 04:01:30.445
â€¢ [1.078 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:920
  STEP: Creating a kubernetes client @ 10/14/25 04:01:30.456
  I1014 04:01:30.457050 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename statefulset @ 10/14/25 04:01:30.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:01:30.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:01:30.482
  STEP: Creating service test in namespace statefulset-3484 @ 10/14/25 04:01:30.487
  STEP: Creating statefulset ss in namespace statefulset-3484 @ 10/14/25 04:01:30.493
  E1014 04:01:30.503968      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:30.527987 21 wait.go:44] Found 0 stateful pods, waiting for 1
  E1014 04:01:31.504164      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:32.504280      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:33.504446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:34.504547      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:35.504782      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:36.505465      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:37.505740      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:38.506317      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:39.506423      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:40.507201      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:40.509622 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E1014 04:01:41.507993      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:42.508103      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:43.508247      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:44.508392      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:45.508641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:46.509251      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:47.509397      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:48.509731      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:49.509935      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:50.510086      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:01:50.511393 21 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/14/25 04:01:50.518
  STEP: updating a scale subresource @ 10/14/25 04:01:50.521
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/14/25 04:01:50.528
  STEP: Patch a scale subresource @ 10/14/25 04:01:50.534
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/14/25 04:01:50.55
  I1014 04:01:50.555490 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3484
  I1014 04:01:50.558507 21 rest.go:153] Scaling statefulset ss to 0
  E1014 04:01:51.510791      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:52.510337      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:53.510447      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:54.510597      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:55.510831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:56.510925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:57.511084      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:58.511214      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:01:59.511356      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:00.511508      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:00.583109 21 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I1014 04:02:00.587545 21 rest.go:91] Deleting statefulset ss
  I1014 04:02:00.617302 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3484" for this suite. @ 10/14/25 04:02:00.63
â€¢ [30.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/14/25 04:02:00.636
  I1014 04:02:00.636573 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename daemonsets @ 10/14/25 04:02:00.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:02:00.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:02:00.669
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/14/25 04:02:00.743
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/14/25 04:02:00.749
  I1014 04:02:00.901803 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 04:02:00.901972 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 04:02:01.513591      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:01.760665 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 04:02:01.760819 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 04:02:02.513694      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:02.760116 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 04:02:02.760550 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/14/25 04:02:02.764
  I1014 04:02:02.868217 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 04:02:02.868440 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 04:02:03.514472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:03.792389 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1014 04:02:03.792867 21 fixtures.go:131] Node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e is running 0 daemon pod, expected 1
  E1014 04:02:04.514502      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:04.792056 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1014 04:02:04.792099 21 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/14/25 04:02:04.792
  STEP: Deleting DaemonSet "daemon-set" @ 10/14/25 04:02:04.798
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4545, will wait for the garbage collector to delete the pods @ 10/14/25 04:02:04.799
  I1014 04:02:04.863355 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.001766ms
  I1014 04:02:04.964197 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.840812ms
  E1014 04:02:05.515560      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:06.271232 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1014 04:02:06.271395 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1014 04:02:06.275369 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31478"},"items":null}

  I1014 04:02:06.279253 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31478"},"items":null}

  I1014 04:02:06.293608 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4545" for this suite. @ 10/14/25 04:02:06.298
â€¢ [5.668 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:351
  STEP: Creating a kubernetes client @ 10/14/25 04:02:06.305
  I1014 04:02:06.305922 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename kubectl @ 10/14/25 04:02:06.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:02:06.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:02:06.335
  STEP: creating a replication controller @ 10/14/25 04:02:06.342
  I1014 04:02:06.342636 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 create -f -'
  E1014 04:02:06.515581      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:06.579403 21 builder.go:146] stderr: ""
  I1014 04:02:06.579449 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/25 04:02:06.579
  I1014 04:02:06.579554 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 04:02:06.705832 21 builder.go:146] stderr: ""
  I1014 04:02:06.705877 21 builder.go:147] stdout: "update-demo-nautilus-vxksf update-demo-nautilus-wcwpl "
  I1014 04:02:06.705914 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:06.855001 21 builder.go:146] stderr: ""
  I1014 04:02:06.855045 21 builder.go:147] stdout: ""
  I1014 04:02:06.855072 21 kubectl.go:2505] update-demo-nautilus-vxksf is created but not running
  E1014 04:02:07.515804      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:08.515856      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:09.515980      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:10.516183      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:11.516306      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:11.855910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 04:02:11.969425 21 builder.go:146] stderr: ""
  I1014 04:02:11.969480 21 builder.go:147] stdout: "update-demo-nautilus-vxksf update-demo-nautilus-wcwpl "
  I1014 04:02:11.969530 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:12.058762 21 builder.go:146] stderr: ""
  I1014 04:02:12.058807 21 builder.go:147] stdout: "true"
  I1014 04:02:12.058865 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 04:02:12.143542 21 builder.go:146] stderr: ""
  I1014 04:02:12.143585 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 04:02:12.143603 21 kubectl.go:2396] validating pod update-demo-nautilus-vxksf
  I1014 04:02:12.154171 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 04:02:12.154232 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 04:02:12.154247 21 kubectl.go:2523] update-demo-nautilus-vxksf is verified up and running
  I1014 04:02:12.154291 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-wcwpl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:12.243179 21 builder.go:146] stderr: ""
  I1014 04:02:12.243224 21 builder.go:147] stdout: "true"
  I1014 04:02:12.243271 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-wcwpl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 04:02:12.334321 21 builder.go:146] stderr: ""
  I1014 04:02:12.334365 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 04:02:12.334382 21 kubectl.go:2396] validating pod update-demo-nautilus-wcwpl
  I1014 04:02:12.350228 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 04:02:12.350288 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 04:02:12.350302 21 kubectl.go:2523] update-demo-nautilus-wcwpl is verified up and running
  STEP: scaling down the replication controller @ 10/14/25 04:02:12.35
  I1014 04:02:12.351732 21 kubectl.go:320] scanned /root for discovery docs: <nil>
  I1014 04:02:12.351783 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1014 04:02:12.516902      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:13.450690 21 builder.go:146] stderr: ""
  I1014 04:02:13.450736 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/25 04:02:13.45
  I1014 04:02:13.450967 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1014 04:02:13.517952      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:13.524625 21 builder.go:146] stderr: ""
  I1014 04:02:13.524671 21 builder.go:147] stdout: "update-demo-nautilus-vxksf "
  I1014 04:02:13.524717 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:13.607112 21 builder.go:146] stderr: ""
  I1014 04:02:13.607169 21 builder.go:147] stdout: "true"
  I1014 04:02:13.607338 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 04:02:13.666679 21 builder.go:146] stderr: ""
  I1014 04:02:13.666718 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 04:02:13.666730 21 kubectl.go:2396] validating pod update-demo-nautilus-vxksf
  I1014 04:02:13.672199 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 04:02:13.672257 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 04:02:13.672268 21 kubectl.go:2523] update-demo-nautilus-vxksf is verified up and running
  STEP: scaling up the replication controller @ 10/14/25 04:02:13.672
  I1014 04:02:13.673188 21 kubectl.go:320] scanned /root for discovery docs: <nil>
  I1014 04:02:13.673228 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1014 04:02:14.518018      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:14.754523 21 builder.go:146] stderr: ""
  I1014 04:02:14.754566 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/14/25 04:02:14.754
  I1014 04:02:14.754650 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 04:02:14.849692 21 builder.go:146] stderr: ""
  I1014 04:02:14.849911 21 builder.go:147] stdout: "update-demo-nautilus-d2c6s update-demo-nautilus-vxksf "
  I1014 04:02:14.849967 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-d2c6s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:14.957031 21 builder.go:146] stderr: ""
  I1014 04:02:14.957075 21 builder.go:147] stdout: ""
  I1014 04:02:14.957090 21 kubectl.go:2505] update-demo-nautilus-d2c6s is created but not running
  E1014 04:02:15.518548      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:16.518831      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:17.521056      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:18.521186      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:19.521297      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:19.957910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1014 04:02:20.049746 21 builder.go:146] stderr: ""
  I1014 04:02:20.049792 21 builder.go:147] stdout: "update-demo-nautilus-d2c6s update-demo-nautilus-vxksf "
  I1014 04:02:20.049842 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-d2c6s -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:20.140292 21 builder.go:146] stderr: ""
  I1014 04:02:20.140334 21 builder.go:147] stdout: "true"
  I1014 04:02:20.140471 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-d2c6s -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 04:02:20.204786 21 builder.go:146] stderr: ""
  I1014 04:02:20.204834 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 04:02:20.204851 21 kubectl.go:2396] validating pod update-demo-nautilus-d2c6s
  I1014 04:02:20.221794 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 04:02:20.221853 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 04:02:20.221867 21 kubectl.go:2523] update-demo-nautilus-d2c6s is verified up and running
  I1014 04:02:20.221914 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1014 04:02:20.310523 21 builder.go:146] stderr: ""
  I1014 04:02:20.310566 21 builder.go:147] stdout: "true"
  I1014 04:02:20.310615 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods update-demo-nautilus-vxksf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1014 04:02:20.399277 21 builder.go:146] stderr: ""
  I1014 04:02:20.399320 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1014 04:02:20.399334 21 kubectl.go:2396] validating pod update-demo-nautilus-vxksf
  I1014 04:02:20.410902 21 kubectl.go:2416] got data: {
    "image": "nautilus.jpg"
  }

  I1014 04:02:20.410959 21 kubectl.go:2421] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1014 04:02:20.410973 21 kubectl.go:2523] update-demo-nautilus-vxksf is verified up and running
  STEP: using delete to clean up resources @ 10/14/25 04:02:20.41
  I1014 04:02:20.411043 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 delete --grace-period=0 --force -f -'
  I1014 04:02:20.506140 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1014 04:02:20.506187 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1014 04:02:20.506241 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get rc,svc -l name=update-demo --no-headers'
  E1014 04:02:20.522231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:20.734795 21 builder.go:146] stderr: "No resources found in kubectl-1921 namespace.\n"
  I1014 04:02:20.734845 21 builder.go:147] stdout: ""
  I1014 04:02:20.734902 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-221417563 --namespace=kubectl-1921 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1014 04:02:20.949886 21 builder.go:146] stderr: ""
  I1014 04:02:20.949937 21 builder.go:147] stdout: ""
  I1014 04:02:20.950060 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1921" for this suite. @ 10/14/25 04:02:20.956
â€¢ [14.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 10/14/25 04:02:20.967
  I1014 04:02:20.968238 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/14/25 04:02:20.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:02:20.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:02:20.992
  STEP: create the container to handle the HTTPGet hook request. @ 10/14/25 04:02:21.033
  E1014 04:02:21.522393      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:22.522541      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/14/25 04:02:23.067
  E1014 04:02:23.523160      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:24.523257      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/14/25 04:02:25.095
  STEP: delete the pod with lifecycle hook @ 10/14/25 04:02:25.123
  E1014 04:02:25.524460      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:26.525158      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:27.142428 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6747" for this suite. @ 10/14/25 04:02:27.149
â€¢ [6.188 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 10/14/25 04:02:27.156
  I1014 04:02:27.156553 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename container-probe @ 10/14/25 04:02:27.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:02:27.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:02:27.179
  STEP: Creating pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222 @ 10/14/25 04:02:27.183
  E1014 04:02:27.525231      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:28.525374      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/14/25 04:02:29.209
  I1014 04:02:29.216632 21 container_probe.go:1748] Initial restart count of pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 is 0
  I1014 04:02:29.223251 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:29.526199      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:30.526341      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:31.229661 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:31.526361      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:32.526462      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:33.236935 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:33.527496      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:34.527628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:35.242847 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:35.527792      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:36.528442      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:37.248099 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:37.529240      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:38.529312      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:39.253953 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:39.529978      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:40.530082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:41.260459 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:41.531083      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:42.531197      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:43.267298 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:43.532044      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:44.532139      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:45.273345 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:45.532308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:46.532411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:47.285737 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:47.533472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:48.533884      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:49.290747 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:49.534427      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:50.534749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:51.297148 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:51.535486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:52.535751      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:53.303457 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:53.536138      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:54.536255      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:55.308409 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:55.537584      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:56.537669      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:57.318158 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:57.537845      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:02:58.537983      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:02:59.329814 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:02:59.538481      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:00.538551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:01.336667 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:01.539305      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:02.539416      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:03.341763 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:03.540446      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:04.540570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:05.347019 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:05.540897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:06.541470      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:07.352509 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:07.542157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:08.542278      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:09.358269 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:09.543210      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:10.543682      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:11.363375 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:11.544098      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:12.544421      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:13.369174 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:13.544815      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:14.544931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:15.375015 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:15.545903      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:16.549724      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:17.381493 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:17.550140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:18.550258      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:19.387072 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:19.550717      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:20.551100      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:21.401704 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:21.551342      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:22.551472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:23.407703 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:23.552115      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:24.552248      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:25.412376 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:25.553205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:26.554175      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:27.421748 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:27.554332      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:28.554486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:29.433679 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:29.555254      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:30.555671      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:31.439721 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:31.556308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:32.556545      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:33.447439 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:33.557063      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:34.557206      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:35.454804 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:35.558310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:36.558372      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:37.460096 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:37.558931      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:38.559331      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:39.465806 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:39.559641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:40.559667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:41.471713 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:41.560244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:42.560495      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:43.478113 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:43.560879      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:44.561024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:45.484543 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:45.561897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:46.562309      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:47.494790 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:47.563296      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:48.563411      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:49.501997 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:49.564444      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:50.564627      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:51.507631 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:51.565211      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:52.564749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:53.513802 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:53.565542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:54.565629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:55.519979 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:55.565729      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:56.566430      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:57.526029 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:57.566789      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:03:58.566932      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:03:59.532014 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:03:59.569542      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:00.570570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:01.539139 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:01.571558      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:02.571689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:03.548861 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:03.572087      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:04.572237      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:05.554958 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:05.572299      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:06.573090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:07.562845 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:07.573253      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:08.573409      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:09.569101 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:09.573422      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:10.573570      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:11.577564      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:11.578107 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:12.578484      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:13.578754      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:13.585849 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:14.578925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:15.579209      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:15.600058 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:16.580173      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:17.580308      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:17.620283 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:18.580526      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:19.580897      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:19.627130 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:20.580948      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:21.581008      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:21.632623 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:22.581219      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:23.581378      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:23.646194 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:24.581486      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:25.581704      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:25.651665 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:26.582551      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:27.582668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:27.656258 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:28.583488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:29.584157      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:29.661896 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:30.584794      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:31.585354      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:31.667462 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:32.585702      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:33.585742      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:33.672975 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:34.585830      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:35.586079      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:35.678014 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:36.586301      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:37.586259      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:37.683253 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:38.586373      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:39.586678      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:39.690203 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:40.586667      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:41.587377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:41.696821 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:42.588330      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:43.588488      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:43.703737 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:44.588595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:45.588749      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:45.710023 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:46.589291      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:47.589405      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:47.715171 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:48.589596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:49.589736      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:49.723199 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:50.589876      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:51.590611      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:51.732484 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:52.590716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:53.590778      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:53.738787 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:54.590867      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:55.591000      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:55.745872 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:56.591133      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:57.593082      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:57.754676 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:04:58.593178      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:04:59.597741      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:04:59.760531 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:00.597832      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:01.598478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:01.765351 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:02.598543      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:03.598716      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:03.772280 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:04.598786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:05.598919      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:05.778928 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:06.599538      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:07.599946      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:07.784805 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:08.600530      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:09.600689      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:09.794036 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:10.601024      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:11.601208      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:11.805134 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:12.601241      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:13.601355      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:13.811224 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:14.601492      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:15.601654      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:15.817466 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:16.602439      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:17.602555      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:17.823505 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:18.602595      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:19.604618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:19.828945 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:20.604713      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:21.605362      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:21.834907 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:22.605730      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:23.605889      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:23.840990 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:24.606022      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:25.606090      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:25.848762 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:26.606310      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:27.615746      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:27.855355 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:28.616618      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:29.616711      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:29.861006 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:30.616848      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:31.617552      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:31.868705 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:32.617631      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:33.617813      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:33.874238 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:34.617979      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:35.618140      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:35.879463 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:36.618982      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:37.619121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:37.887549 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:38.619244      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:39.619402      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:39.906351 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:40.620846      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:41.621012      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:41.912083 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:42.621156      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:43.621274      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:43.918754 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:44.621480      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:45.621836      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:45.923913 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:46.621991      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:47.622121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:47.930089 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:48.622598      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:49.622572      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:49.937133 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:50.623645      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:51.624225      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:51.942042 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:52.623747      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:53.623885      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:53.947478 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:54.624070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:55.624220      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:55.952268 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:56.624377      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:57.624518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:57.957330 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:05:58.625478      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:05:59.625596      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:05:59.963179 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:00.626536      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:01.627415      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:01.968748 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:02.627531      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:03.627684      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:03.974559 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:04.628630      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:05.628786      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:05.989931 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:06.628947      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:07.629668      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:07.995891 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:08.629895      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:09.630011      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:10.000930 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:10.632205      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:11.633569      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:12.006636 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:12.633628      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:13.633765      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:14.013252 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:14.634641      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:15.637787      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:16.025173 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:16.640925      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:17.647016      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:18.031528 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:18.647121      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:19.647288      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:20.050156 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:20.647519      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:21.648266      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:22.055571 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:22.648396      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:23.648518      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:24.061608 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:24.648629      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:25.648750      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:26.070021 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:26.649642      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:27.649853      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  I1014 04:06:28.076785 21 container_probe.go:1758] Get pod test-webserver-bbc8ba2a-a041-4a32-a352-8ae44c069891 in namespace container-probe-7222
  E1014 04:06:28.650761      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:29.651070      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/14/25 04:06:30.078
  I1014 04:06:30.095684 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7222" for this suite. @ 10/14/25 04:06:30.108
â€¢ [242.963 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 10/14/25 04:06:30.124
  I1014 04:06:30.124889 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename emptydir @ 10/14/25 04:06:30.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:06:30.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:06:30.158
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/14/25 04:06:30.163
  E1014 04:06:30.652852      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:31.653292      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:32.653336      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:33.653448      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/14/25 04:06:34.192
  I1014 04:06:34.199481 21 output.go:207] Trying to get logs from node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm pod pod-bcb6245b-3d9b-43e6-ad34-ed25692e6d30 container test-container: <nil>
  STEP: delete the pod @ 10/14/25 04:06:34.216
  I1014 04:06:34.231427 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-438" for this suite. @ 10/14/25 04:06:34.236
â€¢ [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 10/14/25 04:06:34.25
  I1014 04:06:34.250894 21 util.go:453] >>> kubeConfig: /tmp/kubeconfig-221417563
  STEP: Building a namespace api object, basename sched-pred @ 10/14/25 04:06:34.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/14/25 04:06:34.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/14/25 04:06:34.281
  I1014 04:06:34.289058 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1014 04:06:34.339931 21 util.go:390] Waiting for terminating namespaces to be deleted...
  I1014 04:06:34.346529 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-kvf3e before test
  I1014 04:06:34.351924 21 predicates.go:958] civo-ccm-5759fbb5c6-pc5xw from kube-system started at 2025-10-14 02:16:28 +0000 UTC (1 container statuses recorded)
  I1014 04:06:34.351958 21 predicates.go:960] 	Container civo-ccm ready: true, restart count 0
  I1014 04:06:34.351972 21 predicates.go:958] civo-csi-controller-0 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (4 container statuses recorded)
  I1014 04:06:34.351984 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 04:06:34.351993 21 predicates.go:960] 	Container csi-attacher ready: true, restart count 0
  I1014 04:06:34.352003 21 predicates.go:960] 	Container csi-provisioner ready: true, restart count 0
  I1014 04:06:34.352011 21 predicates.go:960] 	Container csi-resizer ready: true, restart count 0
  I1014 04:06:34.352021 21 predicates.go:958] civo-csi-node-5ndmq from kube-system started at 2025-10-14 02:16:38 +0000 UTC (2 container statuses recorded)
  I1014 04:06:34.352031 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 04:06:34.352040 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 04:06:34.352049 21 predicates.go:958] coredns-64fd4b4794-zj4r6 from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 04:06:34.352058 21 predicates.go:960] 	Container coredns ready: true, restart count 0
  I1014 04:06:34.352067 21 predicates.go:958] metrics-server-7bfffcd44-r2x5q from kube-system started at 2025-10-14 02:16:38 +0000 UTC (1 container statuses recorded)
  I1014 04:06:34.352076 21 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I1014 04:06:34.352086 21 predicates.go:958] traefik-dzn5b from kube-system started at 2025-10-14 02:17:12 +0000 UTC (1 container statuses recorded)
  I1014 04:06:34.352095 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 04:06:34.352104 21 predicates.go:120] 
  Logging pods the apiserver thinks is on node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm before test
  I1014 04:06:34.356492 21 predicates.go:958] civo-csi-node-fvs99 from kube-system started at 2025-10-14 03:32:16 +0000 UTC (2 container statuses recorded)
  I1014 04:06:34.356900 21 predicates.go:960] 	Container civo-csi-plugin ready: true, restart count 0
  I1014 04:06:34.357129 21 predicates.go:960] 	Container csi-driver-registrar ready: true, restart count 0
  I1014 04:06:34.357350 21 predicates.go:958] traefik-9v2gm from kube-system started at 2025-10-14 03:32:16 +0000 UTC (1 container statuses recorded)
  I1014 04:06:34.357704 21 predicates.go:960] 	Container traefik ready: true, restart count 0
  I1014 04:06:34.357933 21 predicates.go:958] sonobuoy from sonobuoy started at 2025-10-14 02:19:42 +0000 UTC (1 container statuses recorded)
  I1014 04:06:34.358158 21 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I1014 04:06:34.358397 21 predicates.go:958] sonobuoy-e2e-job-cda78a766ac8494d from sonobuoy started at 2025-10-14 02:19:48 +0000 UTC (2 container statuses recorded)
  I1014 04:06:34.358643 21 predicates.go:960] 	Container e2e ready: true, restart count 0
  I1014 04:06:34.358861 21 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/14/25 04:06:34.359
  E1014 04:06:34.653472      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:35.653576      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/14/25 04:06:36.388
  STEP: Trying to apply a random label on the found node. @ 10/14/25 04:06:36.399
  STEP: verifying the node has the label kubernetes.io/e2e-b6479385-0515-41dd-806f-2e226aa6c3f4 42 @ 10/14/25 04:06:36.419
  STEP: Trying to relaunch the pod, now with labels. @ 10/14/25 04:06:36.428
  E1014 04:06:36.653621      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  E1014 04:06:37.653900      21 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-b6479385-0515-41dd-806f-2e226aa6c3f4 off the node k3s-k3s-1-33-5-test-c410-4e9e9c-node-pool-e130-wxjxm @ 10/14/25 04:06:38.458
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b6479385-0515-41dd-806f-2e226aa6c3f4 @ 10/14/25 04:06:38.484
  I1014 04:06:38.490769 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8078" for this suite. @ 10/14/25 04:06:38.497
â€¢ [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1014 04:06:38.505126 21 suites.go:34] Running AfterSuite actions on node 1
  I1014 04:06:38.505209 21 util.go:563] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.079 seconds]
------------------------------

Ran 419 of 6735 Specs in 6401.897 seconds
SUCCESS! -- 419 Passed | 0 Failed | 0 Pending | 6316 Skipped
PASS

Ginkgo ran 1 suite in 1h46m43.826800984s
Test Suite Passed
